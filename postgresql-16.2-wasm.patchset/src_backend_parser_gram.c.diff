--- postgresql-16.2/src/backend/parser/gram.c	2024-02-05 22:52:19.000000000 +0100
+++ postgresql-16.2-wasm/src/backend/parser/gram.c	2024-05-06 08:20:55.224835576 +0200
@@ -1,4 +1,4 @@
-/* A Bison parser, made by GNU Bison 3.7.5.  */
+/* A Bison parser, made by GNU Bison 3.8.2.  */
 
 /* Bison implementation for Yacc-like parsers in C
 
@@ -16,7 +16,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -46,10 +46,10 @@
    USER NAME SPACE" below.  */
 
 /* Identify Bison output, and Bison version.  */
-#define YYBISON 30705
+#define YYBISON 30802
 
 /* Bison version string.  */
-#define YYBISON_VERSION "3.7.5"
+#define YYBISON_VERSION "3.8.2"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -1704,12 +1704,18 @@
 # define YY_USE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && ! defined __ICC && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                            \
+#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
+# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
+#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
+    _Pragma ("GCC diagnostic push")                                     \
+    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
+# else
+#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
     _Pragma ("GCC diagnostic push")                                     \
     _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
     _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
+# endif
 # define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
     _Pragma ("GCC diagnostic pop")
 #else
@@ -1976,7 +1982,7 @@
 };
 
 #if YYDEBUG
-  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
+/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_int16 yyrline[] =
 {
        0,   886,   886,   891,   895,   900,   908,   916,   936,   948,
@@ -2626,66 +2632,6 @@
 }
 #endif
 
-#ifdef YYPRINT
-/* YYTOKNUM[NUM] -- (External) token number corresponding to the
-   (internal) symbol number NUM (which must be that of a token).  */
-static const yytype_int16 yytoknum[] =
-{
-       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
-     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
-     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
-     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
-     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
-     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
-     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
-     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
-     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
-     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
-     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
-     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
-     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
-     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
-     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
-     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
-     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
-     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
-     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
-     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
-     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
-     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
-     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
-     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
-     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
-     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
-     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
-     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
-     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
-     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
-     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
-     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
-     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
-     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
-     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
-     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
-     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
-     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
-     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
-     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
-     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
-     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
-     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
-     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
-     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
-     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
-     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
-     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
-     755,    60,    62,    61,    43,    45,    42,    47,    37,    94,
-     756,    91,    93,    40,    41,    46,    59,    44,    58
-};
-#endif
-
 #define YYPACT_NINF (-5506)
 
 #define yypact_value_is_default(Yyn) \
@@ -2696,8 +2642,8 @@
 #define yytable_value_is_error(Yyn) \
   ((Yyn) == YYTABLE_NINF)
 
-  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
-     STATE-NUM.  */
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
 static const int yypact[] =
 {
     6569,   695, 19872, -5506, -5506,   695, 68725, -5506, 77997,  1381,
@@ -3325,9 +3271,9 @@
    -5506
 };
 
-  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
-     Performed when YYTABLE does not specify something else to do.  Zero
-     means the default is an error.  */
+/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
+   Performed when YYTABLE does not specify something else to do.  Zero
+   means the default is an error.  */
 static const yytype_int16 yydefact[] =
 {
     1700,  1444,   652,  1532,  1531,  1444,     0,   269,     0,  1543,
@@ -3955,7 +3901,7 @@
     1649
 };
 
-  /* YYPGOTO[NTERM-NUM].  */
+/* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
    -5506, -5506, -5506,  3832,  -651, -1715, -5044, -1131,  -619, -5506,
@@ -4031,7 +3977,7 @@
    -5506,    -6, 13969, 12815, -3659, -5506
 };
 
-  /* YYDEFGOTO[NTERM-NUM].  */
+/* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
        0,    57,    58,    59,    60,  1086,  1091,  1880,  1899,    61,
@@ -4107,9 +4053,9 @@
     2522,   640,   633,   634,  1790,  2523
 };
 
-  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
-     positive, shift that token.  If negative, reduce the rule whose
-     number is the opposite.  If YYTABLE_NINF, syntax error.  */
+/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule whose
+   number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_int16 yytable[] =
 {
      632,    71,   628,   191,   180,   186,   175,    80,   184,    83,
@@ -27206,8 +27152,8 @@
       -1,    -1,    -1,   488,   489,   490
 };
 
-  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
-     symbol of state STATE-NUM.  */
+/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
+   state STATE-NUM.  */
 static const yytype_int16 yystos[] =
 {
        0,    20,    31,    33,    34,    51,    61,    73,    75,    76,
@@ -27835,7 +27781,7 @@
     1006
 };
 
-  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
 static const yytype_int16 yyr1[] =
 {
        0,   519,   520,   520,   520,   520,   520,   520,   521,   521,
@@ -28169,7 +28115,7 @@
     1224,  1224,  1224,  1224
 };
 
-  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
+/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
 static const yytype_int8 yyr2[] =
 {
        0,     2,     1,     2,     2,     2,     2,     2,     3,     1,
@@ -28512,6 +28458,7 @@
 #define YYACCEPT        goto yyacceptlab
 #define YYABORT         goto yyabortlab
 #define YYERROR         goto yyerrorlab
+#define YYNOMEM         goto yyexhaustedlab
 
 
 #define YYRECOVERING()  (!!yyerrstatus)
@@ -28579,12 +28526,19 @@
 } while (0)
 
 
-/* YY_LOCATION_PRINT -- Print the location on the stream.
+/* YYLOCATION_PRINT -- Print the location on the stream.
    This macro was not mandated originally: define only if we know
    we won't break user code: when these are the locations we know.  */
 
-# ifndef YY_LOCATION_PRINT
-#  if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+# ifndef YYLOCATION_PRINT
+
+#  if defined YY_LOCATION_PRINT
+
+   /* Temporary convenience wrapper in case some people defined the
+      undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))
+
+#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
 
 /* Print *YYLOCP on YYO.  Private, do not rely on its existence. */
 
@@ -28612,15 +28566,23 @@
         res += YYFPRINTF (yyo, "-%d", end_col);
     }
   return res;
- }
+}
+
+#   define YYLOCATION_PRINT  yy_location_print_
 
-#   define YY_LOCATION_PRINT(File, Loc)          \
-  yy_location_print_ (File, &(Loc))
+    /* Temporary convenience wrapper in case some people defined the
+       undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))
 
 #  else
-#   define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+
+#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
+    /* Temporary convenience wrapper in case some people defined the
+       undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YY_LOCATION_PRINT  YYLOCATION_PRINT
+
 #  endif
-# endif /* !defined YY_LOCATION_PRINT */
+# endif /* !defined YYLOCATION_PRINT */
 
 
 # define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
@@ -28649,10 +28611,6 @@
   YY_USE (yyscanner);
   if (!yyvaluep)
     return;
-# ifdef YYPRINT
-  if (yykind < YYNTOKENS)
-    YYPRINT (yyo, yytoknum[yykind], *yyvaluep);
-# endif
   YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   YY_USE (yykind);
   YY_IGNORE_MAYBE_UNINITIALIZED_END
@@ -28670,7 +28628,7 @@
   YYFPRINTF (yyo, "%s %s (",
              yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));
 
-  YY_LOCATION_PRINT (yyo, *yylocationp);
+  YYLOCATION_PRINT (yyo, yylocationp);
   YYFPRINTF (yyo, ": ");
   yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, yyscanner);
   YYFPRINTF (yyo, ")");
@@ -28865,6 +28823,7 @@
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yychar = YYEMPTY; /* Cause a token to be read.  */
+
   yylsp[0] = yylloc;
   goto yysetstate;
 
@@ -28891,7 +28850,7 @@
 
   if (yyss + yystacksize - 1 <= yyssp)
 #if !defined yyoverflow && !defined YYSTACK_RELOCATE
-    goto yyexhaustedlab;
+    YYNOMEM;
 #else
     {
       /* Get the current used size of the three stacks, in elements.  */
@@ -28922,7 +28881,7 @@
 # else /* defined YYSTACK_RELOCATE */
       /* Extend the stack our own way.  */
       if (YYMAXDEPTH <= yystacksize)
-        goto yyexhaustedlab;
+        YYNOMEM;
       yystacksize *= 2;
       if (YYMAXDEPTH < yystacksize)
         yystacksize = YYMAXDEPTH;
@@ -28933,7 +28892,7 @@
           YY_CAST (union yyalloc *,
                    YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
         if (! yyptr)
-          goto yyexhaustedlab;
+          YYNOMEM;
         YYSTACK_RELOCATE (yyss_alloc, yyss);
         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
         YYSTACK_RELOCATE (yyls_alloc, yyls);
@@ -28957,6 +28916,7 @@
     }
 #endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */
 
+
   if (yystate == YYFINAL)
     YYACCEPT;
 
@@ -29078,7 +29038,7 @@
 				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[0].list);
 				(void) yynerrs;		/* suppress compiler warning */
 			}
-#line 29082 "gram.c"
+#line 29042 "gram.c"
     break;
 
   case 3: /* parse_toplevel: MODE_TYPE_NAME Typename  */
@@ -29086,7 +29046,7 @@
                         {
 				pg_yyget_extra(yyscanner)->parsetree = list_make1((yyvsp[0].typnam));
 			}
-#line 29090 "gram.c"
+#line 29050 "gram.c"
     break;
 
   case 4: /* parse_toplevel: MODE_PLPGSQL_EXPR PLpgSQL_Expr  */
@@ -29095,7 +29055,7 @@
 				pg_yyget_extra(yyscanner)->parsetree =
 					list_make1(makeRawStmt((yyvsp[0].node), 0));
 			}
-#line 29099 "gram.c"
+#line 29059 "gram.c"
     break;
 
   case 5: /* parse_toplevel: MODE_PLPGSQL_ASSIGN1 PLAssignStmt  */
@@ -29107,7 +29067,7 @@
 				pg_yyget_extra(yyscanner)->parsetree =
 					list_make1(makeRawStmt((Node *) n, 0));
 			}
-#line 29111 "gram.c"
+#line 29071 "gram.c"
     break;
 
   case 6: /* parse_toplevel: MODE_PLPGSQL_ASSIGN2 PLAssignStmt  */
@@ -29119,7 +29079,7 @@
 				pg_yyget_extra(yyscanner)->parsetree =
 					list_make1(makeRawStmt((Node *) n, 0));
 			}
-#line 29123 "gram.c"
+#line 29083 "gram.c"
     break;
 
   case 7: /* parse_toplevel: MODE_PLPGSQL_ASSIGN3 PLAssignStmt  */
@@ -29131,7 +29091,7 @@
 				pg_yyget_extra(yyscanner)->parsetree =
 					list_make1(makeRawStmt((Node *) n, 0));
 			}
-#line 29135 "gram.c"
+#line 29095 "gram.c"
     break;
 
   case 8: /* stmtmulti: stmtmulti ';' toplevel_stmt  */
@@ -29147,7 +29107,7 @@
 					else
 						(yyval.list) = (yyvsp[-2].list);
 				}
-#line 29151 "gram.c"
+#line 29111 "gram.c"
     break;
 
   case 9: /* stmtmulti: toplevel_stmt  */
@@ -29158,67 +29118,67 @@
 					else
 						(yyval.list) = NIL;
 				}
-#line 29162 "gram.c"
+#line 29122 "gram.c"
     break;
 
   case 136: /* stmt: %empty  */
 #line 1092 "gram.y"
                                 { (yyval.node) = NULL; }
-#line 29168 "gram.c"
+#line 29128 "gram.c"
     break;
 
   case 137: /* opt_single_name: ColId  */
 #line 1099 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 29174 "gram.c"
+#line 29134 "gram.c"
     break;
 
   case 138: /* opt_single_name: %empty  */
 #line 1100 "gram.y"
                                                                         { (yyval.str) = NULL; }
-#line 29180 "gram.c"
+#line 29140 "gram.c"
     break;
 
   case 139: /* opt_qualified_name: any_name  */
 #line 1104 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 29186 "gram.c"
+#line 29146 "gram.c"
     break;
 
   case 140: /* opt_qualified_name: %empty  */
 #line 1105 "gram.y"
                                                                                 { (yyval.list) = NIL; }
-#line 29192 "gram.c"
+#line 29152 "gram.c"
     break;
 
   case 141: /* opt_concurrently: CONCURRENTLY  */
 #line 1109 "gram.y"
                                                                         { (yyval.boolean) = true; }
-#line 29198 "gram.c"
+#line 29158 "gram.c"
     break;
 
   case 142: /* opt_concurrently: %empty  */
 #line 1110 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 29204 "gram.c"
+#line 29164 "gram.c"
     break;
 
   case 143: /* opt_drop_behavior: CASCADE  */
 #line 1114 "gram.y"
                                                                                 { (yyval.dbehavior) = DROP_CASCADE; }
-#line 29210 "gram.c"
+#line 29170 "gram.c"
     break;
 
   case 144: /* opt_drop_behavior: RESTRICT  */
 #line 1115 "gram.y"
                                                                                 { (yyval.dbehavior) = DROP_RESTRICT; }
-#line 29216 "gram.c"
+#line 29176 "gram.c"
     break;
 
   case 145: /* opt_drop_behavior: %empty  */
 #line 1116 "gram.y"
                                                                         { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
-#line 29222 "gram.c"
+#line 29182 "gram.c"
     break;
 
   case 146: /* CallStmt: CALL func_application  */
@@ -29229,7 +29189,7 @@
 					n->funccall = castNode(FuncCall, (yyvsp[0].node));
 					(yyval.node) = (Node *) n;
 				}
-#line 29233 "gram.c"
+#line 29193 "gram.c"
     break;
 
   case 147: /* CreateRoleStmt: CREATE ROLE RoleId opt_with OptRoleList  */
@@ -29242,31 +29202,31 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29246 "gram.c"
+#line 29206 "gram.c"
     break;
 
   case 151: /* OptRoleList: OptRoleList CreateOptRoleElem  */
 #line 1164 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 29252 "gram.c"
+#line 29212 "gram.c"
     break;
 
   case 152: /* OptRoleList: %empty  */
 #line 1165 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 29258 "gram.c"
+#line 29218 "gram.c"
     break;
 
   case 153: /* AlterOptRoleList: AlterOptRoleList AlterOptRoleElem  */
 #line 1169 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 29264 "gram.c"
+#line 29224 "gram.c"
     break;
 
   case 154: /* AlterOptRoleList: %empty  */
 #line 1170 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 29270 "gram.c"
+#line 29230 "gram.c"
     break;
 
   case 155: /* AlterOptRoleElem: PASSWORD Sconst  */
@@ -29275,7 +29235,7 @@
 					(yyval.defelt) = makeDefElem("password",
 									 (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 29279 "gram.c"
+#line 29239 "gram.c"
     break;
 
   case 156: /* AlterOptRoleElem: PASSWORD NULL_P  */
@@ -29283,7 +29243,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("password", NULL, (yylsp[-1]));
 				}
-#line 29287 "gram.c"
+#line 29247 "gram.c"
     break;
 
   case 157: /* AlterOptRoleElem: ENCRYPTED PASSWORD Sconst  */
@@ -29297,7 +29257,7 @@
 					(yyval.defelt) = makeDefElem("password",
 									 (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 29301 "gram.c"
+#line 29261 "gram.c"
     break;
 
   case 158: /* AlterOptRoleElem: UNENCRYPTED PASSWORD Sconst  */
@@ -29309,7 +29269,7 @@
 							 errhint("Remove UNENCRYPTED to store the password in encrypted form instead."),
 							 parser_errposition((yylsp[-2]))));
 				}
-#line 29313 "gram.c"
+#line 29273 "gram.c"
     break;
 
   case 159: /* AlterOptRoleElem: INHERIT  */
@@ -29317,7 +29277,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("inherit", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 29321 "gram.c"
+#line 29281 "gram.c"
     break;
 
   case 160: /* AlterOptRoleElem: CONNECTION LIMIT SignedIconst  */
@@ -29325,7 +29285,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *) makeInteger((yyvsp[0].ival)), (yylsp[-2]));
 				}
-#line 29329 "gram.c"
+#line 29289 "gram.c"
     break;
 
   case 161: /* AlterOptRoleElem: VALID UNTIL Sconst  */
@@ -29333,7 +29293,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("validUntil", (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 29337 "gram.c"
+#line 29297 "gram.c"
     break;
 
   case 162: /* AlterOptRoleElem: USER role_list  */
@@ -29341,7 +29301,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 29345 "gram.c"
+#line 29305 "gram.c"
     break;
 
   case 163: /* AlterOptRoleElem: IDENT  */
@@ -29390,13 +29350,13 @@
 								 errmsg("unrecognized role option \"%s\"", (yyvsp[0].str)),
 									 parser_errposition((yylsp[0]))));
 				}
-#line 29394 "gram.c"
+#line 29354 "gram.c"
     break;
 
   case 164: /* CreateOptRoleElem: AlterOptRoleElem  */
 #line 1266 "gram.y"
                                                                 { (yyval.defelt) = (yyvsp[0].defelt); }
-#line 29400 "gram.c"
+#line 29360 "gram.c"
     break;
 
   case 165: /* CreateOptRoleElem: SYSID Iconst  */
@@ -29404,7 +29364,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("sysid", (Node *) makeInteger((yyvsp[0].ival)), (yylsp[-1]));
 				}
-#line 29408 "gram.c"
+#line 29368 "gram.c"
     break;
 
   case 166: /* CreateOptRoleElem: ADMIN role_list  */
@@ -29412,7 +29372,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("adminmembers", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 29416 "gram.c"
+#line 29376 "gram.c"
     break;
 
   case 167: /* CreateOptRoleElem: ROLE role_list  */
@@ -29420,7 +29380,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 29424 "gram.c"
+#line 29384 "gram.c"
     break;
 
   case 168: /* CreateOptRoleElem: IN_P ROLE role_list  */
@@ -29428,7 +29388,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 29432 "gram.c"
+#line 29392 "gram.c"
     break;
 
   case 169: /* CreateOptRoleElem: IN_P GROUP_P role_list  */
@@ -29436,7 +29396,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 29440 "gram.c"
+#line 29400 "gram.c"
     break;
 
   case 170: /* CreateUserStmt: CREATE USER RoleId opt_with OptRoleList  */
@@ -29449,7 +29409,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29453 "gram.c"
+#line 29413 "gram.c"
     break;
 
   case 171: /* AlterRoleStmt: ALTER ROLE RoleSpec opt_with AlterOptRoleList  */
@@ -29462,7 +29422,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				 }
-#line 29466 "gram.c"
+#line 29426 "gram.c"
     break;
 
   case 172: /* AlterRoleStmt: ALTER USER RoleSpec opt_with AlterOptRoleList  */
@@ -29475,19 +29435,19 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				 }
-#line 29479 "gram.c"
+#line 29439 "gram.c"
     break;
 
   case 173: /* opt_in_database: %empty  */
 #line 1338 "gram.y"
                                                                         { (yyval.str) = NULL; }
-#line 29485 "gram.c"
+#line 29445 "gram.c"
     break;
 
   case 174: /* opt_in_database: IN_P DATABASE name  */
 #line 1339 "gram.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 29491 "gram.c"
+#line 29451 "gram.c"
     break;
 
   case 175: /* AlterRoleSetStmt: ALTER ROLE RoleSpec opt_in_database SetResetClause  */
@@ -29500,7 +29460,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 29504 "gram.c"
+#line 29464 "gram.c"
     break;
 
   case 176: /* AlterRoleSetStmt: ALTER ROLE ALL opt_in_database SetResetClause  */
@@ -29513,7 +29473,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 29517 "gram.c"
+#line 29477 "gram.c"
     break;
 
   case 177: /* AlterRoleSetStmt: ALTER USER RoleSpec opt_in_database SetResetClause  */
@@ -29526,7 +29486,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 29530 "gram.c"
+#line 29490 "gram.c"
     break;
 
   case 178: /* AlterRoleSetStmt: ALTER USER ALL opt_in_database SetResetClause  */
@@ -29539,7 +29499,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 29543 "gram.c"
+#line 29503 "gram.c"
     break;
 
   case 179: /* DropRoleStmt: DROP ROLE role_list  */
@@ -29551,7 +29511,7 @@
 					n->roles = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29555 "gram.c"
+#line 29515 "gram.c"
     break;
 
   case 180: /* DropRoleStmt: DROP ROLE IF_P EXISTS role_list  */
@@ -29563,7 +29523,7 @@
 					n->roles = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29567 "gram.c"
+#line 29527 "gram.c"
     break;
 
   case 181: /* DropRoleStmt: DROP USER role_list  */
@@ -29575,7 +29535,7 @@
 					n->roles = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29579 "gram.c"
+#line 29539 "gram.c"
     break;
 
   case 182: /* DropRoleStmt: DROP USER IF_P EXISTS role_list  */
@@ -29587,7 +29547,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 29591 "gram.c"
+#line 29551 "gram.c"
     break;
 
   case 183: /* DropRoleStmt: DROP GROUP_P role_list  */
@@ -29599,7 +29559,7 @@
 					n->roles = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29603 "gram.c"
+#line 29563 "gram.c"
     break;
 
   case 184: /* DropRoleStmt: DROP GROUP_P IF_P EXISTS role_list  */
@@ -29611,7 +29571,7 @@
 					n->roles = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29615 "gram.c"
+#line 29575 "gram.c"
     break;
 
   case 185: /* CreateGroupStmt: CREATE GROUP_P RoleId opt_with OptRoleList  */
@@ -29624,7 +29584,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 29628 "gram.c"
+#line 29588 "gram.c"
     break;
 
   case 186: /* AlterGroupStmt: ALTER GROUP_P RoleSpec add_drop USER role_list  */
@@ -29638,19 +29598,19 @@
 														(Node *) (yyvsp[0].list), (yylsp[0])));
 					(yyval.node) = (Node *) n;
 				}
-#line 29642 "gram.c"
+#line 29602 "gram.c"
     break;
 
   case 187: /* add_drop: ADD_P  */
 #line 1481 "gram.y"
                                                                                         { (yyval.ival) = +1; }
-#line 29648 "gram.c"
+#line 29608 "gram.c"
     break;
 
   case 188: /* add_drop: DROP  */
 #line 1482 "gram.y"
                                                                                                 { (yyval.ival) = -1; }
-#line 29654 "gram.c"
+#line 29614 "gram.c"
     break;
 
   case 189: /* CreateSchemaStmt: CREATE SCHEMA opt_single_name AUTHORIZATION RoleSpec OptSchemaEltList  */
@@ -29665,7 +29625,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 29669 "gram.c"
+#line 29629 "gram.c"
     break;
 
   case 190: /* CreateSchemaStmt: CREATE SCHEMA ColId OptSchemaEltList  */
@@ -29680,7 +29640,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 29684 "gram.c"
+#line 29644 "gram.c"
     break;
 
   case 191: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS opt_single_name AUTHORIZATION RoleSpec OptSchemaEltList  */
@@ -29700,7 +29660,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 29704 "gram.c"
+#line 29664 "gram.c"
     break;
 
   case 192: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS ColId OptSchemaEltList  */
@@ -29720,7 +29680,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 29724 "gram.c"
+#line 29684 "gram.c"
     break;
 
   case 193: /* OptSchemaEltList: OptSchemaEltList schema_stmt  */
@@ -29730,13 +29690,13 @@
 						(yyloc) = (yylsp[0]);
 					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
 				}
-#line 29734 "gram.c"
+#line 29694 "gram.c"
     break;
 
   case 194: /* OptSchemaEltList: %empty  */
 #line 1557 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 29740 "gram.c"
+#line 29700 "gram.c"
     break;
 
   case 201: /* VariableSetStmt: SET set_rest  */
@@ -29747,7 +29707,7 @@
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 29751 "gram.c"
+#line 29711 "gram.c"
     break;
 
   case 202: /* VariableSetStmt: SET LOCAL set_rest  */
@@ -29758,7 +29718,7 @@
 					n->is_local = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 29762 "gram.c"
+#line 29722 "gram.c"
     break;
 
   case 203: /* VariableSetStmt: SET SESSION set_rest  */
@@ -29769,7 +29729,7 @@
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 29773 "gram.c"
+#line 29733 "gram.c"
     break;
 
   case 204: /* set_rest: TRANSACTION transaction_mode_list  */
@@ -29782,7 +29742,7 @@
 					n->args = (yyvsp[0].list);
 					(yyval.vsetstmt) = n;
 				}
-#line 29786 "gram.c"
+#line 29746 "gram.c"
     break;
 
   case 205: /* set_rest: SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list  */
@@ -29795,7 +29755,7 @@
 					n->args = (yyvsp[0].list);
 					(yyval.vsetstmt) = n;
 				}
-#line 29799 "gram.c"
+#line 29759 "gram.c"
     break;
 
   case 207: /* generic_set: var_name TO var_list  */
@@ -29808,7 +29768,7 @@
 					n->args = (yyvsp[0].list);
 					(yyval.vsetstmt) = n;
 				}
-#line 29812 "gram.c"
+#line 29772 "gram.c"
     break;
 
   case 208: /* generic_set: var_name '=' var_list  */
@@ -29821,7 +29781,7 @@
 					n->args = (yyvsp[0].list);
 					(yyval.vsetstmt) = n;
 				}
-#line 29825 "gram.c"
+#line 29785 "gram.c"
     break;
 
   case 209: /* generic_set: var_name TO DEFAULT  */
@@ -29833,7 +29793,7 @@
 					n->name = (yyvsp[-2].str);
 					(yyval.vsetstmt) = n;
 				}
-#line 29837 "gram.c"
+#line 29797 "gram.c"
     break;
 
   case 210: /* generic_set: var_name '=' DEFAULT  */
@@ -29845,13 +29805,13 @@
 					n->name = (yyvsp[-2].str);
 					(yyval.vsetstmt) = n;
 				}
-#line 29849 "gram.c"
+#line 29809 "gram.c"
     break;
 
   case 211: /* set_rest_more: generic_set  */
 #line 1667 "gram.y"
                                                                                         {(yyval.vsetstmt) = (yyvsp[0].vsetstmt);}
-#line 29855 "gram.c"
+#line 29815 "gram.c"
     break;
 
   case 212: /* set_rest_more: var_name FROM CURRENT_P  */
@@ -29863,7 +29823,7 @@
 					n->name = (yyvsp[-2].str);
 					(yyval.vsetstmt) = n;
 				}
-#line 29867 "gram.c"
+#line 29827 "gram.c"
     break;
 
   case 213: /* set_rest_more: TIME ZONE zone_value  */
@@ -29879,7 +29839,7 @@
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
 				}
-#line 29883 "gram.c"
+#line 29843 "gram.c"
     break;
 
   case 214: /* set_rest_more: CATALOG_P Sconst  */
@@ -29891,7 +29851,7 @@
 							 parser_errposition((yylsp[0]))));
 					(yyval.vsetstmt) = NULL; /*not reached*/
 				}
-#line 29895 "gram.c"
+#line 29855 "gram.c"
     break;
 
   case 215: /* set_rest_more: SCHEMA Sconst  */
@@ -29904,7 +29864,7 @@
 					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
 					(yyval.vsetstmt) = n;
 				}
-#line 29908 "gram.c"
+#line 29868 "gram.c"
     break;
 
   case 216: /* set_rest_more: NAMES opt_encoding  */
@@ -29920,7 +29880,7 @@
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
 				}
-#line 29924 "gram.c"
+#line 29884 "gram.c"
     break;
 
   case 217: /* set_rest_more: ROLE NonReservedWord_or_Sconst  */
@@ -29933,7 +29893,7 @@
 					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
 					(yyval.vsetstmt) = n;
 				}
-#line 29937 "gram.c"
+#line 29897 "gram.c"
     break;
 
   case 218: /* set_rest_more: SESSION AUTHORIZATION NonReservedWord_or_Sconst  */
@@ -29946,7 +29906,7 @@
 					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
 					(yyval.vsetstmt) = n;
 				}
-#line 29950 "gram.c"
+#line 29910 "gram.c"
     break;
 
   case 219: /* set_rest_more: SESSION AUTHORIZATION DEFAULT  */
@@ -29958,7 +29918,7 @@
 					n->name = "session_authorization";
 					(yyval.vsetstmt) = n;
 				}
-#line 29962 "gram.c"
+#line 29922 "gram.c"
     break;
 
   case 220: /* set_rest_more: XML_P OPTION document_or_content  */
@@ -29971,7 +29931,7 @@
 					n->args = list_make1(makeStringConst((yyvsp[0].ival) == XMLOPTION_DOCUMENT ? "DOCUMENT" : "CONTENT", (yylsp[0])));
 					(yyval.vsetstmt) = n;
 				}
-#line 29975 "gram.c"
+#line 29935 "gram.c"
     break;
 
   case 221: /* set_rest_more: TRANSACTION SNAPSHOT Sconst  */
@@ -29984,91 +29944,91 @@
 					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
 					(yyval.vsetstmt) = n;
 				}
-#line 29988 "gram.c"
+#line 29948 "gram.c"
     break;
 
   case 222: /* var_name: ColId  */
 #line 1765 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 29994 "gram.c"
+#line 29954 "gram.c"
     break;
 
   case 223: /* var_name: var_name '.' ColId  */
 #line 1767 "gram.y"
                                 { (yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str)); }
-#line 30000 "gram.c"
+#line 29960 "gram.c"
     break;
 
   case 224: /* var_list: var_value  */
 #line 1770 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 30006 "gram.c"
+#line 29966 "gram.c"
     break;
 
   case 225: /* var_list: var_list ',' var_value  */
 #line 1771 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 30012 "gram.c"
+#line 29972 "gram.c"
     break;
 
   case 226: /* var_value: opt_boolean_or_string  */
 #line 1775 "gram.y"
                                 { (yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0])); }
-#line 30018 "gram.c"
+#line 29978 "gram.c"
     break;
 
   case 227: /* var_value: NumericOnly  */
 #line 1777 "gram.y"
                                 { (yyval.node) = makeAConst((yyvsp[0].node), (yylsp[0])); }
-#line 30024 "gram.c"
+#line 29984 "gram.c"
     break;
 
   case 228: /* iso_level: READ UNCOMMITTED  */
 #line 1780 "gram.y"
                                                                                 { (yyval.str) = "read uncommitted"; }
-#line 30030 "gram.c"
+#line 29990 "gram.c"
     break;
 
   case 229: /* iso_level: READ COMMITTED  */
 #line 1781 "gram.y"
                                                                                         { (yyval.str) = "read committed"; }
-#line 30036 "gram.c"
+#line 29996 "gram.c"
     break;
 
   case 230: /* iso_level: REPEATABLE READ  */
 #line 1782 "gram.y"
                                                                                         { (yyval.str) = "repeatable read"; }
-#line 30042 "gram.c"
+#line 30002 "gram.c"
     break;
 
   case 231: /* iso_level: SERIALIZABLE  */
 #line 1783 "gram.y"
                                                                                         { (yyval.str) = "serializable"; }
-#line 30048 "gram.c"
+#line 30008 "gram.c"
     break;
 
   case 232: /* opt_boolean_or_string: TRUE_P  */
 #line 1787 "gram.y"
                                                                                                 { (yyval.str) = "true"; }
-#line 30054 "gram.c"
+#line 30014 "gram.c"
     break;
 
   case 233: /* opt_boolean_or_string: FALSE_P  */
 #line 1788 "gram.y"
                                                                                                 { (yyval.str) = "false"; }
-#line 30060 "gram.c"
+#line 30020 "gram.c"
     break;
 
   case 234: /* opt_boolean_or_string: ON  */
 #line 1789 "gram.y"
                                                                                                 { (yyval.str) = "on"; }
-#line 30066 "gram.c"
+#line 30026 "gram.c"
     break;
 
   case 235: /* opt_boolean_or_string: NonReservedWord_or_Sconst  */
 #line 1795 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 30072 "gram.c"
+#line 30032 "gram.c"
     break;
 
   case 236: /* zone_value: Sconst  */
@@ -30076,7 +30036,7 @@
                                 {
 					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 30080 "gram.c"
+#line 30040 "gram.c"
     break;
 
   case 237: /* zone_value: IDENT  */
@@ -30084,7 +30044,7 @@
                                 {
 					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 30088 "gram.c"
+#line 30048 "gram.c"
     break;
 
   case 238: /* zone_value: ConstInterval Sconst opt_interval  */
@@ -30105,7 +30065,7 @@
 					t->typmods = (yyvsp[0].list);
 					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
 				}
-#line 30109 "gram.c"
+#line 30069 "gram.c"
     break;
 
   case 239: /* zone_value: ConstInterval '(' Iconst ')' Sconst  */
@@ -30117,67 +30077,67 @@
 											makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
 					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
 				}
-#line 30121 "gram.c"
+#line 30081 "gram.c"
     break;
 
   case 240: /* zone_value: NumericOnly  */
 #line 1840 "gram.y"
                                                                                         { (yyval.node) = makeAConst((yyvsp[0].node), (yylsp[0])); }
-#line 30127 "gram.c"
+#line 30087 "gram.c"
     break;
 
   case 241: /* zone_value: DEFAULT  */
 #line 1841 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 30133 "gram.c"
+#line 30093 "gram.c"
     break;
 
   case 242: /* zone_value: LOCAL  */
 #line 1842 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 30139 "gram.c"
+#line 30099 "gram.c"
     break;
 
   case 243: /* opt_encoding: Sconst  */
 #line 1846 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 30145 "gram.c"
+#line 30105 "gram.c"
     break;
 
   case 244: /* opt_encoding: DEFAULT  */
 #line 1847 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 30151 "gram.c"
+#line 30111 "gram.c"
     break;
 
   case 245: /* opt_encoding: %empty  */
 #line 1848 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 30157 "gram.c"
+#line 30117 "gram.c"
     break;
 
   case 246: /* NonReservedWord_or_Sconst: NonReservedWord  */
 #line 1852 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 30163 "gram.c"
+#line 30123 "gram.c"
     break;
 
   case 247: /* NonReservedWord_or_Sconst: Sconst  */
 #line 1853 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 30169 "gram.c"
+#line 30129 "gram.c"
     break;
 
   case 248: /* VariableResetStmt: RESET reset_rest  */
 #line 1857 "gram.y"
                                                                                         { (yyval.node) = (Node *) (yyvsp[0].vsetstmt); }
-#line 30175 "gram.c"
+#line 30135 "gram.c"
     break;
 
   case 249: /* reset_rest: generic_reset  */
 #line 1861 "gram.y"
                                                                                         { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
-#line 30181 "gram.c"
+#line 30141 "gram.c"
     break;
 
   case 250: /* reset_rest: TIME ZONE  */
@@ -30189,7 +30149,7 @@
 					n->name = "timezone";
 					(yyval.vsetstmt) = n;
 				}
-#line 30193 "gram.c"
+#line 30153 "gram.c"
     break;
 
   case 251: /* reset_rest: TRANSACTION ISOLATION LEVEL  */
@@ -30201,7 +30161,7 @@
 					n->name = "transaction_isolation";
 					(yyval.vsetstmt) = n;
 				}
-#line 30205 "gram.c"
+#line 30165 "gram.c"
     break;
 
   case 252: /* reset_rest: SESSION AUTHORIZATION  */
@@ -30213,7 +30173,7 @@
 					n->name = "session_authorization";
 					(yyval.vsetstmt) = n;
 				}
-#line 30217 "gram.c"
+#line 30177 "gram.c"
     break;
 
   case 253: /* generic_reset: var_name  */
@@ -30225,7 +30185,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.vsetstmt) = n;
 				}
-#line 30229 "gram.c"
+#line 30189 "gram.c"
     break;
 
   case 254: /* generic_reset: ALL  */
@@ -30236,31 +30196,31 @@
 					n->kind = VAR_RESET_ALL;
 					(yyval.vsetstmt) = n;
 				}
-#line 30240 "gram.c"
+#line 30200 "gram.c"
     break;
 
   case 255: /* SetResetClause: SET set_rest  */
 #line 1908 "gram.y"
                                                                         { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
-#line 30246 "gram.c"
+#line 30206 "gram.c"
     break;
 
   case 256: /* SetResetClause: VariableResetStmt  */
 #line 1909 "gram.y"
                                                                         { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
-#line 30252 "gram.c"
+#line 30212 "gram.c"
     break;
 
   case 257: /* FunctionSetResetClause: SET set_rest_more  */
 #line 1914 "gram.y"
                                                                         { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
-#line 30258 "gram.c"
+#line 30218 "gram.c"
     break;
 
   case 258: /* FunctionSetResetClause: VariableResetStmt  */
 #line 1915 "gram.y"
                                                                         { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
-#line 30264 "gram.c"
+#line 30224 "gram.c"
     break;
 
   case 259: /* VariableShowStmt: SHOW var_name  */
@@ -30271,7 +30231,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 30275 "gram.c"
+#line 30235 "gram.c"
     break;
 
   case 260: /* VariableShowStmt: SHOW TIME ZONE  */
@@ -30282,7 +30242,7 @@
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
 				}
-#line 30286 "gram.c"
+#line 30246 "gram.c"
     break;
 
   case 261: /* VariableShowStmt: SHOW TRANSACTION ISOLATION LEVEL  */
@@ -30293,7 +30253,7 @@
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
 				}
-#line 30297 "gram.c"
+#line 30257 "gram.c"
     break;
 
   case 262: /* VariableShowStmt: SHOW SESSION AUTHORIZATION  */
@@ -30304,7 +30264,7 @@
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
 				}
-#line 30308 "gram.c"
+#line 30268 "gram.c"
     break;
 
   case 263: /* VariableShowStmt: SHOW ALL  */
@@ -30315,7 +30275,7 @@
 					n->name = "all";
 					(yyval.node) = (Node *) n;
 				}
-#line 30319 "gram.c"
+#line 30279 "gram.c"
     break;
 
   case 264: /* ConstraintsSetStmt: SET CONSTRAINTS constraints_set_list constraints_set_mode  */
@@ -30327,31 +30287,31 @@
 					n->deferred = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30331 "gram.c"
+#line 30291 "gram.c"
     break;
 
   case 265: /* constraints_set_list: ALL  */
 #line 1970 "gram.y"
                                                                                                         { (yyval.list) = NIL; }
-#line 30337 "gram.c"
+#line 30297 "gram.c"
     break;
 
   case 266: /* constraints_set_list: qualified_name_list  */
 #line 1971 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 30343 "gram.c"
+#line 30303 "gram.c"
     break;
 
   case 267: /* constraints_set_mode: DEFERRED  */
 #line 1975 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 30349 "gram.c"
+#line 30309 "gram.c"
     break;
 
   case 268: /* constraints_set_mode: IMMEDIATE  */
 #line 1976 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 30355 "gram.c"
+#line 30315 "gram.c"
     break;
 
   case 269: /* CheckPointStmt: CHECKPOINT  */
@@ -30361,7 +30321,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 30365 "gram.c"
+#line 30325 "gram.c"
     break;
 
   case 270: /* DiscardStmt: DISCARD ALL  */
@@ -30372,7 +30332,7 @@
 					n->target = DISCARD_ALL;
 					(yyval.node) = (Node *) n;
 				}
-#line 30376 "gram.c"
+#line 30336 "gram.c"
     break;
 
   case 271: /* DiscardStmt: DISCARD TEMP  */
@@ -30383,7 +30343,7 @@
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
 				}
-#line 30387 "gram.c"
+#line 30347 "gram.c"
     break;
 
   case 272: /* DiscardStmt: DISCARD TEMPORARY  */
@@ -30394,7 +30354,7 @@
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
 				}
-#line 30398 "gram.c"
+#line 30358 "gram.c"
     break;
 
   case 273: /* DiscardStmt: DISCARD PLANS  */
@@ -30405,7 +30365,7 @@
 					n->target = DISCARD_PLANS;
 					(yyval.node) = (Node *) n;
 				}
-#line 30409 "gram.c"
+#line 30369 "gram.c"
     break;
 
   case 274: /* DiscardStmt: DISCARD SEQUENCES  */
@@ -30416,7 +30376,7 @@
 					n->target = DISCARD_SEQUENCES;
 					(yyval.node) = (Node *) n;
 				}
-#line 30420 "gram.c"
+#line 30380 "gram.c"
     break;
 
   case 275: /* AlterTableStmt: ALTER TABLE relation_expr alter_table_cmds  */
@@ -30430,7 +30390,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30434 "gram.c"
+#line 30394 "gram.c"
     break;
 
   case 276: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds  */
@@ -30444,7 +30404,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30448 "gram.c"
+#line 30408 "gram.c"
     break;
 
   case 277: /* AlterTableStmt: ALTER TABLE relation_expr partition_cmd  */
@@ -30458,7 +30418,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30462 "gram.c"
+#line 30422 "gram.c"
     break;
 
   case 278: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr partition_cmd  */
@@ -30472,7 +30432,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30476 "gram.c"
+#line 30436 "gram.c"
     break;
 
   case 279: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -30488,7 +30448,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30492 "gram.c"
+#line 30452 "gram.c"
     break;
 
   case 280: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -30504,7 +30464,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30508 "gram.c"
+#line 30468 "gram.c"
     break;
 
   case 281: /* AlterTableStmt: ALTER INDEX qualified_name alter_table_cmds  */
@@ -30518,7 +30478,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30522 "gram.c"
+#line 30482 "gram.c"
     break;
 
   case 282: /* AlterTableStmt: ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds  */
@@ -30532,7 +30492,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30536 "gram.c"
+#line 30496 "gram.c"
     break;
 
   case 283: /* AlterTableStmt: ALTER INDEX qualified_name index_partition_cmd  */
@@ -30546,7 +30506,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30550 "gram.c"
+#line 30510 "gram.c"
     break;
 
   case 284: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -30562,7 +30522,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30566 "gram.c"
+#line 30526 "gram.c"
     break;
 
   case 285: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -30578,7 +30538,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30582 "gram.c"
+#line 30542 "gram.c"
     break;
 
   case 286: /* AlterTableStmt: ALTER SEQUENCE qualified_name alter_table_cmds  */
@@ -30592,7 +30552,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30596 "gram.c"
+#line 30556 "gram.c"
     break;
 
   case 287: /* AlterTableStmt: ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds  */
@@ -30606,7 +30566,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30610 "gram.c"
+#line 30570 "gram.c"
     break;
 
   case 288: /* AlterTableStmt: ALTER VIEW qualified_name alter_table_cmds  */
@@ -30620,7 +30580,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30624 "gram.c"
+#line 30584 "gram.c"
     break;
 
   case 289: /* AlterTableStmt: ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds  */
@@ -30634,7 +30594,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30638 "gram.c"
+#line 30598 "gram.c"
     break;
 
   case 290: /* AlterTableStmt: ALTER MATERIALIZED VIEW qualified_name alter_table_cmds  */
@@ -30648,7 +30608,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30652 "gram.c"
+#line 30612 "gram.c"
     break;
 
   case 291: /* AlterTableStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name alter_table_cmds  */
@@ -30662,7 +30622,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30666 "gram.c"
+#line 30626 "gram.c"
     break;
 
   case 292: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -30678,7 +30638,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30682 "gram.c"
+#line 30642 "gram.c"
     break;
 
   case 293: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -30694,7 +30654,7 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 30698 "gram.c"
+#line 30658 "gram.c"
     break;
 
   case 294: /* AlterTableStmt: ALTER FOREIGN TABLE relation_expr alter_table_cmds  */
@@ -30708,7 +30668,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30712 "gram.c"
+#line 30672 "gram.c"
     break;
 
   case 295: /* AlterTableStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr alter_table_cmds  */
@@ -30722,19 +30682,19 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30726 "gram.c"
+#line 30686 "gram.c"
     break;
 
   case 296: /* alter_table_cmds: alter_table_cmd  */
 #line 2273 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 30732 "gram.c"
+#line 30692 "gram.c"
     break;
 
   case 297: /* alter_table_cmds: alter_table_cmds ',' alter_table_cmd  */
 #line 2274 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 30738 "gram.c"
+#line 30698 "gram.c"
     break;
 
   case 298: /* partition_cmd: ATTACH PARTITION qualified_name PartitionBoundSpec  */
@@ -30751,7 +30711,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 30755 "gram.c"
+#line 30715 "gram.c"
     break;
 
   case 299: /* partition_cmd: DETACH PARTITION qualified_name opt_concurrently  */
@@ -30768,7 +30728,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 30772 "gram.c"
+#line 30732 "gram.c"
     break;
 
   case 300: /* partition_cmd: DETACH PARTITION qualified_name FINALIZE  */
@@ -30784,7 +30744,7 @@
 					n->def = (Node *) cmd;
 					(yyval.node) = (Node *) n;
 				}
-#line 30788 "gram.c"
+#line 30748 "gram.c"
     break;
 
   case 301: /* index_partition_cmd: ATTACH PARTITION qualified_name  */
@@ -30801,7 +30761,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 30805 "gram.c"
+#line 30765 "gram.c"
     break;
 
   case 302: /* alter_table_cmd: ADD_P columnDef  */
@@ -30814,7 +30774,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30818 "gram.c"
+#line 30778 "gram.c"
     break;
 
   case 303: /* alter_table_cmd: ADD_P IF_P NOT EXISTS columnDef  */
@@ -30827,7 +30787,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30831 "gram.c"
+#line 30791 "gram.c"
     break;
 
   case 304: /* alter_table_cmd: ADD_P COLUMN columnDef  */
@@ -30840,7 +30800,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 30844 "gram.c"
+#line 30804 "gram.c"
     break;
 
   case 305: /* alter_table_cmd: ADD_P COLUMN IF_P NOT EXISTS columnDef  */
@@ -30853,7 +30813,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30857 "gram.c"
+#line 30817 "gram.c"
     break;
 
   case 306: /* alter_table_cmd: ALTER opt_column ColId alter_column_default  */
@@ -30866,7 +30826,7 @@
 					n->def = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 30870 "gram.c"
+#line 30830 "gram.c"
     break;
 
   case 307: /* alter_table_cmd: ALTER opt_column ColId DROP NOT NULL_P  */
@@ -30878,7 +30838,7 @@
 					n->name = (yyvsp[-3].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 30882 "gram.c"
+#line 30842 "gram.c"
     break;
 
   case 308: /* alter_table_cmd: ALTER opt_column ColId SET NOT NULL_P  */
@@ -30890,7 +30850,7 @@
 					n->name = (yyvsp[-3].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 30894 "gram.c"
+#line 30854 "gram.c"
     break;
 
   case 309: /* alter_table_cmd: ALTER opt_column ColId DROP EXPRESSION  */
@@ -30902,7 +30862,7 @@
 					n->name = (yyvsp[-2].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 30906 "gram.c"
+#line 30866 "gram.c"
     break;
 
   case 310: /* alter_table_cmd: ALTER opt_column ColId DROP EXPRESSION IF_P EXISTS  */
@@ -30915,7 +30875,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 30919 "gram.c"
+#line 30879 "gram.c"
     break;
 
   case 311: /* alter_table_cmd: ALTER opt_column ColId SET STATISTICS SignedIconst  */
@@ -30928,7 +30888,7 @@
 					n->def = (Node *) makeInteger((yyvsp[0].ival));
 					(yyval.node) = (Node *) n;
 				}
-#line 30932 "gram.c"
+#line 30892 "gram.c"
     break;
 
   case 312: /* alter_table_cmd: ALTER opt_column Iconst SET STATISTICS SignedIconst  */
@@ -30947,7 +30907,7 @@
 					n->def = (Node *) makeInteger((yyvsp[0].ival));
 					(yyval.node) = (Node *) n;
 				}
-#line 30951 "gram.c"
+#line 30911 "gram.c"
     break;
 
   case 313: /* alter_table_cmd: ALTER opt_column ColId SET reloptions  */
@@ -30960,7 +30920,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 30964 "gram.c"
+#line 30924 "gram.c"
     break;
 
   case 314: /* alter_table_cmd: ALTER opt_column ColId RESET reloptions  */
@@ -30973,7 +30933,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 30977 "gram.c"
+#line 30937 "gram.c"
     break;
 
   case 315: /* alter_table_cmd: ALTER opt_column ColId SET column_storage  */
@@ -30986,7 +30946,7 @@
 					n->def = (Node *) makeString((yyvsp[0].str));
 					(yyval.node) = (Node *) n;
 				}
-#line 30990 "gram.c"
+#line 30950 "gram.c"
     break;
 
   case 316: /* alter_table_cmd: ALTER opt_column ColId SET column_compression  */
@@ -30999,7 +30959,7 @@
 					n->def = (Node *) makeString((yyvsp[0].str));
 					(yyval.node) = (Node *) n;
 				}
-#line 31003 "gram.c"
+#line 30963 "gram.c"
     break;
 
   case 317: /* alter_table_cmd: ALTER opt_column ColId ADD_P GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
@@ -31019,7 +30979,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 31023 "gram.c"
+#line 30983 "gram.c"
     break;
 
   case 318: /* alter_table_cmd: ALTER opt_column ColId alter_identity_column_option_list  */
@@ -31032,7 +30992,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 31036 "gram.c"
+#line 30996 "gram.c"
     break;
 
   case 319: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P  */
@@ -31045,7 +31005,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 31049 "gram.c"
+#line 31009 "gram.c"
     break;
 
   case 320: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P IF_P EXISTS  */
@@ -31058,7 +31018,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 31062 "gram.c"
+#line 31022 "gram.c"
     break;
 
   case 321: /* alter_table_cmd: DROP opt_column IF_P EXISTS ColId opt_drop_behavior  */
@@ -31072,7 +31032,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 31076 "gram.c"
+#line 31036 "gram.c"
     break;
 
   case 322: /* alter_table_cmd: DROP opt_column ColId opt_drop_behavior  */
@@ -31086,7 +31046,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 31090 "gram.c"
+#line 31050 "gram.c"
     break;
 
   case 323: /* alter_table_cmd: ALTER opt_column ColId opt_set_data TYPE_P Typename opt_collate_clause alter_using  */
@@ -31105,7 +31065,7 @@
 					def->location = (yylsp[-5]);
 					(yyval.node) = (Node *) n;
 				}
-#line 31109 "gram.c"
+#line 31069 "gram.c"
     break;
 
   case 324: /* alter_table_cmd: ALTER opt_column ColId alter_generic_options  */
@@ -31118,7 +31078,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 31122 "gram.c"
+#line 31082 "gram.c"
     break;
 
   case 325: /* alter_table_cmd: ADD_P TableConstraint  */
@@ -31130,7 +31090,7 @@
 					n->def = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 31134 "gram.c"
+#line 31094 "gram.c"
     break;
 
   case 326: /* alter_table_cmd: ALTER CONSTRAINT name ConstraintAttributeSpec  */
@@ -31149,7 +31109,7 @@
 									NULL, NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 31153 "gram.c"
+#line 31113 "gram.c"
     break;
 
   case 327: /* alter_table_cmd: VALIDATE CONSTRAINT name  */
@@ -31161,7 +31121,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31165 "gram.c"
+#line 31125 "gram.c"
     break;
 
   case 328: /* alter_table_cmd: DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
@@ -31175,7 +31135,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 31179 "gram.c"
+#line 31139 "gram.c"
     break;
 
   case 329: /* alter_table_cmd: DROP CONSTRAINT name opt_drop_behavior  */
@@ -31189,7 +31149,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 31193 "gram.c"
+#line 31153 "gram.c"
     break;
 
   case 330: /* alter_table_cmd: SET WITHOUT OIDS  */
@@ -31200,7 +31160,7 @@
 					n->subtype = AT_DropOids;
 					(yyval.node) = (Node *) n;
 				}
-#line 31204 "gram.c"
+#line 31164 "gram.c"
     break;
 
   case 331: /* alter_table_cmd: CLUSTER ON name  */
@@ -31212,7 +31172,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31216 "gram.c"
+#line 31176 "gram.c"
     break;
 
   case 332: /* alter_table_cmd: SET WITHOUT CLUSTER  */
@@ -31224,7 +31184,7 @@
 					n->name = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 31228 "gram.c"
+#line 31188 "gram.c"
     break;
 
   case 333: /* alter_table_cmd: SET LOGGED  */
@@ -31235,7 +31195,7 @@
 					n->subtype = AT_SetLogged;
 					(yyval.node) = (Node *) n;
 				}
-#line 31239 "gram.c"
+#line 31199 "gram.c"
     break;
 
   case 334: /* alter_table_cmd: SET UNLOGGED  */
@@ -31246,7 +31206,7 @@
 					n->subtype = AT_SetUnLogged;
 					(yyval.node) = (Node *) n;
 				}
-#line 31250 "gram.c"
+#line 31210 "gram.c"
     break;
 
   case 335: /* alter_table_cmd: ENABLE_P TRIGGER name  */
@@ -31258,7 +31218,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31262 "gram.c"
+#line 31222 "gram.c"
     break;
 
   case 336: /* alter_table_cmd: ENABLE_P ALWAYS TRIGGER name  */
@@ -31270,7 +31230,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31274 "gram.c"
+#line 31234 "gram.c"
     break;
 
   case 337: /* alter_table_cmd: ENABLE_P REPLICA TRIGGER name  */
@@ -31282,7 +31242,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31286 "gram.c"
+#line 31246 "gram.c"
     break;
 
   case 338: /* alter_table_cmd: ENABLE_P TRIGGER ALL  */
@@ -31293,7 +31253,7 @@
 					n->subtype = AT_EnableTrigAll;
 					(yyval.node) = (Node *) n;
 				}
-#line 31297 "gram.c"
+#line 31257 "gram.c"
     break;
 
   case 339: /* alter_table_cmd: ENABLE_P TRIGGER USER  */
@@ -31304,7 +31264,7 @@
 					n->subtype = AT_EnableTrigUser;
 					(yyval.node) = (Node *) n;
 				}
-#line 31308 "gram.c"
+#line 31268 "gram.c"
     break;
 
   case 340: /* alter_table_cmd: DISABLE_P TRIGGER name  */
@@ -31316,7 +31276,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31320 "gram.c"
+#line 31280 "gram.c"
     break;
 
   case 341: /* alter_table_cmd: DISABLE_P TRIGGER ALL  */
@@ -31327,7 +31287,7 @@
 					n->subtype = AT_DisableTrigAll;
 					(yyval.node) = (Node *) n;
 				}
-#line 31331 "gram.c"
+#line 31291 "gram.c"
     break;
 
   case 342: /* alter_table_cmd: DISABLE_P TRIGGER USER  */
@@ -31338,7 +31298,7 @@
 					n->subtype = AT_DisableTrigUser;
 					(yyval.node) = (Node *) n;
 				}
-#line 31342 "gram.c"
+#line 31302 "gram.c"
     break;
 
   case 343: /* alter_table_cmd: ENABLE_P RULE name  */
@@ -31350,7 +31310,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31354 "gram.c"
+#line 31314 "gram.c"
     break;
 
   case 344: /* alter_table_cmd: ENABLE_P ALWAYS RULE name  */
@@ -31362,7 +31322,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31366 "gram.c"
+#line 31326 "gram.c"
     break;
 
   case 345: /* alter_table_cmd: ENABLE_P REPLICA RULE name  */
@@ -31374,7 +31334,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31378 "gram.c"
+#line 31338 "gram.c"
     break;
 
   case 346: /* alter_table_cmd: DISABLE_P RULE name  */
@@ -31386,7 +31346,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31390 "gram.c"
+#line 31350 "gram.c"
     break;
 
   case 347: /* alter_table_cmd: INHERIT qualified_name  */
@@ -31398,7 +31358,7 @@
 					n->def = (Node *) (yyvsp[0].range);
 					(yyval.node) = (Node *) n;
 				}
-#line 31402 "gram.c"
+#line 31362 "gram.c"
     break;
 
   case 348: /* alter_table_cmd: NO INHERIT qualified_name  */
@@ -31410,7 +31370,7 @@
 					n->def = (Node *) (yyvsp[0].range);
 					(yyval.node) = (Node *) n;
 				}
-#line 31414 "gram.c"
+#line 31374 "gram.c"
     break;
 
   case 349: /* alter_table_cmd: OF any_name  */
@@ -31424,7 +31384,7 @@
 					n->def = (Node *) def;
 					(yyval.node) = (Node *) n;
 				}
-#line 31428 "gram.c"
+#line 31388 "gram.c"
     break;
 
   case 350: /* alter_table_cmd: NOT OF  */
@@ -31435,7 +31395,7 @@
 					n->subtype = AT_DropOf;
 					(yyval.node) = (Node *) n;
 				}
-#line 31439 "gram.c"
+#line 31399 "gram.c"
     break;
 
   case 351: /* alter_table_cmd: OWNER TO RoleSpec  */
@@ -31447,7 +31407,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 31451 "gram.c"
+#line 31411 "gram.c"
     break;
 
   case 352: /* alter_table_cmd: SET ACCESS METHOD name  */
@@ -31459,7 +31419,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31463 "gram.c"
+#line 31423 "gram.c"
     break;
 
   case 353: /* alter_table_cmd: SET TABLESPACE name  */
@@ -31471,7 +31431,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31475 "gram.c"
+#line 31435 "gram.c"
     break;
 
   case 354: /* alter_table_cmd: SET reloptions  */
@@ -31483,7 +31443,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 31487 "gram.c"
+#line 31447 "gram.c"
     break;
 
   case 355: /* alter_table_cmd: RESET reloptions  */
@@ -31495,7 +31455,7 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 31499 "gram.c"
+#line 31459 "gram.c"
     break;
 
   case 356: /* alter_table_cmd: REPLICA IDENTITY_P replica_identity  */
@@ -31507,7 +31467,7 @@
 					n->def = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 31511 "gram.c"
+#line 31471 "gram.c"
     break;
 
   case 357: /* alter_table_cmd: ENABLE_P ROW LEVEL SECURITY  */
@@ -31518,7 +31478,7 @@
 					n->subtype = AT_EnableRowSecurity;
 					(yyval.node) = (Node *) n;
 				}
-#line 31522 "gram.c"
+#line 31482 "gram.c"
     break;
 
   case 358: /* alter_table_cmd: DISABLE_P ROW LEVEL SECURITY  */
@@ -31529,7 +31489,7 @@
 					n->subtype = AT_DisableRowSecurity;
 					(yyval.node) = (Node *) n;
 				}
-#line 31533 "gram.c"
+#line 31493 "gram.c"
     break;
 
   case 359: /* alter_table_cmd: FORCE ROW LEVEL SECURITY  */
@@ -31540,7 +31500,7 @@
 					n->subtype = AT_ForceRowSecurity;
 					(yyval.node) = (Node *) n;
 				}
-#line 31544 "gram.c"
+#line 31504 "gram.c"
     break;
 
   case 360: /* alter_table_cmd: NO FORCE ROW LEVEL SECURITY  */
@@ -31551,7 +31511,7 @@
 					n->subtype = AT_NoForceRowSecurity;
 					(yyval.node) = (Node *) n;
 				}
-#line 31555 "gram.c"
+#line 31515 "gram.c"
     break;
 
   case 361: /* alter_table_cmd: alter_generic_options  */
@@ -31563,19 +31523,19 @@
 					n->def = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 31567 "gram.c"
+#line 31527 "gram.c"
     break;
 
   case 362: /* alter_column_default: SET DEFAULT a_expr  */
 #line 2925 "gram.y"
                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 31573 "gram.c"
+#line 31533 "gram.c"
     break;
 
   case 363: /* alter_column_default: DROP DEFAULT  */
 #line 2926 "gram.y"
                                                                 { (yyval.node) = NULL; }
-#line 31579 "gram.c"
+#line 31539 "gram.c"
     break;
 
   case 364: /* opt_collate_clause: COLLATE any_name  */
@@ -31588,25 +31548,25 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 31592 "gram.c"
+#line 31552 "gram.c"
     break;
 
   case 365: /* opt_collate_clause: %empty  */
 #line 2939 "gram.y"
                                                                 { (yyval.node) = NULL; }
-#line 31598 "gram.c"
+#line 31558 "gram.c"
     break;
 
   case 366: /* alter_using: USING a_expr  */
 #line 2943 "gram.y"
                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 31604 "gram.c"
+#line 31564 "gram.c"
     break;
 
   case 367: /* alter_using: %empty  */
 #line 2944 "gram.y"
                                                                 { (yyval.node) = NULL; }
-#line 31610 "gram.c"
+#line 31570 "gram.c"
     break;
 
   case 368: /* replica_identity: NOTHING  */
@@ -31618,7 +31578,7 @@
 					n->name = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 31622 "gram.c"
+#line 31582 "gram.c"
     break;
 
   case 369: /* replica_identity: FULL  */
@@ -31630,7 +31590,7 @@
 					n->name = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 31634 "gram.c"
+#line 31594 "gram.c"
     break;
 
   case 370: /* replica_identity: DEFAULT  */
@@ -31642,7 +31602,7 @@
 					n->name = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 31646 "gram.c"
+#line 31606 "gram.c"
     break;
 
   case 371: /* replica_identity: USING INDEX name  */
@@ -31654,37 +31614,37 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31658 "gram.c"
+#line 31618 "gram.c"
     break;
 
   case 372: /* reloptions: '(' reloption_list ')'  */
 #line 2983 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 31664 "gram.c"
+#line 31624 "gram.c"
     break;
 
   case 373: /* opt_reloptions: WITH reloptions  */
 #line 2986 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 31670 "gram.c"
+#line 31630 "gram.c"
     break;
 
   case 374: /* opt_reloptions: %empty  */
 #line 2987 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 31676 "gram.c"
+#line 31636 "gram.c"
     break;
 
   case 375: /* reloption_list: reloption_elem  */
 #line 2991 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 31682 "gram.c"
+#line 31642 "gram.c"
     break;
 
   case 376: /* reloption_list: reloption_list ',' reloption_elem  */
 #line 2992 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 31688 "gram.c"
+#line 31648 "gram.c"
     break;
 
   case 377: /* reloption_elem: ColLabel '=' def_arg  */
@@ -31692,7 +31652,7 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 31696 "gram.c"
+#line 31656 "gram.c"
     break;
 
   case 378: /* reloption_elem: ColLabel  */
@@ -31700,7 +31660,7 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL, (yylsp[0]));
 				}
-#line 31704 "gram.c"
+#line 31664 "gram.c"
     break;
 
   case 379: /* reloption_elem: ColLabel '.' ColLabel '=' def_arg  */
@@ -31709,7 +31669,7 @@
 					(yyval.defelt) = makeDefElemExtended((yyvsp[-4].str), (yyvsp[-2].str), (Node *) (yyvsp[0].node),
 											 DEFELEM_UNSPEC, (yylsp[-4]));
 				}
-#line 31713 "gram.c"
+#line 31673 "gram.c"
     break;
 
   case 380: /* reloption_elem: ColLabel '.' ColLabel  */
@@ -31717,19 +31677,19 @@
                                 {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[-2].str), (yyvsp[0].str), NULL, DEFELEM_UNSPEC, (yylsp[-2]));
 				}
-#line 31721 "gram.c"
+#line 31681 "gram.c"
     break;
 
   case 381: /* alter_identity_column_option_list: alter_identity_column_option  */
 #line 3018 "gram.y"
                                 { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 31727 "gram.c"
+#line 31687 "gram.c"
     break;
 
   case 382: /* alter_identity_column_option_list: alter_identity_column_option_list alter_identity_column_option  */
 #line 3020 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 31733 "gram.c"
+#line 31693 "gram.c"
     break;
 
   case 383: /* alter_identity_column_option: RESTART  */
@@ -31737,7 +31697,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[0]));
 				}
-#line 31741 "gram.c"
+#line 31701 "gram.c"
     break;
 
   case 384: /* alter_identity_column_option: RESTART opt_with NumericOnly  */
@@ -31745,7 +31705,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("restart", (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 31749 "gram.c"
+#line 31709 "gram.c"
     break;
 
   case 385: /* alter_identity_column_option: SET SeqOptElem  */
@@ -31760,7 +31720,7 @@
 								 parser_errposition((yylsp[0]))));
 					(yyval.defelt) = (yyvsp[0].defelt);
 				}
-#line 31764 "gram.c"
+#line 31724 "gram.c"
     break;
 
   case 386: /* alter_identity_column_option: SET GENERATED generated_when  */
@@ -31768,7 +31728,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("generated", (Node *) makeInteger((yyvsp[0].ival)), (yylsp[-2]));
 				}
-#line 31772 "gram.c"
+#line 31732 "gram.c"
     break;
 
   case 387: /* PartitionBoundSpec: FOR VALUES WITH '(' hash_partbound ')'  */
@@ -31823,7 +31783,7 @@
 
 					(yyval.partboundspec) = n;
 				}
-#line 31827 "gram.c"
+#line 31787 "gram.c"
     break;
 
   case 388: /* PartitionBoundSpec: FOR VALUES IN_P '(' expr_list ')'  */
@@ -31838,7 +31798,7 @@
 
 					(yyval.partboundspec) = n;
 				}
-#line 31842 "gram.c"
+#line 31802 "gram.c"
     break;
 
   case 389: /* PartitionBoundSpec: FOR VALUES FROM '(' expr_list ')' TO '(' expr_list ')'  */
@@ -31854,7 +31814,7 @@
 
 					(yyval.partboundspec) = n;
 				}
-#line 31858 "gram.c"
+#line 31818 "gram.c"
     break;
 
   case 390: /* PartitionBoundSpec: DEFAULT  */
@@ -31867,7 +31827,7 @@
 
 					(yyval.partboundspec) = n;
 				}
-#line 31871 "gram.c"
+#line 31831 "gram.c"
     break;
 
   case 391: /* hash_partbound_elem: NonReservedWord Iconst  */
@@ -31875,7 +31835,7 @@
                         {
 				(yyval.defelt) = makeDefElem((yyvsp[-1].str), (Node *) makeInteger((yyvsp[0].ival)), (yylsp[-1]));
 			}
-#line 31879 "gram.c"
+#line 31839 "gram.c"
     break;
 
   case 392: /* hash_partbound: hash_partbound_elem  */
@@ -31883,7 +31843,7 @@
                         {
 				(yyval.list) = list_make1((yyvsp[0].defelt));
 			}
-#line 31887 "gram.c"
+#line 31847 "gram.c"
     break;
 
   case 393: /* hash_partbound: hash_partbound ',' hash_partbound_elem  */
@@ -31891,7 +31851,7 @@
                         {
 				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
 			}
-#line 31895 "gram.c"
+#line 31855 "gram.c"
     break;
 
   case 394: /* AlterCompositeTypeStmt: ALTER TYPE_P any_name alter_type_cmds  */
@@ -31905,19 +31865,19 @@
 					n->objtype = OBJECT_TYPE;
 					(yyval.node) = (Node *) n;
 				}
-#line 31909 "gram.c"
+#line 31869 "gram.c"
     break;
 
   case 395: /* alter_type_cmds: alter_type_cmd  */
 #line 3181 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 31915 "gram.c"
+#line 31875 "gram.c"
     break;
 
   case 396: /* alter_type_cmds: alter_type_cmds ',' alter_type_cmd  */
 #line 3182 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 31921 "gram.c"
+#line 31881 "gram.c"
     break;
 
   case 397: /* alter_type_cmd: ADD_P ATTRIBUTE TableFuncElement opt_drop_behavior  */
@@ -31930,7 +31890,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 31934 "gram.c"
+#line 31894 "gram.c"
     break;
 
   case 398: /* alter_type_cmd: DROP ATTRIBUTE IF_P EXISTS ColId opt_drop_behavior  */
@@ -31944,7 +31904,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 31948 "gram.c"
+#line 31908 "gram.c"
     break;
 
   case 399: /* alter_type_cmd: DROP ATTRIBUTE ColId opt_drop_behavior  */
@@ -31958,7 +31918,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 31962 "gram.c"
+#line 31922 "gram.c"
     break;
 
   case 400: /* alter_type_cmd: ALTER ATTRIBUTE ColId opt_set_data TYPE_P Typename opt_collate_clause opt_drop_behavior  */
@@ -31978,7 +31938,7 @@
 					def->location = (yylsp[-5]);
 					(yyval.node) = (Node *) n;
 				}
-#line 31982 "gram.c"
+#line 31942 "gram.c"
     break;
 
   case 401: /* ClosePortalStmt: CLOSE cursor_name  */
@@ -31989,7 +31949,7 @@
 					n->portalname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 31993 "gram.c"
+#line 31953 "gram.c"
     break;
 
   case 402: /* ClosePortalStmt: CLOSE ALL  */
@@ -32000,7 +31960,7 @@
 					n->portalname = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 32004 "gram.c"
+#line 31964 "gram.c"
     break;
 
   case 403: /* CopyStmt: COPY opt_binary qualified_name opt_column_list copy_from opt_program copy_file_name copy_delimiter opt_with copy_options where_clause  */
@@ -32038,7 +31998,7 @@
 						n->options = list_concat(n->options, (yyvsp[-1].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 32042 "gram.c"
+#line 32002 "gram.c"
     break;
 
   case 404: /* CopyStmt: COPY '(' PreparableStmt ')' TO opt_program copy_file_name opt_with copy_options  */
@@ -32062,73 +32022,73 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 32066 "gram.c"
+#line 32026 "gram.c"
     break;
 
   case 405: /* copy_from: FROM  */
 #line 3346 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 32072 "gram.c"
+#line 32032 "gram.c"
     break;
 
   case 406: /* copy_from: TO  */
 #line 3347 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 32078 "gram.c"
+#line 32038 "gram.c"
     break;
 
   case 407: /* opt_program: PROGRAM  */
 #line 3351 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 32084 "gram.c"
+#line 32044 "gram.c"
     break;
 
   case 408: /* opt_program: %empty  */
 #line 3352 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 32090 "gram.c"
+#line 32050 "gram.c"
     break;
 
   case 409: /* copy_file_name: Sconst  */
 #line 3361 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 32096 "gram.c"
+#line 32056 "gram.c"
     break;
 
   case 410: /* copy_file_name: STDIN  */
 #line 3362 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 32102 "gram.c"
+#line 32062 "gram.c"
     break;
 
   case 411: /* copy_file_name: STDOUT  */
 #line 3363 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 32108 "gram.c"
+#line 32068 "gram.c"
     break;
 
   case 412: /* copy_options: copy_opt_list  */
 #line 3366 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 32114 "gram.c"
+#line 32074 "gram.c"
     break;
 
   case 413: /* copy_options: '(' copy_generic_opt_list ')'  */
 #line 3367 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 32120 "gram.c"
+#line 32080 "gram.c"
     break;
 
   case 414: /* copy_opt_list: copy_opt_list copy_opt_item  */
 #line 3372 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 32126 "gram.c"
+#line 32086 "gram.c"
     break;
 
   case 415: /* copy_opt_list: %empty  */
 #line 3373 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 32132 "gram.c"
+#line 32092 "gram.c"
     break;
 
   case 416: /* copy_opt_item: BINARY  */
@@ -32136,7 +32096,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("format", (Node *) makeString("binary"), (yylsp[0]));
 				}
-#line 32140 "gram.c"
+#line 32100 "gram.c"
     break;
 
   case 417: /* copy_opt_item: FREEZE  */
@@ -32144,7 +32104,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("freeze", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 32148 "gram.c"
+#line 32108 "gram.c"
     break;
 
   case 418: /* copy_opt_item: DELIMITER opt_as Sconst  */
@@ -32152,7 +32112,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 32156 "gram.c"
+#line 32116 "gram.c"
     break;
 
   case 419: /* copy_opt_item: NULL_P opt_as Sconst  */
@@ -32160,7 +32120,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("null", (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 32164 "gram.c"
+#line 32124 "gram.c"
     break;
 
   case 420: /* copy_opt_item: CSV  */
@@ -32168,7 +32128,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("format", (Node *) makeString("csv"), (yylsp[0]));
 				}
-#line 32172 "gram.c"
+#line 32132 "gram.c"
     break;
 
   case 421: /* copy_opt_item: HEADER_P  */
@@ -32176,7 +32136,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("header", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 32180 "gram.c"
+#line 32140 "gram.c"
     break;
 
   case 422: /* copy_opt_item: QUOTE opt_as Sconst  */
@@ -32184,7 +32144,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("quote", (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 32188 "gram.c"
+#line 32148 "gram.c"
     break;
 
   case 423: /* copy_opt_item: ESCAPE opt_as Sconst  */
@@ -32192,7 +32152,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("escape", (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 32196 "gram.c"
+#line 32156 "gram.c"
     break;
 
   case 424: /* copy_opt_item: FORCE QUOTE columnList  */
@@ -32200,7 +32160,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 32204 "gram.c"
+#line 32164 "gram.c"
     break;
 
   case 425: /* copy_opt_item: FORCE QUOTE '*'  */
@@ -32208,7 +32168,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *) makeNode(A_Star), (yylsp[-2]));
 				}
-#line 32212 "gram.c"
+#line 32172 "gram.c"
     break;
 
   case 426: /* copy_opt_item: FORCE NOT NULL_P columnList  */
@@ -32216,7 +32176,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("force_not_null", (Node *) (yyvsp[0].list), (yylsp[-3]));
 				}
-#line 32220 "gram.c"
+#line 32180 "gram.c"
     break;
 
   case 427: /* copy_opt_item: FORCE NULL_P columnList  */
@@ -32224,7 +32184,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("force_null", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 32228 "gram.c"
+#line 32188 "gram.c"
     break;
 
   case 428: /* copy_opt_item: ENCODING Sconst  */
@@ -32232,7 +32192,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("encoding", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 32236 "gram.c"
+#line 32196 "gram.c"
     break;
 
   case 429: /* opt_binary: BINARY  */
@@ -32240,13 +32200,13 @@
                                 {
 					(yyval.defelt) = makeDefElem("format", (Node *) makeString("binary"), (yylsp[0]));
 				}
-#line 32244 "gram.c"
+#line 32204 "gram.c"
     break;
 
   case 430: /* opt_binary: %empty  */
 #line 3438 "gram.y"
                                                                                                 { (yyval.defelt) = NULL; }
-#line 32250 "gram.c"
+#line 32210 "gram.c"
     break;
 
   case 431: /* copy_delimiter: opt_using DELIMITERS Sconst  */
@@ -32254,13 +32214,13 @@
                                 {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 32258 "gram.c"
+#line 32218 "gram.c"
     break;
 
   case 432: /* copy_delimiter: %empty  */
 #line 3446 "gram.y"
                                                                                                 { (yyval.defelt) = NULL; }
-#line 32264 "gram.c"
+#line 32224 "gram.c"
     break;
 
   case 435: /* copy_generic_opt_list: copy_generic_opt_elem  */
@@ -32268,7 +32228,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].defelt));
 				}
-#line 32272 "gram.c"
+#line 32232 "gram.c"
     break;
 
   case 436: /* copy_generic_opt_list: copy_generic_opt_list ',' copy_generic_opt_elem  */
@@ -32276,7 +32236,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
 				}
-#line 32280 "gram.c"
+#line 32240 "gram.c"
     break;
 
   case 437: /* copy_generic_opt_elem: ColLabel copy_generic_opt_arg  */
@@ -32284,37 +32244,37 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 32288 "gram.c"
+#line 32248 "gram.c"
     break;
 
   case 438: /* copy_generic_opt_arg: opt_boolean_or_string  */
 #line 3474 "gram.y"
                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 32294 "gram.c"
+#line 32254 "gram.c"
     break;
 
   case 439: /* copy_generic_opt_arg: NumericOnly  */
 #line 3475 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].node); }
-#line 32300 "gram.c"
+#line 32260 "gram.c"
     break;
 
   case 440: /* copy_generic_opt_arg: '*'  */
 #line 3476 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeNode(A_Star); }
-#line 32306 "gram.c"
+#line 32266 "gram.c"
     break;
 
   case 441: /* copy_generic_opt_arg: '(' copy_generic_opt_arg_list ')'  */
 #line 3477 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[-1].list); }
-#line 32312 "gram.c"
+#line 32272 "gram.c"
     break;
 
   case 442: /* copy_generic_opt_arg: %empty  */
 #line 3478 "gram.y"
                                                                         { (yyval.node) = NULL; }
-#line 32318 "gram.c"
+#line 32278 "gram.c"
     break;
 
   case 443: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list_item  */
@@ -32322,7 +32282,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 32326 "gram.c"
+#line 32286 "gram.c"
     break;
 
   case 444: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item  */
@@ -32330,13 +32290,13 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 32334 "gram.c"
+#line 32294 "gram.c"
     break;
 
   case 445: /* copy_generic_opt_arg_list_item: opt_boolean_or_string  */
 #line 3494 "gram.y"
                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 32340 "gram.c"
+#line 32300 "gram.c"
     break;
 
   case 446: /* CreateStmt: CREATE OptTemp TABLE qualified_name '(' OptTableElementList ')' OptInherit OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32358,7 +32318,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 32362 "gram.c"
+#line 32322 "gram.c"
     break;
 
   case 447: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32380,7 +32340,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 32384 "gram.c"
+#line 32344 "gram.c"
     break;
 
   case 448: /* CreateStmt: CREATE OptTemp TABLE qualified_name OF any_name OptTypedTableElementList OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32403,7 +32363,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 32407 "gram.c"
+#line 32367 "gram.c"
     break;
 
   case 449: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name OF any_name OptTypedTableElementList OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32426,7 +32386,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 32430 "gram.c"
+#line 32390 "gram.c"
     break;
 
   case 450: /* CreateStmt: CREATE OptTemp TABLE qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32449,7 +32409,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 32453 "gram.c"
+#line 32413 "gram.c"
     break;
 
   case 451: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -32472,31 +32432,31 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 32476 "gram.c"
+#line 32436 "gram.c"
     break;
 
   case 452: /* OptTemp: TEMPORARY  */
 #line 3642 "gram.y"
                                                                 { (yyval.ival) = RELPERSISTENCE_TEMP; }
-#line 32482 "gram.c"
+#line 32442 "gram.c"
     break;
 
   case 453: /* OptTemp: TEMP  */
 #line 3643 "gram.y"
                                                                         { (yyval.ival) = RELPERSISTENCE_TEMP; }
-#line 32488 "gram.c"
+#line 32448 "gram.c"
     break;
 
   case 454: /* OptTemp: LOCAL TEMPORARY  */
 #line 3644 "gram.y"
                                                                 { (yyval.ival) = RELPERSISTENCE_TEMP; }
-#line 32494 "gram.c"
+#line 32454 "gram.c"
     break;
 
   case 455: /* OptTemp: LOCAL TEMP  */
 #line 3645 "gram.y"
                                                                 { (yyval.ival) = RELPERSISTENCE_TEMP; }
-#line 32500 "gram.c"
+#line 32460 "gram.c"
     break;
 
   case 456: /* OptTemp: GLOBAL TEMPORARY  */
@@ -32507,7 +32467,7 @@
 							 parser_errposition((yylsp[-1]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
 				}
-#line 32511 "gram.c"
+#line 32471 "gram.c"
     break;
 
   case 457: /* OptTemp: GLOBAL TEMP  */
@@ -32518,43 +32478,43 @@
 							 parser_errposition((yylsp[-1]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
 				}
-#line 32522 "gram.c"
+#line 32482 "gram.c"
     break;
 
   case 458: /* OptTemp: UNLOGGED  */
 #line 3660 "gram.y"
                                                                         { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
-#line 32528 "gram.c"
+#line 32488 "gram.c"
     break;
 
   case 459: /* OptTemp: %empty  */
 #line 3661 "gram.y"
                                                                         { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
-#line 32534 "gram.c"
+#line 32494 "gram.c"
     break;
 
   case 460: /* OptTableElementList: TableElementList  */
 #line 3665 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 32540 "gram.c"
+#line 32500 "gram.c"
     break;
 
   case 461: /* OptTableElementList: %empty  */
 #line 3666 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 32546 "gram.c"
+#line 32506 "gram.c"
     break;
 
   case 462: /* OptTypedTableElementList: '(' TypedTableElementList ')'  */
 #line 3670 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 32552 "gram.c"
+#line 32512 "gram.c"
     break;
 
   case 463: /* OptTypedTableElementList: %empty  */
 #line 3671 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 32558 "gram.c"
+#line 32518 "gram.c"
     break;
 
   case 464: /* TableElementList: TableElement  */
@@ -32562,7 +32522,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 32566 "gram.c"
+#line 32526 "gram.c"
     break;
 
   case 465: /* TableElementList: TableElementList ',' TableElement  */
@@ -32570,7 +32530,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 32574 "gram.c"
+#line 32534 "gram.c"
     break;
 
   case 466: /* TypedTableElementList: TypedTableElement  */
@@ -32578,7 +32538,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 32582 "gram.c"
+#line 32542 "gram.c"
     break;
 
   case 467: /* TypedTableElementList: TypedTableElementList ',' TypedTableElement  */
@@ -32586,37 +32546,37 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 32590 "gram.c"
+#line 32550 "gram.c"
     break;
 
   case 468: /* TableElement: columnDef  */
 #line 3697 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 32596 "gram.c"
+#line 32556 "gram.c"
     break;
 
   case 469: /* TableElement: TableLikeClause  */
 #line 3698 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 32602 "gram.c"
+#line 32562 "gram.c"
     break;
 
   case 470: /* TableElement: TableConstraint  */
 #line 3699 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 32608 "gram.c"
+#line 32568 "gram.c"
     break;
 
   case 471: /* TypedTableElement: columnOptions  */
 #line 3703 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 32614 "gram.c"
+#line 32574 "gram.c"
     break;
 
   case 472: /* TypedTableElement: TableConstraint  */
 #line 3704 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 32620 "gram.c"
+#line 32580 "gram.c"
     break;
 
   case 473: /* columnDef: ColId Typename opt_column_storage opt_column_compression create_generic_options ColQualList  */
@@ -32642,7 +32602,7 @@
 					n->location = (yylsp[-5]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32646 "gram.c"
+#line 32606 "gram.c"
     break;
 
   case 474: /* columnOptions: ColId ColQualList  */
@@ -32665,7 +32625,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32669 "gram.c"
+#line 32629 "gram.c"
     break;
 
   case 475: /* columnOptions: ColId WITH OPTIONS ColQualList  */
@@ -32688,67 +32648,67 @@
 					n->location = (yylsp[-3]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32692 "gram.c"
+#line 32652 "gram.c"
     break;
 
   case 476: /* column_compression: COMPRESSION ColId  */
 #line 3772 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 32698 "gram.c"
+#line 32658 "gram.c"
     break;
 
   case 477: /* column_compression: COMPRESSION DEFAULT  */
 #line 3773 "gram.y"
                                                                                 { (yyval.str) = pstrdup("default"); }
-#line 32704 "gram.c"
+#line 32664 "gram.c"
     break;
 
   case 478: /* opt_column_compression: column_compression  */
 #line 3777 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 32710 "gram.c"
+#line 32670 "gram.c"
     break;
 
   case 479: /* opt_column_compression: %empty  */
 #line 3778 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 32716 "gram.c"
+#line 32676 "gram.c"
     break;
 
   case 480: /* column_storage: STORAGE ColId  */
 #line 3782 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 32722 "gram.c"
+#line 32682 "gram.c"
     break;
 
   case 481: /* column_storage: STORAGE DEFAULT  */
 #line 3783 "gram.y"
                                                                                         { (yyval.str) = pstrdup("default"); }
-#line 32728 "gram.c"
+#line 32688 "gram.c"
     break;
 
   case 482: /* opt_column_storage: column_storage  */
 #line 3787 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 32734 "gram.c"
+#line 32694 "gram.c"
     break;
 
   case 483: /* opt_column_storage: %empty  */
 #line 3788 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 32740 "gram.c"
+#line 32700 "gram.c"
     break;
 
   case 484: /* ColQualList: ColQualList ColConstraint  */
 #line 3792 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 32746 "gram.c"
+#line 32706 "gram.c"
     break;
 
   case 485: /* ColQualList: %empty  */
 #line 3793 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 32752 "gram.c"
+#line 32712 "gram.c"
     break;
 
   case 486: /* ColConstraint: CONSTRAINT name ColConstraintElem  */
@@ -32760,19 +32720,19 @@
 					n->location = (yylsp[-2]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32764 "gram.c"
+#line 32724 "gram.c"
     break;
 
   case 487: /* ColConstraint: ColConstraintElem  */
 #line 3805 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 32770 "gram.c"
+#line 32730 "gram.c"
     break;
 
   case 488: /* ColConstraint: ConstraintAttr  */
 #line 3806 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 32776 "gram.c"
+#line 32736 "gram.c"
     break;
 
   case 489: /* ColConstraint: COLLATE any_name  */
@@ -32790,7 +32750,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32794 "gram.c"
+#line 32754 "gram.c"
     break;
 
   case 490: /* ColConstraintElem: NOT NULL_P  */
@@ -32802,7 +32762,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32806 "gram.c"
+#line 32766 "gram.c"
     break;
 
   case 491: /* ColConstraintElem: NULL_P  */
@@ -32814,7 +32774,7 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32818 "gram.c"
+#line 32778 "gram.c"
     break;
 
   case 492: /* ColConstraintElem: UNIQUE opt_unique_null_treatment opt_definition OptConsTableSpace  */
@@ -32831,7 +32791,7 @@
 					n->indexspace = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 32835 "gram.c"
+#line 32795 "gram.c"
     break;
 
   case 493: /* ColConstraintElem: PRIMARY KEY opt_definition OptConsTableSpace  */
@@ -32847,7 +32807,7 @@
 					n->indexspace = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 32851 "gram.c"
+#line 32811 "gram.c"
     break;
 
   case 494: /* ColConstraintElem: CHECK '(' a_expr ')' opt_no_inherit  */
@@ -32864,7 +32824,7 @@
 					n->initially_valid = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 32868 "gram.c"
+#line 32828 "gram.c"
     break;
 
   case 495: /* ColConstraintElem: DEFAULT b_expr  */
@@ -32878,7 +32838,7 @@
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 32882 "gram.c"
+#line 32842 "gram.c"
     break;
 
   case 496: /* ColConstraintElem: GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
@@ -32892,7 +32852,7 @@
 					n->location = (yylsp[-4]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32896 "gram.c"
+#line 32856 "gram.c"
     break;
 
   case 497: /* ColConstraintElem: GENERATED generated_when AS '(' a_expr ')' STORED  */
@@ -32920,7 +32880,7 @@
 
 					(yyval.node) = (Node *) n;
 				}
-#line 32924 "gram.c"
+#line 32884 "gram.c"
     break;
 
   case 498: /* ColConstraintElem: REFERENCES qualified_name opt_column_list key_match key_actions  */
@@ -32941,37 +32901,37 @@
 					n->initially_valid = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 32945 "gram.c"
+#line 32905 "gram.c"
     break;
 
   case 499: /* opt_unique_null_treatment: NULLS_P DISTINCT  */
 #line 3957 "gram.y"
                                                         { (yyval.boolean) = true; }
-#line 32951 "gram.c"
+#line 32911 "gram.c"
     break;
 
   case 500: /* opt_unique_null_treatment: NULLS_P NOT DISTINCT  */
 #line 3958 "gram.y"
                                                 { (yyval.boolean) = false; }
-#line 32957 "gram.c"
+#line 32917 "gram.c"
     break;
 
   case 501: /* opt_unique_null_treatment: %empty  */
 #line 3959 "gram.y"
                                                                 { (yyval.boolean) = true; }
-#line 32963 "gram.c"
+#line 32923 "gram.c"
     break;
 
   case 502: /* generated_when: ALWAYS  */
 #line 3963 "gram.y"
                                                 { (yyval.ival) = ATTRIBUTE_IDENTITY_ALWAYS; }
-#line 32969 "gram.c"
+#line 32929 "gram.c"
     break;
 
   case 503: /* generated_when: BY DEFAULT  */
 #line 3964 "gram.y"
                                         { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; }
-#line 32975 "gram.c"
+#line 32935 "gram.c"
     break;
 
   case 504: /* ConstraintAttr: DEFERRABLE  */
@@ -32983,7 +32943,7 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32987 "gram.c"
+#line 32947 "gram.c"
     break;
 
   case 505: /* ConstraintAttr: NOT DEFERRABLE  */
@@ -32995,7 +32955,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 32999 "gram.c"
+#line 32959 "gram.c"
     break;
 
   case 506: /* ConstraintAttr: INITIALLY DEFERRED  */
@@ -33007,7 +32967,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 33011 "gram.c"
+#line 32971 "gram.c"
     break;
 
   case 507: /* ConstraintAttr: INITIALLY IMMEDIATE  */
@@ -33019,7 +32979,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 33023 "gram.c"
+#line 32983 "gram.c"
     break;
 
   case 508: /* TableLikeClause: LIKE qualified_name TableLikeOptionList  */
@@ -33032,85 +32992,85 @@
 					n->relationOid = InvalidOid;
 					(yyval.node) = (Node *) n;
 				}
-#line 33036 "gram.c"
+#line 32996 "gram.c"
     break;
 
   case 509: /* TableLikeOptionList: TableLikeOptionList INCLUDING TableLikeOption  */
 #line 4031 "gram.y"
                                                                                 { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
-#line 33042 "gram.c"
+#line 33002 "gram.c"
     break;
 
   case 510: /* TableLikeOptionList: TableLikeOptionList EXCLUDING TableLikeOption  */
 #line 4032 "gram.y"
                                                                                 { (yyval.ival) = (yyvsp[-2].ival) & ~(yyvsp[0].ival); }
-#line 33048 "gram.c"
+#line 33008 "gram.c"
     break;
 
   case 511: /* TableLikeOptionList: %empty  */
 #line 4033 "gram.y"
                                                                                         { (yyval.ival) = 0; }
-#line 33054 "gram.c"
+#line 33014 "gram.c"
     break;
 
   case 512: /* TableLikeOption: COMMENTS  */
 #line 4037 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
-#line 33060 "gram.c"
+#line 33020 "gram.c"
     break;
 
   case 513: /* TableLikeOption: COMPRESSION  */
 #line 4038 "gram.y"
                                                         { (yyval.ival) = CREATE_TABLE_LIKE_COMPRESSION; }
-#line 33066 "gram.c"
+#line 33026 "gram.c"
     break;
 
   case 514: /* TableLikeOption: CONSTRAINTS  */
 #line 4039 "gram.y"
                                                         { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
-#line 33072 "gram.c"
+#line 33032 "gram.c"
     break;
 
   case 515: /* TableLikeOption: DEFAULTS  */
 #line 4040 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
-#line 33078 "gram.c"
+#line 33038 "gram.c"
     break;
 
   case 516: /* TableLikeOption: IDENTITY_P  */
 #line 4041 "gram.y"
                                                         { (yyval.ival) = CREATE_TABLE_LIKE_IDENTITY; }
-#line 33084 "gram.c"
+#line 33044 "gram.c"
     break;
 
   case 517: /* TableLikeOption: GENERATED  */
 #line 4042 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_GENERATED; }
-#line 33090 "gram.c"
+#line 33050 "gram.c"
     break;
 
   case 518: /* TableLikeOption: INDEXES  */
 #line 4043 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
-#line 33096 "gram.c"
+#line 33056 "gram.c"
     break;
 
   case 519: /* TableLikeOption: STATISTICS  */
 #line 4044 "gram.y"
                                                         { (yyval.ival) = CREATE_TABLE_LIKE_STATISTICS; }
-#line 33102 "gram.c"
+#line 33062 "gram.c"
     break;
 
   case 520: /* TableLikeOption: STORAGE  */
 #line 4045 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
-#line 33108 "gram.c"
+#line 33068 "gram.c"
     break;
 
   case 521: /* TableLikeOption: ALL  */
 #line 4046 "gram.y"
                                                                 { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
-#line 33114 "gram.c"
+#line 33074 "gram.c"
     break;
 
   case 522: /* TableConstraint: CONSTRAINT name ConstraintElem  */
@@ -33122,13 +33082,13 @@
 					n->location = (yylsp[-2]);
 					(yyval.node) = (Node *) n;
 				}
-#line 33126 "gram.c"
+#line 33086 "gram.c"
     break;
 
   case 523: /* TableConstraint: ConstraintElem  */
 #line 4063 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 33132 "gram.c"
+#line 33092 "gram.c"
     break;
 
   case 524: /* ConstraintElem: CHECK '(' a_expr ')' ConstraintAttributeSpec  */
@@ -33146,7 +33106,7 @@
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *) n;
 				}
-#line 33150 "gram.c"
+#line 33110 "gram.c"
     break;
 
   case 525: /* ConstraintElem: UNIQUE opt_unique_null_treatment '(' columnList ')' opt_c_include opt_definition OptConsTableSpace ConstraintAttributeSpec  */
@@ -33167,7 +33127,7 @@
 								   NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 33171 "gram.c"
+#line 33131 "gram.c"
     break;
 
   case 526: /* ConstraintElem: UNIQUE ExistingIndex ConstraintAttributeSpec  */
@@ -33187,7 +33147,7 @@
 								   NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 33191 "gram.c"
+#line 33151 "gram.c"
     break;
 
   case 527: /* ConstraintElem: PRIMARY KEY '(' columnList ')' opt_c_include opt_definition OptConsTableSpace ConstraintAttributeSpec  */
@@ -33207,7 +33167,7 @@
 								   NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 33211 "gram.c"
+#line 33171 "gram.c"
     break;
 
   case 528: /* ConstraintElem: PRIMARY KEY ExistingIndex ConstraintAttributeSpec  */
@@ -33227,7 +33187,7 @@
 								   NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 33231 "gram.c"
+#line 33191 "gram.c"
     break;
 
   case 529: /* ConstraintElem: EXCLUDE access_method_clause '(' ExclusionConstraintList ')' opt_c_include opt_definition OptConsTableSpace OptWhereClause ConstraintAttributeSpec  */
@@ -33249,7 +33209,7 @@
 								   NULL, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 33253 "gram.c"
+#line 33213 "gram.c"
     break;
 
   case 530: /* ConstraintElem: FOREIGN KEY '(' columnList ')' REFERENCES qualified_name opt_column_list key_match key_actions ConstraintAttributeSpec  */
@@ -33273,43 +33233,43 @@
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *) n;
 				}
-#line 33277 "gram.c"
+#line 33237 "gram.c"
     break;
 
   case 531: /* opt_no_inherit: NO INHERIT  */
 #line 4191 "gram.y"
                                                                                 {  (yyval.boolean) = true; }
-#line 33283 "gram.c"
+#line 33243 "gram.c"
     break;
 
   case 532: /* opt_no_inherit: %empty  */
 #line 4192 "gram.y"
                                                                                         {  (yyval.boolean) = false; }
-#line 33289 "gram.c"
+#line 33249 "gram.c"
     break;
 
   case 533: /* opt_column_list: '(' columnList ')'  */
 #line 4196 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 33295 "gram.c"
+#line 33255 "gram.c"
     break;
 
   case 534: /* opt_column_list: %empty  */
 #line 4197 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 33301 "gram.c"
+#line 33261 "gram.c"
     break;
 
   case 535: /* columnList: columnElem  */
 #line 4201 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 33307 "gram.c"
+#line 33267 "gram.c"
     break;
 
   case 536: /* columnList: columnList ',' columnElem  */
 #line 4202 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 33313 "gram.c"
+#line 33273 "gram.c"
     break;
 
   case 537: /* columnElem: ColId  */
@@ -33317,19 +33277,19 @@
                                 {
 					(yyval.node) = (Node *) makeString((yyvsp[0].str));
 				}
-#line 33321 "gram.c"
+#line 33281 "gram.c"
     break;
 
   case 538: /* opt_c_include: INCLUDE '(' columnList ')'  */
 #line 4211 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 33327 "gram.c"
+#line 33287 "gram.c"
     break;
 
   case 539: /* opt_c_include: %empty  */
 #line 4212 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 33333 "gram.c"
+#line 33293 "gram.c"
     break;
 
   case 540: /* key_match: MATCH FULL  */
@@ -33337,7 +33297,7 @@
                         {
 				(yyval.ival) = FKCONSTR_MATCH_FULL;
 			}
-#line 33341 "gram.c"
+#line 33301 "gram.c"
     break;
 
   case 541: /* key_match: MATCH PARTIAL  */
@@ -33349,7 +33309,7 @@
 						 parser_errposition((yylsp[-1]))));
 				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
 			}
-#line 33353 "gram.c"
+#line 33313 "gram.c"
     break;
 
   case 542: /* key_match: MATCH SIMPLE  */
@@ -33357,7 +33317,7 @@
                         {
 				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
 			}
-#line 33361 "gram.c"
+#line 33321 "gram.c"
     break;
 
   case 543: /* key_match: %empty  */
@@ -33365,19 +33325,19 @@
                         {
 				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
 			}
-#line 33369 "gram.c"
+#line 33329 "gram.c"
     break;
 
   case 544: /* ExclusionConstraintList: ExclusionConstraintElem  */
 #line 4238 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].list)); }
-#line 33375 "gram.c"
+#line 33335 "gram.c"
     break;
 
   case 545: /* ExclusionConstraintList: ExclusionConstraintList ',' ExclusionConstraintElem  */
 #line 4240 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
-#line 33381 "gram.c"
+#line 33341 "gram.c"
     break;
 
   case 546: /* ExclusionConstraintElem: index_elem WITH any_operator  */
@@ -33385,7 +33345,7 @@
                         {
 				(yyval.list) = list_make2((yyvsp[-2].ielem), (yyvsp[0].list));
 			}
-#line 33389 "gram.c"
+#line 33349 "gram.c"
     break;
 
   case 547: /* ExclusionConstraintElem: index_elem WITH OPERATOR '(' any_operator ')'  */
@@ -33393,19 +33353,19 @@
                         {
 				(yyval.list) = list_make2((yyvsp[-5].ielem), (yyvsp[-1].list));
 			}
-#line 33397 "gram.c"
+#line 33357 "gram.c"
     break;
 
   case 548: /* OptWhereClause: WHERE '(' a_expr ')'  */
 #line 4255 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 33403 "gram.c"
+#line 33363 "gram.c"
     break;
 
   case 549: /* OptWhereClause: %empty  */
 #line 4256 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 33409 "gram.c"
+#line 33369 "gram.c"
     break;
 
   case 550: /* key_actions: key_update  */
@@ -33419,7 +33379,7 @@
 					n->deleteAction->cols = NIL;
 					(yyval.keyactions) = n;
 				}
-#line 33423 "gram.c"
+#line 33383 "gram.c"
     break;
 
   case 551: /* key_actions: key_delete  */
@@ -33433,7 +33393,7 @@
 					n->deleteAction = (yyvsp[0].keyaction);
 					(yyval.keyactions) = n;
 				}
-#line 33437 "gram.c"
+#line 33397 "gram.c"
     break;
 
   case 552: /* key_actions: key_update key_delete  */
@@ -33445,7 +33405,7 @@
 					n->deleteAction = (yyvsp[0].keyaction);
 					(yyval.keyactions) = n;
 				}
-#line 33449 "gram.c"
+#line 33409 "gram.c"
     break;
 
   case 553: /* key_actions: key_delete key_update  */
@@ -33457,7 +33417,7 @@
 					n->deleteAction = (yyvsp[-1].keyaction);
 					(yyval.keyactions) = n;
 				}
-#line 33461 "gram.c"
+#line 33421 "gram.c"
     break;
 
   case 554: /* key_actions: %empty  */
@@ -33473,7 +33433,7 @@
 					n->deleteAction->cols = NIL;
 					(yyval.keyactions) = n;
 				}
-#line 33477 "gram.c"
+#line 33437 "gram.c"
     break;
 
   case 555: /* key_update: ON UPDATE key_action  */
@@ -33487,7 +33447,7 @@
 								 parser_errposition((yylsp[-2]))));
 					(yyval.keyaction) = (yyvsp[0].keyaction);
 				}
-#line 33491 "gram.c"
+#line 33451 "gram.c"
     break;
 
   case 556: /* key_delete: ON DELETE_P key_action  */
@@ -33495,7 +33455,7 @@
                                 {
 					(yyval.keyaction) = (yyvsp[0].keyaction);
 				}
-#line 33499 "gram.c"
+#line 33459 "gram.c"
     break;
 
   case 557: /* key_action: NO ACTION  */
@@ -33507,7 +33467,7 @@
 					n->cols = NIL;
 					(yyval.keyaction) = n;
 				}
-#line 33511 "gram.c"
+#line 33471 "gram.c"
     break;
 
   case 558: /* key_action: RESTRICT  */
@@ -33519,7 +33479,7 @@
 					n->cols = NIL;
 					(yyval.keyaction) = n;
 				}
-#line 33523 "gram.c"
+#line 33483 "gram.c"
     break;
 
   case 559: /* key_action: CASCADE  */
@@ -33531,7 +33491,7 @@
 					n->cols = NIL;
 					(yyval.keyaction) = n;
 				}
-#line 33535 "gram.c"
+#line 33495 "gram.c"
     break;
 
   case 560: /* key_action: SET NULL_P opt_column_list  */
@@ -33543,7 +33503,7 @@
 					n->cols = (yyvsp[0].list);
 					(yyval.keyaction) = n;
 				}
-#line 33547 "gram.c"
+#line 33507 "gram.c"
     break;
 
   case 561: /* key_action: SET DEFAULT opt_column_list  */
@@ -33555,31 +33515,31 @@
 					n->cols = (yyvsp[0].list);
 					(yyval.keyaction) = n;
 				}
-#line 33559 "gram.c"
+#line 33519 "gram.c"
     break;
 
   case 562: /* OptInherit: INHERITS '(' qualified_name_list ')'  */
 #line 4371 "gram.y"
                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 33565 "gram.c"
+#line 33525 "gram.c"
     break;
 
   case 563: /* OptInherit: %empty  */
 #line 4372 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 33571 "gram.c"
+#line 33531 "gram.c"
     break;
 
   case 564: /* OptPartitionSpec: PartitionSpec  */
 #line 4376 "gram.y"
                                 { (yyval.partspec) = (yyvsp[0].partspec); }
-#line 33577 "gram.c"
+#line 33537 "gram.c"
     break;
 
   case 565: /* OptPartitionSpec: %empty  */
 #line 4377 "gram.y"
                                                         { (yyval.partspec) = NULL; }
-#line 33583 "gram.c"
+#line 33543 "gram.c"
     break;
 
   case 566: /* PartitionSpec: PARTITION BY ColId '(' part_params ')'  */
@@ -33593,19 +33553,19 @@
 
 					(yyval.partspec) = n;
 				}
-#line 33597 "gram.c"
+#line 33557 "gram.c"
     break;
 
   case 567: /* part_params: part_elem  */
 #line 4392 "gram.y"
                                                                         { (yyval.list) = list_make1((yyvsp[0].partelem)); }
-#line 33603 "gram.c"
+#line 33563 "gram.c"
     break;
 
   case 568: /* part_params: part_params ',' part_elem  */
 #line 4393 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].partelem)); }
-#line 33609 "gram.c"
+#line 33569 "gram.c"
     break;
 
   case 569: /* part_elem: ColId opt_collate opt_qualified_name  */
@@ -33620,7 +33580,7 @@
 					n->location = (yylsp[-2]);
 					(yyval.partelem) = n;
 				}
-#line 33624 "gram.c"
+#line 33584 "gram.c"
     break;
 
   case 570: /* part_elem: func_expr_windowless opt_collate opt_qualified_name  */
@@ -33635,7 +33595,7 @@
 					n->location = (yylsp[-2]);
 					(yyval.partelem) = n;
 				}
-#line 33639 "gram.c"
+#line 33599 "gram.c"
     break;
 
   case 571: /* part_elem: '(' a_expr ')' opt_collate opt_qualified_name  */
@@ -33650,91 +33610,91 @@
 					n->location = (yylsp[-4]);
 					(yyval.partelem) = n;
 				}
-#line 33654 "gram.c"
+#line 33614 "gram.c"
     break;
 
   case 572: /* table_access_method_clause: USING name  */
 #line 4432 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 33660 "gram.c"
+#line 33620 "gram.c"
     break;
 
   case 573: /* table_access_method_clause: %empty  */
 #line 4433 "gram.y"
                                                                                         { (yyval.str) = NULL; }
-#line 33666 "gram.c"
+#line 33626 "gram.c"
     break;
 
   case 574: /* OptWith: WITH reloptions  */
 #line 4438 "gram.y"
                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 33672 "gram.c"
+#line 33632 "gram.c"
     break;
 
   case 575: /* OptWith: WITHOUT OIDS  */
 #line 4439 "gram.y"
                                                                 { (yyval.list) = NIL; }
-#line 33678 "gram.c"
+#line 33638 "gram.c"
     break;
 
   case 576: /* OptWith: %empty  */
 #line 4440 "gram.y"
                                                                         { (yyval.list) = NIL; }
-#line 33684 "gram.c"
+#line 33644 "gram.c"
     break;
 
   case 577: /* OnCommitOption: ON COMMIT DROP  */
 #line 4443 "gram.y"
                                                         { (yyval.oncommit) = ONCOMMIT_DROP; }
-#line 33690 "gram.c"
+#line 33650 "gram.c"
     break;
 
   case 578: /* OnCommitOption: ON COMMIT DELETE_P ROWS  */
 #line 4444 "gram.y"
                                                                 { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
-#line 33696 "gram.c"
+#line 33656 "gram.c"
     break;
 
   case 579: /* OnCommitOption: ON COMMIT PRESERVE ROWS  */
 #line 4445 "gram.y"
                                                                 { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
-#line 33702 "gram.c"
+#line 33662 "gram.c"
     break;
 
   case 580: /* OnCommitOption: %empty  */
 #line 4446 "gram.y"
                                                                                 { (yyval.oncommit) = ONCOMMIT_NOOP; }
-#line 33708 "gram.c"
+#line 33668 "gram.c"
     break;
 
   case 581: /* OptTableSpace: TABLESPACE name  */
 #line 4449 "gram.y"
                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 33714 "gram.c"
+#line 33674 "gram.c"
     break;
 
   case 582: /* OptTableSpace: %empty  */
 #line 4450 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 33720 "gram.c"
+#line 33680 "gram.c"
     break;
 
   case 583: /* OptConsTableSpace: USING INDEX TABLESPACE name  */
 #line 4453 "gram.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 33726 "gram.c"
+#line 33686 "gram.c"
     break;
 
   case 584: /* OptConsTableSpace: %empty  */
 #line 4454 "gram.y"
                                                                                                 { (yyval.str) = NULL; }
-#line 33732 "gram.c"
+#line 33692 "gram.c"
     break;
 
   case 585: /* ExistingIndex: USING INDEX name  */
 #line 4457 "gram.y"
                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 33738 "gram.c"
+#line 33698 "gram.c"
     break;
 
   case 586: /* CreateStatsStmt: CREATE STATISTICS opt_qualified_name opt_name_list ON stats_params FROM from_list  */
@@ -33750,7 +33710,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 33754 "gram.c"
+#line 33714 "gram.c"
     break;
 
   case 587: /* CreateStatsStmt: CREATE STATISTICS IF_P NOT EXISTS any_name opt_name_list ON stats_params FROM from_list  */
@@ -33766,19 +33726,19 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 33770 "gram.c"
+#line 33730 "gram.c"
     break;
 
   case 588: /* stats_params: stats_param  */
 #line 4512 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].selem)); }
-#line 33776 "gram.c"
+#line 33736 "gram.c"
     break;
 
   case 589: /* stats_params: stats_params ',' stats_param  */
 #line 4513 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].selem)); }
-#line 33782 "gram.c"
+#line 33742 "gram.c"
     break;
 
   case 590: /* stats_param: ColId  */
@@ -33788,7 +33748,7 @@
 					(yyval.selem)->name = (yyvsp[0].str);
 					(yyval.selem)->expr = NULL;
 				}
-#line 33792 "gram.c"
+#line 33752 "gram.c"
     break;
 
   case 591: /* stats_param: func_expr_windowless  */
@@ -33798,7 +33758,7 @@
 					(yyval.selem)->name = NULL;
 					(yyval.selem)->expr = (yyvsp[0].node);
 				}
-#line 33802 "gram.c"
+#line 33762 "gram.c"
     break;
 
   case 592: /* stats_param: '(' a_expr ')'  */
@@ -33808,7 +33768,7 @@
 					(yyval.selem)->name = NULL;
 					(yyval.selem)->expr = (yyvsp[-1].node);
 				}
-#line 33812 "gram.c"
+#line 33772 "gram.c"
     break;
 
   case 593: /* AlterStatsStmt: ALTER STATISTICS any_name SET STATISTICS SignedIconst  */
@@ -33821,7 +33781,7 @@
 					n->stxstattarget = (yyvsp[0].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 33825 "gram.c"
+#line 33785 "gram.c"
     break;
 
   case 594: /* AlterStatsStmt: ALTER STATISTICS IF_P EXISTS any_name SET STATISTICS SignedIconst  */
@@ -33834,7 +33794,7 @@
 					n->stxstattarget = (yyvsp[0].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 33838 "gram.c"
+#line 33798 "gram.c"
     break;
 
   case 595: /* CreateAsStmt: CREATE OptTemp TABLE create_as_target AS SelectStmt opt_with_data  */
@@ -33852,7 +33812,7 @@
 					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 33856 "gram.c"
+#line 33816 "gram.c"
     break;
 
   case 596: /* CreateAsStmt: CREATE OptTemp TABLE IF_P NOT EXISTS create_as_target AS SelectStmt opt_with_data  */
@@ -33870,7 +33830,7 @@
 					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 33874 "gram.c"
+#line 33834 "gram.c"
     break;
 
   case 597: /* create_as_target: qualified_name opt_column_list table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -33886,25 +33846,25 @@
 					(yyval.into)->viewQuery = NULL;
 					(yyval.into)->skipData = false;		/* might get changed later */
 				}
-#line 33890 "gram.c"
+#line 33850 "gram.c"
     break;
 
   case 598: /* opt_with_data: WITH DATA_P  */
 #line 4623 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 33896 "gram.c"
+#line 33856 "gram.c"
     break;
 
   case 599: /* opt_with_data: WITH NO DATA_P  */
 #line 4624 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 33902 "gram.c"
+#line 33862 "gram.c"
     break;
 
   case 600: /* opt_with_data: %empty  */
 #line 4625 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 33908 "gram.c"
+#line 33868 "gram.c"
     break;
 
   case 601: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW create_mv_target AS SelectStmt opt_with_data  */
@@ -33922,7 +33882,7 @@
 					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 33926 "gram.c"
+#line 33886 "gram.c"
     break;
 
   case 602: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW IF_P NOT EXISTS create_mv_target AS SelectStmt opt_with_data  */
@@ -33940,7 +33900,7 @@
 					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 33944 "gram.c"
+#line 33904 "gram.c"
     break;
 
   case 603: /* create_mv_target: qualified_name opt_column_list table_access_method_clause opt_reloptions OptTableSpace  */
@@ -33956,19 +33916,19 @@
 					(yyval.into)->viewQuery = NULL;		/* filled at analysis time */
 					(yyval.into)->skipData = false;		/* might get changed later */
 				}
-#line 33960 "gram.c"
+#line 33920 "gram.c"
     break;
 
   case 604: /* OptNoLog: UNLOGGED  */
 #line 4682 "gram.y"
                                                                 { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
-#line 33966 "gram.c"
+#line 33926 "gram.c"
     break;
 
   case 605: /* OptNoLog: %empty  */
 #line 4683 "gram.y"
                                                                         { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
-#line 33972 "gram.c"
+#line 33932 "gram.c"
     break;
 
   case 606: /* RefreshMatViewStmt: REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data  */
@@ -33981,7 +33941,7 @@
 					n->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) n;
 				}
-#line 33985 "gram.c"
+#line 33945 "gram.c"
     break;
 
   case 607: /* CreateSeqStmt: CREATE OptTemp SEQUENCE qualified_name OptSeqOptList  */
@@ -33996,7 +33956,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 34000 "gram.c"
+#line 33960 "gram.c"
     break;
 
   case 608: /* CreateSeqStmt: CREATE OptTemp SEQUENCE IF_P NOT EXISTS qualified_name OptSeqOptList  */
@@ -34011,7 +33971,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34015 "gram.c"
+#line 33975 "gram.c"
     break;
 
   case 609: /* AlterSeqStmt: ALTER SEQUENCE qualified_name SeqOptList  */
@@ -34024,7 +33984,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 34028 "gram.c"
+#line 33988 "gram.c"
     break;
 
   case 610: /* AlterSeqStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SeqOptList  */
@@ -34037,43 +33997,43 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34041 "gram.c"
+#line 34001 "gram.c"
     break;
 
   case 611: /* OptSeqOptList: SeqOptList  */
 #line 4762 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 34047 "gram.c"
+#line 34007 "gram.c"
     break;
 
   case 612: /* OptSeqOptList: %empty  */
 #line 4763 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 34053 "gram.c"
+#line 34013 "gram.c"
     break;
 
   case 613: /* OptParenthesizedSeqOptList: '(' SeqOptList ')'  */
 #line 4766 "gram.y"
                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 34059 "gram.c"
+#line 34019 "gram.c"
     break;
 
   case 614: /* OptParenthesizedSeqOptList: %empty  */
 #line 4767 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 34065 "gram.c"
+#line 34025 "gram.c"
     break;
 
   case 615: /* SeqOptList: SeqOptElem  */
 #line 4770 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 34071 "gram.c"
+#line 34031 "gram.c"
     break;
 
   case 616: /* SeqOptList: SeqOptList SeqOptElem  */
 #line 4771 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 34077 "gram.c"
+#line 34037 "gram.c"
     break;
 
   case 617: /* SeqOptElem: AS SimpleTypename  */
@@ -34081,7 +34041,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("as", (Node *) (yyvsp[0].typnam), (yylsp[-1]));
 				}
-#line 34085 "gram.c"
+#line 34045 "gram.c"
     break;
 
   case 618: /* SeqOptElem: CACHE NumericOnly  */
@@ -34089,7 +34049,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("cache", (Node *) (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 34093 "gram.c"
+#line 34053 "gram.c"
     break;
 
   case 619: /* SeqOptElem: CYCLE  */
@@ -34097,7 +34057,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("cycle", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 34101 "gram.c"
+#line 34061 "gram.c"
     break;
 
   case 620: /* SeqOptElem: NO CYCLE  */
@@ -34105,7 +34065,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("cycle", (Node *) makeBoolean(false), (yylsp[-1]));
 				}
-#line 34109 "gram.c"
+#line 34069 "gram.c"
     break;
 
   case 621: /* SeqOptElem: INCREMENT opt_by NumericOnly  */
@@ -34113,7 +34073,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("increment", (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 34117 "gram.c"
+#line 34077 "gram.c"
     break;
 
   case 622: /* SeqOptElem: MAXVALUE NumericOnly  */
@@ -34121,7 +34081,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("maxvalue", (Node *) (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 34125 "gram.c"
+#line 34085 "gram.c"
     break;
 
   case 623: /* SeqOptElem: MINVALUE NumericOnly  */
@@ -34129,7 +34089,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("minvalue", (Node *) (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 34133 "gram.c"
+#line 34093 "gram.c"
     break;
 
   case 624: /* SeqOptElem: NO MAXVALUE  */
@@ -34137,7 +34097,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[-1]));
 				}
-#line 34141 "gram.c"
+#line 34101 "gram.c"
     break;
 
   case 625: /* SeqOptElem: NO MINVALUE  */
@@ -34145,7 +34105,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[-1]));
 				}
-#line 34149 "gram.c"
+#line 34109 "gram.c"
     break;
 
   case 626: /* SeqOptElem: OWNED BY any_name  */
@@ -34153,7 +34113,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("owned_by", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 34157 "gram.c"
+#line 34117 "gram.c"
     break;
 
   case 627: /* SeqOptElem: SEQUENCE NAME_P any_name  */
@@ -34162,7 +34122,7 @@
 					/* not documented, only used by pg_dump */
 					(yyval.defelt) = makeDefElem("sequence_name", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 34166 "gram.c"
+#line 34126 "gram.c"
     break;
 
   case 628: /* SeqOptElem: START opt_with NumericOnly  */
@@ -34170,7 +34130,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("start", (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 34174 "gram.c"
+#line 34134 "gram.c"
     break;
 
   case 629: /* SeqOptElem: RESTART  */
@@ -34178,7 +34138,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[0]));
 				}
-#line 34182 "gram.c"
+#line 34142 "gram.c"
     break;
 
   case 630: /* SeqOptElem: RESTART opt_with NumericOnly  */
@@ -34186,19 +34146,19 @@
                                 {
 					(yyval.defelt) = makeDefElem("restart", (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 34190 "gram.c"
+#line 34150 "gram.c"
     break;
 
   case 633: /* NumericOnly: FCONST  */
 #line 4838 "gram.y"
                                                                                         { (yyval.node) = (Node *) makeFloat((yyvsp[0].str)); }
-#line 34196 "gram.c"
+#line 34156 "gram.c"
     break;
 
   case 634: /* NumericOnly: '+' FCONST  */
 #line 4839 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeFloat((yyvsp[0].str)); }
-#line 34202 "gram.c"
+#line 34162 "gram.c"
     break;
 
   case 635: /* NumericOnly: '-' FCONST  */
@@ -34209,25 +34169,25 @@
 					doNegateFloat(f);
 					(yyval.node) = (Node *) f;
 				}
-#line 34213 "gram.c"
+#line 34173 "gram.c"
     break;
 
   case 636: /* NumericOnly: SignedIconst  */
 #line 4847 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeInteger((yyvsp[0].ival)); }
-#line 34219 "gram.c"
+#line 34179 "gram.c"
     break;
 
   case 637: /* NumericOnly_list: NumericOnly  */
 #line 4850 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 34225 "gram.c"
+#line 34185 "gram.c"
     break;
 
   case 638: /* NumericOnly_list: NumericOnly_list ',' NumericOnly  */
 #line 4851 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 34231 "gram.c"
+#line 34191 "gram.c"
     break;
 
   case 639: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE name  */
@@ -34247,7 +34207,7 @@
 				n->options = NIL;
 				(yyval.node) = (Node *) n;
 			}
-#line 34251 "gram.c"
+#line 34211 "gram.c"
     break;
 
   case 640: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE name HANDLER handler_name opt_inline_handler opt_validator  */
@@ -34263,67 +34223,67 @@
 				n->pltrusted = (yyvsp[-7].boolean);
 				(yyval.node) = (Node *) n;
 			}
-#line 34267 "gram.c"
+#line 34227 "gram.c"
     break;
 
   case 641: /* opt_trusted: TRUSTED  */
 #line 4895 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 34273 "gram.c"
+#line 34233 "gram.c"
     break;
 
   case 642: /* opt_trusted: %empty  */
 #line 4896 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 34279 "gram.c"
+#line 34239 "gram.c"
     break;
 
   case 643: /* handler_name: name  */
 #line 4904 "gram.y"
                                                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 34285 "gram.c"
+#line 34245 "gram.c"
     break;
 
   case 644: /* handler_name: name attrs  */
 #line 4905 "gram.y"
                                                                 { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
-#line 34291 "gram.c"
+#line 34251 "gram.c"
     break;
 
   case 645: /* opt_inline_handler: INLINE_P handler_name  */
 #line 4909 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 34297 "gram.c"
+#line 34257 "gram.c"
     break;
 
   case 646: /* opt_inline_handler: %empty  */
 #line 4910 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 34303 "gram.c"
+#line 34263 "gram.c"
     break;
 
   case 647: /* validator_clause: VALIDATOR handler_name  */
 #line 4914 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 34309 "gram.c"
+#line 34269 "gram.c"
     break;
 
   case 648: /* validator_clause: NO VALIDATOR  */
 #line 4915 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 34315 "gram.c"
+#line 34275 "gram.c"
     break;
 
   case 649: /* opt_validator: validator_clause  */
 #line 4919 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 34321 "gram.c"
+#line 34281 "gram.c"
     break;
 
   case 650: /* opt_validator: %empty  */
 #line 4920 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 34327 "gram.c"
+#line 34287 "gram.c"
     break;
 
   case 653: /* CreateTableSpaceStmt: CREATE TABLESPACE name OptTableSpaceOwner LOCATION Sconst opt_reloptions  */
@@ -34337,19 +34297,19 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34341 "gram.c"
+#line 34301 "gram.c"
     break;
 
   case 654: /* OptTableSpaceOwner: OWNER RoleSpec  */
 #line 4947 "gram.y"
                                                 { (yyval.rolespec) = (yyvsp[0].rolespec); }
-#line 34347 "gram.c"
+#line 34307 "gram.c"
     break;
 
   case 655: /* OptTableSpaceOwner: %empty  */
 #line 4948 "gram.y"
                                                                 { (yyval.rolespec) = NULL; }
-#line 34353 "gram.c"
+#line 34313 "gram.c"
     break;
 
   case 656: /* DropTableSpaceStmt: DROP TABLESPACE name  */
@@ -34361,7 +34321,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 34365 "gram.c"
+#line 34325 "gram.c"
     break;
 
   case 657: /* DropTableSpaceStmt: DROP TABLESPACE IF_P EXISTS name  */
@@ -34373,7 +34333,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34377 "gram.c"
+#line 34337 "gram.c"
     break;
 
   case 658: /* CreateExtensionStmt: CREATE EXTENSION name opt_with create_extension_opt_list  */
@@ -34386,7 +34346,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34390 "gram.c"
+#line 34350 "gram.c"
     break;
 
   case 659: /* CreateExtensionStmt: CREATE EXTENSION IF_P NOT EXISTS name opt_with create_extension_opt_list  */
@@ -34399,19 +34359,19 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34403 "gram.c"
+#line 34363 "gram.c"
     break;
 
   case 660: /* create_extension_opt_list: create_extension_opt_list create_extension_opt_item  */
 #line 5009 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 34409 "gram.c"
+#line 34369 "gram.c"
     break;
 
   case 661: /* create_extension_opt_list: %empty  */
 #line 5011 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 34415 "gram.c"
+#line 34375 "gram.c"
     break;
 
   case 662: /* create_extension_opt_item: SCHEMA name  */
@@ -34419,7 +34379,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("schema", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 34423 "gram.c"
+#line 34383 "gram.c"
     break;
 
   case 663: /* create_extension_opt_item: VERSION_P NonReservedWord_or_Sconst  */
@@ -34427,7 +34387,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("new_version", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 34431 "gram.c"
+#line 34391 "gram.c"
     break;
 
   case 664: /* create_extension_opt_item: FROM NonReservedWord_or_Sconst  */
@@ -34438,7 +34398,7 @@
 							 errmsg("CREATE EXTENSION ... FROM is no longer supported"),
 							 parser_errposition((yylsp[-1]))));
 				}
-#line 34442 "gram.c"
+#line 34402 "gram.c"
     break;
 
   case 665: /* create_extension_opt_item: CASCADE  */
@@ -34446,7 +34406,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("cascade", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 34450 "gram.c"
+#line 34410 "gram.c"
     break;
 
   case 666: /* AlterExtensionStmt: ALTER EXTENSION name UPDATE alter_extension_opt_list  */
@@ -34458,19 +34418,19 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34462 "gram.c"
+#line 34422 "gram.c"
     break;
 
   case 667: /* alter_extension_opt_list: alter_extension_opt_list alter_extension_opt_item  */
 #line 5054 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 34468 "gram.c"
+#line 34428 "gram.c"
     break;
 
   case 668: /* alter_extension_opt_list: %empty  */
 #line 5056 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 34474 "gram.c"
+#line 34434 "gram.c"
     break;
 
   case 669: /* alter_extension_opt_item: TO NonReservedWord_or_Sconst  */
@@ -34478,7 +34438,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("new_version", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 34482 "gram.c"
+#line 34442 "gram.c"
     break;
 
   case 670: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop object_type_name name  */
@@ -34492,7 +34452,7 @@
 					n->object = (Node *) makeString((yyvsp[0].str));
 					(yyval.node) = (Node *) n;
 				}
-#line 34496 "gram.c"
+#line 34456 "gram.c"
     break;
 
   case 671: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop object_type_any_name any_name  */
@@ -34506,7 +34466,7 @@
 					n->object = (Node *) (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34510 "gram.c"
+#line 34470 "gram.c"
     break;
 
   case 672: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop AGGREGATE aggregate_with_argtypes  */
@@ -34520,7 +34480,7 @@
 					n->object = (Node *) (yyvsp[0].objwithargs);
 					(yyval.node) = (Node *) n;
 				}
-#line 34524 "gram.c"
+#line 34484 "gram.c"
     break;
 
   case 673: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CAST '(' Typename AS Typename ')'  */
@@ -34534,7 +34494,7 @@
 					n->object = (Node *) list_make2((yyvsp[-3].typnam), (yyvsp[-1].typnam));
 					(yyval.node) = (Node *) n;
 				}
-#line 34538 "gram.c"
+#line 34498 "gram.c"
     break;
 
   case 674: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop DOMAIN_P Typename  */
@@ -34548,7 +34508,7 @@
 					n->object = (Node *) (yyvsp[0].typnam);
 					(yyval.node) = (Node *) n;
 				}
-#line 34552 "gram.c"
+#line 34512 "gram.c"
     break;
 
   case 675: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FUNCTION function_with_argtypes  */
@@ -34562,7 +34522,7 @@
 					n->object = (Node *) (yyvsp[0].objwithargs);
 					(yyval.node) = (Node *) n;
 				}
-#line 34566 "gram.c"
+#line 34526 "gram.c"
     break;
 
   case 676: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR operator_with_argtypes  */
@@ -34576,7 +34536,7 @@
 					n->object = (Node *) (yyvsp[0].objwithargs);
 					(yyval.node) = (Node *) n;
 				}
-#line 34580 "gram.c"
+#line 34540 "gram.c"
     break;
 
   case 677: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING name  */
@@ -34590,7 +34550,7 @@
 					n->object = (Node *) lcons(makeString((yyvsp[0].str)), (yyvsp[-2].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 34594 "gram.c"
+#line 34554 "gram.c"
     break;
 
   case 678: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING name  */
@@ -34604,7 +34564,7 @@
 					n->object = (Node *) lcons(makeString((yyvsp[0].str)), (yyvsp[-2].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 34608 "gram.c"
+#line 34568 "gram.c"
     break;
 
   case 679: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop PROCEDURE function_with_argtypes  */
@@ -34618,7 +34578,7 @@
 					n->object = (Node *) (yyvsp[0].objwithargs);
 					(yyval.node) = (Node *) n;
 				}
-#line 34622 "gram.c"
+#line 34582 "gram.c"
     break;
 
   case 680: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop ROUTINE function_with_argtypes  */
@@ -34632,7 +34592,7 @@
 					n->object = (Node *) (yyvsp[0].objwithargs);
 					(yyval.node) = (Node *) n;
 				}
-#line 34636 "gram.c"
+#line 34596 "gram.c"
     break;
 
   case 681: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TRANSFORM FOR Typename LANGUAGE name  */
@@ -34646,7 +34606,7 @@
 					n->object = (Node *) list_make2((yyvsp[-2].typnam), makeString((yyvsp[0].str)));
 					(yyval.node) = (Node *) n;
 				}
-#line 34650 "gram.c"
+#line 34610 "gram.c"
     break;
 
   case 682: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TYPE_P Typename  */
@@ -34660,7 +34620,7 @@
 					n->object = (Node *) (yyvsp[0].typnam);
 					(yyval.node) = (Node *) n;
 				}
-#line 34664 "gram.c"
+#line 34624 "gram.c"
     break;
 
   case 683: /* CreateFdwStmt: CREATE FOREIGN DATA_P WRAPPER name opt_fdw_options create_generic_options  */
@@ -34673,55 +34633,55 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34677 "gram.c"
+#line 34637 "gram.c"
     break;
 
   case 684: /* fdw_option: HANDLER handler_name  */
 #line 5224 "gram.y"
                                                                         { (yyval.defelt) = makeDefElem("handler", (Node *) (yyvsp[0].list), (yylsp[-1])); }
-#line 34683 "gram.c"
+#line 34643 "gram.c"
     break;
 
   case 685: /* fdw_option: NO HANDLER  */
 #line 5225 "gram.y"
                                                                                 { (yyval.defelt) = makeDefElem("handler", NULL, (yylsp[-1])); }
-#line 34689 "gram.c"
+#line 34649 "gram.c"
     break;
 
   case 686: /* fdw_option: VALIDATOR handler_name  */
 #line 5226 "gram.y"
                                                                         { (yyval.defelt) = makeDefElem("validator", (Node *) (yyvsp[0].list), (yylsp[-1])); }
-#line 34695 "gram.c"
+#line 34655 "gram.c"
     break;
 
   case 687: /* fdw_option: NO VALIDATOR  */
 #line 5227 "gram.y"
                                                                                 { (yyval.defelt) = makeDefElem("validator", NULL, (yylsp[-1])); }
-#line 34701 "gram.c"
+#line 34661 "gram.c"
     break;
 
   case 688: /* fdw_options: fdw_option  */
 #line 5231 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 34707 "gram.c"
+#line 34667 "gram.c"
     break;
 
   case 689: /* fdw_options: fdw_options fdw_option  */
 #line 5232 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 34713 "gram.c"
+#line 34673 "gram.c"
     break;
 
   case 690: /* opt_fdw_options: fdw_options  */
 #line 5236 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 34719 "gram.c"
+#line 34679 "gram.c"
     break;
 
   case 691: /* opt_fdw_options: %empty  */
 #line 5237 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 34725 "gram.c"
+#line 34685 "gram.c"
     break;
 
   case 692: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name opt_fdw_options alter_generic_options  */
@@ -34734,7 +34694,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34738 "gram.c"
+#line 34698 "gram.c"
     break;
 
   case 693: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name fdw_options  */
@@ -34747,19 +34707,19 @@
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
 				}
-#line 34751 "gram.c"
+#line 34711 "gram.c"
     break;
 
   case 694: /* create_generic_options: OPTIONS '(' generic_option_list ')'  */
 #line 5269 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 34757 "gram.c"
+#line 34717 "gram.c"
     break;
 
   case 695: /* create_generic_options: %empty  */
 #line 5270 "gram.y"
                                                                                                         { (yyval.list) = NIL; }
-#line 34763 "gram.c"
+#line 34723 "gram.c"
     break;
 
   case 696: /* generic_option_list: generic_option_elem  */
@@ -34767,7 +34727,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].defelt));
 				}
-#line 34771 "gram.c"
+#line 34731 "gram.c"
     break;
 
   case 697: /* generic_option_list: generic_option_list ',' generic_option_elem  */
@@ -34775,13 +34735,13 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
 				}
-#line 34779 "gram.c"
+#line 34739 "gram.c"
     break;
 
   case 698: /* alter_generic_options: OPTIONS '(' alter_generic_option_list ')'  */
 #line 5286 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 34785 "gram.c"
+#line 34745 "gram.c"
     break;
 
   case 699: /* alter_generic_option_list: alter_generic_option_elem  */
@@ -34789,7 +34749,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].defelt));
 				}
-#line 34793 "gram.c"
+#line 34753 "gram.c"
     break;
 
   case 700: /* alter_generic_option_list: alter_generic_option_list ',' alter_generic_option_elem  */
@@ -34797,7 +34757,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
 				}
-#line 34801 "gram.c"
+#line 34761 "gram.c"
     break;
 
   case 701: /* alter_generic_option_elem: generic_option_elem  */
@@ -34805,7 +34765,7 @@
                                 {
 					(yyval.defelt) = (yyvsp[0].defelt);
 				}
-#line 34809 "gram.c"
+#line 34769 "gram.c"
     break;
 
   case 702: /* alter_generic_option_elem: SET generic_option_elem  */
@@ -34814,7 +34774,7 @@
 					(yyval.defelt) = (yyvsp[0].defelt);
 					(yyval.defelt)->defaction = DEFELEM_SET;
 				}
-#line 34818 "gram.c"
+#line 34778 "gram.c"
     break;
 
   case 703: /* alter_generic_option_elem: ADD_P generic_option_elem  */
@@ -34823,7 +34783,7 @@
 					(yyval.defelt) = (yyvsp[0].defelt);
 					(yyval.defelt)->defaction = DEFELEM_ADD;
 				}
-#line 34827 "gram.c"
+#line 34787 "gram.c"
     break;
 
   case 704: /* alter_generic_option_elem: DROP generic_option_name  */
@@ -34831,7 +34791,7 @@
                                 {
 					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[0].str), NULL, DEFELEM_DROP, (yylsp[0]));
 				}
-#line 34835 "gram.c"
+#line 34795 "gram.c"
     break;
 
   case 705: /* generic_option_elem: generic_option_name generic_option_arg  */
@@ -34839,19 +34799,19 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 34843 "gram.c"
+#line 34803 "gram.c"
     break;
 
   case 706: /* generic_option_name: ColLabel  */
 #line 5329 "gram.y"
                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 34849 "gram.c"
+#line 34809 "gram.c"
     break;
 
   case 707: /* generic_option_arg: Sconst  */
 #line 5334 "gram.y"
                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 34855 "gram.c"
+#line 34815 "gram.c"
     break;
 
   case 708: /* CreateForeignServerStmt: CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
@@ -34867,7 +34827,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 34871 "gram.c"
+#line 34831 "gram.c"
     break;
 
   case 709: /* CreateForeignServerStmt: CREATE SERVER IF_P NOT EXISTS name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
@@ -34883,43 +34843,43 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34887 "gram.c"
+#line 34847 "gram.c"
     break;
 
   case 710: /* opt_type: TYPE_P Sconst  */
 #line 5373 "gram.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 34893 "gram.c"
+#line 34853 "gram.c"
     break;
 
   case 711: /* opt_type: %empty  */
 #line 5374 "gram.y"
                                                                 { (yyval.str) = NULL; }
-#line 34899 "gram.c"
+#line 34859 "gram.c"
     break;
 
   case 712: /* foreign_server_version: VERSION_P Sconst  */
 #line 5379 "gram.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 34905 "gram.c"
+#line 34865 "gram.c"
     break;
 
   case 713: /* foreign_server_version: VERSION_P NULL_P  */
 #line 5380 "gram.y"
                                                         { (yyval.str) = NULL; }
-#line 34911 "gram.c"
+#line 34871 "gram.c"
     break;
 
   case 714: /* opt_foreign_server_version: foreign_server_version  */
 #line 5384 "gram.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 34917 "gram.c"
+#line 34877 "gram.c"
     break;
 
   case 715: /* opt_foreign_server_version: %empty  */
 #line 5385 "gram.y"
                                                                 { (yyval.str) = NULL; }
-#line 34923 "gram.c"
+#line 34883 "gram.c"
     break;
 
   case 716: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version alter_generic_options  */
@@ -34933,7 +34893,7 @@
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34937 "gram.c"
+#line 34897 "gram.c"
     break;
 
   case 717: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version  */
@@ -34946,7 +34906,7 @@
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 34950 "gram.c"
+#line 34910 "gram.c"
     break;
 
   case 718: /* AlterForeignServerStmt: ALTER SERVER name alter_generic_options  */
@@ -34958,7 +34918,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34962 "gram.c"
+#line 34922 "gram.c"
     break;
 
   case 719: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name '(' OptTableElementList ')' OptInherit SERVER name create_generic_options  */
@@ -34981,7 +34941,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 34985 "gram.c"
+#line 34945 "gram.c"
     break;
 
   case 720: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit SERVER name create_generic_options  */
@@ -35004,7 +34964,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35008 "gram.c"
+#line 34968 "gram.c"
     break;
 
   case 721: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec SERVER name create_generic_options  */
@@ -35028,7 +34988,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35032 "gram.c"
+#line 34992 "gram.c"
     break;
 
   case 722: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec SERVER name create_generic_options  */
@@ -35052,7 +35012,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35056 "gram.c"
+#line 35016 "gram.c"
     break;
 
   case 723: /* ImportForeignSchemaStmt: IMPORT_P FOREIGN SCHEMA name import_qualification FROM SERVER name INTO name create_generic_options  */
@@ -35068,19 +35028,19 @@
 				n->options = (yyvsp[0].list);
 				(yyval.node) = (Node *) n;
 			}
-#line 35072 "gram.c"
+#line 35032 "gram.c"
     break;
 
   case 724: /* import_qualification_type: LIMIT TO  */
 #line 5546 "gram.y"
                                                         { (yyval.ival) = FDW_IMPORT_SCHEMA_LIMIT_TO; }
-#line 35078 "gram.c"
+#line 35038 "gram.c"
     break;
 
   case 725: /* import_qualification_type: EXCEPT  */
 #line 5547 "gram.y"
                                                         { (yyval.ival) = FDW_IMPORT_SCHEMA_EXCEPT; }
-#line 35084 "gram.c"
+#line 35044 "gram.c"
     break;
 
   case 726: /* import_qualification: import_qualification_type '(' relation_expr_list ')'  */
@@ -35092,7 +35052,7 @@
 				n->table_names = (yyvsp[-1].list);
 				(yyval.importqual) = n;
 			}
-#line 35096 "gram.c"
+#line 35056 "gram.c"
     break;
 
   case 727: /* import_qualification: %empty  */
@@ -35103,7 +35063,7 @@
 				n->table_names = NIL;
 				(yyval.importqual) = n;
 			}
-#line 35107 "gram.c"
+#line 35067 "gram.c"
     break;
 
   case 728: /* CreateUserMappingStmt: CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options  */
@@ -35117,7 +35077,7 @@
 					n->if_not_exists = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 35121 "gram.c"
+#line 35081 "gram.c"
     break;
 
   case 729: /* CreateUserMappingStmt: CREATE USER MAPPING IF_P NOT EXISTS FOR auth_ident SERVER name create_generic_options  */
@@ -35131,19 +35091,19 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 35135 "gram.c"
+#line 35095 "gram.c"
     break;
 
   case 730: /* auth_ident: RoleSpec  */
 #line 5598 "gram.y"
                                         { (yyval.rolespec) = (yyvsp[0].rolespec); }
-#line 35141 "gram.c"
+#line 35101 "gram.c"
     break;
 
   case 731: /* auth_ident: USER  */
 #line 5599 "gram.y"
                                                         { (yyval.rolespec) = makeRoleSpec(ROLESPEC_CURRENT_USER, (yylsp[0])); }
-#line 35147 "gram.c"
+#line 35107 "gram.c"
     break;
 
   case 732: /* DropUserMappingStmt: DROP USER MAPPING FOR auth_ident SERVER name  */
@@ -35156,7 +35116,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 35160 "gram.c"
+#line 35120 "gram.c"
     break;
 
   case 733: /* DropUserMappingStmt: DROP USER MAPPING IF_P EXISTS FOR auth_ident SERVER name  */
@@ -35169,7 +35129,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 35173 "gram.c"
+#line 35133 "gram.c"
     break;
 
   case 734: /* AlterUserMappingStmt: ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options  */
@@ -35182,7 +35142,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35186 "gram.c"
+#line 35146 "gram.c"
     break;
 
   case 735: /* CreatePolicyStmt: CREATE POLICY name ON qualified_name RowSecurityDefaultPermissive RowSecurityDefaultForCmd RowSecurityDefaultToRole RowSecurityOptionalExpr RowSecurityOptionalWithCheck  */
@@ -35199,7 +35159,7 @@
 					n->with_check = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 35203 "gram.c"
+#line 35163 "gram.c"
     break;
 
   case 736: /* AlterPolicyStmt: ALTER POLICY name ON qualified_name RowSecurityOptionalToRole RowSecurityOptionalExpr RowSecurityOptionalWithCheck  */
@@ -35214,55 +35174,55 @@
 					n->with_check = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 35218 "gram.c"
+#line 35178 "gram.c"
     break;
 
   case 737: /* RowSecurityOptionalExpr: USING '(' a_expr ')'  */
 #line 5696 "gram.y"
                                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 35224 "gram.c"
+#line 35184 "gram.c"
     break;
 
   case 738: /* RowSecurityOptionalExpr: %empty  */
 #line 5697 "gram.y"
                                                         { (yyval.node) = NULL; }
-#line 35230 "gram.c"
+#line 35190 "gram.c"
     break;
 
   case 739: /* RowSecurityOptionalWithCheck: WITH CHECK '(' a_expr ')'  */
 #line 5701 "gram.y"
                                                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 35236 "gram.c"
+#line 35196 "gram.c"
     break;
 
   case 740: /* RowSecurityOptionalWithCheck: %empty  */
 #line 5702 "gram.y"
                                                                         { (yyval.node) = NULL; }
-#line 35242 "gram.c"
+#line 35202 "gram.c"
     break;
 
   case 741: /* RowSecurityDefaultToRole: TO role_list  */
 #line 5706 "gram.y"
                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 35248 "gram.c"
+#line 35208 "gram.c"
     break;
 
   case 742: /* RowSecurityDefaultToRole: %empty  */
 #line 5707 "gram.y"
                                                         { (yyval.list) = list_make1(makeRoleSpec(ROLESPEC_PUBLIC, -1)); }
-#line 35254 "gram.c"
+#line 35214 "gram.c"
     break;
 
   case 743: /* RowSecurityOptionalToRole: TO role_list  */
 #line 5711 "gram.y"
                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 35260 "gram.c"
+#line 35220 "gram.c"
     break;
 
   case 744: /* RowSecurityOptionalToRole: %empty  */
 #line 5712 "gram.y"
                                                         { (yyval.list) = NULL; }
-#line 35266 "gram.c"
+#line 35226 "gram.c"
     break;
 
   case 745: /* RowSecurityDefaultPermissive: AS IDENT  */
@@ -35280,55 +35240,55 @@
 								 parser_errposition((yylsp[0]))));
 
 				}
-#line 35284 "gram.c"
+#line 35244 "gram.c"
     break;
 
   case 746: /* RowSecurityDefaultPermissive: %empty  */
 #line 5730 "gram.y"
                                                         { (yyval.boolean) = true; }
-#line 35290 "gram.c"
+#line 35250 "gram.c"
     break;
 
   case 747: /* RowSecurityDefaultForCmd: FOR row_security_cmd  */
 #line 5734 "gram.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 35296 "gram.c"
+#line 35256 "gram.c"
     break;
 
   case 748: /* RowSecurityDefaultForCmd: %empty  */
 #line 5735 "gram.y"
                                                         { (yyval.str) = "all"; }
-#line 35302 "gram.c"
+#line 35262 "gram.c"
     break;
 
   case 749: /* row_security_cmd: ALL  */
 #line 5739 "gram.y"
                                                         { (yyval.str) = "all"; }
-#line 35308 "gram.c"
+#line 35268 "gram.c"
     break;
 
   case 750: /* row_security_cmd: SELECT  */
 #line 5740 "gram.y"
                                                 { (yyval.str) = "select"; }
-#line 35314 "gram.c"
+#line 35274 "gram.c"
     break;
 
   case 751: /* row_security_cmd: INSERT  */
 #line 5741 "gram.y"
                                                 { (yyval.str) = "insert"; }
-#line 35320 "gram.c"
+#line 35280 "gram.c"
     break;
 
   case 752: /* row_security_cmd: UPDATE  */
 #line 5742 "gram.y"
                                                 { (yyval.str) = "update"; }
-#line 35326 "gram.c"
+#line 35286 "gram.c"
     break;
 
   case 753: /* row_security_cmd: DELETE_P  */
 #line 5743 "gram.y"
                                                 { (yyval.str) = "delete"; }
-#line 35332 "gram.c"
+#line 35292 "gram.c"
     break;
 
   case 754: /* CreateAmStmt: CREATE ACCESS METHOD name TYPE_P am_type HANDLER handler_name  */
@@ -35341,19 +35301,19 @@
 					n->amtype = (yyvsp[-2].chr);
 					(yyval.node) = (Node *) n;
 				}
-#line 35345 "gram.c"
+#line 35305 "gram.c"
     break;
 
   case 755: /* am_type: INDEX  */
 #line 5765 "gram.y"
                                                 { (yyval.chr) = AMTYPE_INDEX; }
-#line 35351 "gram.c"
+#line 35311 "gram.c"
     break;
 
   case 756: /* am_type: TABLE  */
 #line 5766 "gram.y"
                                                 { (yyval.chr) = AMTYPE_TABLE; }
-#line 35357 "gram.c"
+#line 35317 "gram.c"
     break;
 
   case 757: /* CreateTrigStmt: CREATE opt_or_replace TRIGGER name TriggerActionTime TriggerEvents ON qualified_name TriggerReferencing TriggerForSpec TriggerWhen EXECUTE FUNCTION_or_PROCEDURE func_name '(' TriggerFuncArgs ')'  */
@@ -35378,7 +35338,7 @@
 					n->constrrel = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 35382 "gram.c"
+#line 35342 "gram.c"
     break;
 
   case 758: /* CreateTrigStmt: CREATE opt_or_replace CONSTRAINT TRIGGER name AFTER TriggerEvents ON qualified_name OptConstrFromTable ConstraintAttributeSpec FOR EACH ROW TriggerWhen EXECUTE FUNCTION_or_PROCEDURE func_name '(' TriggerFuncArgs ')'  */
@@ -35408,31 +35368,31 @@
 					n->constrrel = (yyvsp[-11].range);
 					(yyval.node) = (Node *) n;
 				}
-#line 35412 "gram.c"
+#line 35372 "gram.c"
     break;
 
   case 759: /* TriggerActionTime: BEFORE  */
 #line 5832 "gram.y"
                                                                                         { (yyval.ival) = TRIGGER_TYPE_BEFORE; }
-#line 35418 "gram.c"
+#line 35378 "gram.c"
     break;
 
   case 760: /* TriggerActionTime: AFTER  */
 #line 5833 "gram.y"
                                                                                         { (yyval.ival) = TRIGGER_TYPE_AFTER; }
-#line 35424 "gram.c"
+#line 35384 "gram.c"
     break;
 
   case 761: /* TriggerActionTime: INSTEAD OF  */
 #line 5834 "gram.y"
                                                                                 { (yyval.ival) = TRIGGER_TYPE_INSTEAD; }
-#line 35430 "gram.c"
+#line 35390 "gram.c"
     break;
 
   case 762: /* TriggerEvents: TriggerOneEvent  */
 #line 5839 "gram.y"
                                 { (yyval.list) = (yyvsp[0].list); }
-#line 35436 "gram.c"
+#line 35396 "gram.c"
     break;
 
   case 763: /* TriggerEvents: TriggerEvents OR TriggerOneEvent  */
@@ -35455,61 +35415,61 @@
 					(yyval.list) = list_make2(makeInteger(events1 | events2),
 									list_concat(columns1, columns2));
 				}
-#line 35459 "gram.c"
+#line 35419 "gram.c"
     break;
 
   case 764: /* TriggerOneEvent: INSERT  */
 #line 5863 "gram.y"
                                 { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
-#line 35465 "gram.c"
+#line 35425 "gram.c"
     break;
 
   case 765: /* TriggerOneEvent: DELETE_P  */
 #line 5865 "gram.y"
                                 { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
-#line 35471 "gram.c"
+#line 35431 "gram.c"
     break;
 
   case 766: /* TriggerOneEvent: UPDATE  */
 #line 5867 "gram.y"
                                 { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
-#line 35477 "gram.c"
+#line 35437 "gram.c"
     break;
 
   case 767: /* TriggerOneEvent: UPDATE OF columnList  */
 #line 5869 "gram.y"
                                 { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[0].list)); }
-#line 35483 "gram.c"
+#line 35443 "gram.c"
     break;
 
   case 768: /* TriggerOneEvent: TRUNCATE  */
 #line 5871 "gram.y"
                                 { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
-#line 35489 "gram.c"
+#line 35449 "gram.c"
     break;
 
   case 769: /* TriggerReferencing: REFERENCING TriggerTransitions  */
 #line 5875 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 35495 "gram.c"
+#line 35455 "gram.c"
     break;
 
   case 770: /* TriggerReferencing: %empty  */
 #line 5876 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 35501 "gram.c"
+#line 35461 "gram.c"
     break;
 
   case 771: /* TriggerTransitions: TriggerTransition  */
 #line 5880 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 35507 "gram.c"
+#line 35467 "gram.c"
     break;
 
   case 772: /* TriggerTransitions: TriggerTransitions TriggerTransition  */
 #line 5881 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 35513 "gram.c"
+#line 35473 "gram.c"
     break;
 
   case 773: /* TriggerTransition: TransitionOldOrNew TransitionRowOrTable opt_as TransitionRelName  */
@@ -35522,37 +35482,37 @@
 					n->isTable = (yyvsp[-2].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 35526 "gram.c"
+#line 35486 "gram.c"
     break;
 
   case 774: /* TransitionOldOrNew: NEW  */
 #line 5897 "gram.y"
                                                                                                         { (yyval.boolean) = true; }
-#line 35532 "gram.c"
+#line 35492 "gram.c"
     break;
 
   case 775: /* TransitionOldOrNew: OLD  */
 #line 5898 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 35538 "gram.c"
+#line 35498 "gram.c"
     break;
 
   case 776: /* TransitionRowOrTable: TABLE  */
 #line 5902 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 35544 "gram.c"
+#line 35504 "gram.c"
     break;
 
   case 777: /* TransitionRowOrTable: ROW  */
 #line 5911 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 35550 "gram.c"
+#line 35510 "gram.c"
     break;
 
   case 778: /* TransitionRelName: ColId  */
 #line 5915 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 35556 "gram.c"
+#line 35516 "gram.c"
     break;
 
   case 779: /* TriggerForSpec: FOR TriggerForOptEach TriggerForType  */
@@ -35560,7 +35520,7 @@
                                 {
 					(yyval.boolean) = (yyvsp[0].boolean);
 				}
-#line 35564 "gram.c"
+#line 35524 "gram.c"
     break;
 
   case 780: /* TriggerForSpec: %empty  */
@@ -35572,49 +35532,49 @@
 					 */
 					(yyval.boolean) = false;
 				}
-#line 35576 "gram.c"
+#line 35536 "gram.c"
     break;
 
   case 783: /* TriggerForType: ROW  */
 #line 5939 "gram.y"
                                                                                                         { (yyval.boolean) = true; }
-#line 35582 "gram.c"
+#line 35542 "gram.c"
     break;
 
   case 784: /* TriggerForType: STATEMENT  */
 #line 5940 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 35588 "gram.c"
+#line 35548 "gram.c"
     break;
 
   case 785: /* TriggerWhen: WHEN '(' a_expr ')'  */
 #line 5944 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[-1].node); }
-#line 35594 "gram.c"
+#line 35554 "gram.c"
     break;
 
   case 786: /* TriggerWhen: %empty  */
 #line 5945 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 35600 "gram.c"
+#line 35560 "gram.c"
     break;
 
   case 789: /* TriggerFuncArgs: TriggerFuncArg  */
 #line 5954 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 35606 "gram.c"
+#line 35566 "gram.c"
     break;
 
   case 790: /* TriggerFuncArgs: TriggerFuncArgs ',' TriggerFuncArg  */
 #line 5955 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 35612 "gram.c"
+#line 35572 "gram.c"
     break;
 
   case 791: /* TriggerFuncArgs: %empty  */
 #line 5956 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 35618 "gram.c"
+#line 35578 "gram.c"
     break;
 
   case 792: /* TriggerFuncArg: Iconst  */
@@ -35622,43 +35582,43 @@
                                 {
 					(yyval.node) = (Node *) makeString(psprintf("%d", (yyvsp[0].ival)));
 				}
-#line 35626 "gram.c"
+#line 35586 "gram.c"
     break;
 
   case 793: /* TriggerFuncArg: FCONST  */
 #line 5964 "gram.y"
                                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 35632 "gram.c"
+#line 35592 "gram.c"
     break;
 
   case 794: /* TriggerFuncArg: Sconst  */
 #line 5965 "gram.y"
                                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 35638 "gram.c"
+#line 35598 "gram.c"
     break;
 
   case 795: /* TriggerFuncArg: ColLabel  */
 #line 5966 "gram.y"
                                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 35644 "gram.c"
+#line 35604 "gram.c"
     break;
 
   case 796: /* OptConstrFromTable: FROM qualified_name  */
 #line 5970 "gram.y"
                                                                                         { (yyval.range) = (yyvsp[0].range); }
-#line 35650 "gram.c"
+#line 35610 "gram.c"
     break;
 
   case 797: /* OptConstrFromTable: %empty  */
 #line 5971 "gram.y"
                                                                                                 { (yyval.range) = NULL; }
-#line 35656 "gram.c"
+#line 35616 "gram.c"
     break;
 
   case 798: /* ConstraintAttributeSpec: %empty  */
 #line 5976 "gram.y"
                                 { (yyval.ival) = 0; }
-#line 35662 "gram.c"
+#line 35622 "gram.c"
     break;
 
   case 799: /* ConstraintAttributeSpec: ConstraintAttributeSpec ConstraintAttributeElem  */
@@ -35686,43 +35646,43 @@
 								 parser_errposition((yylsp[0]))));
 					(yyval.ival) = newspec;
 				}
-#line 35690 "gram.c"
+#line 35650 "gram.c"
     break;
 
   case 800: /* ConstraintAttributeElem: NOT DEFERRABLE  */
 #line 6004 "gram.y"
                                                                         { (yyval.ival) = CAS_NOT_DEFERRABLE; }
-#line 35696 "gram.c"
+#line 35656 "gram.c"
     break;
 
   case 801: /* ConstraintAttributeElem: DEFERRABLE  */
 #line 6005 "gram.y"
                                                                         { (yyval.ival) = CAS_DEFERRABLE; }
-#line 35702 "gram.c"
+#line 35662 "gram.c"
     break;
 
   case 802: /* ConstraintAttributeElem: INITIALLY IMMEDIATE  */
 #line 6006 "gram.y"
                                                                 { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
-#line 35708 "gram.c"
+#line 35668 "gram.c"
     break;
 
   case 803: /* ConstraintAttributeElem: INITIALLY DEFERRED  */
 #line 6007 "gram.y"
                                                                 { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
-#line 35714 "gram.c"
+#line 35674 "gram.c"
     break;
 
   case 804: /* ConstraintAttributeElem: NOT VALID  */
 #line 6008 "gram.y"
                                                                                 { (yyval.ival) = CAS_NOT_VALID; }
-#line 35720 "gram.c"
+#line 35680 "gram.c"
     break;
 
   case 805: /* ConstraintAttributeElem: NO INHERIT  */
 #line 6009 "gram.y"
                                                                         { (yyval.ival) = CAS_NO_INHERIT; }
-#line 35726 "gram.c"
+#line 35686 "gram.c"
     break;
 
   case 806: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel EXECUTE FUNCTION_or_PROCEDURE func_name '(' ')'  */
@@ -35736,7 +35696,7 @@
 					n->funcname = (yyvsp[-2].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35740 "gram.c"
+#line 35700 "gram.c"
     break;
 
   case 807: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel WHEN event_trigger_when_list EXECUTE FUNCTION_or_PROCEDURE func_name '(' ')'  */
@@ -35750,37 +35710,37 @@
 					n->funcname = (yyvsp[-2].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35754 "gram.c"
+#line 35714 "gram.c"
     break;
 
   case 808: /* event_trigger_when_list: event_trigger_when_item  */
 #line 6049 "gram.y"
                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 35760 "gram.c"
+#line 35720 "gram.c"
     break;
 
   case 809: /* event_trigger_when_list: event_trigger_when_list AND event_trigger_when_item  */
 #line 6051 "gram.y"
                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 35766 "gram.c"
+#line 35726 "gram.c"
     break;
 
   case 810: /* event_trigger_when_item: ColId IN_P '(' event_trigger_value_list ')'  */
 #line 6056 "gram.y"
                         { (yyval.defelt) = makeDefElem((yyvsp[-4].str), (Node *) (yyvsp[-1].list), (yylsp[-4])); }
-#line 35772 "gram.c"
+#line 35732 "gram.c"
     break;
 
   case 811: /* event_trigger_value_list: SCONST  */
 #line 6061 "gram.y"
                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 35778 "gram.c"
+#line 35738 "gram.c"
     break;
 
   case 812: /* event_trigger_value_list: event_trigger_value_list ',' SCONST  */
 #line 6063 "gram.y"
                         { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
-#line 35784 "gram.c"
+#line 35744 "gram.c"
     break;
 
   case 813: /* AlterEventTrigStmt: ALTER EVENT TRIGGER name enable_trigger  */
@@ -35792,31 +35752,31 @@
 					n->tgenabled = (yyvsp[0].chr);
 					(yyval.node) = (Node *) n;
 				}
-#line 35796 "gram.c"
+#line 35756 "gram.c"
     break;
 
   case 814: /* enable_trigger: ENABLE_P  */
 #line 6078 "gram.y"
                                                                         { (yyval.chr) = TRIGGER_FIRES_ON_ORIGIN; }
-#line 35802 "gram.c"
+#line 35762 "gram.c"
     break;
 
   case 815: /* enable_trigger: ENABLE_P REPLICA  */
 #line 6079 "gram.y"
                                                                 { (yyval.chr) = TRIGGER_FIRES_ON_REPLICA; }
-#line 35808 "gram.c"
+#line 35768 "gram.c"
     break;
 
   case 816: /* enable_trigger: ENABLE_P ALWAYS  */
 #line 6080 "gram.y"
                                                                 { (yyval.chr) = TRIGGER_FIRES_ALWAYS; }
-#line 35814 "gram.c"
+#line 35774 "gram.c"
     break;
 
   case 817: /* enable_trigger: DISABLE_P  */
 #line 6081 "gram.y"
                                                                         { (yyval.chr) = TRIGGER_DISABLED; }
-#line 35820 "gram.c"
+#line 35780 "gram.c"
     break;
 
   case 818: /* CreateAssertionStmt: CREATE ASSERTION any_name CHECK '(' a_expr ')' ConstraintAttributeSpec  */
@@ -35828,7 +35788,7 @@
 
 					(yyval.node) = NULL;
 				}
-#line 35832 "gram.c"
+#line 35792 "gram.c"
     break;
 
   case 819: /* DefineStmt: CREATE opt_or_replace AGGREGATE func_name aggr_args definition  */
@@ -35844,7 +35804,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35848 "gram.c"
+#line 35808 "gram.c"
     break;
 
   case 820: /* DefineStmt: CREATE opt_or_replace AGGREGATE func_name old_aggr_definition  */
@@ -35861,7 +35821,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35865 "gram.c"
+#line 35825 "gram.c"
     break;
 
   case 821: /* DefineStmt: CREATE OPERATOR any_operator definition  */
@@ -35876,7 +35836,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35880 "gram.c"
+#line 35840 "gram.c"
     break;
 
   case 822: /* DefineStmt: CREATE TYPE_P any_name definition  */
@@ -35891,7 +35851,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35895 "gram.c"
+#line 35855 "gram.c"
     break;
 
   case 823: /* DefineStmt: CREATE TYPE_P any_name  */
@@ -35907,7 +35867,7 @@
 					n->definition = NIL;
 					(yyval.node) = (Node *) n;
 				}
-#line 35911 "gram.c"
+#line 35871 "gram.c"
     break;
 
   case 824: /* DefineStmt: CREATE TYPE_P any_name AS '(' OptTableFuncElementList ')'  */
@@ -35920,7 +35880,7 @@
 					n->coldeflist = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35924 "gram.c"
+#line 35884 "gram.c"
     break;
 
   case 825: /* DefineStmt: CREATE TYPE_P any_name AS ENUM_P '(' opt_enum_val_list ')'  */
@@ -35932,7 +35892,7 @@
 					n->vals = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35936 "gram.c"
+#line 35896 "gram.c"
     break;
 
   case 826: /* DefineStmt: CREATE TYPE_P any_name AS RANGE definition  */
@@ -35944,7 +35904,7 @@
 					n->params = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35948 "gram.c"
+#line 35908 "gram.c"
     break;
 
   case 827: /* DefineStmt: CREATE TEXT_P SEARCH PARSER any_name definition  */
@@ -35958,7 +35918,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35962 "gram.c"
+#line 35922 "gram.c"
     break;
 
   case 828: /* DefineStmt: CREATE TEXT_P SEARCH DICTIONARY any_name definition  */
@@ -35972,7 +35932,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35976 "gram.c"
+#line 35936 "gram.c"
     break;
 
   case 829: /* DefineStmt: CREATE TEXT_P SEARCH TEMPLATE any_name definition  */
@@ -35986,7 +35946,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 35990 "gram.c"
+#line 35950 "gram.c"
     break;
 
   case 830: /* DefineStmt: CREATE TEXT_P SEARCH CONFIGURATION any_name definition  */
@@ -36000,7 +35960,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36004 "gram.c"
+#line 35964 "gram.c"
     break;
 
   case 831: /* DefineStmt: CREATE COLLATION any_name definition  */
@@ -36014,7 +35974,7 @@
 					n->definition = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36018 "gram.c"
+#line 35978 "gram.c"
     break;
 
   case 832: /* DefineStmt: CREATE COLLATION IF_P NOT EXISTS any_name definition  */
@@ -36029,7 +35989,7 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 36033 "gram.c"
+#line 35993 "gram.c"
     break;
 
   case 833: /* DefineStmt: CREATE COLLATION any_name FROM any_name  */
@@ -36043,7 +36003,7 @@
 					n->definition = list_make1(makeDefElem("from", (Node *) (yyvsp[0].list), (yylsp[0])));
 					(yyval.node) = (Node *) n;
 				}
-#line 36047 "gram.c"
+#line 36007 "gram.c"
     break;
 
   case 834: /* DefineStmt: CREATE COLLATION IF_P NOT EXISTS any_name FROM any_name  */
@@ -36058,25 +36018,25 @@
 					n->if_not_exists = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 36062 "gram.c"
+#line 36022 "gram.c"
     break;
 
   case 835: /* definition: '(' def_list ')'  */
 #line 6279 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 36068 "gram.c"
+#line 36028 "gram.c"
     break;
 
   case 836: /* def_list: def_elem  */
 #line 6282 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 36074 "gram.c"
+#line 36034 "gram.c"
     break;
 
   case 837: /* def_list: def_list ',' def_elem  */
 #line 6283 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 36080 "gram.c"
+#line 36040 "gram.c"
     break;
 
   case 838: /* def_elem: ColLabel '=' def_arg  */
@@ -36084,7 +36044,7 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 36088 "gram.c"
+#line 36048 "gram.c"
     break;
 
   case 839: /* def_elem: ColLabel  */
@@ -36092,61 +36052,61 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL, (yylsp[0]));
 				}
-#line 36096 "gram.c"
+#line 36056 "gram.c"
     break;
 
   case 840: /* def_arg: func_type  */
 #line 6297 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].typnam); }
-#line 36102 "gram.c"
+#line 36062 "gram.c"
     break;
 
   case 841: /* def_arg: reserved_keyword  */
 #line 6298 "gram.y"
                                                                         { (yyval.node) = (Node *) makeString(pstrdup((yyvsp[0].keyword))); }
-#line 36108 "gram.c"
+#line 36068 "gram.c"
     break;
 
   case 842: /* def_arg: qual_all_Op  */
 #line 6299 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].list); }
-#line 36114 "gram.c"
+#line 36074 "gram.c"
     break;
 
   case 843: /* def_arg: NumericOnly  */
 #line 6300 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].node); }
-#line 36120 "gram.c"
+#line 36080 "gram.c"
     break;
 
   case 844: /* def_arg: Sconst  */
 #line 6301 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 36126 "gram.c"
+#line 36086 "gram.c"
     break;
 
   case 845: /* def_arg: NONE  */
 #line 6302 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeString(pstrdup((yyvsp[0].keyword))); }
-#line 36132 "gram.c"
+#line 36092 "gram.c"
     break;
 
   case 846: /* old_aggr_definition: '(' old_aggr_list ')'  */
 #line 6305 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 36138 "gram.c"
+#line 36098 "gram.c"
     break;
 
   case 847: /* old_aggr_list: old_aggr_elem  */
 #line 6308 "gram.y"
                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 36144 "gram.c"
+#line 36104 "gram.c"
     break;
 
   case 848: /* old_aggr_list: old_aggr_list ',' old_aggr_elem  */
 #line 6309 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 36150 "gram.c"
+#line 36110 "gram.c"
     break;
 
   case 849: /* old_aggr_elem: IDENT '=' def_arg  */
@@ -36154,31 +36114,31 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 36158 "gram.c"
+#line 36118 "gram.c"
     break;
 
   case 850: /* opt_enum_val_list: enum_val_list  */
 #line 6324 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 36164 "gram.c"
+#line 36124 "gram.c"
     break;
 
   case 851: /* opt_enum_val_list: %empty  */
 #line 6325 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 36170 "gram.c"
+#line 36130 "gram.c"
     break;
 
   case 852: /* enum_val_list: Sconst  */
 #line 6329 "gram.y"
                                 { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 36176 "gram.c"
+#line 36136 "gram.c"
     break;
 
   case 853: /* enum_val_list: enum_val_list ',' Sconst  */
 #line 6331 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
-#line 36182 "gram.c"
+#line 36142 "gram.c"
     break;
 
   case 854: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst  */
@@ -36194,7 +36154,7 @@
 				n->skipIfNewValExists = (yyvsp[-1].boolean);
 				(yyval.node) = (Node *) n;
 			}
-#line 36198 "gram.c"
+#line 36158 "gram.c"
     break;
 
   case 855: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst BEFORE Sconst  */
@@ -36210,7 +36170,7 @@
 				n->skipIfNewValExists = (yyvsp[-3].boolean);
 				(yyval.node) = (Node *) n;
 			}
-#line 36214 "gram.c"
+#line 36174 "gram.c"
     break;
 
   case 856: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst AFTER Sconst  */
@@ -36226,7 +36186,7 @@
 				n->skipIfNewValExists = (yyvsp[-3].boolean);
 				(yyval.node) = (Node *) n;
 			}
-#line 36230 "gram.c"
+#line 36190 "gram.c"
     break;
 
   case 857: /* AlterEnumStmt: ALTER TYPE_P any_name RENAME VALUE_P Sconst TO Sconst  */
@@ -36242,19 +36202,19 @@
 				n->skipIfNewValExists = false;
 				(yyval.node) = (Node *) n;
 			}
-#line 36246 "gram.c"
+#line 36206 "gram.c"
     break;
 
   case 858: /* opt_if_not_exists: IF_P NOT EXISTS  */
 #line 6391 "gram.y"
                                                 { (yyval.boolean) = true; }
-#line 36252 "gram.c"
+#line 36212 "gram.c"
     break;
 
   case 859: /* opt_if_not_exists: %empty  */
 #line 6392 "gram.y"
                                                        { (yyval.boolean) = false; }
-#line 36258 "gram.c"
+#line 36218 "gram.c"
     break;
 
   case 860: /* CreateOpClassStmt: CREATE OPERATOR CLASS any_name opt_default FOR TYPE_P Typename USING name opt_opfamily AS opclass_item_list  */
@@ -36270,19 +36230,19 @@
 					n->items = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36274 "gram.c"
+#line 36234 "gram.c"
     break;
 
   case 861: /* opclass_item_list: opclass_item  */
 #line 6424 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 36280 "gram.c"
+#line 36240 "gram.c"
     break;
 
   case 862: /* opclass_item_list: opclass_item_list ',' opclass_item  */
 #line 6425 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 36286 "gram.c"
+#line 36246 "gram.c"
     break;
 
   case 863: /* opclass_item: OPERATOR Iconst any_operator opclass_purpose opt_recheck  */
@@ -36299,7 +36259,7 @@
 					n->order_family = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36303 "gram.c"
+#line 36263 "gram.c"
     break;
 
   case 864: /* opclass_item: OPERATOR Iconst operator_with_argtypes opclass_purpose opt_recheck  */
@@ -36313,7 +36273,7 @@
 					n->order_family = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36317 "gram.c"
+#line 36277 "gram.c"
     break;
 
   case 865: /* opclass_item: FUNCTION Iconst function_with_argtypes  */
@@ -36326,7 +36286,7 @@
 					n->number = (yyvsp[-1].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 36330 "gram.c"
+#line 36290 "gram.c"
     break;
 
   case 866: /* opclass_item: FUNCTION Iconst '(' type_list ')' function_with_argtypes  */
@@ -36340,7 +36300,7 @@
 					n->class_args = (yyvsp[-2].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36344 "gram.c"
+#line 36304 "gram.c"
     break;
 
   case 867: /* opclass_item: STORAGE Typename  */
@@ -36352,49 +36312,49 @@
 					n->storedtype = (yyvsp[0].typnam);
 					(yyval.node) = (Node *) n;
 				}
-#line 36356 "gram.c"
+#line 36316 "gram.c"
     break;
 
   case 868: /* opt_default: DEFAULT  */
 #line 6482 "gram.y"
                                                                 { (yyval.boolean) = true; }
-#line 36362 "gram.c"
+#line 36322 "gram.c"
     break;
 
   case 869: /* opt_default: %empty  */
 #line 6483 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 36368 "gram.c"
+#line 36328 "gram.c"
     break;
 
   case 870: /* opt_opfamily: FAMILY any_name  */
 #line 6486 "gram.y"
                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 36374 "gram.c"
+#line 36334 "gram.c"
     break;
 
   case 871: /* opt_opfamily: %empty  */
 #line 6487 "gram.y"
                                                                                 { (yyval.list) = NIL; }
-#line 36380 "gram.c"
+#line 36340 "gram.c"
     break;
 
   case 872: /* opclass_purpose: FOR SEARCH  */
 #line 6490 "gram.y"
                                                                 { (yyval.list) = NIL; }
-#line 36386 "gram.c"
+#line 36346 "gram.c"
     break;
 
   case 873: /* opclass_purpose: FOR ORDER BY any_name  */
 #line 6491 "gram.y"
                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 36392 "gram.c"
+#line 36352 "gram.c"
     break;
 
   case 874: /* opclass_purpose: %empty  */
 #line 6492 "gram.y"
                                                                                 { (yyval.list) = NIL; }
-#line 36398 "gram.c"
+#line 36358 "gram.c"
     break;
 
   case 875: /* opt_recheck: RECHECK  */
@@ -36412,13 +36372,13 @@
 							 parser_errposition((yylsp[0]))));
 					(yyval.boolean) = true;
 				}
-#line 36416 "gram.c"
+#line 36376 "gram.c"
     break;
 
   case 876: /* opt_recheck: %empty  */
 #line 6509 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 36422 "gram.c"
+#line 36382 "gram.c"
     break;
 
   case 877: /* CreateOpFamilyStmt: CREATE OPERATOR FAMILY any_name USING name  */
@@ -36430,7 +36390,7 @@
 					n->amname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 36434 "gram.c"
+#line 36394 "gram.c"
     break;
 
   case 878: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING name ADD_P opclass_item_list  */
@@ -36444,7 +36404,7 @@
 					n->items = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36448 "gram.c"
+#line 36408 "gram.c"
     break;
 
   case 879: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING name DROP opclass_drop_list  */
@@ -36458,19 +36418,19 @@
 					n->items = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36462 "gram.c"
+#line 36422 "gram.c"
     break;
 
   case 880: /* opclass_drop_list: opclass_drop  */
 #line 6548 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 36468 "gram.c"
+#line 36428 "gram.c"
     break;
 
   case 881: /* opclass_drop_list: opclass_drop_list ',' opclass_drop  */
 #line 6549 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 36474 "gram.c"
+#line 36434 "gram.c"
     break;
 
   case 882: /* opclass_drop: OPERATOR Iconst '(' type_list ')'  */
@@ -36483,7 +36443,7 @@
 					n->class_args = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36487 "gram.c"
+#line 36447 "gram.c"
     break;
 
   case 883: /* opclass_drop: FUNCTION Iconst '(' type_list ')'  */
@@ -36496,7 +36456,7 @@
 					n->class_args = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 36500 "gram.c"
+#line 36460 "gram.c"
     break;
 
   case 884: /* DropOpClassStmt: DROP OPERATOR CLASS any_name USING name opt_drop_behavior  */
@@ -36511,7 +36471,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36515 "gram.c"
+#line 36475 "gram.c"
     break;
 
   case 885: /* DropOpClassStmt: DROP OPERATOR CLASS IF_P EXISTS any_name USING name opt_drop_behavior  */
@@ -36526,7 +36486,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36530 "gram.c"
+#line 36490 "gram.c"
     break;
 
   case 886: /* DropOpFamilyStmt: DROP OPERATOR FAMILY any_name USING name opt_drop_behavior  */
@@ -36541,7 +36501,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36545 "gram.c"
+#line 36505 "gram.c"
     break;
 
   case 887: /* DropOpFamilyStmt: DROP OPERATOR FAMILY IF_P EXISTS any_name USING name opt_drop_behavior  */
@@ -36556,7 +36516,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36560 "gram.c"
+#line 36520 "gram.c"
     break;
 
   case 888: /* DropOwnedStmt: DROP OWNED BY role_list opt_drop_behavior  */
@@ -36568,7 +36528,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 36572 "gram.c"
+#line 36532 "gram.c"
     break;
 
   case 889: /* ReassignOwnedStmt: REASSIGN OWNED BY role_list TO RoleSpec  */
@@ -36580,7 +36540,7 @@
 					n->newrole = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 36584 "gram.c"
+#line 36544 "gram.c"
     break;
 
   case 890: /* DropStmt: DROP object_type_any_name IF_P EXISTS any_name_list opt_drop_behavior  */
@@ -36595,7 +36555,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36599 "gram.c"
+#line 36559 "gram.c"
     break;
 
   case 891: /* DropStmt: DROP object_type_any_name any_name_list opt_drop_behavior  */
@@ -36610,7 +36570,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36614 "gram.c"
+#line 36574 "gram.c"
     break;
 
   case 892: /* DropStmt: DROP drop_type_name IF_P EXISTS name_list opt_drop_behavior  */
@@ -36625,7 +36585,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36629 "gram.c"
+#line 36589 "gram.c"
     break;
 
   case 893: /* DropStmt: DROP drop_type_name name_list opt_drop_behavior  */
@@ -36640,7 +36600,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36644 "gram.c"
+#line 36604 "gram.c"
     break;
 
   case 894: /* DropStmt: DROP object_type_name_on_any_name name ON any_name opt_drop_behavior  */
@@ -36655,7 +36615,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36659 "gram.c"
+#line 36619 "gram.c"
     break;
 
   case 895: /* DropStmt: DROP object_type_name_on_any_name IF_P EXISTS name ON any_name opt_drop_behavior  */
@@ -36670,7 +36630,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36674 "gram.c"
+#line 36634 "gram.c"
     break;
 
   case 896: /* DropStmt: DROP TYPE_P type_name_list opt_drop_behavior  */
@@ -36685,7 +36645,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36689 "gram.c"
+#line 36649 "gram.c"
     break;
 
   case 897: /* DropStmt: DROP TYPE_P IF_P EXISTS type_name_list opt_drop_behavior  */
@@ -36700,7 +36660,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36704 "gram.c"
+#line 36664 "gram.c"
     break;
 
   case 898: /* DropStmt: DROP DOMAIN_P type_name_list opt_drop_behavior  */
@@ -36715,7 +36675,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36719 "gram.c"
+#line 36679 "gram.c"
     break;
 
   case 899: /* DropStmt: DROP DOMAIN_P IF_P EXISTS type_name_list opt_drop_behavior  */
@@ -36730,7 +36690,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 36734 "gram.c"
+#line 36694 "gram.c"
     break;
 
   case 900: /* DropStmt: DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior  */
@@ -36745,7 +36705,7 @@
 					n->concurrent = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 36749 "gram.c"
+#line 36709 "gram.c"
     break;
 
   case 901: /* DropStmt: DROP INDEX CONCURRENTLY IF_P EXISTS any_name_list opt_drop_behavior  */
@@ -36760,229 +36720,229 @@
 					n->concurrent = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 36764 "gram.c"
+#line 36724 "gram.c"
     break;
 
   case 902: /* object_type_any_name: TABLE  */
 #line 6800 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_TABLE; }
-#line 36770 "gram.c"
+#line 36730 "gram.c"
     break;
 
   case 903: /* object_type_any_name: SEQUENCE  */
 #line 6801 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_SEQUENCE; }
-#line 36776 "gram.c"
+#line 36736 "gram.c"
     break;
 
   case 904: /* object_type_any_name: VIEW  */
 #line 6802 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_VIEW; }
-#line 36782 "gram.c"
+#line 36742 "gram.c"
     break;
 
   case 905: /* object_type_any_name: MATERIALIZED VIEW  */
 #line 6803 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_MATVIEW; }
-#line 36788 "gram.c"
+#line 36748 "gram.c"
     break;
 
   case 906: /* object_type_any_name: INDEX  */
 #line 6804 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_INDEX; }
-#line 36794 "gram.c"
+#line 36754 "gram.c"
     break;
 
   case 907: /* object_type_any_name: FOREIGN TABLE  */
 #line 6805 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
-#line 36800 "gram.c"
+#line 36760 "gram.c"
     break;
 
   case 908: /* object_type_any_name: COLLATION  */
 #line 6806 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_COLLATION; }
-#line 36806 "gram.c"
+#line 36766 "gram.c"
     break;
 
   case 909: /* object_type_any_name: CONVERSION_P  */
 #line 6807 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_CONVERSION; }
-#line 36812 "gram.c"
+#line 36772 "gram.c"
     break;
 
   case 910: /* object_type_any_name: STATISTICS  */
 #line 6808 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_STATISTIC_EXT; }
-#line 36818 "gram.c"
+#line 36778 "gram.c"
     break;
 
   case 911: /* object_type_any_name: TEXT_P SEARCH PARSER  */
 #line 6809 "gram.y"
                                                                                 { (yyval.objtype) = OBJECT_TSPARSER; }
-#line 36824 "gram.c"
+#line 36784 "gram.c"
     break;
 
   case 912: /* object_type_any_name: TEXT_P SEARCH DICTIONARY  */
 #line 6810 "gram.y"
                                                                                 { (yyval.objtype) = OBJECT_TSDICTIONARY; }
-#line 36830 "gram.c"
+#line 36790 "gram.c"
     break;
 
   case 913: /* object_type_any_name: TEXT_P SEARCH TEMPLATE  */
 #line 6811 "gram.y"
                                                                                 { (yyval.objtype) = OBJECT_TSTEMPLATE; }
-#line 36836 "gram.c"
+#line 36796 "gram.c"
     break;
 
   case 914: /* object_type_any_name: TEXT_P SEARCH CONFIGURATION  */
 #line 6812 "gram.y"
                                                                         { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
-#line 36842 "gram.c"
+#line 36802 "gram.c"
     break;
 
   case 915: /* object_type_name: drop_type_name  */
 #line 6822 "gram.y"
                                                                                         { (yyval.objtype) = (yyvsp[0].objtype); }
-#line 36848 "gram.c"
+#line 36808 "gram.c"
     break;
 
   case 916: /* object_type_name: DATABASE  */
 #line 6823 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_DATABASE; }
-#line 36854 "gram.c"
+#line 36814 "gram.c"
     break;
 
   case 917: /* object_type_name: ROLE  */
 #line 6824 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_ROLE; }
-#line 36860 "gram.c"
+#line 36820 "gram.c"
     break;
 
   case 918: /* object_type_name: SUBSCRIPTION  */
 #line 6825 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_SUBSCRIPTION; }
-#line 36866 "gram.c"
+#line 36826 "gram.c"
     break;
 
   case 919: /* object_type_name: TABLESPACE  */
 #line 6826 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_TABLESPACE; }
-#line 36872 "gram.c"
+#line 36832 "gram.c"
     break;
 
   case 920: /* drop_type_name: ACCESS METHOD  */
 #line 6830 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_ACCESS_METHOD; }
-#line 36878 "gram.c"
+#line 36838 "gram.c"
     break;
 
   case 921: /* drop_type_name: EVENT TRIGGER  */
 #line 6831 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
-#line 36884 "gram.c"
+#line 36844 "gram.c"
     break;
 
   case 922: /* drop_type_name: EXTENSION  */
 #line 6832 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_EXTENSION; }
-#line 36890 "gram.c"
+#line 36850 "gram.c"
     break;
 
   case 923: /* drop_type_name: FOREIGN DATA_P WRAPPER  */
 #line 6833 "gram.y"
                                                                                 { (yyval.objtype) = OBJECT_FDW; }
-#line 36896 "gram.c"
+#line 36856 "gram.c"
     break;
 
   case 924: /* drop_type_name: opt_procedural LANGUAGE  */
 #line 6834 "gram.y"
                                                                                 { (yyval.objtype) = OBJECT_LANGUAGE; }
-#line 36902 "gram.c"
+#line 36862 "gram.c"
     break;
 
   case 925: /* drop_type_name: PUBLICATION  */
 #line 6835 "gram.y"
                                                                                         { (yyval.objtype) = OBJECT_PUBLICATION; }
-#line 36908 "gram.c"
+#line 36868 "gram.c"
     break;
 
   case 926: /* drop_type_name: SCHEMA  */
 #line 6836 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_SCHEMA; }
-#line 36914 "gram.c"
+#line 36874 "gram.c"
     break;
 
   case 927: /* drop_type_name: SERVER  */
 #line 6837 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_FOREIGN_SERVER; }
-#line 36920 "gram.c"
+#line 36880 "gram.c"
     break;
 
   case 928: /* object_type_name_on_any_name: POLICY  */
 #line 6842 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_POLICY; }
-#line 36926 "gram.c"
+#line 36886 "gram.c"
     break;
 
   case 929: /* object_type_name_on_any_name: RULE  */
 #line 6843 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_RULE; }
-#line 36932 "gram.c"
+#line 36892 "gram.c"
     break;
 
   case 930: /* object_type_name_on_any_name: TRIGGER  */
 #line 6844 "gram.y"
                                                                                                 { (yyval.objtype) = OBJECT_TRIGGER; }
-#line 36938 "gram.c"
+#line 36898 "gram.c"
     break;
 
   case 931: /* any_name_list: any_name  */
 #line 6848 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].list)); }
-#line 36944 "gram.c"
+#line 36904 "gram.c"
     break;
 
   case 932: /* any_name_list: any_name_list ',' any_name  */
 #line 6849 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
-#line 36950 "gram.c"
+#line 36910 "gram.c"
     break;
 
   case 933: /* any_name: ColId  */
 #line 6852 "gram.y"
                                                                 { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 36956 "gram.c"
+#line 36916 "gram.c"
     break;
 
   case 934: /* any_name: ColId attrs  */
 #line 6853 "gram.y"
                                                                 { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
-#line 36962 "gram.c"
+#line 36922 "gram.c"
     break;
 
   case 935: /* attrs: '.' attr_name  */
 #line 6857 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 36968 "gram.c"
+#line 36928 "gram.c"
     break;
 
   case 936: /* attrs: attrs '.' attr_name  */
 #line 6859 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
-#line 36974 "gram.c"
+#line 36934 "gram.c"
     break;
 
   case 937: /* type_name_list: Typename  */
 #line 6863 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].typnam)); }
-#line 36980 "gram.c"
+#line 36940 "gram.c"
     break;
 
   case 938: /* type_name_list: type_name_list ',' Typename  */
 #line 6864 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
-#line 36986 "gram.c"
+#line 36946 "gram.c"
     break;
 
   case 939: /* TruncateStmt: TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior  */
@@ -36995,25 +36955,25 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 36999 "gram.c"
+#line 36959 "gram.c"
     break;
 
   case 940: /* opt_restart_seqs: CONTINUE_P IDENTITY_P  */
 #line 6887 "gram.y"
                                                         { (yyval.boolean) = false; }
-#line 37005 "gram.c"
+#line 36965 "gram.c"
     break;
 
   case 941: /* opt_restart_seqs: RESTART IDENTITY_P  */
 #line 6888 "gram.y"
                                                         { (yyval.boolean) = true; }
-#line 37011 "gram.c"
+#line 36971 "gram.c"
     break;
 
   case 942: /* opt_restart_seqs: %empty  */
 #line 6889 "gram.y"
                                                                 { (yyval.boolean) = false; }
-#line 37017 "gram.c"
+#line 36977 "gram.c"
     break;
 
   case 943: /* CommentStmt: COMMENT ON object_type_any_name any_name IS comment_text  */
@@ -37026,7 +36986,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37030 "gram.c"
+#line 36990 "gram.c"
     break;
 
   case 944: /* CommentStmt: COMMENT ON COLUMN any_name IS comment_text  */
@@ -37039,7 +36999,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37043 "gram.c"
+#line 37003 "gram.c"
     break;
 
   case 945: /* CommentStmt: COMMENT ON object_type_name name IS comment_text  */
@@ -37052,7 +37012,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37056 "gram.c"
+#line 37016 "gram.c"
     break;
 
   case 946: /* CommentStmt: COMMENT ON TYPE_P Typename IS comment_text  */
@@ -37065,7 +37025,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37069 "gram.c"
+#line 37029 "gram.c"
     break;
 
   case 947: /* CommentStmt: COMMENT ON DOMAIN_P Typename IS comment_text  */
@@ -37078,7 +37038,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37082 "gram.c"
+#line 37042 "gram.c"
     break;
 
   case 948: /* CommentStmt: COMMENT ON AGGREGATE aggregate_with_argtypes IS comment_text  */
@@ -37091,7 +37051,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37095 "gram.c"
+#line 37055 "gram.c"
     break;
 
   case 949: /* CommentStmt: COMMENT ON FUNCTION function_with_argtypes IS comment_text  */
@@ -37104,7 +37064,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37108 "gram.c"
+#line 37068 "gram.c"
     break;
 
   case 950: /* CommentStmt: COMMENT ON OPERATOR operator_with_argtypes IS comment_text  */
@@ -37117,7 +37077,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37121 "gram.c"
+#line 37081 "gram.c"
     break;
 
   case 951: /* CommentStmt: COMMENT ON CONSTRAINT name ON any_name IS comment_text  */
@@ -37130,7 +37090,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37134 "gram.c"
+#line 37094 "gram.c"
     break;
 
   case 952: /* CommentStmt: COMMENT ON CONSTRAINT name ON DOMAIN_P any_name IS comment_text  */
@@ -37148,7 +37108,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37152 "gram.c"
+#line 37112 "gram.c"
     break;
 
   case 953: /* CommentStmt: COMMENT ON object_type_name_on_any_name name ON any_name IS comment_text  */
@@ -37161,7 +37121,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37165 "gram.c"
+#line 37125 "gram.c"
     break;
 
   case 954: /* CommentStmt: COMMENT ON PROCEDURE function_with_argtypes IS comment_text  */
@@ -37174,7 +37134,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37178 "gram.c"
+#line 37138 "gram.c"
     break;
 
   case 955: /* CommentStmt: COMMENT ON ROUTINE function_with_argtypes IS comment_text  */
@@ -37187,7 +37147,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37191 "gram.c"
+#line 37151 "gram.c"
     break;
 
   case 956: /* CommentStmt: COMMENT ON TRANSFORM FOR Typename LANGUAGE name IS comment_text  */
@@ -37200,7 +37160,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37204 "gram.c"
+#line 37164 "gram.c"
     break;
 
   case 957: /* CommentStmt: COMMENT ON OPERATOR CLASS any_name USING name IS comment_text  */
@@ -37213,7 +37173,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37217 "gram.c"
+#line 37177 "gram.c"
     break;
 
   case 958: /* CommentStmt: COMMENT ON OPERATOR FAMILY any_name USING name IS comment_text  */
@@ -37226,7 +37186,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37230 "gram.c"
+#line 37190 "gram.c"
     break;
 
   case 959: /* CommentStmt: COMMENT ON LARGE_P OBJECT_P NumericOnly IS comment_text  */
@@ -37239,7 +37199,7 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37243 "gram.c"
+#line 37203 "gram.c"
     break;
 
   case 960: /* CommentStmt: COMMENT ON CAST '(' Typename AS Typename ')' IS comment_text  */
@@ -37252,19 +37212,19 @@
 					n->comment = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37256 "gram.c"
+#line 37216 "gram.c"
     break;
 
   case 961: /* comment_text: Sconst  */
 #line 7069 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 37262 "gram.c"
+#line 37222 "gram.c"
     break;
 
   case 962: /* comment_text: NULL_P  */
 #line 7070 "gram.y"
                                                                                         { (yyval.str) = NULL; }
-#line 37268 "gram.c"
+#line 37228 "gram.c"
     break;
 
   case 963: /* SecLabelStmt: SECURITY LABEL opt_provider ON object_type_any_name any_name IS security_label  */
@@ -37278,7 +37238,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37282 "gram.c"
+#line 37242 "gram.c"
     break;
 
   case 964: /* SecLabelStmt: SECURITY LABEL opt_provider ON COLUMN any_name IS security_label  */
@@ -37292,7 +37252,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37296 "gram.c"
+#line 37256 "gram.c"
     break;
 
   case 965: /* SecLabelStmt: SECURITY LABEL opt_provider ON object_type_name name IS security_label  */
@@ -37306,7 +37266,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37310 "gram.c"
+#line 37270 "gram.c"
     break;
 
   case 966: /* SecLabelStmt: SECURITY LABEL opt_provider ON TYPE_P Typename IS security_label  */
@@ -37320,7 +37280,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37324 "gram.c"
+#line 37284 "gram.c"
     break;
 
   case 967: /* SecLabelStmt: SECURITY LABEL opt_provider ON DOMAIN_P Typename IS security_label  */
@@ -37334,7 +37294,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37338 "gram.c"
+#line 37298 "gram.c"
     break;
 
   case 968: /* SecLabelStmt: SECURITY LABEL opt_provider ON AGGREGATE aggregate_with_argtypes IS security_label  */
@@ -37348,7 +37308,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37352 "gram.c"
+#line 37312 "gram.c"
     break;
 
   case 969: /* SecLabelStmt: SECURITY LABEL opt_provider ON FUNCTION function_with_argtypes IS security_label  */
@@ -37362,7 +37322,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37366 "gram.c"
+#line 37326 "gram.c"
     break;
 
   case 970: /* SecLabelStmt: SECURITY LABEL opt_provider ON LARGE_P OBJECT_P NumericOnly IS security_label  */
@@ -37376,7 +37336,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37380 "gram.c"
+#line 37340 "gram.c"
     break;
 
   case 971: /* SecLabelStmt: SECURITY LABEL opt_provider ON PROCEDURE function_with_argtypes IS security_label  */
@@ -37390,7 +37350,7 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37394 "gram.c"
+#line 37354 "gram.c"
     break;
 
   case 972: /* SecLabelStmt: SECURITY LABEL opt_provider ON ROUTINE function_with_argtypes IS security_label  */
@@ -37404,31 +37364,31 @@
 					n->label = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 37408 "gram.c"
+#line 37368 "gram.c"
     break;
 
   case 973: /* opt_provider: FOR NonReservedWord_or_Sconst  */
 #line 7196 "gram.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 37414 "gram.c"
+#line 37374 "gram.c"
     break;
 
   case 974: /* opt_provider: %empty  */
 #line 7197 "gram.y"
                                                                                 { (yyval.str) = NULL; }
-#line 37420 "gram.c"
+#line 37380 "gram.c"
     break;
 
   case 975: /* security_label: Sconst  */
 #line 7200 "gram.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 37426 "gram.c"
+#line 37386 "gram.c"
     break;
 
   case 976: /* security_label: NULL_P  */
 #line 7201 "gram.y"
                                                                 { (yyval.str) = NULL; }
-#line 37432 "gram.c"
+#line 37392 "gram.c"
     break;
 
   case 977: /* FetchStmt: FETCH fetch_args  */
@@ -37439,7 +37399,7 @@
 					n->ismove = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 37443 "gram.c"
+#line 37403 "gram.c"
     break;
 
   case 978: /* FetchStmt: MOVE fetch_args  */
@@ -37450,7 +37410,7 @@
 					n->ismove = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 37454 "gram.c"
+#line 37414 "gram.c"
     break;
 
   case 979: /* fetch_args: cursor_name  */
@@ -37463,7 +37423,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37467 "gram.c"
+#line 37427 "gram.c"
     break;
 
   case 980: /* fetch_args: from_in cursor_name  */
@@ -37476,7 +37436,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37480 "gram.c"
+#line 37440 "gram.c"
     break;
 
   case 981: /* fetch_args: NEXT opt_from_in cursor_name  */
@@ -37489,7 +37449,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37493 "gram.c"
+#line 37453 "gram.c"
     break;
 
   case 982: /* fetch_args: PRIOR opt_from_in cursor_name  */
@@ -37502,7 +37462,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37506 "gram.c"
+#line 37466 "gram.c"
     break;
 
   case 983: /* fetch_args: FIRST_P opt_from_in cursor_name  */
@@ -37515,7 +37475,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37519 "gram.c"
+#line 37479 "gram.c"
     break;
 
   case 984: /* fetch_args: LAST_P opt_from_in cursor_name  */
@@ -37528,7 +37488,7 @@
 					n->howMany = -1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37532 "gram.c"
+#line 37492 "gram.c"
     break;
 
   case 985: /* fetch_args: ABSOLUTE_P SignedIconst opt_from_in cursor_name  */
@@ -37541,7 +37501,7 @@
 					n->howMany = (yyvsp[-2].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 37545 "gram.c"
+#line 37505 "gram.c"
     break;
 
   case 986: /* fetch_args: RELATIVE_P SignedIconst opt_from_in cursor_name  */
@@ -37554,7 +37514,7 @@
 					n->howMany = (yyvsp[-2].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 37558 "gram.c"
+#line 37518 "gram.c"
     break;
 
   case 987: /* fetch_args: SignedIconst opt_from_in cursor_name  */
@@ -37567,7 +37527,7 @@
 					n->howMany = (yyvsp[-2].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 37571 "gram.c"
+#line 37531 "gram.c"
     break;
 
   case 988: /* fetch_args: ALL opt_from_in cursor_name  */
@@ -37580,7 +37540,7 @@
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *) n;
 				}
-#line 37584 "gram.c"
+#line 37544 "gram.c"
     break;
 
   case 989: /* fetch_args: FORWARD opt_from_in cursor_name  */
@@ -37593,7 +37553,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37597 "gram.c"
+#line 37557 "gram.c"
     break;
 
   case 990: /* fetch_args: FORWARD SignedIconst opt_from_in cursor_name  */
@@ -37606,7 +37566,7 @@
 					n->howMany = (yyvsp[-2].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 37610 "gram.c"
+#line 37570 "gram.c"
     break;
 
   case 991: /* fetch_args: FORWARD ALL opt_from_in cursor_name  */
@@ -37619,7 +37579,7 @@
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *) n;
 				}
-#line 37623 "gram.c"
+#line 37583 "gram.c"
     break;
 
   case 992: /* fetch_args: BACKWARD opt_from_in cursor_name  */
@@ -37632,7 +37592,7 @@
 					n->howMany = 1;
 					(yyval.node) = (Node *) n;
 				}
-#line 37636 "gram.c"
+#line 37596 "gram.c"
     break;
 
   case 993: /* fetch_args: BACKWARD SignedIconst opt_from_in cursor_name  */
@@ -37645,7 +37605,7 @@
 					n->howMany = (yyvsp[-2].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 37649 "gram.c"
+#line 37609 "gram.c"
     break;
 
   case 994: /* fetch_args: BACKWARD ALL opt_from_in cursor_name  */
@@ -37658,7 +37618,7 @@
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *) n;
 				}
-#line 37662 "gram.c"
+#line 37622 "gram.c"
     break;
 
   case 999: /* GrantStmt: GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option opt_granted_by  */
@@ -37676,7 +37636,7 @@
 					n->grantor = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 37680 "gram.c"
+#line 37640 "gram.c"
     break;
 
   case 1000: /* RevokeStmt: REVOKE privileges ON privilege_target FROM grantee_list opt_granted_by opt_drop_behavior  */
@@ -37695,7 +37655,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 37699 "gram.c"
+#line 37659 "gram.c"
     break;
 
   case 1001: /* RevokeStmt: REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_granted_by opt_drop_behavior  */
@@ -37714,25 +37674,25 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 37718 "gram.c"
+#line 37678 "gram.c"
     break;
 
   case 1002: /* privileges: privilege_list  */
 #line 7451 "gram.y"
                                 { (yyval.list) = (yyvsp[0].list); }
-#line 37724 "gram.c"
+#line 37684 "gram.c"
     break;
 
   case 1003: /* privileges: ALL  */
 #line 7453 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 37730 "gram.c"
+#line 37690 "gram.c"
     break;
 
   case 1004: /* privileges: ALL PRIVILEGES  */
 #line 7455 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 37736 "gram.c"
+#line 37696 "gram.c"
     break;
 
   case 1005: /* privileges: ALL '(' columnList ')'  */
@@ -37744,7 +37704,7 @@
 					n->cols = (yyvsp[-1].list);
 					(yyval.list) = list_make1(n);
 				}
-#line 37748 "gram.c"
+#line 37708 "gram.c"
     break;
 
   case 1006: /* privileges: ALL PRIVILEGES '(' columnList ')'  */
@@ -37756,19 +37716,19 @@
 					n->cols = (yyvsp[-1].list);
 					(yyval.list) = list_make1(n);
 				}
-#line 37760 "gram.c"
+#line 37720 "gram.c"
     break;
 
   case 1007: /* privilege_list: privilege  */
 #line 7474 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].accesspriv)); }
-#line 37766 "gram.c"
+#line 37726 "gram.c"
     break;
 
   case 1008: /* privilege_list: privilege_list ',' privilege  */
 #line 7475 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].accesspriv)); }
-#line 37772 "gram.c"
+#line 37732 "gram.c"
     break;
 
   case 1009: /* privilege: SELECT opt_column_list  */
@@ -37780,7 +37740,7 @@
 				n->cols = (yyvsp[0].list);
 				(yyval.accesspriv) = n;
 			}
-#line 37784 "gram.c"
+#line 37744 "gram.c"
     break;
 
   case 1010: /* privilege: REFERENCES opt_column_list  */
@@ -37792,7 +37752,7 @@
 				n->cols = (yyvsp[0].list);
 				(yyval.accesspriv) = n;
 			}
-#line 37796 "gram.c"
+#line 37756 "gram.c"
     break;
 
   case 1011: /* privilege: CREATE opt_column_list  */
@@ -37804,7 +37764,7 @@
 				n->cols = (yyvsp[0].list);
 				(yyval.accesspriv) = n;
 			}
-#line 37808 "gram.c"
+#line 37768 "gram.c"
     break;
 
   case 1012: /* privilege: ALTER SYSTEM_P  */
@@ -37815,7 +37775,7 @@
 				n->cols = NIL;
 				(yyval.accesspriv) = n;
 			}
-#line 37819 "gram.c"
+#line 37779 "gram.c"
     break;
 
   case 1013: /* privilege: ColId opt_column_list  */
@@ -37827,7 +37787,7 @@
 				n->cols = (yyvsp[0].list);
 				(yyval.accesspriv) = n;
 			}
-#line 37831 "gram.c"
+#line 37791 "gram.c"
     break;
 
   case 1014: /* parameter_name_list: parameter_name  */
@@ -37835,7 +37795,7 @@
                         {
 				(yyval.list) = list_make1(makeString((yyvsp[0].str)));
 			}
-#line 37839 "gram.c"
+#line 37799 "gram.c"
     break;
 
   case 1015: /* parameter_name_list: parameter_name_list ',' parameter_name  */
@@ -37843,7 +37803,7 @@
                         {
 				(yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str)));
 			}
-#line 37847 "gram.c"
+#line 37807 "gram.c"
     break;
 
   case 1016: /* parameter_name: ColId  */
@@ -37851,7 +37811,7 @@
                         {
 				(yyval.str) = (yyvsp[0].str);
 			}
-#line 37855 "gram.c"
+#line 37815 "gram.c"
     break;
 
   case 1017: /* parameter_name: parameter_name '.' ColId  */
@@ -37859,7 +37819,7 @@
                         {
 				(yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str));
 			}
-#line 37863 "gram.c"
+#line 37823 "gram.c"
     break;
 
   case 1018: /* privilege_target: qualified_name_list  */
@@ -37872,7 +37832,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37876 "gram.c"
+#line 37836 "gram.c"
     break;
 
   case 1019: /* privilege_target: TABLE qualified_name_list  */
@@ -37885,7 +37845,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37889 "gram.c"
+#line 37849 "gram.c"
     break;
 
   case 1020: /* privilege_target: SEQUENCE qualified_name_list  */
@@ -37898,7 +37858,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37902 "gram.c"
+#line 37862 "gram.c"
     break;
 
   case 1021: /* privilege_target: FOREIGN DATA_P WRAPPER name_list  */
@@ -37911,7 +37871,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37915 "gram.c"
+#line 37875 "gram.c"
     break;
 
   case 1022: /* privilege_target: FOREIGN SERVER name_list  */
@@ -37924,7 +37884,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37928 "gram.c"
+#line 37888 "gram.c"
     break;
 
   case 1023: /* privilege_target: FUNCTION function_with_argtypes_list  */
@@ -37937,7 +37897,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37941 "gram.c"
+#line 37901 "gram.c"
     break;
 
   case 1024: /* privilege_target: PROCEDURE function_with_argtypes_list  */
@@ -37950,7 +37910,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37954 "gram.c"
+#line 37914 "gram.c"
     break;
 
   case 1025: /* privilege_target: ROUTINE function_with_argtypes_list  */
@@ -37963,7 +37923,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37967 "gram.c"
+#line 37927 "gram.c"
     break;
 
   case 1026: /* privilege_target: DATABASE name_list  */
@@ -37976,7 +37936,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37980 "gram.c"
+#line 37940 "gram.c"
     break;
 
   case 1027: /* privilege_target: DOMAIN_P any_name_list  */
@@ -37989,7 +37949,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 37993 "gram.c"
+#line 37953 "gram.c"
     break;
 
   case 1028: /* privilege_target: LANGUAGE name_list  */
@@ -38002,7 +37962,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38006 "gram.c"
+#line 37966 "gram.c"
     break;
 
   case 1029: /* privilege_target: LARGE_P OBJECT_P NumericOnly_list  */
@@ -38015,7 +37975,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38019 "gram.c"
+#line 37979 "gram.c"
     break;
 
   case 1030: /* privilege_target: PARAMETER parameter_name_list  */
@@ -38027,7 +37987,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38031 "gram.c"
+#line 37991 "gram.c"
     break;
 
   case 1031: /* privilege_target: SCHEMA name_list  */
@@ -38040,7 +38000,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38044 "gram.c"
+#line 38004 "gram.c"
     break;
 
   case 1032: /* privilege_target: TABLESPACE name_list  */
@@ -38053,7 +38013,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38057 "gram.c"
+#line 38017 "gram.c"
     break;
 
   case 1033: /* privilege_target: TYPE_P any_name_list  */
@@ -38066,7 +38026,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38070 "gram.c"
+#line 38030 "gram.c"
     break;
 
   case 1034: /* privilege_target: ALL TABLES IN_P SCHEMA name_list  */
@@ -38079,7 +38039,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38083 "gram.c"
+#line 38043 "gram.c"
     break;
 
   case 1035: /* privilege_target: ALL SEQUENCES IN_P SCHEMA name_list  */
@@ -38092,7 +38052,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38096 "gram.c"
+#line 38056 "gram.c"
     break;
 
   case 1036: /* privilege_target: ALL FUNCTIONS IN_P SCHEMA name_list  */
@@ -38105,7 +38065,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38109 "gram.c"
+#line 38069 "gram.c"
     break;
 
   case 1037: /* privilege_target: ALL PROCEDURES IN_P SCHEMA name_list  */
@@ -38118,7 +38078,7 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38122 "gram.c"
+#line 38082 "gram.c"
     break;
 
   case 1038: /* privilege_target: ALL ROUTINES IN_P SCHEMA name_list  */
@@ -38131,43 +38091,43 @@
 					n->objs = (yyvsp[0].list);
 					(yyval.privtarget) = n;
 				}
-#line 38135 "gram.c"
+#line 38095 "gram.c"
     break;
 
   case 1039: /* grantee_list: grantee  */
 #line 7738 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].rolespec)); }
-#line 38141 "gram.c"
+#line 38101 "gram.c"
     break;
 
   case 1040: /* grantee_list: grantee_list ',' grantee  */
 #line 7739 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].rolespec)); }
-#line 38147 "gram.c"
+#line 38107 "gram.c"
     break;
 
   case 1041: /* grantee: RoleSpec  */
 #line 7743 "gram.y"
                                                                                                 { (yyval.rolespec) = (yyvsp[0].rolespec); }
-#line 38153 "gram.c"
+#line 38113 "gram.c"
     break;
 
   case 1042: /* grantee: GROUP_P RoleSpec  */
 #line 7744 "gram.y"
                                                                                         { (yyval.rolespec) = (yyvsp[0].rolespec); }
-#line 38159 "gram.c"
+#line 38119 "gram.c"
     break;
 
   case 1043: /* opt_grant_grant_option: WITH GRANT OPTION  */
 #line 7749 "gram.y"
                                           { (yyval.boolean) = true; }
-#line 38165 "gram.c"
+#line 38125 "gram.c"
     break;
 
   case 1044: /* opt_grant_grant_option: %empty  */
 #line 7750 "gram.y"
                                     { (yyval.boolean) = false; }
-#line 38171 "gram.c"
+#line 38131 "gram.c"
     break;
 
   case 1045: /* GrantRoleStmt: GRANT privilege_list TO role_list opt_granted_by  */
@@ -38182,7 +38142,7 @@
 					n->grantor = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 38186 "gram.c"
+#line 38146 "gram.c"
     break;
 
   case 1046: /* GrantRoleStmt: GRANT privilege_list TO role_list WITH grant_role_opt_list opt_granted_by  */
@@ -38197,7 +38157,7 @@
 					n->grantor = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 38201 "gram.c"
+#line 38161 "gram.c"
     break;
 
   case 1047: /* RevokeRoleStmt: REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
@@ -38213,7 +38173,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 38217 "gram.c"
+#line 38177 "gram.c"
     break;
 
   case 1048: /* RevokeRoleStmt: REVOKE ColId OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
@@ -38232,19 +38192,19 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 38236 "gram.c"
+#line 38196 "gram.c"
     break;
 
   case 1049: /* grant_role_opt_list: grant_role_opt_list ',' grant_role_opt  */
 #line 7815 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 38242 "gram.c"
+#line 38202 "gram.c"
     break;
 
   case 1050: /* grant_role_opt_list: grant_role_opt  */
 #line 7816 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 38248 "gram.c"
+#line 38208 "gram.c"
     break;
 
   case 1051: /* grant_role_opt: ColLabel grant_role_opt_value  */
@@ -38252,37 +38212,37 @@
                         {
 				(yyval.defelt) = makeDefElem(pstrdup((yyvsp[-1].str)), (yyvsp[0].node), (yylsp[-1]));
 			}
-#line 38256 "gram.c"
+#line 38216 "gram.c"
     break;
 
   case 1052: /* grant_role_opt_value: OPTION  */
 #line 7827 "gram.y"
                                         { (yyval.node) = (Node *) makeBoolean(true); }
-#line 38262 "gram.c"
+#line 38222 "gram.c"
     break;
 
   case 1053: /* grant_role_opt_value: TRUE_P  */
 #line 7828 "gram.y"
                                         { (yyval.node) = (Node *) makeBoolean(true); }
-#line 38268 "gram.c"
+#line 38228 "gram.c"
     break;
 
   case 1054: /* grant_role_opt_value: FALSE_P  */
 #line 7829 "gram.y"
                                         { (yyval.node) = (Node *) makeBoolean(false); }
-#line 38274 "gram.c"
+#line 38234 "gram.c"
     break;
 
   case 1055: /* opt_granted_by: GRANTED BY RoleSpec  */
 #line 7832 "gram.y"
                                                                                 { (yyval.rolespec) = (yyvsp[0].rolespec); }
-#line 38280 "gram.c"
+#line 38240 "gram.c"
     break;
 
   case 1056: /* opt_granted_by: %empty  */
 #line 7833 "gram.y"
                                                                                                         { (yyval.rolespec) = NULL; }
-#line 38286 "gram.c"
+#line 38246 "gram.c"
     break;
 
   case 1057: /* AlterDefaultPrivilegesStmt: ALTER DEFAULT PRIVILEGES DefACLOptionList DefACLAction  */
@@ -38294,19 +38254,19 @@
 					n->action = (GrantStmt *) (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 38298 "gram.c"
+#line 38258 "gram.c"
     break;
 
   case 1058: /* DefACLOptionList: DefACLOptionList DefACLOption  */
 #line 7854 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 38304 "gram.c"
+#line 38264 "gram.c"
     break;
 
   case 1059: /* DefACLOptionList: %empty  */
 #line 7855 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 38310 "gram.c"
+#line 38270 "gram.c"
     break;
 
   case 1060: /* DefACLOption: IN_P SCHEMA name_list  */
@@ -38314,7 +38274,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("schemas", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 38318 "gram.c"
+#line 38278 "gram.c"
     break;
 
   case 1061: /* DefACLOption: FOR ROLE role_list  */
@@ -38322,7 +38282,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("roles", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 38326 "gram.c"
+#line 38286 "gram.c"
     break;
 
   case 1062: /* DefACLOption: FOR USER role_list  */
@@ -38330,7 +38290,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("roles", (Node *) (yyvsp[0].list), (yylsp[-2]));
 				}
-#line 38334 "gram.c"
+#line 38294 "gram.c"
     break;
 
   case 1063: /* DefACLAction: GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option  */
@@ -38347,7 +38307,7 @@
 					n->grant_option = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 38351 "gram.c"
+#line 38311 "gram.c"
     break;
 
   case 1064: /* DefACLAction: REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
@@ -38365,7 +38325,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 38369 "gram.c"
+#line 38329 "gram.c"
     break;
 
   case 1065: /* DefACLAction: REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
@@ -38383,43 +38343,43 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 38387 "gram.c"
+#line 38347 "gram.c"
     break;
 
   case 1066: /* defacl_privilege_target: TABLES  */
 #line 7925 "gram.y"
                                                 { (yyval.ival) = OBJECT_TABLE; }
-#line 38393 "gram.c"
+#line 38353 "gram.c"
     break;
 
   case 1067: /* defacl_privilege_target: FUNCTIONS  */
 #line 7926 "gram.y"
                                                 { (yyval.ival) = OBJECT_FUNCTION; }
-#line 38399 "gram.c"
+#line 38359 "gram.c"
     break;
 
   case 1068: /* defacl_privilege_target: ROUTINES  */
 #line 7927 "gram.y"
                                                 { (yyval.ival) = OBJECT_FUNCTION; }
-#line 38405 "gram.c"
+#line 38365 "gram.c"
     break;
 
   case 1069: /* defacl_privilege_target: SEQUENCES  */
 #line 7928 "gram.y"
                                                 { (yyval.ival) = OBJECT_SEQUENCE; }
-#line 38411 "gram.c"
+#line 38371 "gram.c"
     break;
 
   case 1070: /* defacl_privilege_target: TYPES_P  */
 #line 7929 "gram.y"
                                                 { (yyval.ival) = OBJECT_TYPE; }
-#line 38417 "gram.c"
+#line 38377 "gram.c"
     break;
 
   case 1071: /* defacl_privilege_target: SCHEMAS  */
 #line 7930 "gram.y"
                                                 { (yyval.ival) = OBJECT_SCHEMA; }
-#line 38423 "gram.c"
+#line 38383 "gram.c"
     break;
 
   case 1072: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently opt_single_name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_unique_null_treatment opt_reloptions OptTableSpace where_clause  */
@@ -38453,7 +38413,7 @@
 					n->reset_default_tblspc = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 38457 "gram.c"
+#line 38417 "gram.c"
     break;
 
   case 1073: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently IF_P NOT EXISTS name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_unique_null_treatment opt_reloptions OptTableSpace where_clause  */
@@ -38487,43 +38447,43 @@
 					n->reset_default_tblspc = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 38491 "gram.c"
+#line 38451 "gram.c"
     break;
 
   case 1074: /* opt_unique: UNIQUE  */
 #line 8009 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 38497 "gram.c"
+#line 38457 "gram.c"
     break;
 
   case 1075: /* opt_unique: %empty  */
 #line 8010 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 38503 "gram.c"
+#line 38463 "gram.c"
     break;
 
   case 1076: /* access_method_clause: USING name  */
 #line 8014 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 38509 "gram.c"
+#line 38469 "gram.c"
     break;
 
   case 1077: /* access_method_clause: %empty  */
 #line 8015 "gram.y"
                                                                                                 { (yyval.str) = DEFAULT_INDEX_TYPE; }
-#line 38515 "gram.c"
+#line 38475 "gram.c"
     break;
 
   case 1078: /* index_params: index_elem  */
 #line 8018 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].ielem)); }
-#line 38521 "gram.c"
+#line 38481 "gram.c"
     break;
 
   case 1079: /* index_params: index_params ',' index_elem  */
 #line 8019 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].ielem)); }
-#line 38527 "gram.c"
+#line 38487 "gram.c"
     break;
 
   case 1080: /* index_elem_options: opt_collate opt_qualified_name opt_asc_desc opt_nulls_order  */
@@ -38539,7 +38499,7 @@
 			(yyval.ielem)->ordering = (yyvsp[-1].ival);
 			(yyval.ielem)->nulls_ordering = (yyvsp[0].ival);
 		}
-#line 38543 "gram.c"
+#line 38503 "gram.c"
     break;
 
   case 1081: /* index_elem_options: opt_collate any_name reloptions opt_asc_desc opt_nulls_order  */
@@ -38555,7 +38515,7 @@
 			(yyval.ielem)->ordering = (yyvsp[-1].ival);
 			(yyval.ielem)->nulls_ordering = (yyvsp[0].ival);
 		}
-#line 38559 "gram.c"
+#line 38519 "gram.c"
     break;
 
   case 1082: /* index_elem: ColId index_elem_options  */
@@ -38564,7 +38524,7 @@
 					(yyval.ielem) = (yyvsp[0].ielem);
 					(yyval.ielem)->name = (yyvsp[-1].str);
 				}
-#line 38568 "gram.c"
+#line 38528 "gram.c"
     break;
 
   case 1083: /* index_elem: func_expr_windowless index_elem_options  */
@@ -38573,7 +38533,7 @@
 					(yyval.ielem) = (yyvsp[0].ielem);
 					(yyval.ielem)->expr = (yyvsp[-1].node);
 				}
-#line 38577 "gram.c"
+#line 38537 "gram.c"
     break;
 
   case 1084: /* index_elem: '(' a_expr ')' index_elem_options  */
@@ -38582,79 +38542,79 @@
 					(yyval.ielem) = (yyvsp[0].ielem);
 					(yyval.ielem)->expr = (yyvsp[-2].node);
 				}
-#line 38586 "gram.c"
+#line 38546 "gram.c"
     break;
 
   case 1085: /* opt_include: INCLUDE '(' index_including_params ')'  */
 #line 8072 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 38592 "gram.c"
+#line 38552 "gram.c"
     break;
 
   case 1086: /* opt_include: %empty  */
 #line 8073 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 38598 "gram.c"
+#line 38558 "gram.c"
     break;
 
   case 1087: /* index_including_params: index_elem  */
 #line 8076 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].ielem)); }
-#line 38604 "gram.c"
+#line 38564 "gram.c"
     break;
 
   case 1088: /* index_including_params: index_including_params ',' index_elem  */
 #line 8077 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].ielem)); }
-#line 38610 "gram.c"
+#line 38570 "gram.c"
     break;
 
   case 1089: /* opt_collate: COLLATE any_name  */
 #line 8080 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 38616 "gram.c"
+#line 38576 "gram.c"
     break;
 
   case 1090: /* opt_collate: %empty  */
 #line 8081 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 38622 "gram.c"
+#line 38582 "gram.c"
     break;
 
   case 1091: /* opt_asc_desc: ASC  */
 #line 8085 "gram.y"
                                                                         { (yyval.ival) = SORTBY_ASC; }
-#line 38628 "gram.c"
+#line 38588 "gram.c"
     break;
 
   case 1092: /* opt_asc_desc: DESC  */
 #line 8086 "gram.y"
                                                                                 { (yyval.ival) = SORTBY_DESC; }
-#line 38634 "gram.c"
+#line 38594 "gram.c"
     break;
 
   case 1093: /* opt_asc_desc: %empty  */
 #line 8087 "gram.y"
                                                                                 { (yyval.ival) = SORTBY_DEFAULT; }
-#line 38640 "gram.c"
+#line 38600 "gram.c"
     break;
 
   case 1094: /* opt_nulls_order: NULLS_LA FIRST_P  */
 #line 8090 "gram.y"
                                                         { (yyval.ival) = SORTBY_NULLS_FIRST; }
-#line 38646 "gram.c"
+#line 38606 "gram.c"
     break;
 
   case 1095: /* opt_nulls_order: NULLS_LA LAST_P  */
 #line 8091 "gram.y"
                                                                         { (yyval.ival) = SORTBY_NULLS_LAST; }
-#line 38652 "gram.c"
+#line 38612 "gram.c"
     break;
 
   case 1096: /* opt_nulls_order: %empty  */
 #line 8092 "gram.y"
                                                                                 { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
-#line 38658 "gram.c"
+#line 38618 "gram.c"
     break;
 
   case 1097: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return opt_createfunc_opt_list opt_routine_body  */
@@ -38671,7 +38631,7 @@
 					n->sql_body = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 38675 "gram.c"
+#line 38635 "gram.c"
     break;
 
   case 1098: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE '(' table_func_column_list ')' opt_createfunc_opt_list opt_routine_body  */
@@ -38689,7 +38649,7 @@
 					n->sql_body = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 38693 "gram.c"
+#line 38653 "gram.c"
     break;
 
   case 1099: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults opt_createfunc_opt_list opt_routine_body  */
@@ -38706,7 +38666,7 @@
 					n->sql_body = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 38710 "gram.c"
+#line 38670 "gram.c"
     break;
 
   case 1100: /* CreateFunctionStmt: CREATE opt_or_replace PROCEDURE func_name func_args_with_defaults opt_createfunc_opt_list opt_routine_body  */
@@ -38723,55 +38683,55 @@
 					n->sql_body = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 38727 "gram.c"
+#line 38687 "gram.c"
     break;
 
   case 1101: /* opt_or_replace: OR REPLACE  */
 #line 8168 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 38733 "gram.c"
+#line 38693 "gram.c"
     break;
 
   case 1102: /* opt_or_replace: %empty  */
 #line 8169 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 38739 "gram.c"
+#line 38699 "gram.c"
     break;
 
   case 1103: /* func_args: '(' func_args_list ')'  */
 #line 8172 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 38745 "gram.c"
+#line 38705 "gram.c"
     break;
 
   case 1104: /* func_args: '(' ')'  */
 #line 8173 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 38751 "gram.c"
+#line 38711 "gram.c"
     break;
 
   case 1105: /* func_args_list: func_arg  */
 #line 8177 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
-#line 38757 "gram.c"
+#line 38717 "gram.c"
     break;
 
   case 1106: /* func_args_list: func_args_list ',' func_arg  */
 #line 8178 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
-#line 38763 "gram.c"
+#line 38723 "gram.c"
     break;
 
   case 1107: /* function_with_argtypes_list: function_with_argtypes  */
 #line 8182 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].objwithargs)); }
-#line 38769 "gram.c"
+#line 38729 "gram.c"
     break;
 
   case 1108: /* function_with_argtypes_list: function_with_argtypes_list ',' function_with_argtypes  */
 #line 8184 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].objwithargs)); }
-#line 38775 "gram.c"
+#line 38735 "gram.c"
     break;
 
   case 1109: /* function_with_argtypes: func_name func_args  */
@@ -38784,7 +38744,7 @@
 					n->objfuncargs = (yyvsp[0].list);
 					(yyval.objwithargs) = n;
 				}
-#line 38788 "gram.c"
+#line 38748 "gram.c"
     break;
 
   case 1110: /* function_with_argtypes: type_func_name_keyword  */
@@ -38796,7 +38756,7 @@
 					n->args_unspecified = true;
 					(yyval.objwithargs) = n;
 				}
-#line 38800 "gram.c"
+#line 38760 "gram.c"
     break;
 
   case 1111: /* function_with_argtypes: ColId  */
@@ -38808,7 +38768,7 @@
 					n->args_unspecified = true;
 					(yyval.objwithargs) = n;
 				}
-#line 38812 "gram.c"
+#line 38772 "gram.c"
     break;
 
   case 1112: /* function_with_argtypes: ColId indirection  */
@@ -38821,31 +38781,31 @@
 					n->args_unspecified = true;
 					(yyval.objwithargs) = n;
 				}
-#line 38825 "gram.c"
+#line 38785 "gram.c"
     break;
 
   case 1113: /* func_args_with_defaults: '(' func_args_with_defaults_list ')'  */
 #line 8234 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 38831 "gram.c"
+#line 38791 "gram.c"
     break;
 
   case 1114: /* func_args_with_defaults: '(' ')'  */
 #line 8235 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 38837 "gram.c"
+#line 38797 "gram.c"
     break;
 
   case 1115: /* func_args_with_defaults_list: func_arg_with_default  */
 #line 8239 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
-#line 38843 "gram.c"
+#line 38803 "gram.c"
     break;
 
   case 1116: /* func_args_with_defaults_list: func_args_with_defaults_list ',' func_arg_with_default  */
 #line 8241 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
-#line 38849 "gram.c"
+#line 38809 "gram.c"
     break;
 
   case 1117: /* func_arg: arg_class param_name func_type  */
@@ -38859,7 +38819,7 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 38863 "gram.c"
+#line 38823 "gram.c"
     break;
 
   case 1118: /* func_arg: param_name arg_class func_type  */
@@ -38873,7 +38833,7 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 38877 "gram.c"
+#line 38837 "gram.c"
     break;
 
   case 1119: /* func_arg: param_name func_type  */
@@ -38887,7 +38847,7 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 38891 "gram.c"
+#line 38851 "gram.c"
     break;
 
   case 1120: /* func_arg: arg_class func_type  */
@@ -38901,7 +38861,7 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 38905 "gram.c"
+#line 38865 "gram.c"
     break;
 
   case 1121: /* func_arg: func_type  */
@@ -38915,37 +38875,37 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 38919 "gram.c"
+#line 38879 "gram.c"
     break;
 
   case 1122: /* arg_class: IN_P  */
 #line 8308 "gram.y"
                                                                                 { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
-#line 38925 "gram.c"
+#line 38885 "gram.c"
     break;
 
   case 1123: /* arg_class: OUT_P  */
 #line 8309 "gram.y"
                                                                                         { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
-#line 38931 "gram.c"
+#line 38891 "gram.c"
     break;
 
   case 1124: /* arg_class: INOUT  */
 #line 8310 "gram.y"
                                                                                         { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
-#line 38937 "gram.c"
+#line 38897 "gram.c"
     break;
 
   case 1125: /* arg_class: IN_P OUT_P  */
 #line 8311 "gram.y"
                                                                                 { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
-#line 38943 "gram.c"
+#line 38903 "gram.c"
     break;
 
   case 1126: /* arg_class: VARIADIC  */
 #line 8312 "gram.y"
                                                                                         { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
-#line 38949 "gram.c"
+#line 38909 "gram.c"
     break;
 
   case 1128: /* func_return: func_type  */
@@ -38957,13 +38917,13 @@
 					 */
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 38961 "gram.c"
+#line 38921 "gram.c"
     break;
 
   case 1129: /* func_type: Typename  */
 #line 8337 "gram.y"
                                                                                         { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 38967 "gram.c"
+#line 38927 "gram.c"
     break;
 
   case 1130: /* func_type: type_function_name attrs '%' TYPE_P  */
@@ -38973,7 +38933,7 @@
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->location = (yylsp[-3]);
 				}
-#line 38977 "gram.c"
+#line 38937 "gram.c"
     break;
 
   case 1131: /* func_type: SETOF type_function_name attrs '%' TYPE_P  */
@@ -38984,7 +38944,7 @@
 					(yyval.typnam)->setof = true;
 					(yyval.typnam)->location = (yylsp[-3]);
 				}
-#line 38988 "gram.c"
+#line 38948 "gram.c"
     break;
 
   case 1132: /* func_arg_with_default: func_arg  */
@@ -38992,7 +38952,7 @@
                                 {
 					(yyval.fun_param) = (yyvsp[0].fun_param);
 				}
-#line 38996 "gram.c"
+#line 38956 "gram.c"
     break;
 
   case 1133: /* func_arg_with_default: func_arg DEFAULT a_expr  */
@@ -39001,7 +38961,7 @@
 					(yyval.fun_param) = (yyvsp[-2].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[0].node);
 				}
-#line 39005 "gram.c"
+#line 38965 "gram.c"
     break;
 
   case 1134: /* func_arg_with_default: func_arg '=' a_expr  */
@@ -39010,7 +38970,7 @@
 					(yyval.fun_param) = (yyvsp[-2].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[0].node);
 				}
-#line 39014 "gram.c"
+#line 38974 "gram.c"
     break;
 
   case 1135: /* aggr_arg: func_arg  */
@@ -39025,7 +38985,7 @@
 								 parser_errposition((yylsp[0]))));
 					(yyval.fun_param) = (yyvsp[0].fun_param);
 				}
-#line 39029 "gram.c"
+#line 38989 "gram.c"
     break;
 
   case 1136: /* aggr_args: '(' '*' ')'  */
@@ -39033,7 +38993,7 @@
                                 {
 					(yyval.list) = list_make2(NIL, makeInteger(-1));
 				}
-#line 39037 "gram.c"
+#line 38997 "gram.c"
     break;
 
   case 1137: /* aggr_args: '(' aggr_args_list ')'  */
@@ -39041,7 +39001,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(-1));
 				}
-#line 39045 "gram.c"
+#line 39005 "gram.c"
     break;
 
   case 1138: /* aggr_args: '(' ORDER BY aggr_args_list ')'  */
@@ -39049,7 +39009,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(0));
 				}
-#line 39053 "gram.c"
+#line 39013 "gram.c"
     break;
 
   case 1139: /* aggr_args: '(' aggr_args_list ORDER BY aggr_args_list ')'  */
@@ -39058,19 +39018,19 @@
 					/* this is the only case requiring consistency checking */
 					(yyval.list) = makeOrderedSetArgs((yyvsp[-4].list), (yyvsp[-1].list), yyscanner);
 				}
-#line 39062 "gram.c"
+#line 39022 "gram.c"
     break;
 
   case 1140: /* aggr_args_list: aggr_arg  */
 #line 8433 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
-#line 39068 "gram.c"
+#line 39028 "gram.c"
     break;
 
   case 1141: /* aggr_args_list: aggr_args_list ',' aggr_arg  */
 #line 8434 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
-#line 39074 "gram.c"
+#line 39034 "gram.c"
     break;
 
   case 1142: /* aggregate_with_argtypes: func_name aggr_args  */
@@ -39083,37 +39043,37 @@
 					n->objfuncargs = (List *) linitial((yyvsp[0].list));
 					(yyval.objwithargs) = n;
 				}
-#line 39087 "gram.c"
+#line 39047 "gram.c"
     break;
 
   case 1143: /* aggregate_with_argtypes_list: aggregate_with_argtypes  */
 #line 8450 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].objwithargs)); }
-#line 39093 "gram.c"
+#line 39053 "gram.c"
     break;
 
   case 1144: /* aggregate_with_argtypes_list: aggregate_with_argtypes_list ',' aggregate_with_argtypes  */
 #line 8452 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].objwithargs)); }
-#line 39099 "gram.c"
+#line 39059 "gram.c"
     break;
 
   case 1146: /* opt_createfunc_opt_list: %empty  */
 #line 8457 "gram.y"
                                     { (yyval.list) = NIL; }
-#line 39105 "gram.c"
+#line 39065 "gram.c"
     break;
 
   case 1147: /* createfunc_opt_list: createfunc_opt_item  */
 #line 8462 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 39111 "gram.c"
+#line 39071 "gram.c"
     break;
 
   case 1148: /* createfunc_opt_list: createfunc_opt_list createfunc_opt_item  */
 #line 8463 "gram.y"
                                                                   { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 39117 "gram.c"
+#line 39077 "gram.c"
     break;
 
   case 1149: /* common_func_opt_item: CALLED ON NULL_P INPUT_P  */
@@ -39121,7 +39081,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("strict", (Node *) makeBoolean(false), (yylsp[-3]));
 				}
-#line 39125 "gram.c"
+#line 39085 "gram.c"
     break;
 
   case 1150: /* common_func_opt_item: RETURNS NULL_P ON NULL_P INPUT_P  */
@@ -39129,7 +39089,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("strict", (Node *) makeBoolean(true), (yylsp[-4]));
 				}
-#line 39133 "gram.c"
+#line 39093 "gram.c"
     break;
 
   case 1151: /* common_func_opt_item: STRICT_P  */
@@ -39137,7 +39097,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("strict", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 39141 "gram.c"
+#line 39101 "gram.c"
     break;
 
   case 1152: /* common_func_opt_item: IMMUTABLE  */
@@ -39145,7 +39105,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("volatility", (Node *) makeString("immutable"), (yylsp[0]));
 				}
-#line 39149 "gram.c"
+#line 39109 "gram.c"
     break;
 
   case 1153: /* common_func_opt_item: STABLE  */
@@ -39153,7 +39113,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("volatility", (Node *) makeString("stable"), (yylsp[0]));
 				}
-#line 39157 "gram.c"
+#line 39117 "gram.c"
     break;
 
   case 1154: /* common_func_opt_item: VOLATILE  */
@@ -39161,7 +39121,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("volatility", (Node *) makeString("volatile"), (yylsp[0]));
 				}
-#line 39165 "gram.c"
+#line 39125 "gram.c"
     break;
 
   case 1155: /* common_func_opt_item: EXTERNAL SECURITY DEFINER  */
@@ -39169,7 +39129,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("security", (Node *) makeBoolean(true), (yylsp[-2]));
 				}
-#line 39173 "gram.c"
+#line 39133 "gram.c"
     break;
 
   case 1156: /* common_func_opt_item: EXTERNAL SECURITY INVOKER  */
@@ -39177,7 +39137,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("security", (Node *) makeBoolean(false), (yylsp[-2]));
 				}
-#line 39181 "gram.c"
+#line 39141 "gram.c"
     break;
 
   case 1157: /* common_func_opt_item: SECURITY DEFINER  */
@@ -39185,7 +39145,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("security", (Node *) makeBoolean(true), (yylsp[-1]));
 				}
-#line 39189 "gram.c"
+#line 39149 "gram.c"
     break;
 
   case 1158: /* common_func_opt_item: SECURITY INVOKER  */
@@ -39193,7 +39153,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("security", (Node *) makeBoolean(false), (yylsp[-1]));
 				}
-#line 39197 "gram.c"
+#line 39157 "gram.c"
     break;
 
   case 1159: /* common_func_opt_item: LEAKPROOF  */
@@ -39201,7 +39161,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 39205 "gram.c"
+#line 39165 "gram.c"
     break;
 
   case 1160: /* common_func_opt_item: NOT LEAKPROOF  */
@@ -39209,7 +39169,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *) makeBoolean(false), (yylsp[-1]));
 				}
-#line 39213 "gram.c"
+#line 39173 "gram.c"
     break;
 
   case 1161: /* common_func_opt_item: COST NumericOnly  */
@@ -39217,7 +39177,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("cost", (Node *) (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 39221 "gram.c"
+#line 39181 "gram.c"
     break;
 
   case 1162: /* common_func_opt_item: ROWS NumericOnly  */
@@ -39225,7 +39185,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("rows", (Node *) (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 39229 "gram.c"
+#line 39189 "gram.c"
     break;
 
   case 1163: /* common_func_opt_item: SUPPORT any_name  */
@@ -39233,7 +39193,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("support", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 39237 "gram.c"
+#line 39197 "gram.c"
     break;
 
   case 1164: /* common_func_opt_item: FunctionSetResetClause  */
@@ -39242,7 +39202,7 @@
 					/* we abuse the normal content of a DefElem here */
 					(yyval.defelt) = makeDefElem("set", (Node *) (yyvsp[0].vsetstmt), (yylsp[0]));
 				}
-#line 39246 "gram.c"
+#line 39206 "gram.c"
     break;
 
   case 1165: /* common_func_opt_item: PARALLEL ColId  */
@@ -39250,7 +39210,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("parallel", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 39254 "gram.c"
+#line 39214 "gram.c"
     break;
 
   case 1166: /* createfunc_opt_item: AS func_as  */
@@ -39258,7 +39218,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("as", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 39262 "gram.c"
+#line 39222 "gram.c"
     break;
 
   case 1167: /* createfunc_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
@@ -39266,7 +39226,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("language", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 39270 "gram.c"
+#line 39230 "gram.c"
     break;
 
   case 1168: /* createfunc_opt_item: TRANSFORM transform_type_list  */
@@ -39274,7 +39234,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("transform", (Node *) (yyvsp[0].list), (yylsp[-1]));
 				}
-#line 39278 "gram.c"
+#line 39238 "gram.c"
     break;
 
   case 1169: /* createfunc_opt_item: WINDOW  */
@@ -39282,7 +39242,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("window", (Node *) makeBoolean(true), (yylsp[0]));
 				}
-#line 39286 "gram.c"
+#line 39246 "gram.c"
     break;
 
   case 1170: /* createfunc_opt_item: common_func_opt_item  */
@@ -39290,13 +39250,13 @@
                                 {
 					(yyval.defelt) = (yyvsp[0].defelt);
 				}
-#line 39294 "gram.c"
+#line 39254 "gram.c"
     break;
 
   case 1171: /* func_as: Sconst  */
 #line 8564 "gram.y"
                                                                 { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 39300 "gram.c"
+#line 39260 "gram.c"
     break;
 
   case 1172: /* func_as: Sconst ',' Sconst  */
@@ -39304,7 +39264,7 @@
                                 {
 					(yyval.list) = list_make2(makeString((yyvsp[-2].str)), makeString((yyvsp[0].str)));
 				}
-#line 39308 "gram.c"
+#line 39268 "gram.c"
     break;
 
   case 1173: /* ReturnStmt: RETURN a_expr  */
@@ -39315,7 +39275,7 @@
 					r->returnval = (Node *) (yyvsp[0].node);
 					(yyval.node) = (Node *) r;
 				}
-#line 39319 "gram.c"
+#line 39279 "gram.c"
     break;
 
   case 1174: /* opt_routine_body: ReturnStmt  */
@@ -39323,7 +39283,7 @@
                                 {
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 39327 "gram.c"
+#line 39287 "gram.c"
     break;
 
   case 1175: /* opt_routine_body: BEGIN_P ATOMIC routine_body_stmt_list END_P  */
@@ -39337,7 +39297,7 @@
 					 */
 					(yyval.node) = (Node *) list_make1((yyvsp[-1].list));
 				}
-#line 39341 "gram.c"
+#line 39301 "gram.c"
     break;
 
   case 1176: /* opt_routine_body: %empty  */
@@ -39345,7 +39305,7 @@
                                 {
 					(yyval.node) = NULL;
 				}
-#line 39349 "gram.c"
+#line 39309 "gram.c"
     break;
 
   case 1177: /* routine_body_stmt_list: routine_body_stmt_list routine_body_stmt ';'  */
@@ -39357,7 +39317,7 @@
 					else
 						(yyval.list) = (yyvsp[-2].list);
 				}
-#line 39361 "gram.c"
+#line 39321 "gram.c"
     break;
 
   case 1178: /* routine_body_stmt_list: %empty  */
@@ -39365,31 +39325,31 @@
                                 {
 					(yyval.list) = NIL;
 				}
-#line 39369 "gram.c"
+#line 39329 "gram.c"
     break;
 
   case 1181: /* transform_type_list: FOR TYPE_P Typename  */
 #line 8622 "gram.y"
                                             { (yyval.list) = list_make1((yyvsp[0].typnam)); }
-#line 39375 "gram.c"
+#line 39335 "gram.c"
     break;
 
   case 1182: /* transform_type_list: transform_type_list ',' FOR TYPE_P Typename  */
 #line 8623 "gram.y"
                                                                       { (yyval.list) = lappend((yyvsp[-4].list), (yyvsp[0].typnam)); }
-#line 39381 "gram.c"
+#line 39341 "gram.c"
     break;
 
   case 1183: /* opt_definition: WITH definition  */
 #line 8627 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 39387 "gram.c"
+#line 39347 "gram.c"
     break;
 
   case 1184: /* opt_definition: %empty  */
 #line 8628 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 39393 "gram.c"
+#line 39353 "gram.c"
     break;
 
   case 1185: /* table_func_column: param_name func_type  */
@@ -39403,7 +39363,7 @@
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
 				}
-#line 39407 "gram.c"
+#line 39367 "gram.c"
     break;
 
   case 1186: /* table_func_column_list: table_func_column  */
@@ -39411,7 +39371,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].fun_param));
 				}
-#line 39415 "gram.c"
+#line 39375 "gram.c"
     break;
 
   case 1187: /* table_func_column_list: table_func_column_list ',' table_func_column  */
@@ -39419,7 +39379,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param));
 				}
-#line 39423 "gram.c"
+#line 39383 "gram.c"
     break;
 
   case 1188: /* AlterFunctionStmt: ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -39432,7 +39392,7 @@
 					n->actions = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 39436 "gram.c"
+#line 39396 "gram.c"
     break;
 
   case 1189: /* AlterFunctionStmt: ALTER PROCEDURE function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -39445,7 +39405,7 @@
 					n->actions = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 39449 "gram.c"
+#line 39409 "gram.c"
     break;
 
   case 1190: /* AlterFunctionStmt: ALTER ROUTINE function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -39458,19 +39418,19 @@
 					n->actions = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 39462 "gram.c"
+#line 39422 "gram.c"
     break;
 
   case 1191: /* alterfunc_opt_list: common_func_opt_item  */
 #line 8694 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 39468 "gram.c"
+#line 39428 "gram.c"
     break;
 
   case 1192: /* alterfunc_opt_list: alterfunc_opt_list common_func_opt_item  */
 #line 8695 "gram.y"
                                                                   { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 39474 "gram.c"
+#line 39434 "gram.c"
     break;
 
   case 1195: /* RemoveFuncStmt: DROP FUNCTION function_with_argtypes_list opt_drop_behavior  */
@@ -39485,7 +39445,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39489 "gram.c"
+#line 39449 "gram.c"
     break;
 
   case 1196: /* RemoveFuncStmt: DROP FUNCTION IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -39500,7 +39460,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39504 "gram.c"
+#line 39464 "gram.c"
     break;
 
   case 1197: /* RemoveFuncStmt: DROP PROCEDURE function_with_argtypes_list opt_drop_behavior  */
@@ -39515,7 +39475,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39519 "gram.c"
+#line 39479 "gram.c"
     break;
 
   case 1198: /* RemoveFuncStmt: DROP PROCEDURE IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -39530,7 +39490,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39534 "gram.c"
+#line 39494 "gram.c"
     break;
 
   case 1199: /* RemoveFuncStmt: DROP ROUTINE function_with_argtypes_list opt_drop_behavior  */
@@ -39545,7 +39505,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39549 "gram.c"
+#line 39509 "gram.c"
     break;
 
   case 1200: /* RemoveFuncStmt: DROP ROUTINE IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -39560,7 +39520,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39564 "gram.c"
+#line 39524 "gram.c"
     break;
 
   case 1201: /* RemoveAggrStmt: DROP AGGREGATE aggregate_with_argtypes_list opt_drop_behavior  */
@@ -39575,7 +39535,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39579 "gram.c"
+#line 39539 "gram.c"
     break;
 
   case 1202: /* RemoveAggrStmt: DROP AGGREGATE IF_P EXISTS aggregate_with_argtypes_list opt_drop_behavior  */
@@ -39590,7 +39550,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39594 "gram.c"
+#line 39554 "gram.c"
     break;
 
   case 1203: /* RemoveOperStmt: DROP OPERATOR operator_with_argtypes_list opt_drop_behavior  */
@@ -39605,7 +39565,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39609 "gram.c"
+#line 39569 "gram.c"
     break;
 
   case 1204: /* RemoveOperStmt: DROP OPERATOR IF_P EXISTS operator_with_argtypes_list opt_drop_behavior  */
@@ -39620,7 +39580,7 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39624 "gram.c"
+#line 39584 "gram.c"
     break;
 
   case 1205: /* oper_argtypes: '(' Typename ')'  */
@@ -39632,49 +39592,49 @@
 							errhint("Use NONE to denote the missing argument of a unary operator."),
 							parser_errposition((yylsp[0]))));
 				}
-#line 39636 "gram.c"
+#line 39596 "gram.c"
     break;
 
   case 1206: /* oper_argtypes: '(' Typename ',' Typename ')'  */
 #line 8846 "gram.y"
                                         { (yyval.list) = list_make2((yyvsp[-3].typnam), (yyvsp[-1].typnam)); }
-#line 39642 "gram.c"
+#line 39602 "gram.c"
     break;
 
   case 1207: /* oper_argtypes: '(' NONE ',' Typename ')'  */
 #line 8848 "gram.y"
                                         { (yyval.list) = list_make2(NULL, (yyvsp[-1].typnam)); }
-#line 39648 "gram.c"
+#line 39608 "gram.c"
     break;
 
   case 1208: /* oper_argtypes: '(' Typename ',' NONE ')'  */
 #line 8850 "gram.y"
                                         { (yyval.list) = list_make2((yyvsp[-3].typnam), NULL); }
-#line 39654 "gram.c"
+#line 39614 "gram.c"
     break;
 
   case 1209: /* any_operator: all_Op  */
 #line 8855 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 39660 "gram.c"
+#line 39620 "gram.c"
     break;
 
   case 1210: /* any_operator: ColId '.' any_operator  */
 #line 8857 "gram.y"
                                         { (yyval.list) = lcons(makeString((yyvsp[-2].str)), (yyvsp[0].list)); }
-#line 39666 "gram.c"
+#line 39626 "gram.c"
     break;
 
   case 1211: /* operator_with_argtypes_list: operator_with_argtypes  */
 #line 8861 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].objwithargs)); }
-#line 39672 "gram.c"
+#line 39632 "gram.c"
     break;
 
   case 1212: /* operator_with_argtypes_list: operator_with_argtypes_list ',' operator_with_argtypes  */
 #line 8863 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].objwithargs)); }
-#line 39678 "gram.c"
+#line 39638 "gram.c"
     break;
 
   case 1213: /* operator_with_argtypes: any_operator oper_argtypes  */
@@ -39686,7 +39646,7 @@
 					n->objargs = (yyvsp[0].list);
 					(yyval.objwithargs) = n;
 				}
-#line 39690 "gram.c"
+#line 39650 "gram.c"
     break;
 
   case 1214: /* DoStmt: DO dostmt_opt_list  */
@@ -39697,19 +39657,19 @@
 					n->args = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 39701 "gram.c"
+#line 39661 "gram.c"
     break;
 
   case 1215: /* dostmt_opt_list: dostmt_opt_item  */
 #line 8896 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 39707 "gram.c"
+#line 39667 "gram.c"
     break;
 
   case 1216: /* dostmt_opt_list: dostmt_opt_list dostmt_opt_item  */
 #line 8897 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 39713 "gram.c"
+#line 39673 "gram.c"
     break;
 
   case 1217: /* dostmt_opt_item: Sconst  */
@@ -39717,7 +39677,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("as", (Node *) makeString((yyvsp[0].str)), (yylsp[0]));
 				}
-#line 39721 "gram.c"
+#line 39681 "gram.c"
     break;
 
   case 1218: /* dostmt_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
@@ -39725,7 +39685,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("language", (Node *) makeString((yyvsp[0].str)), (yylsp[-1]));
 				}
-#line 39729 "gram.c"
+#line 39689 "gram.c"
     break;
 
   case 1219: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH FUNCTION function_with_argtypes cast_context  */
@@ -39740,7 +39700,7 @@
 					n->inout = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39744 "gram.c"
+#line 39704 "gram.c"
     break;
 
   case 1220: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITHOUT FUNCTION cast_context  */
@@ -39755,7 +39715,7 @@
 					n->inout = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39759 "gram.c"
+#line 39719 "gram.c"
     break;
 
   case 1221: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH INOUT cast_context  */
@@ -39770,25 +39730,25 @@
 					n->inout = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 39774 "gram.c"
+#line 39734 "gram.c"
     break;
 
   case 1222: /* cast_context: AS IMPLICIT_P  */
 #line 8955 "gram.y"
                                                                 { (yyval.ival) = COERCION_IMPLICIT; }
-#line 39780 "gram.c"
+#line 39740 "gram.c"
     break;
 
   case 1223: /* cast_context: AS ASSIGNMENT  */
 #line 8956 "gram.y"
                                                                                 { (yyval.ival) = COERCION_ASSIGNMENT; }
-#line 39786 "gram.c"
+#line 39746 "gram.c"
     break;
 
   case 1224: /* cast_context: %empty  */
 #line 8957 "gram.y"
                                                                                         { (yyval.ival) = COERCION_EXPLICIT; }
-#line 39792 "gram.c"
+#line 39752 "gram.c"
     break;
 
   case 1225: /* DropCastStmt: DROP CAST opt_if_exists '(' Typename AS Typename ')' opt_drop_behavior  */
@@ -39803,19 +39763,19 @@
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39807 "gram.c"
+#line 39767 "gram.c"
     break;
 
   case 1226: /* opt_if_exists: IF_P EXISTS  */
 #line 8974 "gram.y"
                                                                         { (yyval.boolean) = true; }
-#line 39813 "gram.c"
+#line 39773 "gram.c"
     break;
 
   case 1227: /* opt_if_exists: %empty  */
 #line 8975 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 39819 "gram.c"
+#line 39779 "gram.c"
     break;
 
   case 1228: /* CreateTransformStmt: CREATE opt_or_replace TRANSFORM FOR Typename LANGUAGE name '(' transform_element_list ')'  */
@@ -39830,7 +39790,7 @@
 					n->tosql = lsecond((yyvsp[-1].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 39834 "gram.c"
+#line 39794 "gram.c"
     break;
 
   case 1229: /* transform_element_list: FROM SQL_P WITH FUNCTION function_with_argtypes ',' TO SQL_P WITH FUNCTION function_with_argtypes  */
@@ -39838,7 +39798,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[-6].objwithargs), (yyvsp[0].objwithargs));
 				}
-#line 39842 "gram.c"
+#line 39802 "gram.c"
     break;
 
   case 1230: /* transform_element_list: TO SQL_P WITH FUNCTION function_with_argtypes ',' FROM SQL_P WITH FUNCTION function_with_argtypes  */
@@ -39846,7 +39806,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[0].objwithargs), (yyvsp[-6].objwithargs));
 				}
-#line 39850 "gram.c"
+#line 39810 "gram.c"
     break;
 
   case 1231: /* transform_element_list: FROM SQL_P WITH FUNCTION function_with_argtypes  */
@@ -39854,7 +39814,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[0].objwithargs), NULL);
 				}
-#line 39858 "gram.c"
+#line 39818 "gram.c"
     break;
 
   case 1232: /* transform_element_list: TO SQL_P WITH FUNCTION function_with_argtypes  */
@@ -39862,7 +39822,7 @@
                                 {
 					(yyval.list) = list_make2(NULL, (yyvsp[0].objwithargs));
 				}
-#line 39866 "gram.c"
+#line 39826 "gram.c"
     break;
 
   case 1233: /* DropTransformStmt: DROP TRANSFORM opt_if_exists FOR Typename LANGUAGE name opt_drop_behavior  */
@@ -39876,7 +39836,7 @@
 					n->missing_ok = (yyvsp[-5].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 39880 "gram.c"
+#line 39840 "gram.c"
     break;
 
   case 1234: /* ReindexStmt: REINDEX opt_reindex_option_list reindex_target_relation opt_concurrently qualified_name  */
@@ -39893,7 +39853,7 @@
 											makeDefElem("concurrently", NULL, (yylsp[-1])));
 					(yyval.node) = (Node *) n;
 				}
-#line 39897 "gram.c"
+#line 39857 "gram.c"
     break;
 
   case 1235: /* ReindexStmt: REINDEX opt_reindex_option_list SCHEMA opt_concurrently name  */
@@ -39910,7 +39870,7 @@
 											makeDefElem("concurrently", NULL, (yylsp[-1])));
 					(yyval.node) = (Node *) n;
 				}
-#line 39914 "gram.c"
+#line 39874 "gram.c"
     break;
 
   case 1236: /* ReindexStmt: REINDEX opt_reindex_option_list reindex_target_all opt_concurrently opt_single_name  */
@@ -39927,43 +39887,43 @@
 											makeDefElem("concurrently", NULL, (yylsp[-1])));
 					(yyval.node) = (Node *) n;
 				}
-#line 39931 "gram.c"
+#line 39891 "gram.c"
     break;
 
   case 1237: /* reindex_target_relation: INDEX  */
 #line 9080 "gram.y"
                                                                 { (yyval.ival) = REINDEX_OBJECT_INDEX; }
-#line 39937 "gram.c"
+#line 39897 "gram.c"
     break;
 
   case 1238: /* reindex_target_relation: TABLE  */
 #line 9081 "gram.y"
                                                                 { (yyval.ival) = REINDEX_OBJECT_TABLE; }
-#line 39943 "gram.c"
+#line 39903 "gram.c"
     break;
 
   case 1239: /* reindex_target_all: SYSTEM_P  */
 #line 9084 "gram.y"
                                                                 { (yyval.ival) = REINDEX_OBJECT_SYSTEM; }
-#line 39949 "gram.c"
+#line 39909 "gram.c"
     break;
 
   case 1240: /* reindex_target_all: DATABASE  */
 #line 9085 "gram.y"
                                                                 { (yyval.ival) = REINDEX_OBJECT_DATABASE; }
-#line 39955 "gram.c"
+#line 39915 "gram.c"
     break;
 
   case 1241: /* opt_reindex_option_list: '(' utility_option_list ')'  */
 #line 9088 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 39961 "gram.c"
+#line 39921 "gram.c"
     break;
 
   case 1242: /* opt_reindex_option_list: %empty  */
 #line 9089 "gram.y"
                                                                                         { (yyval.list) = NULL; }
-#line 39967 "gram.c"
+#line 39927 "gram.c"
     break;
 
   case 1243: /* AlterTblSpcStmt: ALTER TABLESPACE name SET reloptions  */
@@ -39977,7 +39937,7 @@
 					n->isReset = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 39981 "gram.c"
+#line 39941 "gram.c"
     break;
 
   case 1244: /* AlterTblSpcStmt: ALTER TABLESPACE name RESET reloptions  */
@@ -39991,7 +39951,7 @@
 					n->isReset = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 39995 "gram.c"
+#line 39955 "gram.c"
     break;
 
   case 1245: /* RenameStmt: ALTER AGGREGATE aggregate_with_argtypes RENAME TO name  */
@@ -40005,7 +39965,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40009 "gram.c"
+#line 39969 "gram.c"
     break;
 
   case 1246: /* RenameStmt: ALTER COLLATION any_name RENAME TO name  */
@@ -40019,7 +39979,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40023 "gram.c"
+#line 39983 "gram.c"
     break;
 
   case 1247: /* RenameStmt: ALTER CONVERSION_P any_name RENAME TO name  */
@@ -40033,7 +39993,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40037 "gram.c"
+#line 39997 "gram.c"
     break;
 
   case 1248: /* RenameStmt: ALTER DATABASE name RENAME TO name  */
@@ -40047,7 +40007,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40051 "gram.c"
+#line 40011 "gram.c"
     break;
 
   case 1249: /* RenameStmt: ALTER DOMAIN_P any_name RENAME TO name  */
@@ -40061,7 +40021,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40065 "gram.c"
+#line 40025 "gram.c"
     break;
 
   case 1250: /* RenameStmt: ALTER DOMAIN_P any_name RENAME CONSTRAINT name TO name  */
@@ -40075,7 +40035,7 @@
 					n->newname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 40079 "gram.c"
+#line 40039 "gram.c"
     break;
 
   case 1251: /* RenameStmt: ALTER FOREIGN DATA_P WRAPPER name RENAME TO name  */
@@ -40089,7 +40049,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40093 "gram.c"
+#line 40053 "gram.c"
     break;
 
   case 1252: /* RenameStmt: ALTER FUNCTION function_with_argtypes RENAME TO name  */
@@ -40103,7 +40063,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40107 "gram.c"
+#line 40067 "gram.c"
     break;
 
   case 1253: /* RenameStmt: ALTER GROUP_P RoleId RENAME TO RoleId  */
@@ -40117,7 +40077,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40121 "gram.c"
+#line 40081 "gram.c"
     break;
 
   case 1254: /* RenameStmt: ALTER opt_procedural LANGUAGE name RENAME TO name  */
@@ -40131,7 +40091,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40135 "gram.c"
+#line 40095 "gram.c"
     break;
 
   case 1255: /* RenameStmt: ALTER OPERATOR CLASS any_name USING name RENAME TO name  */
@@ -40145,7 +40105,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40149 "gram.c"
+#line 40109 "gram.c"
     break;
 
   case 1256: /* RenameStmt: ALTER OPERATOR FAMILY any_name USING name RENAME TO name  */
@@ -40159,7 +40119,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40163 "gram.c"
+#line 40123 "gram.c"
     break;
 
   case 1257: /* RenameStmt: ALTER POLICY name ON qualified_name RENAME TO name  */
@@ -40174,7 +40134,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40178 "gram.c"
+#line 40138 "gram.c"
     break;
 
   case 1258: /* RenameStmt: ALTER POLICY IF_P EXISTS name ON qualified_name RENAME TO name  */
@@ -40189,7 +40149,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40193 "gram.c"
+#line 40153 "gram.c"
     break;
 
   case 1259: /* RenameStmt: ALTER PROCEDURE function_with_argtypes RENAME TO name  */
@@ -40203,7 +40163,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40207 "gram.c"
+#line 40167 "gram.c"
     break;
 
   case 1260: /* RenameStmt: ALTER PUBLICATION name RENAME TO name  */
@@ -40217,7 +40177,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40221 "gram.c"
+#line 40181 "gram.c"
     break;
 
   case 1261: /* RenameStmt: ALTER ROUTINE function_with_argtypes RENAME TO name  */
@@ -40231,7 +40191,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40235 "gram.c"
+#line 40195 "gram.c"
     break;
 
   case 1262: /* RenameStmt: ALTER SCHEMA name RENAME TO name  */
@@ -40245,7 +40205,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40249 "gram.c"
+#line 40209 "gram.c"
     break;
 
   case 1263: /* RenameStmt: ALTER SERVER name RENAME TO name  */
@@ -40259,7 +40219,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40263 "gram.c"
+#line 40223 "gram.c"
     break;
 
   case 1264: /* RenameStmt: ALTER SUBSCRIPTION name RENAME TO name  */
@@ -40273,7 +40233,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40277 "gram.c"
+#line 40237 "gram.c"
     break;
 
   case 1265: /* RenameStmt: ALTER TABLE relation_expr RENAME TO name  */
@@ -40288,7 +40248,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40292 "gram.c"
+#line 40252 "gram.c"
     break;
 
   case 1266: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME TO name  */
@@ -40303,7 +40263,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40307 "gram.c"
+#line 40267 "gram.c"
     break;
 
   case 1267: /* RenameStmt: ALTER SEQUENCE qualified_name RENAME TO name  */
@@ -40318,7 +40278,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40322 "gram.c"
+#line 40282 "gram.c"
     break;
 
   case 1268: /* RenameStmt: ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name  */
@@ -40333,7 +40293,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40337 "gram.c"
+#line 40297 "gram.c"
     break;
 
   case 1269: /* RenameStmt: ALTER VIEW qualified_name RENAME TO name  */
@@ -40348,7 +40308,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40352 "gram.c"
+#line 40312 "gram.c"
     break;
 
   case 1270: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME TO name  */
@@ -40363,7 +40323,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40367 "gram.c"
+#line 40327 "gram.c"
     break;
 
   case 1271: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME TO name  */
@@ -40378,7 +40338,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40382 "gram.c"
+#line 40342 "gram.c"
     break;
 
   case 1272: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME TO name  */
@@ -40393,7 +40353,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40397 "gram.c"
+#line 40357 "gram.c"
     break;
 
   case 1273: /* RenameStmt: ALTER INDEX qualified_name RENAME TO name  */
@@ -40408,7 +40368,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40412 "gram.c"
+#line 40372 "gram.c"
     break;
 
   case 1274: /* RenameStmt: ALTER INDEX IF_P EXISTS qualified_name RENAME TO name  */
@@ -40423,7 +40383,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40427 "gram.c"
+#line 40387 "gram.c"
     break;
 
   case 1275: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME TO name  */
@@ -40438,7 +40398,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40442 "gram.c"
+#line 40402 "gram.c"
     break;
 
   case 1276: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME TO name  */
@@ -40453,7 +40413,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40457 "gram.c"
+#line 40417 "gram.c"
     break;
 
   case 1277: /* RenameStmt: ALTER TABLE relation_expr RENAME opt_column name TO name  */
@@ -40469,7 +40429,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40473 "gram.c"
+#line 40433 "gram.c"
     break;
 
   case 1278: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
@@ -40485,7 +40445,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40489 "gram.c"
+#line 40449 "gram.c"
     break;
 
   case 1279: /* RenameStmt: ALTER VIEW qualified_name RENAME opt_column name TO name  */
@@ -40501,7 +40461,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40505 "gram.c"
+#line 40465 "gram.c"
     break;
 
   case 1280: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
@@ -40517,7 +40477,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40521 "gram.c"
+#line 40481 "gram.c"
     break;
 
   case 1281: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name  */
@@ -40533,7 +40493,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40537 "gram.c"
+#line 40497 "gram.c"
     break;
 
   case 1282: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
@@ -40549,7 +40509,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40553 "gram.c"
+#line 40513 "gram.c"
     break;
 
   case 1283: /* RenameStmt: ALTER TABLE relation_expr RENAME CONSTRAINT name TO name  */
@@ -40564,7 +40524,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40568 "gram.c"
+#line 40528 "gram.c"
     break;
 
   case 1284: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME CONSTRAINT name TO name  */
@@ -40579,7 +40539,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40583 "gram.c"
+#line 40543 "gram.c"
     break;
 
   case 1285: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name  */
@@ -40595,7 +40555,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40599 "gram.c"
+#line 40559 "gram.c"
     break;
 
   case 1286: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
@@ -40611,7 +40571,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 40615 "gram.c"
+#line 40575 "gram.c"
     break;
 
   case 1287: /* RenameStmt: ALTER RULE name ON qualified_name RENAME TO name  */
@@ -40626,7 +40586,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40630 "gram.c"
+#line 40590 "gram.c"
     break;
 
   case 1288: /* RenameStmt: ALTER TRIGGER name ON qualified_name RENAME TO name  */
@@ -40641,7 +40601,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40645 "gram.c"
+#line 40605 "gram.c"
     break;
 
   case 1289: /* RenameStmt: ALTER EVENT TRIGGER name RENAME TO name  */
@@ -40654,7 +40614,7 @@
 					n->newname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 40658 "gram.c"
+#line 40618 "gram.c"
     break;
 
   case 1290: /* RenameStmt: ALTER ROLE RoleId RENAME TO RoleId  */
@@ -40668,7 +40628,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40672 "gram.c"
+#line 40632 "gram.c"
     break;
 
   case 1291: /* RenameStmt: ALTER USER RoleId RENAME TO RoleId  */
@@ -40682,7 +40642,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40686 "gram.c"
+#line 40646 "gram.c"
     break;
 
   case 1292: /* RenameStmt: ALTER TABLESPACE name RENAME TO name  */
@@ -40696,7 +40656,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40700 "gram.c"
+#line 40660 "gram.c"
     break;
 
   case 1293: /* RenameStmt: ALTER STATISTICS any_name RENAME TO name  */
@@ -40710,7 +40670,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40714 "gram.c"
+#line 40674 "gram.c"
     break;
 
   case 1294: /* RenameStmt: ALTER TEXT_P SEARCH PARSER any_name RENAME TO name  */
@@ -40724,7 +40684,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40728 "gram.c"
+#line 40688 "gram.c"
     break;
 
   case 1295: /* RenameStmt: ALTER TEXT_P SEARCH DICTIONARY any_name RENAME TO name  */
@@ -40738,7 +40698,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40742 "gram.c"
+#line 40702 "gram.c"
     break;
 
   case 1296: /* RenameStmt: ALTER TEXT_P SEARCH TEMPLATE any_name RENAME TO name  */
@@ -40752,7 +40712,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40756 "gram.c"
+#line 40716 "gram.c"
     break;
 
   case 1297: /* RenameStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name RENAME TO name  */
@@ -40766,7 +40726,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40770 "gram.c"
+#line 40730 "gram.c"
     break;
 
   case 1298: /* RenameStmt: ALTER TYPE_P any_name RENAME TO name  */
@@ -40780,7 +40740,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40784 "gram.c"
+#line 40744 "gram.c"
     break;
 
   case 1299: /* RenameStmt: ALTER TYPE_P any_name RENAME ATTRIBUTE name TO name opt_drop_behavior  */
@@ -40797,19 +40757,19 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40801 "gram.c"
+#line 40761 "gram.c"
     break;
 
   case 1302: /* opt_set_data: SET DATA_P  */
 #line 9719 "gram.y"
                                                                                 { (yyval.ival) = 1; }
-#line 40807 "gram.c"
+#line 40767 "gram.c"
     break;
 
   case 1303: /* opt_set_data: %empty  */
 #line 9720 "gram.y"
                                                                                                 { (yyval.ival) = 0; }
-#line 40813 "gram.c"
+#line 40773 "gram.c"
     break;
 
   case 1304: /* AlterObjectDependsStmt: ALTER FUNCTION function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -40823,7 +40783,7 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40827 "gram.c"
+#line 40787 "gram.c"
     break;
 
   case 1305: /* AlterObjectDependsStmt: ALTER PROCEDURE function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -40837,7 +40797,7 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40841 "gram.c"
+#line 40801 "gram.c"
     break;
 
   case 1306: /* AlterObjectDependsStmt: ALTER ROUTINE function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -40851,7 +40811,7 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40855 "gram.c"
+#line 40815 "gram.c"
     break;
 
   case 1307: /* AlterObjectDependsStmt: ALTER TRIGGER name ON qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -40866,7 +40826,7 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40870 "gram.c"
+#line 40830 "gram.c"
     break;
 
   case 1308: /* AlterObjectDependsStmt: ALTER MATERIALIZED VIEW qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -40880,7 +40840,7 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40884 "gram.c"
+#line 40844 "gram.c"
     break;
 
   case 1309: /* AlterObjectDependsStmt: ALTER INDEX qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -40894,19 +40854,19 @@
 					n->remove = (yyvsp[-4].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 40898 "gram.c"
+#line 40858 "gram.c"
     break;
 
   case 1310: /* opt_no: NO  */
 #line 9793 "gram.y"
                                                 { (yyval.boolean) = true; }
-#line 40904 "gram.c"
+#line 40864 "gram.c"
     break;
 
   case 1311: /* opt_no: %empty  */
 #line 9794 "gram.y"
                                         { (yyval.boolean) = false;	}
-#line 40910 "gram.c"
+#line 40870 "gram.c"
     break;
 
   case 1312: /* AlterObjectSchemaStmt: ALTER AGGREGATE aggregate_with_argtypes SET SCHEMA name  */
@@ -40920,7 +40880,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40924 "gram.c"
+#line 40884 "gram.c"
     break;
 
   case 1313: /* AlterObjectSchemaStmt: ALTER COLLATION any_name SET SCHEMA name  */
@@ -40934,7 +40894,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40938 "gram.c"
+#line 40898 "gram.c"
     break;
 
   case 1314: /* AlterObjectSchemaStmt: ALTER CONVERSION_P any_name SET SCHEMA name  */
@@ -40948,7 +40908,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40952 "gram.c"
+#line 40912 "gram.c"
     break;
 
   case 1315: /* AlterObjectSchemaStmt: ALTER DOMAIN_P any_name SET SCHEMA name  */
@@ -40962,7 +40922,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40966 "gram.c"
+#line 40926 "gram.c"
     break;
 
   case 1316: /* AlterObjectSchemaStmt: ALTER EXTENSION name SET SCHEMA name  */
@@ -40976,7 +40936,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40980 "gram.c"
+#line 40940 "gram.c"
     break;
 
   case 1317: /* AlterObjectSchemaStmt: ALTER FUNCTION function_with_argtypes SET SCHEMA name  */
@@ -40990,7 +40950,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 40994 "gram.c"
+#line 40954 "gram.c"
     break;
 
   case 1318: /* AlterObjectSchemaStmt: ALTER OPERATOR operator_with_argtypes SET SCHEMA name  */
@@ -41004,7 +40964,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41008 "gram.c"
+#line 40968 "gram.c"
     break;
 
   case 1319: /* AlterObjectSchemaStmt: ALTER OPERATOR CLASS any_name USING name SET SCHEMA name  */
@@ -41018,7 +40978,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41022 "gram.c"
+#line 40982 "gram.c"
     break;
 
   case 1320: /* AlterObjectSchemaStmt: ALTER OPERATOR FAMILY any_name USING name SET SCHEMA name  */
@@ -41032,7 +40992,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41036 "gram.c"
+#line 40996 "gram.c"
     break;
 
   case 1321: /* AlterObjectSchemaStmt: ALTER PROCEDURE function_with_argtypes SET SCHEMA name  */
@@ -41046,7 +41006,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41050 "gram.c"
+#line 41010 "gram.c"
     break;
 
   case 1322: /* AlterObjectSchemaStmt: ALTER ROUTINE function_with_argtypes SET SCHEMA name  */
@@ -41060,7 +41020,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41064 "gram.c"
+#line 41024 "gram.c"
     break;
 
   case 1323: /* AlterObjectSchemaStmt: ALTER TABLE relation_expr SET SCHEMA name  */
@@ -41074,7 +41034,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41078 "gram.c"
+#line 41038 "gram.c"
     break;
 
   case 1324: /* AlterObjectSchemaStmt: ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
@@ -41088,7 +41048,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41092 "gram.c"
+#line 41052 "gram.c"
     break;
 
   case 1325: /* AlterObjectSchemaStmt: ALTER STATISTICS any_name SET SCHEMA name  */
@@ -41102,7 +41062,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41106 "gram.c"
+#line 41066 "gram.c"
     break;
 
   case 1326: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH PARSER any_name SET SCHEMA name  */
@@ -41116,7 +41076,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41120 "gram.c"
+#line 41080 "gram.c"
     break;
 
   case 1327: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH DICTIONARY any_name SET SCHEMA name  */
@@ -41130,7 +41090,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41134 "gram.c"
+#line 41094 "gram.c"
     break;
 
   case 1328: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH TEMPLATE any_name SET SCHEMA name  */
@@ -41144,7 +41104,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41148 "gram.c"
+#line 41108 "gram.c"
     break;
 
   case 1329: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name SET SCHEMA name  */
@@ -41158,7 +41118,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41162 "gram.c"
+#line 41122 "gram.c"
     break;
 
   case 1330: /* AlterObjectSchemaStmt: ALTER SEQUENCE qualified_name SET SCHEMA name  */
@@ -41172,7 +41132,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41176 "gram.c"
+#line 41136 "gram.c"
     break;
 
   case 1331: /* AlterObjectSchemaStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -41186,7 +41146,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41190 "gram.c"
+#line 41150 "gram.c"
     break;
 
   case 1332: /* AlterObjectSchemaStmt: ALTER VIEW qualified_name SET SCHEMA name  */
@@ -41200,7 +41160,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41204 "gram.c"
+#line 41164 "gram.c"
     break;
 
   case 1333: /* AlterObjectSchemaStmt: ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -41214,7 +41174,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41218 "gram.c"
+#line 41178 "gram.c"
     break;
 
   case 1334: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name  */
@@ -41228,7 +41188,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41232 "gram.c"
+#line 41192 "gram.c"
     break;
 
   case 1335: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -41242,7 +41202,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41246 "gram.c"
+#line 41206 "gram.c"
     break;
 
   case 1336: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE relation_expr SET SCHEMA name  */
@@ -41256,7 +41216,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41260 "gram.c"
+#line 41220 "gram.c"
     break;
 
   case 1337: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
@@ -41270,7 +41230,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41274 "gram.c"
+#line 41234 "gram.c"
     break;
 
   case 1338: /* AlterObjectSchemaStmt: ALTER TYPE_P any_name SET SCHEMA name  */
@@ -41284,7 +41244,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 41288 "gram.c"
+#line 41248 "gram.c"
     break;
 
   case 1339: /* AlterOperatorStmt: ALTER OPERATOR operator_with_argtypes SET '(' operator_def_list ')'  */
@@ -41296,61 +41256,61 @@
 					n->options = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41300 "gram.c"
+#line 41260 "gram.c"
     break;
 
   case 1340: /* operator_def_list: operator_def_elem  */
 #line 10093 "gram.y"
                                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 41306 "gram.c"
+#line 41266 "gram.c"
     break;
 
   case 1341: /* operator_def_list: operator_def_list ',' operator_def_elem  */
 #line 10094 "gram.y"
                                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 41312 "gram.c"
+#line 41272 "gram.c"
     break;
 
   case 1342: /* operator_def_elem: ColLabel '=' NONE  */
 #line 10098 "gram.y"
                                                 { (yyval.defelt) = makeDefElem((yyvsp[-2].str), NULL, (yylsp[-2])); }
-#line 41318 "gram.c"
+#line 41278 "gram.c"
     break;
 
   case 1343: /* operator_def_elem: ColLabel '=' operator_def_arg  */
 #line 10100 "gram.y"
                                                 { (yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node), (yylsp[-2])); }
-#line 41324 "gram.c"
+#line 41284 "gram.c"
     break;
 
   case 1344: /* operator_def_arg: func_type  */
 #line 10105 "gram.y"
                                                                                 { (yyval.node) = (Node *) (yyvsp[0].typnam); }
-#line 41330 "gram.c"
+#line 41290 "gram.c"
     break;
 
   case 1345: /* operator_def_arg: reserved_keyword  */
 #line 10106 "gram.y"
                                                                         { (yyval.node) = (Node *) makeString(pstrdup((yyvsp[0].keyword))); }
-#line 41336 "gram.c"
+#line 41296 "gram.c"
     break;
 
   case 1346: /* operator_def_arg: qual_all_Op  */
 #line 10107 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].list); }
-#line 41342 "gram.c"
+#line 41302 "gram.c"
     break;
 
   case 1347: /* operator_def_arg: NumericOnly  */
 #line 10108 "gram.y"
                                                                         { (yyval.node) = (Node *) (yyvsp[0].node); }
-#line 41348 "gram.c"
+#line 41308 "gram.c"
     break;
 
   case 1348: /* operator_def_arg: Sconst  */
 #line 10109 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 41354 "gram.c"
+#line 41314 "gram.c"
     break;
 
   case 1349: /* AlterTypeStmt: ALTER TYPE_P any_name SET '(' operator_def_list ')'  */
@@ -41362,7 +41322,7 @@
 					n->options = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41366 "gram.c"
+#line 41326 "gram.c"
     break;
 
   case 1350: /* AlterOwnerStmt: ALTER AGGREGATE aggregate_with_argtypes OWNER TO RoleSpec  */
@@ -41375,7 +41335,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41379 "gram.c"
+#line 41339 "gram.c"
     break;
 
   case 1351: /* AlterOwnerStmt: ALTER COLLATION any_name OWNER TO RoleSpec  */
@@ -41388,7 +41348,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41392 "gram.c"
+#line 41352 "gram.c"
     break;
 
   case 1352: /* AlterOwnerStmt: ALTER CONVERSION_P any_name OWNER TO RoleSpec  */
@@ -41401,7 +41361,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41405 "gram.c"
+#line 41365 "gram.c"
     break;
 
   case 1353: /* AlterOwnerStmt: ALTER DATABASE name OWNER TO RoleSpec  */
@@ -41414,7 +41374,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41418 "gram.c"
+#line 41378 "gram.c"
     break;
 
   case 1354: /* AlterOwnerStmt: ALTER DOMAIN_P any_name OWNER TO RoleSpec  */
@@ -41427,7 +41387,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41431 "gram.c"
+#line 41391 "gram.c"
     break;
 
   case 1355: /* AlterOwnerStmt: ALTER FUNCTION function_with_argtypes OWNER TO RoleSpec  */
@@ -41440,7 +41400,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41444 "gram.c"
+#line 41404 "gram.c"
     break;
 
   case 1356: /* AlterOwnerStmt: ALTER opt_procedural LANGUAGE name OWNER TO RoleSpec  */
@@ -41453,7 +41413,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41457 "gram.c"
+#line 41417 "gram.c"
     break;
 
   case 1357: /* AlterOwnerStmt: ALTER LARGE_P OBJECT_P NumericOnly OWNER TO RoleSpec  */
@@ -41466,7 +41426,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41470 "gram.c"
+#line 41430 "gram.c"
     break;
 
   case 1358: /* AlterOwnerStmt: ALTER OPERATOR operator_with_argtypes OWNER TO RoleSpec  */
@@ -41479,7 +41439,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41483 "gram.c"
+#line 41443 "gram.c"
     break;
 
   case 1359: /* AlterOwnerStmt: ALTER OPERATOR CLASS any_name USING name OWNER TO RoleSpec  */
@@ -41492,7 +41452,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41496 "gram.c"
+#line 41456 "gram.c"
     break;
 
   case 1360: /* AlterOwnerStmt: ALTER OPERATOR FAMILY any_name USING name OWNER TO RoleSpec  */
@@ -41505,7 +41465,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41509 "gram.c"
+#line 41469 "gram.c"
     break;
 
   case 1361: /* AlterOwnerStmt: ALTER PROCEDURE function_with_argtypes OWNER TO RoleSpec  */
@@ -41518,7 +41478,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41522 "gram.c"
+#line 41482 "gram.c"
     break;
 
   case 1362: /* AlterOwnerStmt: ALTER ROUTINE function_with_argtypes OWNER TO RoleSpec  */
@@ -41531,7 +41491,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41535 "gram.c"
+#line 41495 "gram.c"
     break;
 
   case 1363: /* AlterOwnerStmt: ALTER SCHEMA name OWNER TO RoleSpec  */
@@ -41544,7 +41504,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41548 "gram.c"
+#line 41508 "gram.c"
     break;
 
   case 1364: /* AlterOwnerStmt: ALTER TYPE_P any_name OWNER TO RoleSpec  */
@@ -41557,7 +41517,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41561 "gram.c"
+#line 41521 "gram.c"
     break;
 
   case 1365: /* AlterOwnerStmt: ALTER TABLESPACE name OWNER TO RoleSpec  */
@@ -41570,7 +41530,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41574 "gram.c"
+#line 41534 "gram.c"
     break;
 
   case 1366: /* AlterOwnerStmt: ALTER STATISTICS any_name OWNER TO RoleSpec  */
@@ -41583,7 +41543,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41587 "gram.c"
+#line 41547 "gram.c"
     break;
 
   case 1367: /* AlterOwnerStmt: ALTER TEXT_P SEARCH DICTIONARY any_name OWNER TO RoleSpec  */
@@ -41596,7 +41556,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41600 "gram.c"
+#line 41560 "gram.c"
     break;
 
   case 1368: /* AlterOwnerStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name OWNER TO RoleSpec  */
@@ -41609,7 +41569,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41613 "gram.c"
+#line 41573 "gram.c"
     break;
 
   case 1369: /* AlterOwnerStmt: ALTER FOREIGN DATA_P WRAPPER name OWNER TO RoleSpec  */
@@ -41622,7 +41582,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41626 "gram.c"
+#line 41586 "gram.c"
     break;
 
   case 1370: /* AlterOwnerStmt: ALTER SERVER name OWNER TO RoleSpec  */
@@ -41635,7 +41595,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41639 "gram.c"
+#line 41599 "gram.c"
     break;
 
   case 1371: /* AlterOwnerStmt: ALTER EVENT TRIGGER name OWNER TO RoleSpec  */
@@ -41648,7 +41608,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41652 "gram.c"
+#line 41612 "gram.c"
     break;
 
   case 1372: /* AlterOwnerStmt: ALTER PUBLICATION name OWNER TO RoleSpec  */
@@ -41661,7 +41621,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41665 "gram.c"
+#line 41625 "gram.c"
     break;
 
   case 1373: /* AlterOwnerStmt: ALTER SUBSCRIPTION name OWNER TO RoleSpec  */
@@ -41674,7 +41634,7 @@
 					n->newowner = (yyvsp[0].rolespec);
 					(yyval.node) = (Node *) n;
 				}
-#line 41678 "gram.c"
+#line 41638 "gram.c"
     break;
 
   case 1374: /* CreatePublicationStmt: CREATE PUBLICATION name opt_definition  */
@@ -41686,7 +41646,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41690 "gram.c"
+#line 41650 "gram.c"
     break;
 
   case 1375: /* CreatePublicationStmt: CREATE PUBLICATION name FOR ALL TABLES opt_definition  */
@@ -41699,7 +41659,7 @@
 					n->for_all_tables = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 41703 "gram.c"
+#line 41663 "gram.c"
     break;
 
   case 1376: /* CreatePublicationStmt: CREATE PUBLICATION name FOR pub_obj_list opt_definition  */
@@ -41713,7 +41673,7 @@
 					preprocess_pubobj_list(n->pubobjects, yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 41717 "gram.c"
+#line 41677 "gram.c"
     break;
 
   case 1377: /* PublicationObjSpec: TABLE relation_expr opt_column_list OptWhereClause  */
@@ -41726,7 +41686,7 @@
 					(yyval.publicationobjectspec)->pubtable->columns = (yyvsp[-1].list);
 					(yyval.publicationobjectspec)->pubtable->whereClause = (yyvsp[0].node);
 				}
-#line 41730 "gram.c"
+#line 41690 "gram.c"
     break;
 
   case 1378: /* PublicationObjSpec: TABLES IN_P SCHEMA ColId  */
@@ -41737,7 +41697,7 @@
 					(yyval.publicationobjectspec)->name = (yyvsp[0].str);
 					(yyval.publicationobjectspec)->location = (yylsp[0]);
 				}
-#line 41741 "gram.c"
+#line 41701 "gram.c"
     break;
 
   case 1379: /* PublicationObjSpec: TABLES IN_P SCHEMA CURRENT_SCHEMA  */
@@ -41747,7 +41707,7 @@
 					(yyval.publicationobjectspec)->pubobjtype = PUBLICATIONOBJ_TABLES_IN_CUR_SCHEMA;
 					(yyval.publicationobjectspec)->location = (yylsp[0]);
 				}
-#line 41751 "gram.c"
+#line 41711 "gram.c"
     break;
 
   case 1380: /* PublicationObjSpec: ColId opt_column_list OptWhereClause  */
@@ -41778,7 +41738,7 @@
 					}
 					(yyval.publicationobjectspec)->location = (yylsp[-2]);
 				}
-#line 41782 "gram.c"
+#line 41742 "gram.c"
     break;
 
   case 1381: /* PublicationObjSpec: ColId indirection opt_column_list OptWhereClause  */
@@ -41792,7 +41752,7 @@
 					(yyval.publicationobjectspec)->pubtable->whereClause = (yyvsp[0].node);
 					(yyval.publicationobjectspec)->location = (yylsp[-3]);
 				}
-#line 41796 "gram.c"
+#line 41756 "gram.c"
     break;
 
   case 1382: /* PublicationObjSpec: extended_relation_expr opt_column_list OptWhereClause  */
@@ -41805,7 +41765,7 @@
 					(yyval.publicationobjectspec)->pubtable->columns = (yyvsp[-1].list);
 					(yyval.publicationobjectspec)->pubtable->whereClause = (yyvsp[0].node);
 				}
-#line 41809 "gram.c"
+#line 41769 "gram.c"
     break;
 
   case 1383: /* PublicationObjSpec: CURRENT_SCHEMA  */
@@ -41815,19 +41775,19 @@
 					(yyval.publicationobjectspec)->pubobjtype = PUBLICATIONOBJ_CONTINUATION;
 					(yyval.publicationobjectspec)->location = (yylsp[0]);
 				}
-#line 41819 "gram.c"
+#line 41779 "gram.c"
     break;
 
   case 1384: /* pub_obj_list: PublicationObjSpec  */
 #line 10493 "gram.y"
                                         { (yyval.list) = list_make1((yyvsp[0].publicationobjectspec)); }
-#line 41825 "gram.c"
+#line 41785 "gram.c"
     break;
 
   case 1385: /* pub_obj_list: pub_obj_list ',' PublicationObjSpec  */
 #line 10495 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].publicationobjectspec)); }
-#line 41831 "gram.c"
+#line 41791 "gram.c"
     break;
 
   case 1386: /* AlterPublicationStmt: ALTER PUBLICATION name SET definition  */
@@ -41839,7 +41799,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41843 "gram.c"
+#line 41803 "gram.c"
     break;
 
   case 1387: /* AlterPublicationStmt: ALTER PUBLICATION name ADD_P pub_obj_list  */
@@ -41853,7 +41813,7 @@
 					n->action = AP_AddObjects;
 					(yyval.node) = (Node *) n;
 				}
-#line 41857 "gram.c"
+#line 41817 "gram.c"
     break;
 
   case 1388: /* AlterPublicationStmt: ALTER PUBLICATION name SET pub_obj_list  */
@@ -41867,7 +41827,7 @@
 					n->action = AP_SetObjects;
 					(yyval.node) = (Node *) n;
 				}
-#line 41871 "gram.c"
+#line 41831 "gram.c"
     break;
 
   case 1389: /* AlterPublicationStmt: ALTER PUBLICATION name DROP pub_obj_list  */
@@ -41881,7 +41841,7 @@
 					n->action = AP_DropObjects;
 					(yyval.node) = (Node *) n;
 				}
-#line 41885 "gram.c"
+#line 41845 "gram.c"
     break;
 
   case 1390: /* CreateSubscriptionStmt: CREATE SUBSCRIPTION name CONNECTION Sconst PUBLICATION name_list opt_definition  */
@@ -41895,7 +41855,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41899 "gram.c"
+#line 41859 "gram.c"
     break;
 
   case 1391: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SET definition  */
@@ -41909,7 +41869,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41913 "gram.c"
+#line 41873 "gram.c"
     break;
 
   case 1392: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name CONNECTION Sconst  */
@@ -41923,7 +41883,7 @@
 					n->conninfo = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 41927 "gram.c"
+#line 41887 "gram.c"
     break;
 
   case 1393: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name REFRESH PUBLICATION opt_definition  */
@@ -41937,7 +41897,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41941 "gram.c"
+#line 41901 "gram.c"
     break;
 
   case 1394: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name ADD_P PUBLICATION name_list opt_definition  */
@@ -41952,7 +41912,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41956 "gram.c"
+#line 41916 "gram.c"
     break;
 
   case 1395: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name DROP PUBLICATION name_list opt_definition  */
@@ -41967,7 +41927,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41971 "gram.c"
+#line 41931 "gram.c"
     break;
 
   case 1396: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SET PUBLICATION name_list opt_definition  */
@@ -41982,7 +41942,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 41986 "gram.c"
+#line 41946 "gram.c"
     break;
 
   case 1397: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name ENABLE_P  */
@@ -41997,7 +41957,7 @@
 											(Node *) makeBoolean(true), (yylsp[-3])));
 					(yyval.node) = (Node *) n;
 				}
-#line 42001 "gram.c"
+#line 41961 "gram.c"
     break;
 
   case 1398: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name DISABLE_P  */
@@ -42012,7 +41972,7 @@
 											(Node *) makeBoolean(false), (yylsp[-3])));
 					(yyval.node) = (Node *) n;
 				}
-#line 42016 "gram.c"
+#line 41976 "gram.c"
     break;
 
   case 1399: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SKIP definition  */
@@ -42026,7 +41986,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42030 "gram.c"
+#line 41990 "gram.c"
     break;
 
   case 1400: /* DropSubscriptionStmt: DROP SUBSCRIPTION name opt_drop_behavior  */
@@ -42039,7 +41999,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 42043 "gram.c"
+#line 42003 "gram.c"
     break;
 
   case 1401: /* DropSubscriptionStmt: DROP SUBSCRIPTION IF_P EXISTS name opt_drop_behavior  */
@@ -42052,7 +42012,7 @@
 					n->behavior = (yyvsp[0].dbehavior);
 					(yyval.node) = (Node *) n;
 				}
-#line 42056 "gram.c"
+#line 42016 "gram.c"
     break;
 
   case 1402: /* RuleStmt: CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead RuleActionList  */
@@ -42069,25 +42029,25 @@
 					n->actions = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42073 "gram.c"
+#line 42033 "gram.c"
     break;
 
   case 1403: /* RuleActionList: NOTHING  */
 #line 10729 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 42079 "gram.c"
+#line 42039 "gram.c"
     break;
 
   case 1404: /* RuleActionList: RuleActionStmt  */
 #line 10730 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 42085 "gram.c"
+#line 42045 "gram.c"
     break;
 
   case 1405: /* RuleActionList: '(' RuleActionMulti ')'  */
 #line 10731 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 42091 "gram.c"
+#line 42051 "gram.c"
     break;
 
   case 1406: /* RuleActionMulti: RuleActionMulti ';' RuleActionStmtOrEmpty  */
@@ -42097,7 +42057,7 @@
 				  else
 					(yyval.list) = (yyvsp[-2].list);
 				}
-#line 42101 "gram.c"
+#line 42061 "gram.c"
     break;
 
   case 1407: /* RuleActionMulti: RuleActionStmtOrEmpty  */
@@ -42107,61 +42067,61 @@
 				  else
 					(yyval.list) = NIL;
 				}
-#line 42111 "gram.c"
+#line 42071 "gram.c"
     break;
 
   case 1413: /* RuleActionStmtOrEmpty: RuleActionStmt  */
 #line 10759 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 42117 "gram.c"
+#line 42077 "gram.c"
     break;
 
   case 1414: /* RuleActionStmtOrEmpty: %empty  */
 #line 10760 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 42123 "gram.c"
+#line 42083 "gram.c"
     break;
 
   case 1415: /* event: SELECT  */
 #line 10763 "gram.y"
                                                                                         { (yyval.ival) = CMD_SELECT; }
-#line 42129 "gram.c"
+#line 42089 "gram.c"
     break;
 
   case 1416: /* event: UPDATE  */
 #line 10764 "gram.y"
                                                                                                 { (yyval.ival) = CMD_UPDATE; }
-#line 42135 "gram.c"
+#line 42095 "gram.c"
     break;
 
   case 1417: /* event: DELETE_P  */
 #line 10765 "gram.y"
                                                                                                 { (yyval.ival) = CMD_DELETE; }
-#line 42141 "gram.c"
+#line 42101 "gram.c"
     break;
 
   case 1418: /* event: INSERT  */
 #line 10766 "gram.y"
                                                                                                 { (yyval.ival) = CMD_INSERT; }
-#line 42147 "gram.c"
+#line 42107 "gram.c"
     break;
 
   case 1419: /* opt_instead: INSTEAD  */
 #line 10770 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 42153 "gram.c"
+#line 42113 "gram.c"
     break;
 
   case 1420: /* opt_instead: ALSO  */
 #line 10771 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 42159 "gram.c"
+#line 42119 "gram.c"
     break;
 
   case 1421: /* opt_instead: %empty  */
 #line 10772 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 42165 "gram.c"
+#line 42125 "gram.c"
     break;
 
   case 1422: /* NotifyStmt: NOTIFY ColId notify_payload  */
@@ -42173,19 +42133,19 @@
 					n->payload = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42177 "gram.c"
+#line 42137 "gram.c"
     break;
 
   case 1423: /* notify_payload: ',' Sconst  */
 #line 10795 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 42183 "gram.c"
+#line 42143 "gram.c"
     break;
 
   case 1424: /* notify_payload: %empty  */
 #line 10796 "gram.y"
                                                                                         { (yyval.str) = NULL; }
-#line 42189 "gram.c"
+#line 42149 "gram.c"
     break;
 
   case 1425: /* ListenStmt: LISTEN ColId  */
@@ -42196,7 +42156,7 @@
 					n->conditionname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42200 "gram.c"
+#line 42160 "gram.c"
     break;
 
   case 1426: /* UnlistenStmt: UNLISTEN ColId  */
@@ -42207,7 +42167,7 @@
 					n->conditionname = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42211 "gram.c"
+#line 42171 "gram.c"
     break;
 
   case 1427: /* UnlistenStmt: UNLISTEN '*'  */
@@ -42218,7 +42178,7 @@
 					n->conditionname = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 42222 "gram.c"
+#line 42182 "gram.c"
     break;
 
   case 1428: /* TransactionStmt: ABORT_P opt_transaction opt_transaction_chain  */
@@ -42231,7 +42191,7 @@
 					n->chain = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 42235 "gram.c"
+#line 42195 "gram.c"
     break;
 
   case 1429: /* TransactionStmt: START TRANSACTION transaction_mode_list_or_empty  */
@@ -42243,7 +42203,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42247 "gram.c"
+#line 42207 "gram.c"
     break;
 
   case 1430: /* TransactionStmt: COMMIT opt_transaction opt_transaction_chain  */
@@ -42256,7 +42216,7 @@
 					n->chain = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 42260 "gram.c"
+#line 42220 "gram.c"
     break;
 
   case 1431: /* TransactionStmt: ROLLBACK opt_transaction opt_transaction_chain  */
@@ -42269,7 +42229,7 @@
 					n->chain = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 42273 "gram.c"
+#line 42233 "gram.c"
     break;
 
   case 1432: /* TransactionStmt: SAVEPOINT ColId  */
@@ -42281,7 +42241,7 @@
 					n->savepoint_name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42285 "gram.c"
+#line 42245 "gram.c"
     break;
 
   case 1433: /* TransactionStmt: RELEASE SAVEPOINT ColId  */
@@ -42293,7 +42253,7 @@
 					n->savepoint_name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42297 "gram.c"
+#line 42257 "gram.c"
     break;
 
   case 1434: /* TransactionStmt: RELEASE ColId  */
@@ -42305,7 +42265,7 @@
 					n->savepoint_name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42309 "gram.c"
+#line 42269 "gram.c"
     break;
 
   case 1435: /* TransactionStmt: ROLLBACK opt_transaction TO SAVEPOINT ColId  */
@@ -42317,7 +42277,7 @@
 					n->savepoint_name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42321 "gram.c"
+#line 42281 "gram.c"
     break;
 
   case 1436: /* TransactionStmt: ROLLBACK opt_transaction TO ColId  */
@@ -42329,7 +42289,7 @@
 					n->savepoint_name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42333 "gram.c"
+#line 42293 "gram.c"
     break;
 
   case 1437: /* TransactionStmt: PREPARE TRANSACTION Sconst  */
@@ -42341,7 +42301,7 @@
 					n->gid = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42345 "gram.c"
+#line 42305 "gram.c"
     break;
 
   case 1438: /* TransactionStmt: COMMIT PREPARED Sconst  */
@@ -42353,7 +42313,7 @@
 					n->gid = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42357 "gram.c"
+#line 42317 "gram.c"
     break;
 
   case 1439: /* TransactionStmt: ROLLBACK PREPARED Sconst  */
@@ -42365,7 +42325,7 @@
 					n->gid = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42369 "gram.c"
+#line 42329 "gram.c"
     break;
 
   case 1440: /* TransactionStmtLegacy: BEGIN_P opt_transaction transaction_mode_list_or_empty  */
@@ -42377,7 +42337,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42381 "gram.c"
+#line 42341 "gram.c"
     break;
 
   case 1441: /* TransactionStmtLegacy: END_P opt_transaction opt_transaction_chain  */
@@ -42390,84 +42350,84 @@
 					n->chain = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 42394 "gram.c"
+#line 42354 "gram.c"
     break;
 
   case 1445: /* transaction_mode_item: ISOLATION LEVEL iso_level  */
 #line 10964 "gram.y"
                                         { (yyval.defelt) = makeDefElem("transaction_isolation",
 									   makeStringConst((yyvsp[0].str), (yylsp[0])), (yylsp[-2])); }
-#line 42401 "gram.c"
+#line 42361 "gram.c"
     break;
 
   case 1446: /* transaction_mode_item: READ ONLY  */
 #line 10967 "gram.y"
                                         { (yyval.defelt) = makeDefElem("transaction_read_only",
 									   makeIntConst(true, (yylsp[-1])), (yylsp[-1])); }
-#line 42408 "gram.c"
+#line 42368 "gram.c"
     break;
 
   case 1447: /* transaction_mode_item: READ WRITE  */
 #line 10970 "gram.y"
                                         { (yyval.defelt) = makeDefElem("transaction_read_only",
 									   makeIntConst(false, (yylsp[-1])), (yylsp[-1])); }
-#line 42415 "gram.c"
+#line 42375 "gram.c"
     break;
 
   case 1448: /* transaction_mode_item: DEFERRABLE  */
 #line 10973 "gram.y"
                                         { (yyval.defelt) = makeDefElem("transaction_deferrable",
 									   makeIntConst(true, (yylsp[0])), (yylsp[0])); }
-#line 42422 "gram.c"
+#line 42382 "gram.c"
     break;
 
   case 1449: /* transaction_mode_item: NOT DEFERRABLE  */
 #line 10976 "gram.y"
                                         { (yyval.defelt) = makeDefElem("transaction_deferrable",
 									   makeIntConst(false, (yylsp[-1])), (yylsp[-1])); }
-#line 42429 "gram.c"
+#line 42389 "gram.c"
     break;
 
   case 1450: /* transaction_mode_list: transaction_mode_item  */
 #line 10983 "gram.y"
                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 42435 "gram.c"
+#line 42395 "gram.c"
     break;
 
   case 1451: /* transaction_mode_list: transaction_mode_list ',' transaction_mode_item  */
 #line 10985 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
-#line 42441 "gram.c"
+#line 42401 "gram.c"
     break;
 
   case 1452: /* transaction_mode_list: transaction_mode_list transaction_mode_item  */
 #line 10987 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 42447 "gram.c"
+#line 42407 "gram.c"
     break;
 
   case 1454: /* transaction_mode_list_or_empty: %empty  */
 #line 10993 "gram.y"
                                         { (yyval.list) = NIL; }
-#line 42453 "gram.c"
+#line 42413 "gram.c"
     break;
 
   case 1455: /* opt_transaction_chain: AND CHAIN  */
 #line 10997 "gram.y"
                                                 { (yyval.boolean) = true; }
-#line 42459 "gram.c"
+#line 42419 "gram.c"
     break;
 
   case 1456: /* opt_transaction_chain: AND NO CHAIN  */
 #line 10998 "gram.y"
                                         { (yyval.boolean) = false; }
-#line 42465 "gram.c"
+#line 42425 "gram.c"
     break;
 
   case 1457: /* opt_transaction_chain: %empty  */
 #line 10999 "gram.y"
                                         { (yyval.boolean) = false; }
-#line 42471 "gram.c"
+#line 42431 "gram.c"
     break;
 
   case 1458: /* ViewStmt: CREATE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
@@ -42484,7 +42444,7 @@
 					n->withCheckOption = (yyvsp[0].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 42488 "gram.c"
+#line 42448 "gram.c"
     break;
 
   case 1459: /* ViewStmt: CREATE OR REPLACE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
@@ -42501,7 +42461,7 @@
 					n->withCheckOption = (yyvsp[0].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 42505 "gram.c"
+#line 42465 "gram.c"
     break;
 
   case 1460: /* ViewStmt: CREATE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
@@ -42523,7 +42483,7 @@
 								 parser_errposition((yylsp[0]))));
 					(yyval.node) = (Node *) n;
 				}
-#line 42527 "gram.c"
+#line 42487 "gram.c"
     break;
 
   case 1461: /* ViewStmt: CREATE OR REPLACE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
@@ -42545,31 +42505,31 @@
 								 parser_errposition((yylsp[0]))));
 					(yyval.node) = (Node *) n;
 				}
-#line 42549 "gram.c"
+#line 42509 "gram.c"
     break;
 
   case 1462: /* opt_check_option: WITH CHECK OPTION  */
 #line 11080 "gram.y"
                                                                 { (yyval.ival) = CASCADED_CHECK_OPTION; }
-#line 42555 "gram.c"
+#line 42515 "gram.c"
     break;
 
   case 1463: /* opt_check_option: WITH CASCADED CHECK OPTION  */
 #line 11081 "gram.y"
                                                 { (yyval.ival) = CASCADED_CHECK_OPTION; }
-#line 42561 "gram.c"
+#line 42521 "gram.c"
     break;
 
   case 1464: /* opt_check_option: WITH LOCAL CHECK OPTION  */
 #line 11082 "gram.y"
                                                         { (yyval.ival) = LOCAL_CHECK_OPTION; }
-#line 42567 "gram.c"
+#line 42527 "gram.c"
     break;
 
   case 1465: /* opt_check_option: %empty  */
 #line 11083 "gram.y"
                                                                 { (yyval.ival) = NO_CHECK_OPTION; }
-#line 42573 "gram.c"
+#line 42533 "gram.c"
     break;
 
   case 1466: /* LoadStmt: LOAD file_name  */
@@ -42580,7 +42540,7 @@
 					n->filename = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42584 "gram.c"
+#line 42544 "gram.c"
     break;
 
   case 1467: /* CreatedbStmt: CREATE DATABASE name opt_with createdb_opt_list  */
@@ -42592,31 +42552,31 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42596 "gram.c"
+#line 42556 "gram.c"
     break;
 
   case 1468: /* createdb_opt_list: createdb_opt_items  */
 #line 11121 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 42602 "gram.c"
+#line 42562 "gram.c"
     break;
 
   case 1469: /* createdb_opt_list: %empty  */
 #line 11122 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 42608 "gram.c"
+#line 42568 "gram.c"
     break;
 
   case 1470: /* createdb_opt_items: createdb_opt_item  */
 #line 11126 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 42614 "gram.c"
+#line 42574 "gram.c"
     break;
 
   case 1471: /* createdb_opt_items: createdb_opt_items createdb_opt_item  */
 #line 11127 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 42620 "gram.c"
+#line 42580 "gram.c"
     break;
 
   case 1472: /* createdb_opt_item: createdb_opt_name opt_equal NumericOnly  */
@@ -42624,7 +42584,7 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 42628 "gram.c"
+#line 42588 "gram.c"
     break;
 
   case 1473: /* createdb_opt_item: createdb_opt_name opt_equal opt_boolean_or_string  */
@@ -42632,7 +42592,7 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) makeString((yyvsp[0].str)), (yylsp[-2]));
 				}
-#line 42636 "gram.c"
+#line 42596 "gram.c"
     break;
 
   case 1474: /* createdb_opt_item: createdb_opt_name opt_equal DEFAULT  */
@@ -42640,49 +42600,49 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-2].str), NULL, (yylsp[-2]));
 				}
-#line 42644 "gram.c"
+#line 42604 "gram.c"
     break;
 
   case 1475: /* createdb_opt_name: IDENT  */
 #line 11157 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 42650 "gram.c"
+#line 42610 "gram.c"
     break;
 
   case 1476: /* createdb_opt_name: CONNECTION LIMIT  */
 #line 11158 "gram.y"
                                                                         { (yyval.str) = pstrdup("connection_limit"); }
-#line 42656 "gram.c"
+#line 42616 "gram.c"
     break;
 
   case 1477: /* createdb_opt_name: ENCODING  */
 #line 11159 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 42662 "gram.c"
+#line 42622 "gram.c"
     break;
 
   case 1478: /* createdb_opt_name: LOCATION  */
 #line 11160 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 42668 "gram.c"
+#line 42628 "gram.c"
     break;
 
   case 1479: /* createdb_opt_name: OWNER  */
 #line 11161 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 42674 "gram.c"
+#line 42634 "gram.c"
     break;
 
   case 1480: /* createdb_opt_name: TABLESPACE  */
 #line 11162 "gram.y"
                                                                         { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 42680 "gram.c"
+#line 42640 "gram.c"
     break;
 
   case 1481: /* createdb_opt_name: TEMPLATE  */
 #line 11163 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 42686 "gram.c"
+#line 42646 "gram.c"
     break;
 
   case 1484: /* AlterDatabaseStmt: ALTER DATABASE name WITH createdb_opt_list  */
@@ -42694,7 +42654,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				 }
-#line 42698 "gram.c"
+#line 42658 "gram.c"
     break;
 
   case 1485: /* AlterDatabaseStmt: ALTER DATABASE name createdb_opt_list  */
@@ -42706,7 +42666,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				 }
-#line 42710 "gram.c"
+#line 42670 "gram.c"
     break;
 
   case 1486: /* AlterDatabaseStmt: ALTER DATABASE name SET TABLESPACE name  */
@@ -42719,7 +42679,7 @@
 														(Node *) makeString((yyvsp[0].str)), (yylsp[0])));
 					(yyval.node) = (Node *) n;
 				 }
-#line 42723 "gram.c"
+#line 42683 "gram.c"
     break;
 
   case 1487: /* AlterDatabaseStmt: ALTER DATABASE name REFRESH COLLATION VERSION_P  */
@@ -42730,7 +42690,7 @@
 					n->dbname = (yyvsp[-3].str);
 					(yyval.node) = (Node *) n;
 				 }
-#line 42734 "gram.c"
+#line 42694 "gram.c"
     break;
 
   case 1488: /* AlterDatabaseSetStmt: ALTER DATABASE name SetResetClause  */
@@ -42742,7 +42702,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 42746 "gram.c"
+#line 42706 "gram.c"
     break;
 
   case 1489: /* DropdbStmt: DROP DATABASE name  */
@@ -42755,7 +42715,7 @@
 					n->options = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 42759 "gram.c"
+#line 42719 "gram.c"
     break;
 
   case 1490: /* DropdbStmt: DROP DATABASE IF_P EXISTS name  */
@@ -42768,7 +42728,7 @@
 					n->options = NULL;
 					(yyval.node) = (Node *) n;
 				}
-#line 42772 "gram.c"
+#line 42732 "gram.c"
     break;
 
   case 1491: /* DropdbStmt: DROP DATABASE name opt_with '(' drop_option_list ')'  */
@@ -42781,7 +42741,7 @@
 					n->options = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42785 "gram.c"
+#line 42745 "gram.c"
     break;
 
   case 1492: /* DropdbStmt: DROP DATABASE IF_P EXISTS name opt_with '(' drop_option_list ')'  */
@@ -42794,7 +42754,7 @@
 					n->options = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42798 "gram.c"
+#line 42758 "gram.c"
     break;
 
   case 1493: /* drop_option_list: drop_option  */
@@ -42802,7 +42762,7 @@
                                 {
 					(yyval.list) = list_make1((Node *) (yyvsp[0].defelt));
 				}
-#line 42806 "gram.c"
+#line 42766 "gram.c"
     break;
 
   case 1494: /* drop_option_list: drop_option_list ',' drop_option  */
@@ -42810,7 +42770,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (Node *) (yyvsp[0].defelt));
 				}
-#line 42814 "gram.c"
+#line 42774 "gram.c"
     break;
 
   case 1495: /* drop_option: FORCE  */
@@ -42818,7 +42778,7 @@
                                 {
 					(yyval.defelt) = makeDefElem("force", NULL, (yylsp[0]));
 				}
-#line 42822 "gram.c"
+#line 42782 "gram.c"
     break;
 
   case 1496: /* AlterCollationStmt: ALTER COLLATION any_name REFRESH VERSION_P  */
@@ -42829,7 +42789,7 @@
 					n->collname = (yyvsp[-2].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42833 "gram.c"
+#line 42793 "gram.c"
     break;
 
   case 1497: /* AlterSystemStmt: ALTER SYSTEM_P SET generic_set  */
@@ -42840,7 +42800,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 42844 "gram.c"
+#line 42804 "gram.c"
     break;
 
   case 1498: /* AlterSystemStmt: ALTER SYSTEM_P RESET generic_reset  */
@@ -42851,7 +42811,7 @@
 					n->setstmt = (yyvsp[0].vsetstmt);
 					(yyval.node) = (Node *) n;
 				}
-#line 42855 "gram.c"
+#line 42815 "gram.c"
     break;
 
   case 1499: /* CreateDomainStmt: CREATE DOMAIN_P any_name opt_as Typename ColQualList  */
@@ -42865,7 +42825,7 @@
 									 yyscanner);
 					(yyval.node) = (Node *) n;
 				}
-#line 42869 "gram.c"
+#line 42829 "gram.c"
     break;
 
   case 1500: /* AlterDomainStmt: ALTER DOMAIN_P any_name alter_column_default  */
@@ -42878,7 +42838,7 @@
 					n->def = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 42882 "gram.c"
+#line 42842 "gram.c"
     break;
 
   case 1501: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP NOT NULL_P  */
@@ -42890,7 +42850,7 @@
 					n->typeName = (yyvsp[-3].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42894 "gram.c"
+#line 42854 "gram.c"
     break;
 
   case 1502: /* AlterDomainStmt: ALTER DOMAIN_P any_name SET NOT NULL_P  */
@@ -42902,7 +42862,7 @@
 					n->typeName = (yyvsp[-3].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42906 "gram.c"
+#line 42866 "gram.c"
     break;
 
   case 1503: /* AlterDomainStmt: ALTER DOMAIN_P any_name ADD_P TableConstraint  */
@@ -42915,7 +42875,7 @@
 					n->def = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 42919 "gram.c"
+#line 42879 "gram.c"
     break;
 
   case 1504: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT name opt_drop_behavior  */
@@ -42930,7 +42890,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 42934 "gram.c"
+#line 42894 "gram.c"
     break;
 
   case 1505: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
@@ -42945,7 +42905,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 42949 "gram.c"
+#line 42909 "gram.c"
     break;
 
   case 1506: /* AlterDomainStmt: ALTER DOMAIN_P any_name VALIDATE CONSTRAINT name  */
@@ -42958,7 +42918,7 @@
 					n->name = (yyvsp[0].str);
 					(yyval.node) = (Node *) n;
 				}
-#line 42962 "gram.c"
+#line 42922 "gram.c"
     break;
 
   case 1509: /* AlterTSDictionaryStmt: ALTER TEXT_P SEARCH DICTIONARY any_name definition  */
@@ -42970,7 +42930,7 @@
 					n->options = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 42974 "gram.c"
+#line 42934 "gram.c"
     break;
 
   case 1510: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ADD_P MAPPING FOR name_list any_with any_name_list  */
@@ -42986,7 +42946,7 @@
 					n->replace = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 42990 "gram.c"
+#line 42950 "gram.c"
     break;
 
   case 1511: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list any_with any_name_list  */
@@ -43002,7 +42962,7 @@
 					n->replace = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 43006 "gram.c"
+#line 42966 "gram.c"
     break;
 
   case 1512: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name any_with any_name  */
@@ -43018,7 +42978,7 @@
 					n->replace = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 43022 "gram.c"
+#line 42982 "gram.c"
     break;
 
   case 1513: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name any_with any_name  */
@@ -43034,7 +42994,7 @@
 					n->replace = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 43038 "gram.c"
+#line 42998 "gram.c"
     break;
 
   case 1514: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list  */
@@ -43048,7 +43008,7 @@
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 43052 "gram.c"
+#line 43012 "gram.c"
     break;
 
   case 1515: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING IF_P EXISTS FOR name_list  */
@@ -43062,7 +43022,7 @@
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 43066 "gram.c"
+#line 43026 "gram.c"
     break;
 
   case 1518: /* CreateConversionStmt: CREATE opt_default CONVERSION_P any_name FOR Sconst TO Sconst FROM any_name  */
@@ -43077,7 +43037,7 @@
 				n->def = (yyvsp[-8].boolean);
 				(yyval.node) = (Node *) n;
 			}
-#line 43081 "gram.c"
+#line 43041 "gram.c"
     break;
 
   case 1519: /* ClusterStmt: CLUSTER opt_verbose qualified_name cluster_index_specification  */
@@ -43092,7 +43052,7 @@
 						n->params = lappend(n->params, makeDefElem("verbose", NULL, (yylsp[-2])));
 					(yyval.node) = (Node *) n;
 				}
-#line 43096 "gram.c"
+#line 43056 "gram.c"
     break;
 
   case 1520: /* ClusterStmt: CLUSTER '(' utility_option_list ')' qualified_name cluster_index_specification  */
@@ -43105,7 +43065,7 @@
 					n->params = (yyvsp[-3].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 43109 "gram.c"
+#line 43069 "gram.c"
     break;
 
   case 1521: /* ClusterStmt: CLUSTER opt_verbose  */
@@ -43120,7 +43080,7 @@
 						n->params = lappend(n->params, makeDefElem("verbose", NULL, (yylsp[0])));
 					(yyval.node) = (Node *) n;
 				}
-#line 43124 "gram.c"
+#line 43084 "gram.c"
     break;
 
   case 1522: /* ClusterStmt: CLUSTER opt_verbose name ON qualified_name  */
@@ -43135,19 +43095,19 @@
 						n->params = lappend(n->params, makeDefElem("verbose", NULL, (yylsp[-3])));
 					(yyval.node) = (Node *) n;
 				}
-#line 43139 "gram.c"
+#line 43099 "gram.c"
     break;
 
   case 1523: /* cluster_index_specification: USING name  */
 #line 11611 "gram.y"
                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 43145 "gram.c"
+#line 43105 "gram.c"
     break;
 
   case 1524: /* cluster_index_specification: %empty  */
 #line 11612 "gram.y"
                                                                 { (yyval.str) = NULL; }
-#line 43151 "gram.c"
+#line 43111 "gram.c"
     break;
 
   case 1525: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose opt_analyze opt_vacuum_relation_list  */
@@ -43172,7 +43132,7 @@
 					n->is_vacuumcmd = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 43176 "gram.c"
+#line 43136 "gram.c"
     break;
 
   case 1526: /* VacuumStmt: VACUUM '(' utility_option_list ')' opt_vacuum_relation_list  */
@@ -43185,7 +43145,7 @@
 					n->is_vacuumcmd = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 43189 "gram.c"
+#line 43149 "gram.c"
     break;
 
   case 1527: /* AnalyzeStmt: analyze_keyword opt_verbose opt_vacuum_relation_list  */
@@ -43201,7 +43161,7 @@
 					n->is_vacuumcmd = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 43205 "gram.c"
+#line 43165 "gram.c"
     break;
 
   case 1528: /* AnalyzeStmt: analyze_keyword '(' utility_option_list ')' opt_vacuum_relation_list  */
@@ -43214,7 +43174,7 @@
 					n->is_vacuumcmd = false;
 					(yyval.node) = (Node *) n;
 				}
-#line 43218 "gram.c"
+#line 43178 "gram.c"
     break;
 
   case 1529: /* utility_option_list: utility_option_elem  */
@@ -43222,7 +43182,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].defelt));
 				}
-#line 43226 "gram.c"
+#line 43186 "gram.c"
     break;
 
   case 1530: /* utility_option_list: utility_option_list ',' utility_option_elem  */
@@ -43230,7 +43190,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
 				}
-#line 43234 "gram.c"
+#line 43194 "gram.c"
     break;
 
   case 1533: /* utility_option_elem: utility_option_name utility_option_arg  */
@@ -43238,103 +43198,103 @@
                                 {
 					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 43242 "gram.c"
+#line 43202 "gram.c"
     break;
 
   case 1534: /* utility_option_name: NonReservedWord  */
 #line 11703 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 43248 "gram.c"
+#line 43208 "gram.c"
     break;
 
   case 1535: /* utility_option_name: analyze_keyword  */
 #line 11704 "gram.y"
                                                                                         { (yyval.str) = "analyze"; }
-#line 43254 "gram.c"
+#line 43214 "gram.c"
     break;
 
   case 1536: /* utility_option_name: FORMAT_LA  */
 #line 11705 "gram.y"
                                                                                                 { (yyval.str) = "format"; }
-#line 43260 "gram.c"
+#line 43220 "gram.c"
     break;
 
   case 1537: /* utility_option_arg: opt_boolean_or_string  */
 #line 11709 "gram.y"
                                                                                 { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
-#line 43266 "gram.c"
+#line 43226 "gram.c"
     break;
 
   case 1538: /* utility_option_arg: NumericOnly  */
 #line 11710 "gram.y"
                                                                                         { (yyval.node) = (Node *) (yyvsp[0].node); }
-#line 43272 "gram.c"
+#line 43232 "gram.c"
     break;
 
   case 1539: /* utility_option_arg: %empty  */
 #line 11711 "gram.y"
                                                                                         { (yyval.node) = NULL; }
-#line 43278 "gram.c"
+#line 43238 "gram.c"
     break;
 
   case 1540: /* opt_analyze: analyze_keyword  */
 #line 11715 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 43284 "gram.c"
+#line 43244 "gram.c"
     break;
 
   case 1541: /* opt_analyze: %empty  */
 #line 11716 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 43290 "gram.c"
+#line 43250 "gram.c"
     break;
 
   case 1542: /* opt_verbose: VERBOSE  */
 #line 11720 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 43296 "gram.c"
+#line 43256 "gram.c"
     break;
 
   case 1543: /* opt_verbose: %empty  */
 #line 11721 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 43302 "gram.c"
+#line 43262 "gram.c"
     break;
 
   case 1544: /* opt_full: FULL  */
 #line 11724 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 43308 "gram.c"
+#line 43268 "gram.c"
     break;
 
   case 1545: /* opt_full: %empty  */
 #line 11725 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 43314 "gram.c"
+#line 43274 "gram.c"
     break;
 
   case 1546: /* opt_freeze: FREEZE  */
 #line 11728 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 43320 "gram.c"
+#line 43280 "gram.c"
     break;
 
   case 1547: /* opt_freeze: %empty  */
 #line 11729 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 43326 "gram.c"
+#line 43286 "gram.c"
     break;
 
   case 1548: /* opt_name_list: '(' name_list ')'  */
 #line 11733 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 43332 "gram.c"
+#line 43292 "gram.c"
     break;
 
   case 1549: /* opt_name_list: %empty  */
 #line 11734 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 43338 "gram.c"
+#line 43298 "gram.c"
     break;
 
   case 1550: /* vacuum_relation: qualified_name opt_name_list  */
@@ -43342,31 +43302,31 @@
                                 {
 					(yyval.node) = (Node *) makeVacuumRelation((yyvsp[-1].range), InvalidOid, (yyvsp[0].list));
 				}
-#line 43346 "gram.c"
+#line 43306 "gram.c"
     break;
 
   case 1551: /* vacuum_relation_list: vacuum_relation  */
 #line 11746 "gram.y"
                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 43352 "gram.c"
+#line 43312 "gram.c"
     break;
 
   case 1552: /* vacuum_relation_list: vacuum_relation_list ',' vacuum_relation  */
 #line 11748 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 43358 "gram.c"
+#line 43318 "gram.c"
     break;
 
   case 1553: /* opt_vacuum_relation_list: vacuum_relation_list  */
 #line 11752 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 43364 "gram.c"
+#line 43324 "gram.c"
     break;
 
   case 1554: /* opt_vacuum_relation_list: %empty  */
 #line 11753 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 43370 "gram.c"
+#line 43330 "gram.c"
     break;
 
   case 1555: /* ExplainStmt: EXPLAIN ExplainableStmt  */
@@ -43378,7 +43338,7 @@
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
 				}
-#line 43382 "gram.c"
+#line 43342 "gram.c"
     break;
 
   case 1556: /* ExplainStmt: EXPLAIN analyze_keyword opt_verbose ExplainableStmt  */
@@ -43393,7 +43353,7 @@
 											 makeDefElem("verbose", NULL, (yylsp[-1])));
 					(yyval.node) = (Node *) n;
 				}
-#line 43397 "gram.c"
+#line 43357 "gram.c"
     break;
 
   case 1557: /* ExplainStmt: EXPLAIN VERBOSE ExplainableStmt  */
@@ -43405,7 +43365,7 @@
 					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[-1])));
 					(yyval.node) = (Node *) n;
 				}
-#line 43409 "gram.c"
+#line 43369 "gram.c"
     break;
 
   case 1558: /* ExplainStmt: EXPLAIN '(' utility_option_list ')' ExplainableStmt  */
@@ -43417,7 +43377,7 @@
 					n->options = (yyvsp[-2].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 43421 "gram.c"
+#line 43381 "gram.c"
     break;
 
   case 1569: /* PrepareStmt: PREPARE name prep_type_clause AS PreparableStmt  */
@@ -43430,19 +43390,19 @@
 					n->query = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 43434 "gram.c"
+#line 43394 "gram.c"
     break;
 
   case 1570: /* prep_type_clause: '(' type_list ')'  */
 #line 11834 "gram.y"
                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 43440 "gram.c"
+#line 43400 "gram.c"
     break;
 
   case 1571: /* prep_type_clause: %empty  */
 #line 11835 "gram.y"
                                                                         { (yyval.list) = NIL; }
-#line 43446 "gram.c"
+#line 43406 "gram.c"
     break;
 
   case 1577: /* ExecuteStmt: EXECUTE name execute_param_clause  */
@@ -43454,7 +43414,7 @@
 					n->params = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 43458 "gram.c"
+#line 43418 "gram.c"
     break;
 
   case 1578: /* ExecuteStmt: CREATE OptTemp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
@@ -43475,7 +43435,7 @@
 					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 43479 "gram.c"
+#line 43439 "gram.c"
     break;
 
   case 1579: /* ExecuteStmt: CREATE OptTemp TABLE IF_P NOT EXISTS create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
@@ -43496,19 +43456,19 @@
 					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
 					(yyval.node) = (Node *) ctas;
 				}
-#line 43500 "gram.c"
+#line 43460 "gram.c"
     break;
 
   case 1580: /* execute_param_clause: '(' expr_list ')'  */
 #line 11899 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 43506 "gram.c"
+#line 43466 "gram.c"
     break;
 
   case 1581: /* execute_param_clause: %empty  */
 #line 11900 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 43512 "gram.c"
+#line 43472 "gram.c"
     break;
 
   case 1582: /* DeallocateStmt: DEALLOCATE name  */
@@ -43519,7 +43479,7 @@
 						n->name = (yyvsp[0].str);
 						(yyval.node) = (Node *) n;
 					}
-#line 43523 "gram.c"
+#line 43483 "gram.c"
     break;
 
   case 1583: /* DeallocateStmt: DEALLOCATE PREPARE name  */
@@ -43530,7 +43490,7 @@
 						n->name = (yyvsp[0].str);
 						(yyval.node) = (Node *) n;
 					}
-#line 43534 "gram.c"
+#line 43494 "gram.c"
     break;
 
   case 1584: /* DeallocateStmt: DEALLOCATE ALL  */
@@ -43541,7 +43501,7 @@
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
 					}
-#line 43545 "gram.c"
+#line 43505 "gram.c"
     break;
 
   case 1585: /* DeallocateStmt: DEALLOCATE PREPARE ALL  */
@@ -43552,7 +43512,7 @@
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
 					}
-#line 43556 "gram.c"
+#line 43516 "gram.c"
     break;
 
   case 1586: /* InsertStmt: opt_with_clause INSERT INTO insert_target insert_rest opt_on_conflict returning_clause  */
@@ -43564,7 +43524,7 @@
 					(yyvsp[-2].istmt)->withClause = (yyvsp[-6].with);
 					(yyval.node) = (Node *) (yyvsp[-2].istmt);
 				}
-#line 43568 "gram.c"
+#line 43528 "gram.c"
     break;
 
   case 1587: /* insert_target: qualified_name  */
@@ -43572,7 +43532,7 @@
                                 {
 					(yyval.range) = (yyvsp[0].range);
 				}
-#line 43576 "gram.c"
+#line 43536 "gram.c"
     break;
 
   case 1588: /* insert_target: qualified_name AS ColId  */
@@ -43581,7 +43541,7 @@
 					(yyvsp[-2].range)->alias = makeAlias((yyvsp[0].str), NIL);
 					(yyval.range) = (yyvsp[-2].range);
 				}
-#line 43585 "gram.c"
+#line 43545 "gram.c"
     break;
 
   case 1589: /* insert_rest: SelectStmt  */
@@ -43591,7 +43551,7 @@
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = (yyvsp[0].node);
 				}
-#line 43595 "gram.c"
+#line 43555 "gram.c"
     break;
 
   case 1590: /* insert_rest: OVERRIDING override_kind VALUE_P SelectStmt  */
@@ -43602,7 +43562,7 @@
 					(yyval.istmt)->override = (yyvsp[-2].ival);
 					(yyval.istmt)->selectStmt = (yyvsp[0].node);
 				}
-#line 43606 "gram.c"
+#line 43566 "gram.c"
     break;
 
   case 1591: /* insert_rest: '(' insert_column_list ')' SelectStmt  */
@@ -43612,7 +43572,7 @@
 					(yyval.istmt)->cols = (yyvsp[-2].list);
 					(yyval.istmt)->selectStmt = (yyvsp[0].node);
 				}
-#line 43616 "gram.c"
+#line 43576 "gram.c"
     break;
 
   case 1592: /* insert_rest: '(' insert_column_list ')' OVERRIDING override_kind VALUE_P SelectStmt  */
@@ -43623,7 +43583,7 @@
 					(yyval.istmt)->override = (yyvsp[-2].ival);
 					(yyval.istmt)->selectStmt = (yyvsp[0].node);
 				}
-#line 43627 "gram.c"
+#line 43587 "gram.c"
     break;
 
   case 1593: /* insert_rest: DEFAULT VALUES  */
@@ -43633,31 +43593,31 @@
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = NULL;
 				}
-#line 43637 "gram.c"
+#line 43597 "gram.c"
     break;
 
   case 1594: /* override_kind: USER  */
 #line 12013 "gram.y"
                                         { (yyval.ival) = OVERRIDING_USER_VALUE; }
-#line 43643 "gram.c"
+#line 43603 "gram.c"
     break;
 
   case 1595: /* override_kind: SYSTEM_P  */
 #line 12014 "gram.y"
                                         { (yyval.ival) = OVERRIDING_SYSTEM_VALUE; }
-#line 43649 "gram.c"
+#line 43609 "gram.c"
     break;
 
   case 1596: /* insert_column_list: insert_column_item  */
 #line 12019 "gram.y"
                                         { (yyval.list) = list_make1((yyvsp[0].target)); }
-#line 43655 "gram.c"
+#line 43615 "gram.c"
     break;
 
   case 1597: /* insert_column_list: insert_column_list ',' insert_column_item  */
 #line 12021 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
-#line 43661 "gram.c"
+#line 43621 "gram.c"
     break;
 
   case 1598: /* insert_column_item: ColId opt_indirection  */
@@ -43669,7 +43629,7 @@
 					(yyval.target)->val = NULL;
 					(yyval.target)->location = (yylsp[-1]);
 				}
-#line 43673 "gram.c"
+#line 43633 "gram.c"
     break;
 
   case 1599: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO UPDATE SET set_clause_list where_clause  */
@@ -43682,7 +43642,7 @@
 					(yyval.onconflict)->whereClause = (yyvsp[0].node);
 					(yyval.onconflict)->location = (yylsp[-7]);
 				}
-#line 43686 "gram.c"
+#line 43646 "gram.c"
     break;
 
   case 1600: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO NOTHING  */
@@ -43695,7 +43655,7 @@
 					(yyval.onconflict)->whereClause = NULL;
 					(yyval.onconflict)->location = (yylsp[-4]);
 				}
-#line 43699 "gram.c"
+#line 43659 "gram.c"
     break;
 
   case 1601: /* opt_on_conflict: %empty  */
@@ -43703,7 +43663,7 @@
                                 {
 					(yyval.onconflict) = NULL;
 				}
-#line 43707 "gram.c"
+#line 43667 "gram.c"
     break;
 
   case 1602: /* opt_conf_expr: '(' index_params ')' where_clause  */
@@ -43715,7 +43675,7 @@
 					(yyval.infer)->conname = NULL;
 					(yyval.infer)->location = (yylsp[-3]);
 				}
-#line 43719 "gram.c"
+#line 43679 "gram.c"
     break;
 
   case 1603: /* opt_conf_expr: ON CONSTRAINT name  */
@@ -43727,7 +43687,7 @@
 					(yyval.infer)->conname = (yyvsp[0].str);
 					(yyval.infer)->location = (yylsp[-2]);
 				}
-#line 43731 "gram.c"
+#line 43691 "gram.c"
     break;
 
   case 1604: /* opt_conf_expr: %empty  */
@@ -43735,19 +43695,19 @@
                                 {
 					(yyval.infer) = NULL;
 				}
-#line 43739 "gram.c"
+#line 43699 "gram.c"
     break;
 
   case 1605: /* returning_clause: RETURNING target_list  */
 #line 12086 "gram.y"
                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 43745 "gram.c"
+#line 43705 "gram.c"
     break;
 
   case 1606: /* returning_clause: %empty  */
 #line 12087 "gram.y"
                                                                 { (yyval.list) = NIL; }
-#line 43751 "gram.c"
+#line 43711 "gram.c"
     break;
 
   case 1607: /* DeleteStmt: opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause  */
@@ -43762,19 +43722,19 @@
 					n->withClause = (yyvsp[-6].with);
 					(yyval.node) = (Node *) n;
 				}
-#line 43766 "gram.c"
+#line 43726 "gram.c"
     break;
 
   case 1608: /* using_clause: USING from_list  */
 #line 12113 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 43772 "gram.c"
+#line 43732 "gram.c"
     break;
 
   case 1609: /* using_clause: %empty  */
 #line 12114 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 43778 "gram.c"
+#line 43738 "gram.c"
     break;
 
   case 1610: /* LockStmt: LOCK_P opt_table relation_expr_list opt_lock opt_nowait  */
@@ -43787,97 +43747,97 @@
 					n->nowait = (yyvsp[0].boolean);
 					(yyval.node) = (Node *) n;
 				}
-#line 43791 "gram.c"
+#line 43751 "gram.c"
     break;
 
   case 1611: /* opt_lock: IN_P lock_type MODE  */
 #line 12136 "gram.y"
                                                                 { (yyval.ival) = (yyvsp[-1].ival); }
-#line 43797 "gram.c"
+#line 43757 "gram.c"
     break;
 
   case 1612: /* opt_lock: %empty  */
 #line 12137 "gram.y"
                                                                                 { (yyval.ival) = AccessExclusiveLock; }
-#line 43803 "gram.c"
+#line 43763 "gram.c"
     break;
 
   case 1613: /* lock_type: ACCESS SHARE  */
 #line 12140 "gram.y"
                                                                 { (yyval.ival) = AccessShareLock; }
-#line 43809 "gram.c"
+#line 43769 "gram.c"
     break;
 
   case 1614: /* lock_type: ROW SHARE  */
 #line 12141 "gram.y"
                                                                                 { (yyval.ival) = RowShareLock; }
-#line 43815 "gram.c"
+#line 43775 "gram.c"
     break;
 
   case 1615: /* lock_type: ROW EXCLUSIVE  */
 #line 12142 "gram.y"
                                                                         { (yyval.ival) = RowExclusiveLock; }
-#line 43821 "gram.c"
+#line 43781 "gram.c"
     break;
 
   case 1616: /* lock_type: SHARE UPDATE EXCLUSIVE  */
 #line 12143 "gram.y"
                                                                 { (yyval.ival) = ShareUpdateExclusiveLock; }
-#line 43827 "gram.c"
+#line 43787 "gram.c"
     break;
 
   case 1617: /* lock_type: SHARE  */
 #line 12144 "gram.y"
                                                                                 { (yyval.ival) = ShareLock; }
-#line 43833 "gram.c"
+#line 43793 "gram.c"
     break;
 
   case 1618: /* lock_type: SHARE ROW EXCLUSIVE  */
 #line 12145 "gram.y"
                                                                 { (yyval.ival) = ShareRowExclusiveLock; }
-#line 43839 "gram.c"
+#line 43799 "gram.c"
     break;
 
   case 1619: /* lock_type: EXCLUSIVE  */
 #line 12146 "gram.y"
                                                                                 { (yyval.ival) = ExclusiveLock; }
-#line 43845 "gram.c"
+#line 43805 "gram.c"
     break;
 
   case 1620: /* lock_type: ACCESS EXCLUSIVE  */
 #line 12147 "gram.y"
                                                                         { (yyval.ival) = AccessExclusiveLock; }
-#line 43851 "gram.c"
+#line 43811 "gram.c"
     break;
 
   case 1621: /* opt_nowait: NOWAIT  */
 #line 12150 "gram.y"
                                                                         { (yyval.boolean) = true; }
-#line 43857 "gram.c"
+#line 43817 "gram.c"
     break;
 
   case 1622: /* opt_nowait: %empty  */
 #line 12151 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 43863 "gram.c"
+#line 43823 "gram.c"
     break;
 
   case 1623: /* opt_nowait_or_skip: NOWAIT  */
 #line 12155 "gram.y"
                                                                                 { (yyval.ival) = LockWaitError; }
-#line 43869 "gram.c"
+#line 43829 "gram.c"
     break;
 
   case 1624: /* opt_nowait_or_skip: SKIP LOCKED  */
 #line 12156 "gram.y"
                                                                         { (yyval.ival) = LockWaitSkip; }
-#line 43875 "gram.c"
+#line 43835 "gram.c"
     break;
 
   case 1625: /* opt_nowait_or_skip: %empty  */
 #line 12157 "gram.y"
                                                                                 { (yyval.ival) = LockWaitBlock; }
-#line 43881 "gram.c"
+#line 43841 "gram.c"
     break;
 
   case 1626: /* UpdateStmt: opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause  */
@@ -43893,19 +43853,19 @@
 					n->withClause = (yyvsp[-7].with);
 					(yyval.node) = (Node *) n;
 				}
-#line 43897 "gram.c"
+#line 43857 "gram.c"
     break;
 
   case 1627: /* set_clause_list: set_clause  */
 #line 12187 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 43903 "gram.c"
+#line 43863 "gram.c"
     break;
 
   case 1628: /* set_clause_list: set_clause_list ',' set_clause  */
 #line 12188 "gram.y"
                                                                 { (yyval.list) = list_concat((yyvsp[-2].list),(yyvsp[0].list)); }
-#line 43909 "gram.c"
+#line 43869 "gram.c"
     break;
 
   case 1629: /* set_clause: set_target '=' a_expr  */
@@ -43914,7 +43874,7 @@
 					(yyvsp[-2].target)->val = (Node *) (yyvsp[0].node);
 					(yyval.list) = list_make1((yyvsp[-2].target));
 				}
-#line 43918 "gram.c"
+#line 43878 "gram.c"
     break;
 
   case 1630: /* set_clause: '(' set_target_list ')' '=' a_expr  */
@@ -43939,7 +43899,7 @@
 
 					(yyval.list) = (yyvsp[-3].list);
 				}
-#line 43943 "gram.c"
+#line 43903 "gram.c"
     break;
 
   case 1631: /* set_target: ColId opt_indirection  */
@@ -43951,19 +43911,19 @@
 					(yyval.target)->val = NULL;	/* upper production sets this */
 					(yyval.target)->location = (yylsp[-1]);
 				}
-#line 43955 "gram.c"
+#line 43915 "gram.c"
     break;
 
   case 1632: /* set_target_list: set_target  */
 #line 12232 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].target)); }
-#line 43961 "gram.c"
+#line 43921 "gram.c"
     break;
 
   case 1633: /* set_target_list: set_target_list ',' set_target  */
 #line 12233 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].target)); }
-#line 43967 "gram.c"
+#line 43927 "gram.c"
     break;
 
   case 1634: /* MergeStmt: opt_with_clause MERGE INTO relation_expr_opt_alias USING table_ref ON a_expr merge_when_list  */
@@ -43979,19 +43939,19 @@
 
 					(yyval.node) = (Node *) m;
 				}
-#line 43983 "gram.c"
+#line 43943 "gram.c"
     break;
 
   case 1635: /* merge_when_list: merge_when_clause  */
 #line 12263 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 43989 "gram.c"
+#line 43949 "gram.c"
     break;
 
   case 1636: /* merge_when_list: merge_when_list merge_when_clause  */
 #line 12264 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list),(yyvsp[0].node)); }
-#line 43995 "gram.c"
+#line 43955 "gram.c"
     break;
 
   case 1637: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN merge_update  */
@@ -44002,7 +43962,7 @@
 
 					(yyval.node) = (Node *) (yyvsp[0].mergewhen);
 				}
-#line 44006 "gram.c"
+#line 43966 "gram.c"
     break;
 
   case 1638: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN merge_delete  */
@@ -44013,7 +43973,7 @@
 
 					(yyval.node) = (Node *) (yyvsp[0].mergewhen);
 				}
-#line 44017 "gram.c"
+#line 43977 "gram.c"
     break;
 
   case 1639: /* merge_when_clause: WHEN NOT MATCHED opt_merge_when_condition THEN merge_insert  */
@@ -44024,7 +43984,7 @@
 
 					(yyval.node) = (Node *) (yyvsp[0].mergewhen);
 				}
-#line 44028 "gram.c"
+#line 43988 "gram.c"
     break;
 
   case 1640: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN DO NOTHING  */
@@ -44038,7 +43998,7 @@
 
 					(yyval.node) = (Node *) m;
 				}
-#line 44042 "gram.c"
+#line 44002 "gram.c"
     break;
 
   case 1641: /* merge_when_clause: WHEN NOT MATCHED opt_merge_when_condition THEN DO NOTHING  */
@@ -44052,19 +44012,19 @@
 
 					(yyval.node) = (Node *) m;
 				}
-#line 44056 "gram.c"
+#line 44016 "gram.c"
     break;
 
   case 1642: /* opt_merge_when_condition: AND a_expr  */
 #line 12312 "gram.y"
                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44062 "gram.c"
+#line 44022 "gram.c"
     break;
 
   case 1643: /* opt_merge_when_condition: %empty  */
 #line 12313 "gram.y"
                                                                         { (yyval.node) = NULL; }
-#line 44068 "gram.c"
+#line 44028 "gram.c"
     break;
 
   case 1644: /* merge_update: UPDATE SET set_clause_list  */
@@ -44078,7 +44038,7 @@
 
 					(yyval.mergewhen) = n;
 				}
-#line 44082 "gram.c"
+#line 44042 "gram.c"
     break;
 
   case 1645: /* merge_delete: DELETE_P  */
@@ -44092,7 +44052,7 @@
 
 					(yyval.mergewhen) = n;
 				}
-#line 44096 "gram.c"
+#line 44056 "gram.c"
     break;
 
   case 1646: /* merge_insert: INSERT merge_values_clause  */
@@ -44105,7 +44065,7 @@
 					n->values = (yyvsp[0].list);
 					(yyval.mergewhen) = n;
 				}
-#line 44109 "gram.c"
+#line 44069 "gram.c"
     break;
 
   case 1647: /* merge_insert: INSERT OVERRIDING override_kind VALUE_P merge_values_clause  */
@@ -44118,7 +44078,7 @@
 					n->values = (yyvsp[0].list);
 					(yyval.mergewhen) = n;
 				}
-#line 44122 "gram.c"
+#line 44082 "gram.c"
     break;
 
   case 1648: /* merge_insert: INSERT '(' insert_column_list ')' merge_values_clause  */
@@ -44131,7 +44091,7 @@
 					n->values = (yyvsp[0].list);
 					(yyval.mergewhen) = n;
 				}
-#line 44135 "gram.c"
+#line 44095 "gram.c"
     break;
 
   case 1649: /* merge_insert: INSERT '(' insert_column_list ')' OVERRIDING override_kind VALUE_P merge_values_clause  */
@@ -44144,7 +44104,7 @@
 					n->values = (yyvsp[0].list);
 					(yyval.mergewhen) = n;
 				}
-#line 44148 "gram.c"
+#line 44108 "gram.c"
     break;
 
   case 1650: /* merge_insert: INSERT DEFAULT VALUES  */
@@ -44157,7 +44117,7 @@
 					n->values = NIL;
 					(yyval.mergewhen) = n;
 				}
-#line 44161 "gram.c"
+#line 44121 "gram.c"
     break;
 
   case 1651: /* merge_values_clause: VALUES '(' expr_list ')'  */
@@ -44165,7 +44125,7 @@
                                 {
 					(yyval.list) = (yyvsp[-1].list);
 				}
-#line 44169 "gram.c"
+#line 44129 "gram.c"
     break;
 
   case 1652: /* DeclareCursorStmt: DECLARE cursor_name cursor_options CURSOR opt_hold FOR SelectStmt  */
@@ -44179,85 +44139,85 @@
 					n->query = (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 44183 "gram.c"
+#line 44143 "gram.c"
     break;
 
   case 1653: /* cursor_name: name  */
 #line 12415 "gram.y"
                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 44189 "gram.c"
+#line 44149 "gram.c"
     break;
 
   case 1654: /* cursor_options: %empty  */
 #line 12418 "gram.y"
                                                                 { (yyval.ival) = 0; }
-#line 44195 "gram.c"
+#line 44155 "gram.c"
     break;
 
   case 1655: /* cursor_options: cursor_options NO SCROLL  */
 #line 12419 "gram.y"
                                                                 { (yyval.ival) = (yyvsp[-2].ival) | CURSOR_OPT_NO_SCROLL; }
-#line 44201 "gram.c"
+#line 44161 "gram.c"
     break;
 
   case 1656: /* cursor_options: cursor_options SCROLL  */
 #line 12420 "gram.y"
                                                                 { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_SCROLL; }
-#line 44207 "gram.c"
+#line 44167 "gram.c"
     break;
 
   case 1657: /* cursor_options: cursor_options BINARY  */
 #line 12421 "gram.y"
                                                                 { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_BINARY; }
-#line 44213 "gram.c"
+#line 44173 "gram.c"
     break;
 
   case 1658: /* cursor_options: cursor_options ASENSITIVE  */
 #line 12422 "gram.y"
                                                                 { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_ASENSITIVE; }
-#line 44219 "gram.c"
+#line 44179 "gram.c"
     break;
 
   case 1659: /* cursor_options: cursor_options INSENSITIVE  */
 #line 12423 "gram.y"
                                                         { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_INSENSITIVE; }
-#line 44225 "gram.c"
+#line 44185 "gram.c"
     break;
 
   case 1660: /* opt_hold: %empty  */
 #line 12426 "gram.y"
                                                                 { (yyval.ival) = 0; }
-#line 44231 "gram.c"
+#line 44191 "gram.c"
     break;
 
   case 1661: /* opt_hold: WITH HOLD  */
 #line 12427 "gram.y"
                                                                                 { (yyval.ival) = CURSOR_OPT_HOLD; }
-#line 44237 "gram.c"
+#line 44197 "gram.c"
     break;
 
   case 1662: /* opt_hold: WITHOUT HOLD  */
 #line 12428 "gram.y"
                                                                         { (yyval.ival) = 0; }
-#line 44243 "gram.c"
+#line 44203 "gram.c"
     break;
 
   case 1665: /* select_with_parens: '(' select_no_parens ')'  */
 #line 12481 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 44249 "gram.c"
+#line 44209 "gram.c"
     break;
 
   case 1666: /* select_with_parens: '(' select_with_parens ')'  */
 #line 12482 "gram.y"
                                                                         { (yyval.node) = (yyvsp[-1].node); }
-#line 44255 "gram.c"
+#line 44215 "gram.c"
     break;
 
   case 1667: /* select_no_parens: simple_select  */
 #line 12497 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44261 "gram.c"
+#line 44221 "gram.c"
     break;
 
   case 1668: /* select_no_parens: select_clause sort_clause  */
@@ -44268,7 +44228,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-1].node);
 				}
-#line 44272 "gram.c"
+#line 44232 "gram.c"
     break;
 
   case 1669: /* select_no_parens: select_clause opt_sort_clause for_locking_clause opt_select_limit  */
@@ -44280,7 +44240,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-3].node);
 				}
-#line 44284 "gram.c"
+#line 44244 "gram.c"
     break;
 
   case 1670: /* select_no_parens: select_clause opt_sort_clause select_limit opt_for_locking_clause  */
@@ -44292,7 +44252,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-3].node);
 				}
-#line 44296 "gram.c"
+#line 44256 "gram.c"
     break;
 
   case 1671: /* select_no_parens: with_clause select_clause  */
@@ -44304,7 +44264,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 44308 "gram.c"
+#line 44268 "gram.c"
     break;
 
   case 1672: /* select_no_parens: with_clause select_clause sort_clause  */
@@ -44316,7 +44276,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-1].node);
 				}
-#line 44320 "gram.c"
+#line 44280 "gram.c"
     break;
 
   case 1673: /* select_no_parens: with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit  */
@@ -44328,7 +44288,7 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-3].node);
 				}
-#line 44332 "gram.c"
+#line 44292 "gram.c"
     break;
 
   case 1674: /* select_no_parens: with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause  */
@@ -44340,19 +44300,19 @@
 										yyscanner);
 					(yyval.node) = (yyvsp[-3].node);
 				}
-#line 44344 "gram.c"
+#line 44304 "gram.c"
     break;
 
   case 1675: /* select_clause: simple_select  */
 #line 12556 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 44350 "gram.c"
+#line 44310 "gram.c"
     break;
 
   case 1676: /* select_clause: select_with_parens  */
 #line 12557 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44356 "gram.c"
+#line 44316 "gram.c"
     break;
 
   case 1677: /* simple_select: SELECT opt_all_clause opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
@@ -44370,7 +44330,7 @@
 					n->windowClause = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 44374 "gram.c"
+#line 44334 "gram.c"
     break;
 
   case 1678: /* simple_select: SELECT distinct_clause target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
@@ -44389,13 +44349,13 @@
 					n->windowClause = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 44393 "gram.c"
+#line 44353 "gram.c"
     break;
 
   case 1679: /* simple_select: values_clause  */
 #line 12622 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 44399 "gram.c"
+#line 44359 "gram.c"
     break;
 
   case 1680: /* simple_select: TABLE relation_expr  */
@@ -44418,7 +44378,7 @@
 					n->fromClause = list_make1((yyvsp[0].range));
 					(yyval.node) = (Node *) n;
 				}
-#line 44422 "gram.c"
+#line 44382 "gram.c"
     break;
 
   case 1681: /* simple_select: select_clause UNION set_quantifier select_clause  */
@@ -44426,7 +44386,7 @@
                                 {
 					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[-1].setquantifier) == SET_QUANTIFIER_ALL, (yyvsp[-3].node), (yyvsp[0].node));
 				}
-#line 44430 "gram.c"
+#line 44390 "gram.c"
     break;
 
   case 1682: /* simple_select: select_clause INTERSECT set_quantifier select_clause  */
@@ -44434,7 +44394,7 @@
                                 {
 					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[-1].setquantifier) == SET_QUANTIFIER_ALL, (yyvsp[-3].node), (yyvsp[0].node));
 				}
-#line 44438 "gram.c"
+#line 44398 "gram.c"
     break;
 
   case 1683: /* simple_select: select_clause EXCEPT set_quantifier select_clause  */
@@ -44442,7 +44402,7 @@
                                 {
 					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[-1].setquantifier) == SET_QUANTIFIER_ALL, (yyvsp[-3].node), (yyvsp[0].node));
 				}
-#line 44446 "gram.c"
+#line 44406 "gram.c"
     break;
 
   case 1684: /* with_clause: WITH cte_list  */
@@ -44453,7 +44413,7 @@
 				(yyval.with)->recursive = false;
 				(yyval.with)->location = (yylsp[-1]);
 			}
-#line 44457 "gram.c"
+#line 44417 "gram.c"
     break;
 
   case 1685: /* with_clause: WITH_LA cte_list  */
@@ -44464,7 +44424,7 @@
 				(yyval.with)->recursive = false;
 				(yyval.with)->location = (yylsp[-1]);
 			}
-#line 44468 "gram.c"
+#line 44428 "gram.c"
     break;
 
   case 1686: /* with_clause: WITH RECURSIVE cte_list  */
@@ -44475,19 +44435,19 @@
 				(yyval.with)->recursive = true;
 				(yyval.with)->location = (yylsp[-2]);
 			}
-#line 44479 "gram.c"
+#line 44439 "gram.c"
     break;
 
   case 1687: /* cte_list: common_table_expr  */
 #line 12689 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 44485 "gram.c"
+#line 44445 "gram.c"
     break;
 
   case 1688: /* cte_list: cte_list ',' common_table_expr  */
 #line 12690 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 44491 "gram.c"
+#line 44451 "gram.c"
     break;
 
   case 1689: /* common_table_expr: name opt_name_list AS opt_materialized '(' PreparableStmt ')' opt_search_clause opt_cycle_clause  */
@@ -44504,25 +44464,25 @@
 				n->location = (yylsp[-8]);
 				(yyval.node) = (Node *) n;
 			}
-#line 44508 "gram.c"
+#line 44468 "gram.c"
     break;
 
   case 1690: /* opt_materialized: MATERIALIZED  */
 #line 12709 "gram.y"
                                                                                 { (yyval.ival) = CTEMaterializeAlways; }
-#line 44514 "gram.c"
+#line 44474 "gram.c"
     break;
 
   case 1691: /* opt_materialized: NOT MATERIALIZED  */
 #line 12710 "gram.y"
                                                                                 { (yyval.ival) = CTEMaterializeNever; }
-#line 44520 "gram.c"
+#line 44480 "gram.c"
     break;
 
   case 1692: /* opt_materialized: %empty  */
 #line 12711 "gram.y"
                                                                                         { (yyval.ival) = CTEMaterializeDefault; }
-#line 44526 "gram.c"
+#line 44486 "gram.c"
     break;
 
   case 1693: /* opt_search_clause: SEARCH DEPTH FIRST_P BY columnList SET ColId  */
@@ -44536,7 +44496,7 @@
 				n->location = (yylsp[-6]);
 				(yyval.node) = (Node *) n;
 			}
-#line 44540 "gram.c"
+#line 44500 "gram.c"
     break;
 
   case 1694: /* opt_search_clause: SEARCH BREADTH FIRST_P BY columnList SET ColId  */
@@ -44550,7 +44510,7 @@
 				n->location = (yylsp[-6]);
 				(yyval.node) = (Node *) n;
 			}
-#line 44554 "gram.c"
+#line 44514 "gram.c"
     break;
 
   case 1695: /* opt_search_clause: %empty  */
@@ -44558,7 +44518,7 @@
                         {
 				(yyval.node) = NULL;
 			}
-#line 44562 "gram.c"
+#line 44522 "gram.c"
     break;
 
   case 1696: /* opt_cycle_clause: CYCLE columnList SET ColId TO AexprConst DEFAULT AexprConst USING ColId  */
@@ -44574,7 +44534,7 @@
 				n->location = (yylsp[-9]);
 				(yyval.node) = (Node *) n;
 			}
-#line 44578 "gram.c"
+#line 44538 "gram.c"
     break;
 
   case 1697: /* opt_cycle_clause: CYCLE columnList SET ColId USING ColId  */
@@ -44590,7 +44550,7 @@
 				n->location = (yylsp[-5]);
 				(yyval.node) = (Node *) n;
 			}
-#line 44594 "gram.c"
+#line 44554 "gram.c"
     break;
 
   case 1698: /* opt_cycle_clause: %empty  */
@@ -44598,19 +44558,19 @@
                         {
 				(yyval.node) = NULL;
 			}
-#line 44602 "gram.c"
+#line 44562 "gram.c"
     break;
 
   case 1699: /* opt_with_clause: with_clause  */
 #line 12773 "gram.y"
                                                                                         { (yyval.with) = (yyvsp[0].with); }
-#line 44608 "gram.c"
+#line 44568 "gram.c"
     break;
 
   case 1700: /* opt_with_clause: %empty  */
 #line 12774 "gram.y"
                                                                                         { (yyval.with) = NULL; }
-#line 44614 "gram.c"
+#line 44574 "gram.c"
     break;
 
   case 1701: /* into_clause: INTO OptTempTableName  */
@@ -44625,13 +44585,13 @@
 					(yyval.into)->viewQuery = NULL;
 					(yyval.into)->skipData = false;
 				}
-#line 44629 "gram.c"
+#line 44589 "gram.c"
     break;
 
   case 1702: /* into_clause: %empty  */
 #line 12790 "gram.y"
                                 { (yyval.into) = NULL; }
-#line 44635 "gram.c"
+#line 44595 "gram.c"
     break;
 
   case 1703: /* OptTempTableName: TEMPORARY opt_table qualified_name  */
@@ -44640,7 +44600,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44644 "gram.c"
+#line 44604 "gram.c"
     break;
 
   case 1704: /* OptTempTableName: TEMP opt_table qualified_name  */
@@ -44649,7 +44609,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44653 "gram.c"
+#line 44613 "gram.c"
     break;
 
   case 1705: /* OptTempTableName: LOCAL TEMPORARY opt_table qualified_name  */
@@ -44658,7 +44618,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44662 "gram.c"
+#line 44622 "gram.c"
     break;
 
   case 1706: /* OptTempTableName: LOCAL TEMP opt_table qualified_name  */
@@ -44667,7 +44627,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44671 "gram.c"
+#line 44631 "gram.c"
     break;
 
   case 1707: /* OptTempTableName: GLOBAL TEMPORARY opt_table qualified_name  */
@@ -44679,7 +44639,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44683 "gram.c"
+#line 44643 "gram.c"
     break;
 
   case 1708: /* OptTempTableName: GLOBAL TEMP opt_table qualified_name  */
@@ -44691,7 +44651,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
 				}
-#line 44695 "gram.c"
+#line 44655 "gram.c"
     break;
 
   case 1709: /* OptTempTableName: UNLOGGED opt_table qualified_name  */
@@ -44700,7 +44660,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_UNLOGGED;
 				}
-#line 44704 "gram.c"
+#line 44664 "gram.c"
     break;
 
   case 1710: /* OptTempTableName: TABLE qualified_name  */
@@ -44709,7 +44669,7 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
 				}
-#line 44713 "gram.c"
+#line 44673 "gram.c"
     break;
 
   case 1711: /* OptTempTableName: qualified_name  */
@@ -44718,79 +44678,79 @@
 					(yyval.range) = (yyvsp[0].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
 				}
-#line 44722 "gram.c"
+#line 44682 "gram.c"
     break;
 
   case 1714: /* set_quantifier: ALL  */
 #line 12856 "gram.y"
                                                                                                         { (yyval.setquantifier) = SET_QUANTIFIER_ALL; }
-#line 44728 "gram.c"
+#line 44688 "gram.c"
     break;
 
   case 1715: /* set_quantifier: DISTINCT  */
 #line 12857 "gram.y"
                                                                                                 { (yyval.setquantifier) = SET_QUANTIFIER_DISTINCT; }
-#line 44734 "gram.c"
+#line 44694 "gram.c"
     break;
 
   case 1716: /* set_quantifier: %empty  */
 #line 12858 "gram.y"
                                                                                                 { (yyval.setquantifier) = SET_QUANTIFIER_DEFAULT; }
-#line 44740 "gram.c"
+#line 44700 "gram.c"
     break;
 
   case 1717: /* distinct_clause: DISTINCT  */
 #line 12865 "gram.y"
                                                                                                 { (yyval.list) = list_make1(NIL); }
-#line 44746 "gram.c"
+#line 44706 "gram.c"
     break;
 
   case 1718: /* distinct_clause: DISTINCT ON '(' expr_list ')'  */
 #line 12866 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 44752 "gram.c"
+#line 44712 "gram.c"
     break;
 
   case 1721: /* opt_distinct_clause: distinct_clause  */
 #line 12875 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 44758 "gram.c"
+#line 44718 "gram.c"
     break;
 
   case 1722: /* opt_distinct_clause: opt_all_clause  */
 #line 12876 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 44764 "gram.c"
+#line 44724 "gram.c"
     break;
 
   case 1723: /* opt_sort_clause: sort_clause  */
 #line 12880 "gram.y"
                                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 44770 "gram.c"
+#line 44730 "gram.c"
     break;
 
   case 1724: /* opt_sort_clause: %empty  */
 #line 12881 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 44776 "gram.c"
+#line 44736 "gram.c"
     break;
 
   case 1725: /* sort_clause: ORDER BY sortby_list  */
 #line 12885 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 44782 "gram.c"
+#line 44742 "gram.c"
     break;
 
   case 1726: /* sortby_list: sortby  */
 #line 12889 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].sortby)); }
-#line 44788 "gram.c"
+#line 44748 "gram.c"
     break;
 
   case 1727: /* sortby_list: sortby_list ',' sortby  */
 #line 12890 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].sortby)); }
-#line 44794 "gram.c"
+#line 44754 "gram.c"
     break;
 
   case 1728: /* sortby: a_expr USING qual_all_Op opt_nulls_order  */
@@ -44803,7 +44763,7 @@
 					(yyval.sortby)->useOp = (yyvsp[-1].list);
 					(yyval.sortby)->location = (yylsp[-1]);
 				}
-#line 44807 "gram.c"
+#line 44767 "gram.c"
     break;
 
   case 1729: /* sortby: a_expr opt_asc_desc opt_nulls_order  */
@@ -44816,7 +44776,7 @@
 					(yyval.sortby)->useOp = NIL;
 					(yyval.sortby)->location = -1;		/* no operator */
 				}
-#line 44820 "gram.c"
+#line 44780 "gram.c"
     break;
 
   case 1730: /* select_limit: limit_clause offset_clause  */
@@ -44825,7 +44785,7 @@
 					(yyval.selectlimit) = (yyvsp[-1].selectlimit);
 					((yyval.selectlimit))->limitOffset = (yyvsp[0].node);
 				}
-#line 44829 "gram.c"
+#line 44789 "gram.c"
     break;
 
   case 1731: /* select_limit: offset_clause limit_clause  */
@@ -44834,7 +44794,7 @@
 					(yyval.selectlimit) = (yyvsp[0].selectlimit);
 					((yyval.selectlimit))->limitOffset = (yyvsp[-1].node);
 				}
-#line 44838 "gram.c"
+#line 44798 "gram.c"
     break;
 
   case 1732: /* select_limit: limit_clause  */
@@ -44842,7 +44802,7 @@
                                 {
 					(yyval.selectlimit) = (yyvsp[0].selectlimit);
 				}
-#line 44846 "gram.c"
+#line 44806 "gram.c"
     break;
 
   case 1733: /* select_limit: offset_clause  */
@@ -44855,19 +44815,19 @@
 					n->limitOption = LIMIT_OPTION_COUNT;
 					(yyval.selectlimit) = n;
 				}
-#line 44859 "gram.c"
+#line 44819 "gram.c"
     break;
 
   case 1734: /* opt_select_limit: select_limit  */
 #line 12941 "gram.y"
                                                                                 { (yyval.selectlimit) = (yyvsp[0].selectlimit); }
-#line 44865 "gram.c"
+#line 44825 "gram.c"
     break;
 
   case 1735: /* opt_select_limit: %empty  */
 #line 12942 "gram.y"
                                                                                 { (yyval.selectlimit) = NULL; }
-#line 44871 "gram.c"
+#line 44831 "gram.c"
     break;
 
   case 1736: /* limit_clause: LIMIT select_limit_value  */
@@ -44880,7 +44840,7 @@
 					n->limitOption = LIMIT_OPTION_COUNT;
 					(yyval.selectlimit) = n;
 				}
-#line 44884 "gram.c"
+#line 44844 "gram.c"
     break;
 
   case 1737: /* limit_clause: LIMIT select_limit_value ',' select_offset_value  */
@@ -44893,7 +44853,7 @@
 							 errhint("Use separate LIMIT and OFFSET clauses."),
 							 parser_errposition((yylsp[-3]))));
 				}
-#line 44897 "gram.c"
+#line 44857 "gram.c"
     break;
 
   case 1738: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows ONLY  */
@@ -44906,7 +44866,7 @@
 					n->limitOption = LIMIT_OPTION_COUNT;
 					(yyval.selectlimit) = n;
 				}
-#line 44910 "gram.c"
+#line 44870 "gram.c"
     break;
 
   case 1739: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows WITH TIES  */
@@ -44919,7 +44879,7 @@
 					n->limitOption = LIMIT_OPTION_WITH_TIES;
 					(yyval.selectlimit) = n;
 				}
-#line 44923 "gram.c"
+#line 44883 "gram.c"
     break;
 
   case 1740: /* limit_clause: FETCH first_or_next row_or_rows ONLY  */
@@ -44932,7 +44892,7 @@
 					n->limitOption = LIMIT_OPTION_COUNT;
 					(yyval.selectlimit) = n;
 				}
-#line 44936 "gram.c"
+#line 44896 "gram.c"
     break;
 
   case 1741: /* limit_clause: FETCH first_or_next row_or_rows WITH TIES  */
@@ -44945,25 +44905,25 @@
 					n->limitOption = LIMIT_OPTION_WITH_TIES;
 					(yyval.selectlimit) = n;
 				}
-#line 44949 "gram.c"
+#line 44909 "gram.c"
     break;
 
   case 1742: /* offset_clause: OFFSET select_offset_value  */
 #line 13011 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44955 "gram.c"
+#line 44915 "gram.c"
     break;
 
   case 1743: /* offset_clause: OFFSET select_fetch_first_value row_or_rows  */
 #line 13014 "gram.y"
                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 44961 "gram.c"
+#line 44921 "gram.c"
     break;
 
   case 1744: /* select_limit_value: a_expr  */
 #line 13018 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44967 "gram.c"
+#line 44927 "gram.c"
     break;
 
   case 1745: /* select_limit_value: ALL  */
@@ -44972,67 +44932,67 @@
 					/* LIMIT ALL is represented as a NULL constant */
 					(yyval.node) = makeNullAConst((yylsp[0]));
 				}
-#line 44976 "gram.c"
+#line 44936 "gram.c"
     break;
 
   case 1746: /* select_offset_value: a_expr  */
 #line 13027 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44982 "gram.c"
+#line 44942 "gram.c"
     break;
 
   case 1747: /* select_fetch_first_value: c_expr  */
 #line 13047 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 44988 "gram.c"
+#line 44948 "gram.c"
     break;
 
   case 1748: /* select_fetch_first_value: '+' I_or_F_const  */
 #line 13049 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
-#line 44994 "gram.c"
+#line 44954 "gram.c"
     break;
 
   case 1749: /* select_fetch_first_value: '-' I_or_F_const  */
 #line 13051 "gram.y"
                                 { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
-#line 45000 "gram.c"
+#line 44960 "gram.c"
     break;
 
   case 1750: /* I_or_F_const: Iconst  */
 #line 13055 "gram.y"
                                                                                                 { (yyval.node) = makeIntConst((yyvsp[0].ival),(yylsp[0])); }
-#line 45006 "gram.c"
+#line 44966 "gram.c"
     break;
 
   case 1751: /* I_or_F_const: FCONST  */
 #line 13056 "gram.y"
                                                                                                 { (yyval.node) = makeFloatConst((yyvsp[0].str),(yylsp[0])); }
-#line 45012 "gram.c"
+#line 44972 "gram.c"
     break;
 
   case 1752: /* row_or_rows: ROW  */
 #line 13060 "gram.y"
                                                                                         { (yyval.ival) = 0; }
-#line 45018 "gram.c"
+#line 44978 "gram.c"
     break;
 
   case 1753: /* row_or_rows: ROWS  */
 #line 13061 "gram.y"
                                                                                                 { (yyval.ival) = 0; }
-#line 45024 "gram.c"
+#line 44984 "gram.c"
     break;
 
   case 1754: /* first_or_next: FIRST_P  */
 #line 13064 "gram.y"
                                                                                 { (yyval.ival) = 0; }
-#line 45030 "gram.c"
+#line 44990 "gram.c"
     break;
 
   case 1755: /* first_or_next: NEXT  */
 #line 13065 "gram.y"
                                                                                                 { (yyval.ival) = 0; }
-#line 45036 "gram.c"
+#line 44996 "gram.c"
     break;
 
   case 1756: /* group_clause: GROUP_P BY set_quantifier group_by_list  */
@@ -45044,7 +45004,7 @@
 					n->list = (yyvsp[0].list);
 					(yyval.groupclause) = n;
 				}
-#line 45048 "gram.c"
+#line 45008 "gram.c"
     break;
 
   case 1757: /* group_clause: %empty  */
@@ -45056,49 +45016,49 @@
 					n->list = NIL;
 					(yyval.groupclause) = n;
 				}
-#line 45060 "gram.c"
+#line 45020 "gram.c"
     break;
 
   case 1758: /* group_by_list: group_by_item  */
 #line 13109 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 45066 "gram.c"
+#line 45026 "gram.c"
     break;
 
   case 1759: /* group_by_list: group_by_list ',' group_by_item  */
 #line 13110 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].node)); }
-#line 45072 "gram.c"
+#line 45032 "gram.c"
     break;
 
   case 1760: /* group_by_item: a_expr  */
 #line 13114 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 45078 "gram.c"
+#line 45038 "gram.c"
     break;
 
   case 1761: /* group_by_item: empty_grouping_set  */
 #line 13115 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 45084 "gram.c"
+#line 45044 "gram.c"
     break;
 
   case 1762: /* group_by_item: cube_clause  */
 #line 13116 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 45090 "gram.c"
+#line 45050 "gram.c"
     break;
 
   case 1763: /* group_by_item: rollup_clause  */
 #line 13117 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 45096 "gram.c"
+#line 45056 "gram.c"
     break;
 
   case 1764: /* group_by_item: grouping_sets_clause  */
 #line 13118 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 45102 "gram.c"
+#line 45062 "gram.c"
     break;
 
   case 1765: /* empty_grouping_set: '(' ')'  */
@@ -45106,7 +45066,7 @@
                                 {
 					(yyval.node) = (Node *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[-1]));
 				}
-#line 45110 "gram.c"
+#line 45070 "gram.c"
     break;
 
   case 1766: /* rollup_clause: ROLLUP '(' expr_list ')'  */
@@ -45114,7 +45074,7 @@
                                 {
 					(yyval.node) = (Node *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[-1].list), (yylsp[-3]));
 				}
-#line 45118 "gram.c"
+#line 45078 "gram.c"
     break;
 
   case 1767: /* cube_clause: CUBE '(' expr_list ')'  */
@@ -45122,7 +45082,7 @@
                                 {
 					(yyval.node) = (Node *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[-1].list), (yylsp[-3]));
 				}
-#line 45126 "gram.c"
+#line 45086 "gram.c"
     break;
 
   case 1768: /* grouping_sets_clause: GROUPING SETS '(' group_by_list ')'  */
@@ -45130,55 +45090,55 @@
                                 {
 					(yyval.node) = (Node *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[-1].list), (yylsp[-4]));
 				}
-#line 45134 "gram.c"
+#line 45094 "gram.c"
     break;
 
   case 1769: /* having_clause: HAVING a_expr  */
 #line 13156 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 45140 "gram.c"
+#line 45100 "gram.c"
     break;
 
   case 1770: /* having_clause: %empty  */
 #line 13157 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 45146 "gram.c"
+#line 45106 "gram.c"
     break;
 
   case 1771: /* for_locking_clause: for_locking_items  */
 #line 13161 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 45152 "gram.c"
+#line 45112 "gram.c"
     break;
 
   case 1772: /* for_locking_clause: FOR READ ONLY  */
 #line 13162 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 45158 "gram.c"
+#line 45118 "gram.c"
     break;
 
   case 1773: /* opt_for_locking_clause: for_locking_clause  */
 #line 13166 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 45164 "gram.c"
+#line 45124 "gram.c"
     break;
 
   case 1774: /* opt_for_locking_clause: %empty  */
 #line 13167 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 45170 "gram.c"
+#line 45130 "gram.c"
     break;
 
   case 1775: /* for_locking_items: for_locking_item  */
 #line 13171 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 45176 "gram.c"
+#line 45136 "gram.c"
     break;
 
   case 1776: /* for_locking_items: for_locking_items for_locking_item  */
 #line 13172 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 45182 "gram.c"
+#line 45142 "gram.c"
     break;
 
   case 1777: /* for_locking_item: for_locking_strength locked_rels_list opt_nowait_or_skip  */
@@ -45191,43 +45151,43 @@
 					n->waitPolicy = (yyvsp[0].ival);
 					(yyval.node) = (Node *) n;
 				}
-#line 45195 "gram.c"
+#line 45155 "gram.c"
     break;
 
   case 1778: /* for_locking_strength: FOR UPDATE  */
 #line 13188 "gram.y"
                                                                                         { (yyval.ival) = LCS_FORUPDATE; }
-#line 45201 "gram.c"
+#line 45161 "gram.c"
     break;
 
   case 1779: /* for_locking_strength: FOR NO KEY UPDATE  */
 #line 13189 "gram.y"
                                                                                 { (yyval.ival) = LCS_FORNOKEYUPDATE; }
-#line 45207 "gram.c"
+#line 45167 "gram.c"
     break;
 
   case 1780: /* for_locking_strength: FOR SHARE  */
 #line 13190 "gram.y"
                                                                                         { (yyval.ival) = LCS_FORSHARE; }
-#line 45213 "gram.c"
+#line 45173 "gram.c"
     break;
 
   case 1781: /* for_locking_strength: FOR KEY SHARE  */
 #line 13191 "gram.y"
                                                                                 { (yyval.ival) = LCS_FORKEYSHARE; }
-#line 45219 "gram.c"
+#line 45179 "gram.c"
     break;
 
   case 1782: /* locked_rels_list: OF qualified_name_list  */
 #line 13195 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 45225 "gram.c"
+#line 45185 "gram.c"
     break;
 
   case 1783: /* locked_rels_list: %empty  */
 #line 13196 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 45231 "gram.c"
+#line 45191 "gram.c"
     break;
 
   case 1784: /* values_clause: VALUES '(' expr_list ')'  */
@@ -45238,7 +45198,7 @@
 					n->valuesLists = list_make1((yyvsp[-1].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 45242 "gram.c"
+#line 45202 "gram.c"
     break;
 
   case 1785: /* values_clause: values_clause ',' '(' expr_list ')'  */
@@ -45249,31 +45209,31 @@
 					n->valuesLists = lappend(n->valuesLists, (yyvsp[-1].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 45253 "gram.c"
+#line 45213 "gram.c"
     break;
 
   case 1786: /* from_clause: FROM from_list  */
 #line 13232 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 45259 "gram.c"
+#line 45219 "gram.c"
     break;
 
   case 1787: /* from_clause: %empty  */
 #line 13233 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 45265 "gram.c"
+#line 45225 "gram.c"
     break;
 
   case 1788: /* from_list: table_ref  */
 #line 13237 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 45271 "gram.c"
+#line 45231 "gram.c"
     break;
 
   case 1789: /* from_list: from_list ',' table_ref  */
 #line 13238 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 45277 "gram.c"
+#line 45237 "gram.c"
     break;
 
   case 1790: /* table_ref: relation_expr opt_alias_clause  */
@@ -45282,7 +45242,7 @@
 					(yyvsp[-1].range)->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) (yyvsp[-1].range);
 				}
-#line 45286 "gram.c"
+#line 45246 "gram.c"
     break;
 
   case 1791: /* table_ref: relation_expr opt_alias_clause tablesample_clause  */
@@ -45295,7 +45255,7 @@
 					n->relation = (Node *) (yyvsp[-2].range);
 					(yyval.node) = (Node *) n;
 				}
-#line 45299 "gram.c"
+#line 45259 "gram.c"
     break;
 
   case 1792: /* table_ref: func_table func_alias_clause  */
@@ -45307,7 +45267,7 @@
 					n->coldeflist = lsecond((yyvsp[0].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 45311 "gram.c"
+#line 45271 "gram.c"
     break;
 
   case 1793: /* table_ref: LATERAL_P func_table func_alias_clause  */
@@ -45320,7 +45280,7 @@
 					n->coldeflist = lsecond((yyvsp[0].list));
 					(yyval.node) = (Node *) n;
 				}
-#line 45324 "gram.c"
+#line 45284 "gram.c"
     break;
 
   case 1794: /* table_ref: xmltable opt_alias_clause  */
@@ -45331,7 +45291,7 @@
 					n->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) n;
 				}
-#line 45335 "gram.c"
+#line 45295 "gram.c"
     break;
 
   case 1795: /* table_ref: LATERAL_P xmltable opt_alias_clause  */
@@ -45343,7 +45303,7 @@
 					n->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) n;
 				}
-#line 45347 "gram.c"
+#line 45307 "gram.c"
     break;
 
   case 1796: /* table_ref: select_with_parens opt_alias_clause  */
@@ -45356,7 +45316,7 @@
 					n->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) n;
 				}
-#line 45360 "gram.c"
+#line 45320 "gram.c"
     break;
 
   case 1797: /* table_ref: LATERAL_P select_with_parens opt_alias_clause  */
@@ -45369,7 +45329,7 @@
 					n->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) n;
 				}
-#line 45373 "gram.c"
+#line 45333 "gram.c"
     break;
 
   case 1798: /* table_ref: joined_table  */
@@ -45377,7 +45337,7 @@
                                 {
 					(yyval.node) = (Node *) (yyvsp[0].jexpr);
 				}
-#line 45381 "gram.c"
+#line 45341 "gram.c"
     break;
 
   case 1799: /* table_ref: '(' joined_table ')' alias_clause  */
@@ -45386,7 +45346,7 @@
 					(yyvsp[-2].jexpr)->alias = (yyvsp[0].alias);
 					(yyval.node) = (Node *) (yyvsp[-2].jexpr);
 				}
-#line 45390 "gram.c"
+#line 45350 "gram.c"
     break;
 
   case 1800: /* joined_table: '(' joined_table ')'  */
@@ -45394,7 +45354,7 @@
                                 {
 					(yyval.jexpr) = (yyvsp[-1].jexpr);
 				}
-#line 45398 "gram.c"
+#line 45358 "gram.c"
     break;
 
   case 1801: /* joined_table: table_ref CROSS JOIN table_ref  */
@@ -45412,7 +45372,7 @@
 					n->quals = NULL;
 					(yyval.jexpr) = n;
 				}
-#line 45416 "gram.c"
+#line 45376 "gram.c"
     break;
 
   case 1802: /* joined_table: table_ref join_type JOIN table_ref join_qual  */
@@ -45437,7 +45397,7 @@
 					}
 					(yyval.jexpr) = n;
 				}
-#line 45441 "gram.c"
+#line 45401 "gram.c"
     break;
 
   case 1803: /* joined_table: table_ref JOIN table_ref join_qual  */
@@ -45463,7 +45423,7 @@
 					}
 					(yyval.jexpr) = n;
 				}
-#line 45467 "gram.c"
+#line 45427 "gram.c"
     break;
 
   case 1804: /* joined_table: table_ref NATURAL join_type JOIN table_ref  */
@@ -45480,7 +45440,7 @@
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
 				}
-#line 45484 "gram.c"
+#line 45444 "gram.c"
     break;
 
   case 1805: /* joined_table: table_ref NATURAL JOIN table_ref  */
@@ -45498,7 +45458,7 @@
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
 				}
-#line 45502 "gram.c"
+#line 45462 "gram.c"
     break;
 
   case 1806: /* alias_clause: AS ColId '(' name_list ')'  */
@@ -45508,7 +45468,7 @@
 					(yyval.alias)->aliasname = (yyvsp[-3].str);
 					(yyval.alias)->colnames = (yyvsp[-1].list);
 				}
-#line 45512 "gram.c"
+#line 45472 "gram.c"
     break;
 
   case 1807: /* alias_clause: AS ColId  */
@@ -45517,7 +45477,7 @@
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[0].str);
 				}
-#line 45521 "gram.c"
+#line 45481 "gram.c"
     break;
 
   case 1808: /* alias_clause: ColId '(' name_list ')'  */
@@ -45527,7 +45487,7 @@
 					(yyval.alias)->aliasname = (yyvsp[-3].str);
 					(yyval.alias)->colnames = (yyvsp[-1].list);
 				}
-#line 45531 "gram.c"
+#line 45491 "gram.c"
     break;
 
   case 1809: /* alias_clause: ColId  */
@@ -45536,19 +45496,19 @@
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[0].str);
 				}
-#line 45540 "gram.c"
+#line 45500 "gram.c"
     break;
 
   case 1810: /* opt_alias_clause: alias_clause  */
 #line 13453 "gram.y"
                                                                         { (yyval.alias) = (yyvsp[0].alias); }
-#line 45546 "gram.c"
+#line 45506 "gram.c"
     break;
 
   case 1811: /* opt_alias_clause: %empty  */
 #line 13454 "gram.y"
                                                                                                 { (yyval.alias) = NULL; }
-#line 45552 "gram.c"
+#line 45512 "gram.c"
     break;
 
   case 1812: /* opt_alias_clause_for_join_using: AS ColId  */
@@ -45558,13 +45518,13 @@
 					(yyval.alias)->aliasname = (yyvsp[0].str);
 					/* the column name list will be inserted later */
 				}
-#line 45562 "gram.c"
+#line 45522 "gram.c"
     break;
 
   case 1813: /* opt_alias_clause_for_join_using: %empty  */
 #line 13470 "gram.y"
                                                                                                 { (yyval.alias) = NULL; }
-#line 45568 "gram.c"
+#line 45528 "gram.c"
     break;
 
   case 1814: /* func_alias_clause: alias_clause  */
@@ -45572,7 +45532,7 @@
                                 {
 					(yyval.list) = list_make2((yyvsp[0].alias), NIL);
 				}
-#line 45576 "gram.c"
+#line 45536 "gram.c"
     break;
 
   case 1815: /* func_alias_clause: AS '(' TableFuncElementList ')'  */
@@ -45580,7 +45540,7 @@
                                 {
 					(yyval.list) = list_make2(NULL, (yyvsp[-1].list));
 				}
-#line 45584 "gram.c"
+#line 45544 "gram.c"
     break;
 
   case 1816: /* func_alias_clause: AS ColId '(' TableFuncElementList ')'  */
@@ -45591,7 +45551,7 @@
 					a->aliasname = (yyvsp[-3].str);
 					(yyval.list) = list_make2(a, (yyvsp[-1].list));
 				}
-#line 45595 "gram.c"
+#line 45555 "gram.c"
     break;
 
   case 1817: /* func_alias_clause: ColId '(' TableFuncElementList ')'  */
@@ -45602,7 +45562,7 @@
 					a->aliasname = (yyvsp[-3].str);
 					(yyval.list) = list_make2(a, (yyvsp[-1].list));
 				}
-#line 45606 "gram.c"
+#line 45566 "gram.c"
     break;
 
   case 1818: /* func_alias_clause: %empty  */
@@ -45610,31 +45570,31 @@
                                 {
 					(yyval.list) = list_make2(NULL, NIL);
 				}
-#line 45614 "gram.c"
+#line 45574 "gram.c"
     break;
 
   case 1819: /* join_type: FULL opt_outer  */
 #line 13506 "gram.y"
                                                                                 { (yyval.jtype) = JOIN_FULL; }
-#line 45620 "gram.c"
+#line 45580 "gram.c"
     break;
 
   case 1820: /* join_type: LEFT opt_outer  */
 #line 13507 "gram.y"
                                                                                         { (yyval.jtype) = JOIN_LEFT; }
-#line 45626 "gram.c"
+#line 45586 "gram.c"
     break;
 
   case 1821: /* join_type: RIGHT opt_outer  */
 #line 13508 "gram.y"
                                                                                         { (yyval.jtype) = JOIN_RIGHT; }
-#line 45632 "gram.c"
+#line 45592 "gram.c"
     break;
 
   case 1822: /* join_type: INNER_P  */
 #line 13509 "gram.y"
                                                                                                 { (yyval.jtype) = JOIN_INNER; }
-#line 45638 "gram.c"
+#line 45598 "gram.c"
     break;
 
   case 1825: /* join_qual: USING '(' name_list ')' opt_alias_clause_for_join_using  */
@@ -45642,7 +45602,7 @@
                                 {
 					(yyval.node) = (Node *) list_make2((yyvsp[-2].list), (yyvsp[0].alias));
 				}
-#line 45646 "gram.c"
+#line 45606 "gram.c"
     break;
 
   case 1826: /* join_qual: ON a_expr  */
@@ -45650,7 +45610,7 @@
                                 {
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 45654 "gram.c"
+#line 45614 "gram.c"
     break;
 
   case 1827: /* relation_expr: qualified_name  */
@@ -45661,7 +45621,7 @@
 					(yyval.range)->inh = true;
 					(yyval.range)->alias = NULL;
 				}
-#line 45665 "gram.c"
+#line 45625 "gram.c"
     break;
 
   case 1828: /* relation_expr: extended_relation_expr  */
@@ -45669,7 +45629,7 @@
                                 {
 					(yyval.range) = (yyvsp[0].range);
 				}
-#line 45673 "gram.c"
+#line 45633 "gram.c"
     break;
 
   case 1829: /* extended_relation_expr: qualified_name '*'  */
@@ -45680,7 +45640,7 @@
 					(yyval.range)->inh = true;
 					(yyval.range)->alias = NULL;
 				}
-#line 45684 "gram.c"
+#line 45644 "gram.c"
     break;
 
   case 1830: /* extended_relation_expr: ONLY qualified_name  */
@@ -45691,7 +45651,7 @@
 					(yyval.range)->inh = false;
 					(yyval.range)->alias = NULL;
 				}
-#line 45695 "gram.c"
+#line 45655 "gram.c"
     break;
 
   case 1831: /* extended_relation_expr: ONLY '(' qualified_name ')'  */
@@ -45702,19 +45662,19 @@
 					(yyval.range)->inh = false;
 					(yyval.range)->alias = NULL;
 				}
-#line 45706 "gram.c"
+#line 45666 "gram.c"
     break;
 
   case 1832: /* relation_expr_list: relation_expr  */
 #line 13580 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].range)); }
-#line 45712 "gram.c"
+#line 45672 "gram.c"
     break;
 
   case 1833: /* relation_expr_list: relation_expr_list ',' relation_expr  */
 #line 13581 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
-#line 45718 "gram.c"
+#line 45678 "gram.c"
     break;
 
   case 1834: /* relation_expr_opt_alias: relation_expr  */
@@ -45722,7 +45682,7 @@
                                 {
 					(yyval.range) = (yyvsp[0].range);
 				}
-#line 45726 "gram.c"
+#line 45686 "gram.c"
     break;
 
   case 1835: /* relation_expr_opt_alias: relation_expr ColId  */
@@ -45734,7 +45694,7 @@
 					(yyvsp[-1].range)->alias = alias;
 					(yyval.range) = (yyvsp[-1].range);
 				}
-#line 45738 "gram.c"
+#line 45698 "gram.c"
     break;
 
   case 1836: /* relation_expr_opt_alias: relation_expr AS ColId  */
@@ -45746,7 +45706,7 @@
 					(yyvsp[-2].range)->alias = alias;
 					(yyval.range) = (yyvsp[-2].range);
 				}
-#line 45750 "gram.c"
+#line 45710 "gram.c"
     break;
 
   case 1837: /* tablesample_clause: TABLESAMPLE func_name '(' expr_list ')' opt_repeatable_clause  */
@@ -45761,19 +45721,19 @@
 					n->location = (yylsp[-4]);
 					(yyval.node) = (Node *) n;
 				}
-#line 45765 "gram.c"
+#line 45725 "gram.c"
     break;
 
   case 1838: /* opt_repeatable_clause: REPEATABLE '(' a_expr ')'  */
 #line 13634 "gram.y"
                                                         { (yyval.node) = (Node *) (yyvsp[-1].node); }
-#line 45771 "gram.c"
+#line 45731 "gram.c"
     break;
 
   case 1839: /* opt_repeatable_clause: %empty  */
 #line 13635 "gram.y"
                                                                         { (yyval.node) = NULL; }
-#line 45777 "gram.c"
+#line 45737 "gram.c"
     break;
 
   case 1840: /* func_table: func_expr_windowless opt_ordinality  */
@@ -45788,7 +45748,7 @@
 					/* alias and coldeflist are set by table_ref production */
 					(yyval.node) = (Node *) n;
 				}
-#line 45792 "gram.c"
+#line 45752 "gram.c"
     break;
 
   case 1841: /* func_table: ROWS FROM '(' rowsfrom_list ')' opt_ordinality  */
@@ -45803,67 +45763,67 @@
 					/* alias and coldeflist are set by table_ref production */
 					(yyval.node) = (Node *) n;
 				}
-#line 45807 "gram.c"
+#line 45767 "gram.c"
     break;
 
   case 1842: /* rowsfrom_item: func_expr_windowless opt_col_def_list  */
 #line 13675 "gram.y"
                                 { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].list)); }
-#line 45813 "gram.c"
+#line 45773 "gram.c"
     break;
 
   case 1843: /* rowsfrom_list: rowsfrom_item  */
 #line 13679 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].list)); }
-#line 45819 "gram.c"
+#line 45779 "gram.c"
     break;
 
   case 1844: /* rowsfrom_list: rowsfrom_list ',' rowsfrom_item  */
 #line 13680 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
-#line 45825 "gram.c"
+#line 45785 "gram.c"
     break;
 
   case 1845: /* opt_col_def_list: AS '(' TableFuncElementList ')'  */
 #line 13683 "gram.y"
                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 45831 "gram.c"
+#line 45791 "gram.c"
     break;
 
   case 1846: /* opt_col_def_list: %empty  */
 #line 13684 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 45837 "gram.c"
+#line 45797 "gram.c"
     break;
 
   case 1847: /* opt_ordinality: WITH_LA ORDINALITY  */
 #line 13687 "gram.y"
                                                                         { (yyval.boolean) = true; }
-#line 45843 "gram.c"
+#line 45803 "gram.c"
     break;
 
   case 1848: /* opt_ordinality: %empty  */
 #line 13688 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 45849 "gram.c"
+#line 45809 "gram.c"
     break;
 
   case 1849: /* where_clause: WHERE a_expr  */
 #line 13693 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 45855 "gram.c"
+#line 45815 "gram.c"
     break;
 
   case 1850: /* where_clause: %empty  */
 #line 13694 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 45861 "gram.c"
+#line 45821 "gram.c"
     break;
 
   case 1851: /* where_or_current_clause: WHERE a_expr  */
 #line 13699 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 45867 "gram.c"
+#line 45827 "gram.c"
     break;
 
   case 1852: /* where_or_current_clause: WHERE CURRENT_P OF cursor_name  */
@@ -45876,25 +45836,25 @@
 					n->cursor_param = 0;
 					(yyval.node) = (Node *) n;
 				}
-#line 45880 "gram.c"
+#line 45840 "gram.c"
     break;
 
   case 1853: /* where_or_current_clause: %empty  */
 #line 13709 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 45886 "gram.c"
+#line 45846 "gram.c"
     break;
 
   case 1854: /* OptTableFuncElementList: TableFuncElementList  */
 #line 13714 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 45892 "gram.c"
+#line 45852 "gram.c"
     break;
 
   case 1855: /* OptTableFuncElementList: %empty  */
 #line 13715 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 45898 "gram.c"
+#line 45858 "gram.c"
     break;
 
   case 1856: /* TableFuncElementList: TableFuncElement  */
@@ -45902,7 +45862,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 45906 "gram.c"
+#line 45866 "gram.c"
     break;
 
   case 1857: /* TableFuncElementList: TableFuncElementList ',' TableFuncElement  */
@@ -45910,7 +45870,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 45914 "gram.c"
+#line 45874 "gram.c"
     break;
 
   case 1858: /* TableFuncElement: ColId Typename opt_collate_clause  */
@@ -45933,7 +45893,7 @@
 					n->location = (yylsp[-2]);
 					(yyval.node) = (Node *) n;
 				}
-#line 45937 "gram.c"
+#line 45897 "gram.c"
     break;
 
   case 1859: /* xmltable: XMLTABLE '(' c_expr xmlexists_argument COLUMNS xmltable_column_list ')'  */
@@ -45948,7 +45908,7 @@
 					n->location = (yylsp[-6]);
 					(yyval.node) = (Node *) n;
 				}
-#line 45952 "gram.c"
+#line 45912 "gram.c"
     break;
 
   case 1860: /* xmltable: XMLTABLE '(' XMLNAMESPACES '(' xml_namespace_list ')' ',' c_expr xmlexists_argument COLUMNS xmltable_column_list ')'  */
@@ -45963,19 +45923,19 @@
 					n->location = (yylsp[-11]);
 					(yyval.node) = (Node *) n;
 				}
-#line 45967 "gram.c"
+#line 45927 "gram.c"
     break;
 
   case 1861: /* xmltable_column_list: xmltable_column_el  */
 #line 13779 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 45973 "gram.c"
+#line 45933 "gram.c"
     break;
 
   case 1862: /* xmltable_column_list: xmltable_column_list ',' xmltable_column_el  */
 #line 13780 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 45979 "gram.c"
+#line 45939 "gram.c"
     break;
 
   case 1863: /* xmltable_column_el: ColId Typename  */
@@ -45993,7 +45953,7 @@
 
 					(yyval.node) = (Node *) fc;
 				}
-#line 45997 "gram.c"
+#line 45957 "gram.c"
     break;
 
   case 1864: /* xmltable_column_el: ColId Typename xmltable_column_option_list  */
@@ -46054,7 +46014,7 @@
 					}
 					(yyval.node) = (Node *) fc;
 				}
-#line 46058 "gram.c"
+#line 46018 "gram.c"
     break;
 
   case 1865: /* xmltable_column_el: ColId FOR ORDINALITY  */
@@ -46069,55 +46029,55 @@
 
 					(yyval.node) = (Node *) fc;
 				}
-#line 46073 "gram.c"
+#line 46033 "gram.c"
     break;
 
   case 1866: /* xmltable_column_option_list: xmltable_column_option_el  */
 #line 13870 "gram.y"
                                 { (yyval.list) = list_make1((yyvsp[0].defelt)); }
-#line 46079 "gram.c"
+#line 46039 "gram.c"
     break;
 
   case 1867: /* xmltable_column_option_list: xmltable_column_option_list xmltable_column_option_el  */
 #line 13872 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
-#line 46085 "gram.c"
+#line 46045 "gram.c"
     break;
 
   case 1868: /* xmltable_column_option_el: IDENT b_expr  */
 #line 13877 "gram.y"
                                 { (yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1])); }
-#line 46091 "gram.c"
+#line 46051 "gram.c"
     break;
 
   case 1869: /* xmltable_column_option_el: DEFAULT b_expr  */
 #line 13879 "gram.y"
                                 { (yyval.defelt) = makeDefElem("default", (yyvsp[0].node), (yylsp[-1])); }
-#line 46097 "gram.c"
+#line 46057 "gram.c"
     break;
 
   case 1870: /* xmltable_column_option_el: NOT NULL_P  */
 #line 13881 "gram.y"
                                 { (yyval.defelt) = makeDefElem("is_not_null", (Node *) makeBoolean(true), (yylsp[-1])); }
-#line 46103 "gram.c"
+#line 46063 "gram.c"
     break;
 
   case 1871: /* xmltable_column_option_el: NULL_P  */
 #line 13883 "gram.y"
                                 { (yyval.defelt) = makeDefElem("is_not_null", (Node *) makeBoolean(false), (yylsp[0])); }
-#line 46109 "gram.c"
+#line 46069 "gram.c"
     break;
 
   case 1872: /* xml_namespace_list: xml_namespace_el  */
 #line 13888 "gram.y"
                                 { (yyval.list) = list_make1((yyvsp[0].target)); }
-#line 46115 "gram.c"
+#line 46075 "gram.c"
     break;
 
   case 1873: /* xml_namespace_list: xml_namespace_list ',' xml_namespace_el  */
 #line 13890 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
-#line 46121 "gram.c"
+#line 46081 "gram.c"
     break;
 
   case 1874: /* xml_namespace_el: b_expr AS ColLabel  */
@@ -46129,7 +46089,7 @@
 					(yyval.target)->val = (yyvsp[-2].node);
 					(yyval.target)->location = (yylsp[-2]);
 				}
-#line 46133 "gram.c"
+#line 46093 "gram.c"
     break;
 
   case 1875: /* xml_namespace_el: DEFAULT b_expr  */
@@ -46141,7 +46101,7 @@
 					(yyval.target)->val = (yyvsp[0].node);
 					(yyval.target)->location = (yylsp[-1]);
 				}
-#line 46145 "gram.c"
+#line 46105 "gram.c"
     break;
 
   case 1876: /* Typename: SimpleTypename opt_array_bounds  */
@@ -46150,7 +46110,7 @@
 					(yyval.typnam) = (yyvsp[-1].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
 				}
-#line 46154 "gram.c"
+#line 46114 "gram.c"
     break;
 
   case 1877: /* Typename: SETOF SimpleTypename opt_array_bounds  */
@@ -46160,7 +46120,7 @@
 					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
 					(yyval.typnam)->setof = true;
 				}
-#line 46164 "gram.c"
+#line 46124 "gram.c"
     break;
 
   case 1878: /* Typename: SimpleTypename ARRAY '[' Iconst ']'  */
@@ -46169,7 +46129,7 @@
 					(yyval.typnam) = (yyvsp[-4].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
 				}
-#line 46173 "gram.c"
+#line 46133 "gram.c"
     break;
 
   case 1879: /* Typename: SETOF SimpleTypename ARRAY '[' Iconst ']'  */
@@ -46179,7 +46139,7 @@
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
 					(yyval.typnam)->setof = true;
 				}
-#line 46183 "gram.c"
+#line 46143 "gram.c"
     break;
 
   case 1880: /* Typename: SimpleTypename ARRAY  */
@@ -46188,7 +46148,7 @@
 					(yyval.typnam) = (yyvsp[-1].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
 				}
-#line 46192 "gram.c"
+#line 46152 "gram.c"
     break;
 
   case 1881: /* Typename: SETOF SimpleTypename ARRAY  */
@@ -46198,55 +46158,55 @@
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
 					(yyval.typnam)->setof = true;
 				}
-#line 46202 "gram.c"
+#line 46162 "gram.c"
     break;
 
   case 1882: /* opt_array_bounds: opt_array_bounds '[' ']'  */
 #line 13960 "gram.y"
                                         {  (yyval.list) = lappend((yyvsp[-2].list), makeInteger(-1)); }
-#line 46208 "gram.c"
+#line 46168 "gram.c"
     break;
 
   case 1883: /* opt_array_bounds: opt_array_bounds '[' Iconst ']'  */
 #line 13962 "gram.y"
                                         {  (yyval.list) = lappend((yyvsp[-3].list), makeInteger((yyvsp[-1].ival))); }
-#line 46214 "gram.c"
+#line 46174 "gram.c"
     break;
 
   case 1884: /* opt_array_bounds: %empty  */
 #line 13964 "gram.y"
                                         {  (yyval.list) = NIL; }
-#line 46220 "gram.c"
+#line 46180 "gram.c"
     break;
 
   case 1885: /* SimpleTypename: GenericType  */
 #line 13968 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46226 "gram.c"
+#line 46186 "gram.c"
     break;
 
   case 1886: /* SimpleTypename: Numeric  */
 #line 13969 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46232 "gram.c"
+#line 46192 "gram.c"
     break;
 
   case 1887: /* SimpleTypename: Bit  */
 #line 13970 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46238 "gram.c"
+#line 46198 "gram.c"
     break;
 
   case 1888: /* SimpleTypename: Character  */
 #line 13971 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46244 "gram.c"
+#line 46204 "gram.c"
     break;
 
   case 1889: /* SimpleTypename: ConstDatetime  */
 #line 13972 "gram.y"
                                                                                         { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46250 "gram.c"
+#line 46210 "gram.c"
     break;
 
   case 1890: /* SimpleTypename: ConstInterval opt_interval  */
@@ -46255,7 +46215,7 @@
 					(yyval.typnam) = (yyvsp[-1].typnam);
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 				}
-#line 46259 "gram.c"
+#line 46219 "gram.c"
     break;
 
   case 1891: /* SimpleTypename: ConstInterval '(' Iconst ')'  */
@@ -46265,31 +46225,31 @@
 					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 											 makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
 				}
-#line 46269 "gram.c"
+#line 46229 "gram.c"
     break;
 
   case 1892: /* ConstTypename: Numeric  */
 #line 13998 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46275 "gram.c"
+#line 46235 "gram.c"
     break;
 
   case 1893: /* ConstTypename: ConstBit  */
 #line 13999 "gram.y"
                                                                                                 { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46281 "gram.c"
+#line 46241 "gram.c"
     break;
 
   case 1894: /* ConstTypename: ConstCharacter  */
 #line 14000 "gram.y"
                                                                                         { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46287 "gram.c"
+#line 46247 "gram.c"
     break;
 
   case 1895: /* ConstTypename: ConstDatetime  */
 #line 14001 "gram.y"
                                                                                         { (yyval.typnam) = (yyvsp[0].typnam); }
-#line 46293 "gram.c"
+#line 46253 "gram.c"
     break;
 
   case 1896: /* GenericType: type_function_name opt_type_modifiers  */
@@ -46299,7 +46259,7 @@
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46303 "gram.c"
+#line 46263 "gram.c"
     break;
 
   case 1897: /* GenericType: type_function_name attrs opt_type_modifiers  */
@@ -46309,19 +46269,19 @@
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 					(yyval.typnam)->location = (yylsp[-2]);
 				}
-#line 46313 "gram.c"
+#line 46273 "gram.c"
     break;
 
   case 1898: /* opt_type_modifiers: '(' expr_list ')'  */
 #line 14026 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 46319 "gram.c"
+#line 46279 "gram.c"
     break;
 
   case 1899: /* opt_type_modifiers: %empty  */
 #line 14027 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 46325 "gram.c"
+#line 46285 "gram.c"
     break;
 
   case 1900: /* Numeric: INT_P  */
@@ -46330,7 +46290,7 @@
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46334 "gram.c"
+#line 46294 "gram.c"
     break;
 
   case 1901: /* Numeric: INTEGER  */
@@ -46339,7 +46299,7 @@
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46343 "gram.c"
+#line 46303 "gram.c"
     break;
 
   case 1902: /* Numeric: SMALLINT  */
@@ -46348,7 +46308,7 @@
 					(yyval.typnam) = SystemTypeName("int2");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46352 "gram.c"
+#line 46312 "gram.c"
     break;
 
   case 1903: /* Numeric: BIGINT  */
@@ -46357,7 +46317,7 @@
 					(yyval.typnam) = SystemTypeName("int8");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46361 "gram.c"
+#line 46321 "gram.c"
     break;
 
   case 1904: /* Numeric: REAL  */
@@ -46366,7 +46326,7 @@
 					(yyval.typnam) = SystemTypeName("float4");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46370 "gram.c"
+#line 46330 "gram.c"
     break;
 
   case 1905: /* Numeric: FLOAT_P opt_float  */
@@ -46375,7 +46335,7 @@
 					(yyval.typnam) = (yyvsp[0].typnam);
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46379 "gram.c"
+#line 46339 "gram.c"
     break;
 
   case 1906: /* Numeric: DOUBLE_P PRECISION  */
@@ -46384,7 +46344,7 @@
 					(yyval.typnam) = SystemTypeName("float8");
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46388 "gram.c"
+#line 46348 "gram.c"
     break;
 
   case 1907: /* Numeric: DECIMAL_P opt_type_modifiers  */
@@ -46394,7 +46354,7 @@
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46398 "gram.c"
+#line 46358 "gram.c"
     break;
 
   case 1908: /* Numeric: DEC opt_type_modifiers  */
@@ -46404,7 +46364,7 @@
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46408 "gram.c"
+#line 46368 "gram.c"
     break;
 
   case 1909: /* Numeric: NUMERIC opt_type_modifiers  */
@@ -46414,7 +46374,7 @@
 					(yyval.typnam)->typmods = (yyvsp[0].list);
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46418 "gram.c"
+#line 46378 "gram.c"
     break;
 
   case 1910: /* Numeric: BOOLEAN_P  */
@@ -46423,7 +46383,7 @@
 					(yyval.typnam) = SystemTypeName("bool");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46427 "gram.c"
+#line 46387 "gram.c"
     break;
 
   case 1911: /* opt_float: '(' Iconst ')'  */
@@ -46448,7 +46408,7 @@
 								 errmsg("precision for type float must be less than 54 bits"),
 								 parser_errposition((yylsp[-1]))));
 				}
-#line 46452 "gram.c"
+#line 46412 "gram.c"
     break;
 
   case 1912: /* opt_float: %empty  */
@@ -46456,7 +46416,7 @@
                                 {
 					(yyval.typnam) = SystemTypeName("float8");
 				}
-#line 46460 "gram.c"
+#line 46420 "gram.c"
     break;
 
   case 1913: /* Bit: BitWithLength  */
@@ -46464,7 +46424,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46468 "gram.c"
+#line 46428 "gram.c"
     break;
 
   case 1914: /* Bit: BitWithoutLength  */
@@ -46472,7 +46432,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46476 "gram.c"
+#line 46436 "gram.c"
     break;
 
   case 1915: /* ConstBit: BitWithLength  */
@@ -46480,7 +46440,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46484 "gram.c"
+#line 46444 "gram.c"
     break;
 
   case 1916: /* ConstBit: BitWithoutLength  */
@@ -46489,7 +46449,7 @@
 					(yyval.typnam) = (yyvsp[0].typnam);
 					(yyval.typnam)->typmods = NIL;
 				}
-#line 46493 "gram.c"
+#line 46453 "gram.c"
     break;
 
   case 1917: /* BitWithLength: BIT opt_varying '(' expr_list ')'  */
@@ -46502,7 +46462,7 @@
 					(yyval.typnam)->typmods = (yyvsp[-1].list);
 					(yyval.typnam)->location = (yylsp[-4]);
 				}
-#line 46506 "gram.c"
+#line 46466 "gram.c"
     break;
 
   case 1918: /* BitWithoutLength: BIT opt_varying  */
@@ -46520,7 +46480,7 @@
 					}
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46524 "gram.c"
+#line 46484 "gram.c"
     break;
 
   case 1919: /* Character: CharacterWithLength  */
@@ -46528,7 +46488,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46532 "gram.c"
+#line 46492 "gram.c"
     break;
 
   case 1920: /* Character: CharacterWithoutLength  */
@@ -46536,7 +46496,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46540 "gram.c"
+#line 46500 "gram.c"
     break;
 
   case 1921: /* ConstCharacter: CharacterWithLength  */
@@ -46544,7 +46504,7 @@
                                 {
 					(yyval.typnam) = (yyvsp[0].typnam);
 				}
-#line 46548 "gram.c"
+#line 46508 "gram.c"
     break;
 
   case 1922: /* ConstCharacter: CharacterWithoutLength  */
@@ -46559,7 +46519,7 @@
 					(yyval.typnam) = (yyvsp[0].typnam);
 					(yyval.typnam)->typmods = NIL;
 				}
-#line 46563 "gram.c"
+#line 46523 "gram.c"
     break;
 
   case 1923: /* CharacterWithLength: character '(' Iconst ')'  */
@@ -46569,7 +46529,7 @@
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
 					(yyval.typnam)->location = (yylsp[-3]);
 				}
-#line 46573 "gram.c"
+#line 46533 "gram.c"
     break;
 
   case 1924: /* CharacterWithoutLength: character  */
@@ -46581,55 +46541,55 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46585 "gram.c"
+#line 46545 "gram.c"
     break;
 
   case 1925: /* character: CHARACTER opt_varying  */
 #line 14227 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
-#line 46591 "gram.c"
+#line 46551 "gram.c"
     break;
 
   case 1926: /* character: CHAR_P opt_varying  */
 #line 14229 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
-#line 46597 "gram.c"
+#line 46557 "gram.c"
     break;
 
   case 1927: /* character: VARCHAR  */
 #line 14231 "gram.y"
                                                                                 { (yyval.str) = "varchar"; }
-#line 46603 "gram.c"
+#line 46563 "gram.c"
     break;
 
   case 1928: /* character: NATIONAL CHARACTER opt_varying  */
 #line 14233 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
-#line 46609 "gram.c"
+#line 46569 "gram.c"
     break;
 
   case 1929: /* character: NATIONAL CHAR_P opt_varying  */
 #line 14235 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
-#line 46615 "gram.c"
+#line 46575 "gram.c"
     break;
 
   case 1930: /* character: NCHAR opt_varying  */
 #line 14237 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
-#line 46621 "gram.c"
+#line 46581 "gram.c"
     break;
 
   case 1931: /* opt_varying: VARYING  */
 #line 14241 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 46627 "gram.c"
+#line 46587 "gram.c"
     break;
 
   case 1932: /* opt_varying: %empty  */
 #line 14242 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 46633 "gram.c"
+#line 46593 "gram.c"
     break;
 
   case 1933: /* ConstDatetime: TIMESTAMP '(' Iconst ')' opt_timezone  */
@@ -46642,7 +46602,7 @@
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
 					(yyval.typnam)->location = (yylsp[-4]);
 				}
-#line 46646 "gram.c"
+#line 46606 "gram.c"
     break;
 
   case 1934: /* ConstDatetime: TIMESTAMP opt_timezone  */
@@ -46654,7 +46614,7 @@
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46658 "gram.c"
+#line 46618 "gram.c"
     break;
 
   case 1935: /* ConstDatetime: TIME '(' Iconst ')' opt_timezone  */
@@ -46667,7 +46627,7 @@
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
 					(yyval.typnam)->location = (yylsp[-4]);
 				}
-#line 46671 "gram.c"
+#line 46631 "gram.c"
     break;
 
   case 1936: /* ConstDatetime: TIME opt_timezone  */
@@ -46679,7 +46639,7 @@
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->location = (yylsp[-1]);
 				}
-#line 46683 "gram.c"
+#line 46643 "gram.c"
     break;
 
   case 1937: /* ConstInterval: INTERVAL  */
@@ -46688,61 +46648,61 @@
 					(yyval.typnam) = SystemTypeName("interval");
 					(yyval.typnam)->location = (yylsp[0]);
 				}
-#line 46692 "gram.c"
+#line 46652 "gram.c"
     break;
 
   case 1938: /* opt_timezone: WITH_LA TIME ZONE  */
 #line 14294 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 46698 "gram.c"
+#line 46658 "gram.c"
     break;
 
   case 1939: /* opt_timezone: WITHOUT_LA TIME ZONE  */
 #line 14295 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 46704 "gram.c"
+#line 46664 "gram.c"
     break;
 
   case 1940: /* opt_timezone: %empty  */
 #line 14296 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 46710 "gram.c"
+#line 46670 "gram.c"
     break;
 
   case 1941: /* opt_interval: YEAR_P  */
 #line 14301 "gram.y"
                                 { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[0]))); }
-#line 46716 "gram.c"
+#line 46676 "gram.c"
     break;
 
   case 1942: /* opt_interval: MONTH_P  */
 #line 14303 "gram.y"
                                 { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[0]))); }
-#line 46722 "gram.c"
+#line 46682 "gram.c"
     break;
 
   case 1943: /* opt_interval: DAY_P  */
 #line 14305 "gram.y"
                                 { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[0]))); }
-#line 46728 "gram.c"
+#line 46688 "gram.c"
     break;
 
   case 1944: /* opt_interval: HOUR_P  */
 #line 14307 "gram.y"
                                 { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[0]))); }
-#line 46734 "gram.c"
+#line 46694 "gram.c"
     break;
 
   case 1945: /* opt_interval: MINUTE_P  */
 #line 14309 "gram.y"
                                 { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[0]))); }
-#line 46740 "gram.c"
+#line 46700 "gram.c"
     break;
 
   case 1946: /* opt_interval: interval_second  */
 #line 14311 "gram.y"
                                 { (yyval.list) = (yyvsp[0].list); }
-#line 46746 "gram.c"
+#line 46706 "gram.c"
     break;
 
   case 1947: /* opt_interval: YEAR_P TO MONTH_P  */
@@ -46751,7 +46711,7 @@
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
 												 INTERVAL_MASK(MONTH), (yylsp[-2])));
 				}
-#line 46755 "gram.c"
+#line 46715 "gram.c"
     break;
 
   case 1948: /* opt_interval: DAY_P TO HOUR_P  */
@@ -46760,7 +46720,7 @@
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR), (yylsp[-2])));
 				}
-#line 46764 "gram.c"
+#line 46724 "gram.c"
     break;
 
   case 1949: /* opt_interval: DAY_P TO MINUTE_P  */
@@ -46770,7 +46730,7 @@
 												 INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
 				}
-#line 46774 "gram.c"
+#line 46734 "gram.c"
     break;
 
   case 1950: /* opt_interval: DAY_P TO interval_second  */
@@ -46782,7 +46742,7 @@
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[-2]));
 				}
-#line 46786 "gram.c"
+#line 46746 "gram.c"
     break;
 
   case 1951: /* opt_interval: HOUR_P TO MINUTE_P  */
@@ -46791,7 +46751,7 @@
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
 				}
-#line 46795 "gram.c"
+#line 46755 "gram.c"
     break;
 
   case 1952: /* opt_interval: HOUR_P TO interval_second  */
@@ -46802,7 +46762,7 @@
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[-2]));
 				}
-#line 46806 "gram.c"
+#line 46766 "gram.c"
     break;
 
   case 1953: /* opt_interval: MINUTE_P TO interval_second  */
@@ -46812,13 +46772,13 @@
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[-2]));
 				}
-#line 46816 "gram.c"
+#line 46776 "gram.c"
     break;
 
   case 1954: /* opt_interval: %empty  */
 #line 14355 "gram.y"
                                 { (yyval.list) = NIL; }
-#line 46822 "gram.c"
+#line 46782 "gram.c"
     break;
 
   case 1955: /* interval_second: SECOND_P  */
@@ -46826,7 +46786,7 @@
                                 {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[0])));
 				}
-#line 46830 "gram.c"
+#line 46790 "gram.c"
     break;
 
   case 1956: /* interval_second: SECOND_P '(' Iconst ')'  */
@@ -46835,19 +46795,19 @@
 					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[-3])),
 									makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
 				}
-#line 46839 "gram.c"
+#line 46799 "gram.c"
     break;
 
   case 1957: /* a_expr: c_expr  */
 #line 14399 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 46845 "gram.c"
+#line 46805 "gram.c"
     break;
 
   case 1958: /* a_expr: a_expr TYPECAST Typename  */
 #line 14401 "gram.y"
                                         { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
-#line 46851 "gram.c"
+#line 46811 "gram.c"
     break;
 
   case 1959: /* a_expr: a_expr COLLATE any_name  */
@@ -46860,7 +46820,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 46864 "gram.c"
+#line 46824 "gram.c"
     break;
 
   case 1960: /* a_expr: a_expr AT TIME ZONE a_expr  */
@@ -46871,127 +46831,127 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 46875 "gram.c"
+#line 46835 "gram.c"
     break;
 
   case 1961: /* a_expr: '+' a_expr  */
 #line 14428 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
-#line 46881 "gram.c"
+#line 46841 "gram.c"
     break;
 
   case 1962: /* a_expr: '-' a_expr  */
 #line 14430 "gram.y"
                                 { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
-#line 46887 "gram.c"
+#line 46847 "gram.c"
     break;
 
   case 1963: /* a_expr: a_expr '+' a_expr  */
 #line 14432 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46893 "gram.c"
+#line 46853 "gram.c"
     break;
 
   case 1964: /* a_expr: a_expr '-' a_expr  */
 #line 14434 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46899 "gram.c"
+#line 46859 "gram.c"
     break;
 
   case 1965: /* a_expr: a_expr '*' a_expr  */
 #line 14436 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46905 "gram.c"
+#line 46865 "gram.c"
     break;
 
   case 1966: /* a_expr: a_expr '/' a_expr  */
 #line 14438 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46911 "gram.c"
+#line 46871 "gram.c"
     break;
 
   case 1967: /* a_expr: a_expr '%' a_expr  */
 #line 14440 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46917 "gram.c"
+#line 46877 "gram.c"
     break;
 
   case 1968: /* a_expr: a_expr '^' a_expr  */
 #line 14442 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46923 "gram.c"
+#line 46883 "gram.c"
     break;
 
   case 1969: /* a_expr: a_expr '<' a_expr  */
 #line 14444 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46929 "gram.c"
+#line 46889 "gram.c"
     break;
 
   case 1970: /* a_expr: a_expr '>' a_expr  */
 #line 14446 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46935 "gram.c"
+#line 46895 "gram.c"
     break;
 
   case 1971: /* a_expr: a_expr '=' a_expr  */
 #line 14448 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46941 "gram.c"
+#line 46901 "gram.c"
     break;
 
   case 1972: /* a_expr: a_expr LESS_EQUALS a_expr  */
 #line 14450 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46947 "gram.c"
+#line 46907 "gram.c"
     break;
 
   case 1973: /* a_expr: a_expr GREATER_EQUALS a_expr  */
 #line 14452 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46953 "gram.c"
+#line 46913 "gram.c"
     break;
 
   case 1974: /* a_expr: a_expr NOT_EQUALS a_expr  */
 #line 14454 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<>", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46959 "gram.c"
+#line 46919 "gram.c"
     break;
 
   case 1975: /* a_expr: a_expr qual_Op a_expr  */
 #line 14457 "gram.y"
                                 { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46965 "gram.c"
+#line 46925 "gram.c"
     break;
 
   case 1976: /* a_expr: qual_Op a_expr  */
 #line 14459 "gram.y"
                                 { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
-#line 46971 "gram.c"
+#line 46931 "gram.c"
     break;
 
   case 1977: /* a_expr: a_expr AND a_expr  */
 #line 14462 "gram.y"
                                 { (yyval.node) = makeAndExpr((yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46977 "gram.c"
+#line 46937 "gram.c"
     break;
 
   case 1978: /* a_expr: a_expr OR a_expr  */
 #line 14464 "gram.y"
                                 { (yyval.node) = makeOrExpr((yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 46983 "gram.c"
+#line 46943 "gram.c"
     break;
 
   case 1979: /* a_expr: NOT a_expr  */
 #line 14466 "gram.y"
                                 { (yyval.node) = makeNotExpr((yyvsp[0].node), (yylsp[-1])); }
-#line 46989 "gram.c"
+#line 46949 "gram.c"
     break;
 
   case 1980: /* a_expr: NOT_LA a_expr  */
 #line 14468 "gram.y"
                                 { (yyval.node) = makeNotExpr((yyvsp[0].node), (yylsp[-1])); }
-#line 46995 "gram.c"
+#line 46955 "gram.c"
     break;
 
   case 1981: /* a_expr: a_expr LIKE a_expr  */
@@ -47000,7 +46960,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_LIKE, "~~",
 												   (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 47004 "gram.c"
+#line 46964 "gram.c"
     break;
 
   case 1982: /* a_expr: a_expr LIKE a_expr ESCAPE a_expr  */
@@ -47013,7 +46973,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_LIKE, "~~",
 												   (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
 				}
-#line 47017 "gram.c"
+#line 46977 "gram.c"
     break;
 
   case 1983: /* a_expr: a_expr NOT_LA LIKE a_expr  */
@@ -47022,7 +46982,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_LIKE, "!~~",
 												   (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 47026 "gram.c"
+#line 46986 "gram.c"
     break;
 
   case 1984: /* a_expr: a_expr NOT_LA LIKE a_expr ESCAPE a_expr  */
@@ -47035,7 +46995,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_LIKE, "!~~",
 												   (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
 				}
-#line 47039 "gram.c"
+#line 46999 "gram.c"
     break;
 
   case 1985: /* a_expr: a_expr ILIKE a_expr  */
@@ -47044,7 +47004,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_ILIKE, "~~*",
 												   (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
 				}
-#line 47048 "gram.c"
+#line 47008 "gram.c"
     break;
 
   case 1986: /* a_expr: a_expr ILIKE a_expr ESCAPE a_expr  */
@@ -47057,7 +47017,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_ILIKE, "~~*",
 												   (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
 				}
-#line 47061 "gram.c"
+#line 47021 "gram.c"
     break;
 
   case 1987: /* a_expr: a_expr NOT_LA ILIKE a_expr  */
@@ -47066,7 +47026,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_ILIKE, "!~~*",
 												   (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
 				}
-#line 47070 "gram.c"
+#line 47030 "gram.c"
     break;
 
   case 1988: /* a_expr: a_expr NOT_LA ILIKE a_expr ESCAPE a_expr  */
@@ -47079,7 +47039,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_ILIKE, "!~~*",
 												   (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
 				}
-#line 47083 "gram.c"
+#line 47043 "gram.c"
     break;
 
   case 1989: /* a_expr: a_expr SIMILAR TO a_expr  */
@@ -47092,7 +47052,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_SIMILAR, "~",
 												   (yyvsp[-3].node), (Node *) n, (yylsp[-2]));
 				}
-#line 47096 "gram.c"
+#line 47056 "gram.c"
     break;
 
   case 1990: /* a_expr: a_expr SIMILAR TO a_expr ESCAPE a_expr  */
@@ -47105,7 +47065,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_SIMILAR, "~",
 												   (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
 				}
-#line 47109 "gram.c"
+#line 47069 "gram.c"
     break;
 
   case 1991: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr  */
@@ -47118,7 +47078,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_SIMILAR, "!~",
 												   (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
 				}
-#line 47122 "gram.c"
+#line 47082 "gram.c"
     break;
 
   case 1992: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr ESCAPE a_expr  */
@@ -47131,7 +47091,7 @@
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_SIMILAR, "!~",
 												   (yyvsp[-6].node), (Node *) n, (yylsp[-5]));
 				}
-#line 47135 "gram.c"
+#line 47095 "gram.c"
     break;
 
   case 1993: /* a_expr: a_expr IS NULL_P  */
@@ -47144,7 +47104,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47148 "gram.c"
+#line 47108 "gram.c"
     break;
 
   case 1994: /* a_expr: a_expr ISNULL  */
@@ -47157,7 +47117,7 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47161 "gram.c"
+#line 47121 "gram.c"
     break;
 
   case 1995: /* a_expr: a_expr IS NOT NULL_P  */
@@ -47170,7 +47130,7 @@
 					n->location = (yylsp[-2]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47174 "gram.c"
+#line 47134 "gram.c"
     break;
 
   case 1996: /* a_expr: a_expr NOTNULL  */
@@ -47183,7 +47143,7 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47187 "gram.c"
+#line 47147 "gram.c"
     break;
 
   case 1997: /* a_expr: row OVERLAPS row  */
@@ -47204,7 +47164,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-1]));
 				}
-#line 47208 "gram.c"
+#line 47168 "gram.c"
     break;
 
   case 1998: /* a_expr: a_expr IS TRUE_P  */
@@ -47217,7 +47177,7 @@
 					b->location = (yylsp[-1]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47221 "gram.c"
+#line 47181 "gram.c"
     break;
 
   case 1999: /* a_expr: a_expr IS NOT TRUE_P  */
@@ -47230,7 +47190,7 @@
 					b->location = (yylsp[-2]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47234 "gram.c"
+#line 47194 "gram.c"
     break;
 
   case 2000: /* a_expr: a_expr IS FALSE_P  */
@@ -47243,7 +47203,7 @@
 					b->location = (yylsp[-1]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47247 "gram.c"
+#line 47207 "gram.c"
     break;
 
   case 2001: /* a_expr: a_expr IS NOT FALSE_P  */
@@ -47256,7 +47216,7 @@
 					b->location = (yylsp[-2]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47260 "gram.c"
+#line 47220 "gram.c"
     break;
 
   case 2002: /* a_expr: a_expr IS UNKNOWN  */
@@ -47269,7 +47229,7 @@
 					b->location = (yylsp[-1]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47273 "gram.c"
+#line 47233 "gram.c"
     break;
 
   case 2003: /* a_expr: a_expr IS NOT UNKNOWN  */
@@ -47282,7 +47242,7 @@
 					b->location = (yylsp[-2]);
 					(yyval.node) = (Node *) b;
 				}
-#line 47286 "gram.c"
+#line 47246 "gram.c"
     break;
 
   case 2004: /* a_expr: a_expr IS DISTINCT FROM a_expr  */
@@ -47290,7 +47250,7 @@
                                 {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
 				}
-#line 47294 "gram.c"
+#line 47254 "gram.c"
     break;
 
   case 2005: /* a_expr: a_expr IS NOT DISTINCT FROM a_expr  */
@@ -47298,7 +47258,7 @@
                                 {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NOT_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4]));
 				}
-#line 47302 "gram.c"
+#line 47262 "gram.c"
     break;
 
   case 2006: /* a_expr: a_expr BETWEEN opt_asymmetric b_expr AND a_expr  */
@@ -47310,7 +47270,7 @@
 												   (Node *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
 												   (yylsp[-4]));
 				}
-#line 47314 "gram.c"
+#line 47274 "gram.c"
     break;
 
   case 2007: /* a_expr: a_expr NOT_LA BETWEEN opt_asymmetric b_expr AND a_expr  */
@@ -47322,7 +47282,7 @@
 												   (Node *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
 												   (yylsp[-5]));
 				}
-#line 47326 "gram.c"
+#line 47286 "gram.c"
     break;
 
   case 2008: /* a_expr: a_expr BETWEEN SYMMETRIC b_expr AND a_expr  */
@@ -47334,7 +47294,7 @@
 												   (Node *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
 												   (yylsp[-4]));
 				}
-#line 47338 "gram.c"
+#line 47298 "gram.c"
     break;
 
   case 2009: /* a_expr: a_expr NOT_LA BETWEEN SYMMETRIC b_expr AND a_expr  */
@@ -47346,7 +47306,7 @@
 												   (Node *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
 												   (yylsp[-5]));
 				}
-#line 47350 "gram.c"
+#line 47310 "gram.c"
     break;
 
   case 2010: /* a_expr: a_expr IN_P in_expr  */
@@ -47371,7 +47331,7 @@
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
 					}
 				}
-#line 47375 "gram.c"
+#line 47335 "gram.c"
     break;
 
   case 2011: /* a_expr: a_expr NOT_LA IN_P in_expr  */
@@ -47398,7 +47358,7 @@
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
 					}
 				}
-#line 47402 "gram.c"
+#line 47362 "gram.c"
     break;
 
   case 2012: /* a_expr: a_expr subquery_Op sub_type select_with_parens  */
@@ -47414,7 +47374,7 @@
 					n->location = (yylsp[-2]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47418 "gram.c"
+#line 47378 "gram.c"
     break;
 
   case 2013: /* a_expr: a_expr subquery_Op sub_type '(' a_expr ')'  */
@@ -47425,7 +47385,7 @@
 					else
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
 				}
-#line 47429 "gram.c"
+#line 47389 "gram.c"
     break;
 
   case 2014: /* a_expr: UNIQUE opt_unique_null_treatment select_with_parens  */
@@ -47445,7 +47405,7 @@
 							 errmsg("UNIQUE predicate is not yet implemented"),
 							 parser_errposition((yylsp[-2]))));
 				}
-#line 47449 "gram.c"
+#line 47409 "gram.c"
     break;
 
   case 2015: /* a_expr: a_expr IS DOCUMENT_P  */
@@ -47454,7 +47414,7 @@
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
 				}
-#line 47458 "gram.c"
+#line 47418 "gram.c"
     break;
 
   case 2016: /* a_expr: a_expr IS NOT DOCUMENT_P  */
@@ -47464,7 +47424,7 @@
 												 list_make1((yyvsp[-3].node)), (yylsp[-2])),
 									 (yylsp[-2]));
 				}
-#line 47468 "gram.c"
+#line 47428 "gram.c"
     break;
 
   case 2017: /* a_expr: a_expr IS NORMALIZED  */
@@ -47475,7 +47435,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-1]));
 				}
-#line 47479 "gram.c"
+#line 47439 "gram.c"
     break;
 
   case 2018: /* a_expr: a_expr IS unicode_normal_form NORMALIZED  */
@@ -47486,7 +47446,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-2]));
 				}
-#line 47490 "gram.c"
+#line 47450 "gram.c"
     break;
 
   case 2019: /* a_expr: a_expr IS NOT NORMALIZED  */
@@ -47498,7 +47458,7 @@
 														   (yylsp[-2])),
 									 (yylsp[-2]));
 				}
-#line 47502 "gram.c"
+#line 47462 "gram.c"
     break;
 
   case 2020: /* a_expr: a_expr IS NOT unicode_normal_form NORMALIZED  */
@@ -47510,7 +47470,7 @@
 														   (yylsp[-3])),
 									 (yylsp[-3]));
 				}
-#line 47514 "gram.c"
+#line 47474 "gram.c"
     break;
 
   case 2021: /* a_expr: a_expr IS json_predicate_type_constraint json_key_uniqueness_constraint_opt  */
@@ -47520,7 +47480,7 @@
 
 					(yyval.node) = makeJsonIsPredicate((yyvsp[-3].node), format, (yyvsp[-1].ival), (yyvsp[0].boolean), (yylsp[-3]));
 				}
-#line 47524 "gram.c"
+#line 47484 "gram.c"
     break;
 
   case 2022: /* a_expr: a_expr IS NOT json_predicate_type_constraint json_key_uniqueness_constraint_opt  */
@@ -47530,7 +47490,7 @@
 
 					(yyval.node) = makeNotExpr(makeJsonIsPredicate((yyvsp[-4].node), format, (yyvsp[-1].ival), (yyvsp[0].boolean), (yylsp[-4])), (yylsp[-4]));
 				}
-#line 47534 "gram.c"
+#line 47494 "gram.c"
     break;
 
   case 2023: /* a_expr: DEFAULT  */
@@ -47549,115 +47509,115 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47553 "gram.c"
+#line 47513 "gram.c"
     break;
 
   case 2024: /* b_expr: c_expr  */
 #line 14905 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 47559 "gram.c"
+#line 47519 "gram.c"
     break;
 
   case 2025: /* b_expr: b_expr TYPECAST Typename  */
 #line 14907 "gram.y"
                                 { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
-#line 47565 "gram.c"
+#line 47525 "gram.c"
     break;
 
   case 2026: /* b_expr: '+' b_expr  */
 #line 14909 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
-#line 47571 "gram.c"
+#line 47531 "gram.c"
     break;
 
   case 2027: /* b_expr: '-' b_expr  */
 #line 14911 "gram.y"
                                 { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
-#line 47577 "gram.c"
+#line 47537 "gram.c"
     break;
 
   case 2028: /* b_expr: b_expr '+' b_expr  */
 #line 14913 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47583 "gram.c"
+#line 47543 "gram.c"
     break;
 
   case 2029: /* b_expr: b_expr '-' b_expr  */
 #line 14915 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47589 "gram.c"
+#line 47549 "gram.c"
     break;
 
   case 2030: /* b_expr: b_expr '*' b_expr  */
 #line 14917 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47595 "gram.c"
+#line 47555 "gram.c"
     break;
 
   case 2031: /* b_expr: b_expr '/' b_expr  */
 #line 14919 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47601 "gram.c"
+#line 47561 "gram.c"
     break;
 
   case 2032: /* b_expr: b_expr '%' b_expr  */
 #line 14921 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47607 "gram.c"
+#line 47567 "gram.c"
     break;
 
   case 2033: /* b_expr: b_expr '^' b_expr  */
 #line 14923 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47613 "gram.c"
+#line 47573 "gram.c"
     break;
 
   case 2034: /* b_expr: b_expr '<' b_expr  */
 #line 14925 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47619 "gram.c"
+#line 47579 "gram.c"
     break;
 
   case 2035: /* b_expr: b_expr '>' b_expr  */
 #line 14927 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47625 "gram.c"
+#line 47585 "gram.c"
     break;
 
   case 2036: /* b_expr: b_expr '=' b_expr  */
 #line 14929 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47631 "gram.c"
+#line 47591 "gram.c"
     break;
 
   case 2037: /* b_expr: b_expr LESS_EQUALS b_expr  */
 #line 14931 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47637 "gram.c"
+#line 47597 "gram.c"
     break;
 
   case 2038: /* b_expr: b_expr GREATER_EQUALS b_expr  */
 #line 14933 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47643 "gram.c"
+#line 47603 "gram.c"
     break;
 
   case 2039: /* b_expr: b_expr NOT_EQUALS b_expr  */
 #line 14935 "gram.y"
                                 { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<>", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47649 "gram.c"
+#line 47609 "gram.c"
     break;
 
   case 2040: /* b_expr: b_expr qual_Op b_expr  */
 #line 14937 "gram.y"
                                 { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
-#line 47655 "gram.c"
+#line 47615 "gram.c"
     break;
 
   case 2041: /* b_expr: qual_Op b_expr  */
 #line 14939 "gram.y"
                                 { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
-#line 47661 "gram.c"
+#line 47621 "gram.c"
     break;
 
   case 2042: /* b_expr: b_expr IS DISTINCT FROM b_expr  */
@@ -47665,7 +47625,7 @@
                                 {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
 				}
-#line 47669 "gram.c"
+#line 47629 "gram.c"
     break;
 
   case 2043: /* b_expr: b_expr IS NOT DISTINCT FROM b_expr  */
@@ -47673,7 +47633,7 @@
                                 {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NOT_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4]));
 				}
-#line 47677 "gram.c"
+#line 47637 "gram.c"
     break;
 
   case 2044: /* b_expr: b_expr IS DOCUMENT_P  */
@@ -47682,7 +47642,7 @@
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
 				}
-#line 47686 "gram.c"
+#line 47646 "gram.c"
     break;
 
   case 2045: /* b_expr: b_expr IS NOT DOCUMENT_P  */
@@ -47692,19 +47652,19 @@
 												 list_make1((yyvsp[-3].node)), (yylsp[-2])),
 									 (yylsp[-2]));
 				}
-#line 47696 "gram.c"
+#line 47656 "gram.c"
     break;
 
   case 2046: /* c_expr: columnref  */
 #line 14969 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 47702 "gram.c"
+#line 47662 "gram.c"
     break;
 
   case 2047: /* c_expr: AexprConst  */
 #line 14970 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 47708 "gram.c"
+#line 47668 "gram.c"
     break;
 
   case 2048: /* c_expr: PARAM opt_indirection  */
@@ -47725,7 +47685,7 @@
 					else
 						(yyval.node) = (Node *) p;
 				}
-#line 47729 "gram.c"
+#line 47689 "gram.c"
     break;
 
   case 2049: /* c_expr: '(' a_expr ')' opt_indirection  */
@@ -47742,19 +47702,19 @@
 					else
 						(yyval.node) = (yyvsp[-2].node);
 				}
-#line 47746 "gram.c"
+#line 47706 "gram.c"
     break;
 
   case 2050: /* c_expr: case_expr  */
 #line 15002 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 47752 "gram.c"
+#line 47712 "gram.c"
     break;
 
   case 2051: /* c_expr: func_expr  */
 #line 15004 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 47758 "gram.c"
+#line 47718 "gram.c"
     break;
 
   case 2052: /* c_expr: select_with_parens  */
@@ -47770,7 +47730,7 @@
 					n->location = (yylsp[0]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47774 "gram.c"
+#line 47734 "gram.c"
     break;
 
   case 2053: /* c_expr: select_with_parens indirection  */
@@ -47799,7 +47759,7 @@
 					a->indirection = check_indirection((yyvsp[0].list), yyscanner);
 					(yyval.node) = (Node *) a;
 				}
-#line 47803 "gram.c"
+#line 47763 "gram.c"
     break;
 
   case 2054: /* c_expr: EXISTS select_with_parens  */
@@ -47815,7 +47775,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47819 "gram.c"
+#line 47779 "gram.c"
     break;
 
   case 2055: /* c_expr: ARRAY select_with_parens  */
@@ -47831,7 +47791,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47835 "gram.c"
+#line 47795 "gram.c"
     break;
 
   case 2056: /* c_expr: ARRAY array_expr  */
@@ -47843,7 +47803,7 @@
 					n->location = (yylsp[-1]);
 					(yyval.node) = (Node *) n;
 				}
-#line 47847 "gram.c"
+#line 47807 "gram.c"
     break;
 
   case 2057: /* c_expr: explicit_row  */
@@ -47858,7 +47818,7 @@
 					r->location = (yylsp[0]);
 					(yyval.node) = (Node *) r;
 				}
-#line 47862 "gram.c"
+#line 47822 "gram.c"
     break;
 
   case 2058: /* c_expr: implicit_row  */
@@ -47873,7 +47833,7 @@
 					r->location = (yylsp[0]);
 					(yyval.node) = (Node *) r;
 				}
-#line 47877 "gram.c"
+#line 47837 "gram.c"
     break;
 
   case 2059: /* c_expr: GROUPING '(' expr_list ')'  */
@@ -47885,7 +47845,7 @@
 				  g->location = (yylsp[-3]);
 				  (yyval.node) = (Node *) g;
 			  }
-#line 47889 "gram.c"
+#line 47849 "gram.c"
     break;
 
   case 2060: /* func_application: func_name '(' ')'  */
@@ -47895,7 +47855,7 @@
 											   COERCE_EXPLICIT_CALL,
 											   (yylsp[-2]));
 				}
-#line 47899 "gram.c"
+#line 47859 "gram.c"
     break;
 
   case 2061: /* func_application: func_name '(' func_arg_list opt_sort_clause ')'  */
@@ -47908,7 +47868,7 @@
 					n->agg_order = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 47912 "gram.c"
+#line 47872 "gram.c"
     break;
 
   case 2062: /* func_application: func_name '(' VARIADIC func_arg_expr opt_sort_clause ')'  */
@@ -47922,7 +47882,7 @@
 					n->agg_order = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 47926 "gram.c"
+#line 47886 "gram.c"
     break;
 
   case 2063: /* func_application: func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause ')'  */
@@ -47936,7 +47896,7 @@
 					n->agg_order = (yyvsp[-1].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 47940 "gram.c"
+#line 47900 "gram.c"
     break;
 
   case 2064: /* func_application: func_name '(' ALL func_arg_list opt_sort_clause ')'  */
@@ -47953,7 +47913,7 @@
 					 */
 					(yyval.node) = (Node *) n;
 				}
-#line 47957 "gram.c"
+#line 47917 "gram.c"
     break;
 
   case 2065: /* func_application: func_name '(' DISTINCT func_arg_list opt_sort_clause ')'  */
@@ -47967,7 +47927,7 @@
 					n->agg_distinct = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 47971 "gram.c"
+#line 47931 "gram.c"
     break;
 
   case 2066: /* func_application: func_name '(' '*' ')'  */
@@ -47990,7 +47950,7 @@
 					n->agg_star = true;
 					(yyval.node) = (Node *) n;
 				}
-#line 47994 "gram.c"
+#line 47954 "gram.c"
     break;
 
   case 2067: /* func_expr: func_application within_group_clause filter_clause over_clause  */
@@ -48030,7 +47990,7 @@
 					n->over = (yyvsp[0].windef);
 					(yyval.node) = (Node *) n;
 				}
-#line 48034 "gram.c"
+#line 47994 "gram.c"
     break;
 
   case 2068: /* func_expr: json_aggregate_func filter_clause over_clause  */
@@ -48044,31 +48004,31 @@
 					n->over = (yyvsp[0].windef);
 					(yyval.node) = (Node *) (yyvsp[-2].node);
 				}
-#line 48048 "gram.c"
+#line 48008 "gram.c"
     break;
 
   case 2069: /* func_expr: func_expr_common_subexpr  */
 #line 15242 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 48054 "gram.c"
+#line 48014 "gram.c"
     break;
 
   case 2070: /* func_expr_windowless: func_application  */
 #line 15252 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 48060 "gram.c"
+#line 48020 "gram.c"
     break;
 
   case 2071: /* func_expr_windowless: func_expr_common_subexpr  */
 #line 15253 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 48066 "gram.c"
+#line 48026 "gram.c"
     break;
 
   case 2072: /* func_expr_windowless: json_aggregate_func  */
 #line 15254 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 48072 "gram.c"
+#line 48032 "gram.c"
     break;
 
   case 2073: /* func_expr_common_subexpr: COLLATION FOR '(' a_expr ')'  */
@@ -48079,7 +48039,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-4]));
 				}
-#line 48083 "gram.c"
+#line 48043 "gram.c"
     break;
 
   case 2074: /* func_expr_common_subexpr: CURRENT_DATE  */
@@ -48087,7 +48047,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_DATE, -1, (yylsp[0]));
 				}
-#line 48091 "gram.c"
+#line 48051 "gram.c"
     break;
 
   case 2075: /* func_expr_common_subexpr: CURRENT_TIME  */
@@ -48095,7 +48055,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_TIME, -1, (yylsp[0]));
 				}
-#line 48099 "gram.c"
+#line 48059 "gram.c"
     break;
 
   case 2076: /* func_expr_common_subexpr: CURRENT_TIME '(' Iconst ')'  */
@@ -48103,7 +48063,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_TIME_N, (yyvsp[-1].ival), (yylsp[-3]));
 				}
-#line 48107 "gram.c"
+#line 48067 "gram.c"
     break;
 
   case 2077: /* func_expr_common_subexpr: CURRENT_TIMESTAMP  */
@@ -48111,7 +48071,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[0]));
 				}
-#line 48115 "gram.c"
+#line 48075 "gram.c"
     break;
 
   case 2078: /* func_expr_common_subexpr: CURRENT_TIMESTAMP '(' Iconst ')'  */
@@ -48119,7 +48079,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[-1].ival), (yylsp[-3]));
 				}
-#line 48123 "gram.c"
+#line 48083 "gram.c"
     break;
 
   case 2079: /* func_expr_common_subexpr: LOCALTIME  */
@@ -48127,7 +48087,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_LOCALTIME, -1, (yylsp[0]));
 				}
-#line 48131 "gram.c"
+#line 48091 "gram.c"
     break;
 
   case 2080: /* func_expr_common_subexpr: LOCALTIME '(' Iconst ')'  */
@@ -48135,7 +48095,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_LOCALTIME_N, (yyvsp[-1].ival), (yylsp[-3]));
 				}
-#line 48139 "gram.c"
+#line 48099 "gram.c"
     break;
 
   case 2081: /* func_expr_common_subexpr: LOCALTIMESTAMP  */
@@ -48143,7 +48103,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_LOCALTIMESTAMP, -1, (yylsp[0]));
 				}
-#line 48147 "gram.c"
+#line 48107 "gram.c"
     break;
 
   case 2082: /* func_expr_common_subexpr: LOCALTIMESTAMP '(' Iconst ')'  */
@@ -48151,7 +48111,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_LOCALTIMESTAMP_N, (yyvsp[-1].ival), (yylsp[-3]));
 				}
-#line 48155 "gram.c"
+#line 48115 "gram.c"
     break;
 
   case 2083: /* func_expr_common_subexpr: CURRENT_ROLE  */
@@ -48159,7 +48119,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_ROLE, -1, (yylsp[0]));
 				}
-#line 48163 "gram.c"
+#line 48123 "gram.c"
     break;
 
   case 2084: /* func_expr_common_subexpr: CURRENT_USER  */
@@ -48167,7 +48127,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_USER, -1, (yylsp[0]));
 				}
-#line 48171 "gram.c"
+#line 48131 "gram.c"
     break;
 
   case 2085: /* func_expr_common_subexpr: SESSION_USER  */
@@ -48175,7 +48135,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_SESSION_USER, -1, (yylsp[0]));
 				}
-#line 48179 "gram.c"
+#line 48139 "gram.c"
     break;
 
   case 2086: /* func_expr_common_subexpr: SYSTEM_USER  */
@@ -48186,7 +48146,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[0]));
 				}
-#line 48190 "gram.c"
+#line 48150 "gram.c"
     break;
 
   case 2087: /* func_expr_common_subexpr: USER  */
@@ -48194,7 +48154,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_USER, -1, (yylsp[0]));
 				}
-#line 48198 "gram.c"
+#line 48158 "gram.c"
     break;
 
   case 2088: /* func_expr_common_subexpr: CURRENT_CATALOG  */
@@ -48202,7 +48162,7 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_CATALOG, -1, (yylsp[0]));
 				}
-#line 48206 "gram.c"
+#line 48166 "gram.c"
     break;
 
   case 2089: /* func_expr_common_subexpr: CURRENT_SCHEMA  */
@@ -48210,13 +48170,13 @@
                                 {
 					(yyval.node) = makeSQLValueFunction(SVFOP_CURRENT_SCHEMA, -1, (yylsp[0]));
 				}
-#line 48214 "gram.c"
+#line 48174 "gram.c"
     break;
 
   case 2090: /* func_expr_common_subexpr: CAST '(' a_expr AS Typename ')'  */
 #line 15336 "gram.y"
                                 { (yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), (yylsp[-5])); }
-#line 48220 "gram.c"
+#line 48180 "gram.c"
     break;
 
   case 2091: /* func_expr_common_subexpr: EXTRACT '(' extract_list ')'  */
@@ -48227,7 +48187,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48231 "gram.c"
+#line 48191 "gram.c"
     break;
 
   case 2092: /* func_expr_common_subexpr: NORMALIZE '(' a_expr ')'  */
@@ -48238,7 +48198,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48242 "gram.c"
+#line 48202 "gram.c"
     break;
 
   case 2093: /* func_expr_common_subexpr: NORMALIZE '(' a_expr ',' unicode_normal_form ')'  */
@@ -48249,7 +48209,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-5]));
 				}
-#line 48253 "gram.c"
+#line 48213 "gram.c"
     break;
 
   case 2094: /* func_expr_common_subexpr: OVERLAY '(' overlay_list ')'  */
@@ -48260,7 +48220,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48264 "gram.c"
+#line 48224 "gram.c"
     break;
 
   case 2095: /* func_expr_common_subexpr: OVERLAY '(' func_arg_list_opt ')'  */
@@ -48275,7 +48235,7 @@
 											   COERCE_EXPLICIT_CALL,
 											   (yylsp[-3]));
 				}
-#line 48279 "gram.c"
+#line 48239 "gram.c"
     break;
 
   case 2096: /* func_expr_common_subexpr: POSITION '(' position_list ')'  */
@@ -48293,7 +48253,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48297 "gram.c"
+#line 48257 "gram.c"
     break;
 
   case 2097: /* func_expr_common_subexpr: SUBSTRING '(' substr_list ')'  */
@@ -48307,7 +48267,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48311 "gram.c"
+#line 48271 "gram.c"
     break;
 
   case 2098: /* func_expr_common_subexpr: SUBSTRING '(' func_arg_list_opt ')'  */
@@ -48322,7 +48282,7 @@
 											   COERCE_EXPLICIT_CALL,
 											   (yylsp[-3]));
 				}
-#line 48326 "gram.c"
+#line 48286 "gram.c"
     break;
 
   case 2099: /* func_expr_common_subexpr: TREAT '(' a_expr AS Typename ')'  */
@@ -48342,7 +48302,7 @@
 											   COERCE_EXPLICIT_CALL,
 											   (yylsp[-5]));
 				}
-#line 48346 "gram.c"
+#line 48306 "gram.c"
     break;
 
   case 2100: /* func_expr_common_subexpr: TRIM '(' BOTH trim_list ')'  */
@@ -48356,7 +48316,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-4]));
 				}
-#line 48360 "gram.c"
+#line 48320 "gram.c"
     break;
 
   case 2101: /* func_expr_common_subexpr: TRIM '(' LEADING trim_list ')'  */
@@ -48367,7 +48327,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-4]));
 				}
-#line 48371 "gram.c"
+#line 48331 "gram.c"
     break;
 
   case 2102: /* func_expr_common_subexpr: TRIM '(' TRAILING trim_list ')'  */
@@ -48378,7 +48338,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-4]));
 				}
-#line 48382 "gram.c"
+#line 48342 "gram.c"
     break;
 
   case 2103: /* func_expr_common_subexpr: TRIM '(' trim_list ')'  */
@@ -48389,7 +48349,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-3]));
 				}
-#line 48393 "gram.c"
+#line 48353 "gram.c"
     break;
 
   case 2104: /* func_expr_common_subexpr: NULLIF '(' a_expr ',' a_expr ')'  */
@@ -48397,7 +48357,7 @@
                                 {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[-3].node), (yyvsp[-1].node), (yylsp[-5]));
 				}
-#line 48401 "gram.c"
+#line 48361 "gram.c"
     break;
 
   case 2105: /* func_expr_common_subexpr: COALESCE '(' expr_list ')'  */
@@ -48409,7 +48369,7 @@
 					c->location = (yylsp[-3]);
 					(yyval.node) = (Node *) c;
 				}
-#line 48413 "gram.c"
+#line 48373 "gram.c"
     break;
 
   case 2106: /* func_expr_common_subexpr: GREATEST '(' expr_list ')'  */
@@ -48422,7 +48382,7 @@
 					v->location = (yylsp[-3]);
 					(yyval.node) = (Node *) v;
 				}
-#line 48426 "gram.c"
+#line 48386 "gram.c"
     break;
 
   case 2107: /* func_expr_common_subexpr: LEAST '(' expr_list ')'  */
@@ -48435,7 +48395,7 @@
 					v->location = (yylsp[-3]);
 					(yyval.node) = (Node *) v;
 				}
-#line 48439 "gram.c"
+#line 48399 "gram.c"
     break;
 
   case 2108: /* func_expr_common_subexpr: XMLCONCAT '(' expr_list ')'  */
@@ -48443,7 +48403,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[-1].list), (yylsp[-3]));
 				}
-#line 48447 "gram.c"
+#line 48407 "gram.c"
     break;
 
   case 2109: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ')'  */
@@ -48451,7 +48411,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-1].str), NIL, NIL, (yylsp[-4]));
 				}
-#line 48455 "gram.c"
+#line 48415 "gram.c"
     break;
 
   case 2110: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ')'  */
@@ -48459,7 +48419,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), (yyvsp[-1].list), NIL, (yylsp[-6]));
 				}
-#line 48463 "gram.c"
+#line 48423 "gram.c"
     break;
 
   case 2111: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' expr_list ')'  */
@@ -48467,7 +48427,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), NIL, (yyvsp[-1].list), (yylsp[-6]));
 				}
-#line 48471 "gram.c"
+#line 48431 "gram.c"
     break;
 
   case 2112: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ',' expr_list ')'  */
@@ -48475,7 +48435,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-5].str), (yyvsp[-3].list), (yyvsp[-1].list), (yylsp[-8]));
 				}
-#line 48479 "gram.c"
+#line 48439 "gram.c"
     break;
 
   case 2113: /* func_expr_common_subexpr: XMLEXISTS '(' c_expr xmlexists_argument ')'  */
@@ -48488,7 +48448,7 @@
 											   COERCE_SQL_SYNTAX,
 											   (yylsp[-4]));
 				}
-#line 48492 "gram.c"
+#line 48452 "gram.c"
     break;
 
   case 2114: /* func_expr_common_subexpr: XMLFOREST '(' xml_attribute_list ')'  */
@@ -48496,7 +48456,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[-1].list), NIL, (yylsp[-3]));
 				}
-#line 48500 "gram.c"
+#line 48460 "gram.c"
     break;
 
   case 2115: /* func_expr_common_subexpr: XMLPARSE '(' document_or_content a_expr xml_whitespace_option ')'  */
@@ -48510,7 +48470,7 @@
 					x->xmloption = (yyvsp[-3].ival);
 					(yyval.node) = (Node *) x;
 				}
-#line 48514 "gram.c"
+#line 48474 "gram.c"
     break;
 
   case 2116: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ')'  */
@@ -48518,7 +48478,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-1].str), NULL, NIL, (yylsp[-4]));
 				}
-#line 48522 "gram.c"
+#line 48482 "gram.c"
     break;
 
   case 2117: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ',' a_expr ')'  */
@@ -48526,7 +48486,7 @@
                                 {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-3].str), NULL, list_make1((yyvsp[-1].node)), (yylsp[-6]));
 				}
-#line 48530 "gram.c"
+#line 48490 "gram.c"
     break;
 
   case 2118: /* func_expr_common_subexpr: XMLROOT '(' a_expr ',' xml_root_version opt_xml_root_standalone ')'  */
@@ -48535,7 +48495,7 @@
 					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
 									 list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[-1].node)), (yylsp[-6]));
 				}
-#line 48539 "gram.c"
+#line 48499 "gram.c"
     break;
 
   case 2119: /* func_expr_common_subexpr: XMLSERIALIZE '(' document_or_content a_expr AS SimpleTypename xml_indent_option ')'  */
@@ -48550,7 +48510,7 @@
 					n->location = (yylsp[-7]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48554 "gram.c"
+#line 48514 "gram.c"
     break;
 
   case 2120: /* func_expr_common_subexpr: JSON_OBJECT '(' func_arg_list ')'  */
@@ -48560,7 +48520,7 @@
 					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("json_object"),
 											   (yyvsp[-1].list), COERCE_EXPLICIT_CALL, (yylsp[-3]));
 				}
-#line 48564 "gram.c"
+#line 48524 "gram.c"
     break;
 
   case 2121: /* func_expr_common_subexpr: JSON_OBJECT '(' json_name_and_value_list json_object_constructor_null_clause_opt json_key_uniqueness_constraint_opt json_output_clause_opt ')'  */
@@ -48575,7 +48535,7 @@
 					n->location = (yylsp[-6]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48579 "gram.c"
+#line 48539 "gram.c"
     break;
 
   case 2122: /* func_expr_common_subexpr: JSON_OBJECT '(' json_output_clause_opt ')'  */
@@ -48590,7 +48550,7 @@
 					n->location = (yylsp[-3]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48594 "gram.c"
+#line 48554 "gram.c"
     break;
 
   case 2123: /* func_expr_common_subexpr: JSON_ARRAY '(' json_value_expr_list json_array_constructor_null_clause_opt json_output_clause_opt ')'  */
@@ -48604,7 +48564,7 @@
 					n->location = (yylsp[-5]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48608 "gram.c"
+#line 48568 "gram.c"
     break;
 
   case 2124: /* func_expr_common_subexpr: JSON_ARRAY '(' select_no_parens json_format_clause_opt json_output_clause_opt ')'  */
@@ -48619,7 +48579,7 @@
 					n->location = (yylsp[-5]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48623 "gram.c"
+#line 48583 "gram.c"
     break;
 
   case 2125: /* func_expr_common_subexpr: JSON_ARRAY '(' json_output_clause_opt ')'  */
@@ -48633,61 +48593,61 @@
 					n->location = (yylsp[-3]);
 					(yyval.node) = (Node *) n;
 				}
-#line 48637 "gram.c"
+#line 48597 "gram.c"
     break;
 
   case 2126: /* xml_root_version: VERSION_P a_expr  */
 #line 15634 "gram.y"
                                 { (yyval.node) = (yyvsp[0].node); }
-#line 48643 "gram.c"
+#line 48603 "gram.c"
     break;
 
   case 2127: /* xml_root_version: VERSION_P NO VALUE_P  */
 #line 15636 "gram.y"
                                 { (yyval.node) = makeNullAConst(-1); }
-#line 48649 "gram.c"
+#line 48609 "gram.c"
     break;
 
   case 2128: /* opt_xml_root_standalone: ',' STANDALONE_P YES_P  */
 #line 15640 "gram.y"
                                 { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
-#line 48655 "gram.c"
+#line 48615 "gram.c"
     break;
 
   case 2129: /* opt_xml_root_standalone: ',' STANDALONE_P NO  */
 #line 15642 "gram.y"
                                 { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
-#line 48661 "gram.c"
+#line 48621 "gram.c"
     break;
 
   case 2130: /* opt_xml_root_standalone: ',' STANDALONE_P NO VALUE_P  */
 #line 15644 "gram.y"
                                 { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
-#line 48667 "gram.c"
+#line 48627 "gram.c"
     break;
 
   case 2131: /* opt_xml_root_standalone: %empty  */
 #line 15646 "gram.y"
                                 { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
-#line 48673 "gram.c"
+#line 48633 "gram.c"
     break;
 
   case 2132: /* xml_attributes: XMLATTRIBUTES '(' xml_attribute_list ')'  */
 #line 15649 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 48679 "gram.c"
+#line 48639 "gram.c"
     break;
 
   case 2133: /* xml_attribute_list: xml_attribute_el  */
 #line 15652 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].target)); }
-#line 48685 "gram.c"
+#line 48645 "gram.c"
     break;
 
   case 2134: /* xml_attribute_list: xml_attribute_list ',' xml_attribute_el  */
 #line 15653 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
-#line 48691 "gram.c"
+#line 48651 "gram.c"
     break;
 
   case 2135: /* xml_attribute_el: a_expr AS ColLabel  */
@@ -48699,7 +48659,7 @@
 					(yyval.target)->val = (Node *) (yyvsp[-2].node);
 					(yyval.target)->location = (yylsp[-2]);
 				}
-#line 48703 "gram.c"
+#line 48663 "gram.c"
     break;
 
   case 2136: /* xml_attribute_el: a_expr  */
@@ -48711,55 +48671,55 @@
 					(yyval.target)->val = (Node *) (yyvsp[0].node);
 					(yyval.target)->location = (yylsp[0]);
 				}
-#line 48715 "gram.c"
+#line 48675 "gram.c"
     break;
 
   case 2137: /* document_or_content: DOCUMENT_P  */
 #line 15674 "gram.y"
                                                                         { (yyval.ival) = XMLOPTION_DOCUMENT; }
-#line 48721 "gram.c"
+#line 48681 "gram.c"
     break;
 
   case 2138: /* document_or_content: CONTENT_P  */
 #line 15675 "gram.y"
                                                                                                 { (yyval.ival) = XMLOPTION_CONTENT; }
-#line 48727 "gram.c"
+#line 48687 "gram.c"
     break;
 
   case 2139: /* xml_indent_option: INDENT  */
 #line 15678 "gram.y"
                                                                                 { (yyval.boolean) = true; }
-#line 48733 "gram.c"
+#line 48693 "gram.c"
     break;
 
   case 2140: /* xml_indent_option: NO INDENT  */
 #line 15679 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 48739 "gram.c"
+#line 48699 "gram.c"
     break;
 
   case 2141: /* xml_indent_option: %empty  */
 #line 15680 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 48745 "gram.c"
+#line 48705 "gram.c"
     break;
 
   case 2142: /* xml_whitespace_option: PRESERVE WHITESPACE_P  */
 #line 15683 "gram.y"
                                                         { (yyval.boolean) = true; }
-#line 48751 "gram.c"
+#line 48711 "gram.c"
     break;
 
   case 2143: /* xml_whitespace_option: STRIP_P WHITESPACE_P  */
 #line 15684 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 48757 "gram.c"
+#line 48717 "gram.c"
     break;
 
   case 2144: /* xml_whitespace_option: %empty  */
 #line 15685 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 48763 "gram.c"
+#line 48723 "gram.c"
     break;
 
   case 2145: /* xmlexists_argument: PASSING c_expr  */
@@ -48767,7 +48727,7 @@
                                 {
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 48771 "gram.c"
+#line 48731 "gram.c"
     break;
 
   case 2146: /* xmlexists_argument: PASSING c_expr xml_passing_mech  */
@@ -48775,7 +48735,7 @@
                                 {
 					(yyval.node) = (yyvsp[-1].node);
 				}
-#line 48779 "gram.c"
+#line 48739 "gram.c"
     break;
 
   case 2147: /* xmlexists_argument: PASSING xml_passing_mech c_expr  */
@@ -48783,7 +48743,7 @@
                                 {
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 48787 "gram.c"
+#line 48747 "gram.c"
     break;
 
   case 2148: /* xmlexists_argument: PASSING xml_passing_mech c_expr xml_passing_mech  */
@@ -48791,55 +48751,55 @@
                                 {
 					(yyval.node) = (yyvsp[-1].node);
 				}
-#line 48795 "gram.c"
+#line 48755 "gram.c"
     break;
 
   case 2151: /* within_group_clause: WITHIN GROUP_P '(' sort_clause ')'  */
 #line 15718 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 48801 "gram.c"
+#line 48761 "gram.c"
     break;
 
   case 2152: /* within_group_clause: %empty  */
 #line 15719 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 48807 "gram.c"
+#line 48767 "gram.c"
     break;
 
   case 2153: /* filter_clause: FILTER '(' WHERE a_expr ')'  */
 #line 15723 "gram.y"
                                                                                 { (yyval.node) = (yyvsp[-1].node); }
-#line 48813 "gram.c"
+#line 48773 "gram.c"
     break;
 
   case 2154: /* filter_clause: %empty  */
 #line 15724 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 48819 "gram.c"
+#line 48779 "gram.c"
     break;
 
   case 2155: /* window_clause: WINDOW window_definition_list  */
 #line 15732 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 48825 "gram.c"
+#line 48785 "gram.c"
     break;
 
   case 2156: /* window_clause: %empty  */
 #line 15733 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 48831 "gram.c"
+#line 48791 "gram.c"
     break;
 
   case 2157: /* window_definition_list: window_definition  */
 #line 15737 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].windef)); }
-#line 48837 "gram.c"
+#line 48797 "gram.c"
     break;
 
   case 2158: /* window_definition_list: window_definition_list ',' window_definition  */
 #line 15739 "gram.y"
                                                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].windef)); }
-#line 48843 "gram.c"
+#line 48803 "gram.c"
     break;
 
   case 2159: /* window_definition: ColId AS window_specification  */
@@ -48850,13 +48810,13 @@
 					n->name = (yyvsp[-2].str);
 					(yyval.windef) = n;
 				}
-#line 48854 "gram.c"
+#line 48814 "gram.c"
     break;
 
   case 2160: /* over_clause: OVER window_specification  */
 #line 15753 "gram.y"
                                 { (yyval.windef) = (yyvsp[0].windef); }
-#line 48860 "gram.c"
+#line 48820 "gram.c"
     break;
 
   case 2161: /* over_clause: OVER ColId  */
@@ -48874,13 +48834,13 @@
 					n->location = (yylsp[0]);
 					(yyval.windef) = n;
 				}
-#line 48878 "gram.c"
+#line 48838 "gram.c"
     break;
 
   case 2162: /* over_clause: %empty  */
 #line 15769 "gram.y"
                                 { (yyval.windef) = NULL; }
-#line 48884 "gram.c"
+#line 48844 "gram.c"
     break;
 
   case 2163: /* window_specification: '(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')'  */
@@ -48899,31 +48859,31 @@
 					n->location = (yylsp[-5]);
 					(yyval.windef) = n;
 				}
-#line 48903 "gram.c"
+#line 48863 "gram.c"
     break;
 
   case 2164: /* opt_existing_window_name: ColId  */
 #line 15800 "gram.y"
                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 48909 "gram.c"
+#line 48869 "gram.c"
     break;
 
   case 2165: /* opt_existing_window_name: %empty  */
 #line 15801 "gram.y"
                                                                                         { (yyval.str) = NULL; }
-#line 48915 "gram.c"
+#line 48875 "gram.c"
     break;
 
   case 2166: /* opt_partition_clause: PARTITION BY expr_list  */
 #line 15804 "gram.y"
                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 48921 "gram.c"
+#line 48881 "gram.c"
     break;
 
   case 2167: /* opt_partition_clause: %empty  */
 #line 15805 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 48927 "gram.c"
+#line 48887 "gram.c"
     break;
 
   case 2168: /* opt_frame_clause: RANGE frame_extent opt_window_exclusion_clause  */
@@ -48935,7 +48895,7 @@
 					n->frameOptions |= (yyvsp[0].ival);
 					(yyval.windef) = n;
 				}
-#line 48939 "gram.c"
+#line 48899 "gram.c"
     break;
 
   case 2169: /* opt_frame_clause: ROWS frame_extent opt_window_exclusion_clause  */
@@ -48947,7 +48907,7 @@
 					n->frameOptions |= (yyvsp[0].ival);
 					(yyval.windef) = n;
 				}
-#line 48951 "gram.c"
+#line 48911 "gram.c"
     break;
 
   case 2170: /* opt_frame_clause: GROUPS frame_extent opt_window_exclusion_clause  */
@@ -48959,7 +48919,7 @@
 					n->frameOptions |= (yyvsp[0].ival);
 					(yyval.windef) = n;
 				}
-#line 48963 "gram.c"
+#line 48923 "gram.c"
     break;
 
   case 2171: /* opt_frame_clause: %empty  */
@@ -48972,7 +48932,7 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 48976 "gram.c"
+#line 48936 "gram.c"
     break;
 
   case 2172: /* frame_extent: frame_bound  */
@@ -48994,7 +48954,7 @@
 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
 					(yyval.windef) = n;
 				}
-#line 48998 "gram.c"
+#line 48958 "gram.c"
     break;
 
   case 2173: /* frame_extent: BETWEEN frame_bound AND frame_bound  */
@@ -49036,7 +48996,7 @@
 					n1->endOffset = n2->startOffset;
 					(yyval.windef) = n1;
 				}
-#line 49040 "gram.c"
+#line 49000 "gram.c"
     break;
 
   case 2174: /* frame_bound: UNBOUNDED PRECEDING  */
@@ -49049,7 +49009,7 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 49053 "gram.c"
+#line 49013 "gram.c"
     break;
 
   case 2175: /* frame_bound: UNBOUNDED FOLLOWING  */
@@ -49062,7 +49022,7 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 49066 "gram.c"
+#line 49026 "gram.c"
     break;
 
   case 2176: /* frame_bound: CURRENT_P ROW  */
@@ -49075,7 +49035,7 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 49079 "gram.c"
+#line 49039 "gram.c"
     break;
 
   case 2177: /* frame_bound: a_expr PRECEDING  */
@@ -49088,7 +49048,7 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 49092 "gram.c"
+#line 49052 "gram.c"
     break;
 
   case 2178: /* frame_bound: a_expr FOLLOWING  */
@@ -49101,235 +49061,235 @@
 					n->endOffset = NULL;
 					(yyval.windef) = n;
 				}
-#line 49105 "gram.c"
+#line 49065 "gram.c"
     break;
 
   case 2179: /* opt_window_exclusion_clause: EXCLUDE CURRENT_P ROW  */
 #line 15960 "gram.y"
                                                 { (yyval.ival) = FRAMEOPTION_EXCLUDE_CURRENT_ROW; }
-#line 49111 "gram.c"
+#line 49071 "gram.c"
     break;
 
   case 2180: /* opt_window_exclusion_clause: EXCLUDE GROUP_P  */
 #line 15961 "gram.y"
                                                         { (yyval.ival) = FRAMEOPTION_EXCLUDE_GROUP; }
-#line 49117 "gram.c"
+#line 49077 "gram.c"
     break;
 
   case 2181: /* opt_window_exclusion_clause: EXCLUDE TIES  */
 #line 15962 "gram.y"
                                                         { (yyval.ival) = FRAMEOPTION_EXCLUDE_TIES; }
-#line 49123 "gram.c"
+#line 49083 "gram.c"
     break;
 
   case 2182: /* opt_window_exclusion_clause: EXCLUDE NO OTHERS  */
 #line 15963 "gram.y"
                                                         { (yyval.ival) = 0; }
-#line 49129 "gram.c"
+#line 49089 "gram.c"
     break;
 
   case 2183: /* opt_window_exclusion_clause: %empty  */
 #line 15964 "gram.y"
                                                                 { (yyval.ival) = 0; }
-#line 49135 "gram.c"
+#line 49095 "gram.c"
     break;
 
   case 2184: /* row: ROW '(' expr_list ')'  */
 #line 15978 "gram.y"
                                                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 49141 "gram.c"
+#line 49101 "gram.c"
     break;
 
   case 2185: /* row: ROW '(' ')'  */
 #line 15979 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 49147 "gram.c"
+#line 49107 "gram.c"
     break;
 
   case 2186: /* row: '(' expr_list ',' a_expr ')'  */
 #line 15980 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-3].list), (yyvsp[-1].node)); }
-#line 49153 "gram.c"
+#line 49113 "gram.c"
     break;
 
   case 2187: /* explicit_row: ROW '(' expr_list ')'  */
 #line 15983 "gram.y"
                                                                 { (yyval.list) = (yyvsp[-1].list); }
-#line 49159 "gram.c"
+#line 49119 "gram.c"
     break;
 
   case 2188: /* explicit_row: ROW '(' ')'  */
 #line 15984 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 49165 "gram.c"
+#line 49125 "gram.c"
     break;
 
   case 2189: /* implicit_row: '(' expr_list ',' a_expr ')'  */
 #line 15987 "gram.y"
                                                         { (yyval.list) = lappend((yyvsp[-3].list), (yyvsp[-1].node)); }
-#line 49171 "gram.c"
+#line 49131 "gram.c"
     break;
 
   case 2190: /* sub_type: ANY  */
 #line 15990 "gram.y"
                                                                                                 { (yyval.ival) = ANY_SUBLINK; }
-#line 49177 "gram.c"
+#line 49137 "gram.c"
     break;
 
   case 2191: /* sub_type: SOME  */
 #line 15991 "gram.y"
                                                                                                 { (yyval.ival) = ANY_SUBLINK; }
-#line 49183 "gram.c"
+#line 49143 "gram.c"
     break;
 
   case 2192: /* sub_type: ALL  */
 #line 15992 "gram.y"
                                                                                                 { (yyval.ival) = ALL_SUBLINK; }
-#line 49189 "gram.c"
+#line 49149 "gram.c"
     break;
 
   case 2193: /* all_Op: Op  */
 #line 15995 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 49195 "gram.c"
+#line 49155 "gram.c"
     break;
 
   case 2194: /* all_Op: MathOp  */
 #line 15996 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 49201 "gram.c"
+#line 49161 "gram.c"
     break;
 
   case 2195: /* MathOp: '+'  */
 #line 15999 "gram.y"
                                                                                         { (yyval.str) = "+"; }
-#line 49207 "gram.c"
+#line 49167 "gram.c"
     break;
 
   case 2196: /* MathOp: '-'  */
 #line 16000 "gram.y"
                                                                                                 { (yyval.str) = "-"; }
-#line 49213 "gram.c"
+#line 49173 "gram.c"
     break;
 
   case 2197: /* MathOp: '*'  */
 #line 16001 "gram.y"
                                                                                                 { (yyval.str) = "*"; }
-#line 49219 "gram.c"
+#line 49179 "gram.c"
     break;
 
   case 2198: /* MathOp: '/'  */
 #line 16002 "gram.y"
                                                                                                 { (yyval.str) = "/"; }
-#line 49225 "gram.c"
+#line 49185 "gram.c"
     break;
 
   case 2199: /* MathOp: '%'  */
 #line 16003 "gram.y"
                                                                                                 { (yyval.str) = "%"; }
-#line 49231 "gram.c"
+#line 49191 "gram.c"
     break;
 
   case 2200: /* MathOp: '^'  */
 #line 16004 "gram.y"
                                                                                                 { (yyval.str) = "^"; }
-#line 49237 "gram.c"
+#line 49197 "gram.c"
     break;
 
   case 2201: /* MathOp: '<'  */
 #line 16005 "gram.y"
                                                                                                 { (yyval.str) = "<"; }
-#line 49243 "gram.c"
+#line 49203 "gram.c"
     break;
 
   case 2202: /* MathOp: '>'  */
 #line 16006 "gram.y"
                                                                                                 { (yyval.str) = ">"; }
-#line 49249 "gram.c"
+#line 49209 "gram.c"
     break;
 
   case 2203: /* MathOp: '='  */
 #line 16007 "gram.y"
                                                                                                 { (yyval.str) = "="; }
-#line 49255 "gram.c"
+#line 49215 "gram.c"
     break;
 
   case 2204: /* MathOp: LESS_EQUALS  */
 #line 16008 "gram.y"
                                                                                         { (yyval.str) = "<="; }
-#line 49261 "gram.c"
+#line 49221 "gram.c"
     break;
 
   case 2205: /* MathOp: GREATER_EQUALS  */
 #line 16009 "gram.y"
                                                                                         { (yyval.str) = ">="; }
-#line 49267 "gram.c"
+#line 49227 "gram.c"
     break;
 
   case 2206: /* MathOp: NOT_EQUALS  */
 #line 16010 "gram.y"
                                                                                         { (yyval.str) = "<>"; }
-#line 49273 "gram.c"
+#line 49233 "gram.c"
     break;
 
   case 2207: /* qual_Op: Op  */
 #line 16014 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 49279 "gram.c"
+#line 49239 "gram.c"
     break;
 
   case 2208: /* qual_Op: OPERATOR '(' any_operator ')'  */
 #line 16016 "gram.y"
                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 49285 "gram.c"
+#line 49245 "gram.c"
     break;
 
   case 2209: /* qual_all_Op: all_Op  */
 #line 16021 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 49291 "gram.c"
+#line 49251 "gram.c"
     break;
 
   case 2210: /* qual_all_Op: OPERATOR '(' any_operator ')'  */
 #line 16023 "gram.y"
                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 49297 "gram.c"
+#line 49257 "gram.c"
     break;
 
   case 2211: /* subquery_Op: all_Op  */
 #line 16028 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 49303 "gram.c"
+#line 49263 "gram.c"
     break;
 
   case 2212: /* subquery_Op: OPERATOR '(' any_operator ')'  */
 #line 16030 "gram.y"
                                         { (yyval.list) = (yyvsp[-1].list); }
-#line 49309 "gram.c"
+#line 49269 "gram.c"
     break;
 
   case 2213: /* subquery_Op: LIKE  */
 #line 16032 "gram.y"
                                         { (yyval.list) = list_make1(makeString("~~")); }
-#line 49315 "gram.c"
+#line 49275 "gram.c"
     break;
 
   case 2214: /* subquery_Op: NOT_LA LIKE  */
 #line 16034 "gram.y"
                                         { (yyval.list) = list_make1(makeString("!~~")); }
-#line 49321 "gram.c"
+#line 49281 "gram.c"
     break;
 
   case 2215: /* subquery_Op: ILIKE  */
 #line 16036 "gram.y"
                                         { (yyval.list) = list_make1(makeString("~~*")); }
-#line 49327 "gram.c"
+#line 49287 "gram.c"
     break;
 
   case 2216: /* subquery_Op: NOT_LA ILIKE  */
 #line 16038 "gram.y"
                                         { (yyval.list) = list_make1(makeString("!~~*")); }
-#line 49333 "gram.c"
+#line 49293 "gram.c"
     break;
 
   case 2217: /* expr_list: a_expr  */
@@ -49337,7 +49297,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 49341 "gram.c"
+#line 49301 "gram.c"
     break;
 
   case 2218: /* expr_list: expr_list ',' a_expr  */
@@ -49345,7 +49305,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 49349 "gram.c"
+#line 49309 "gram.c"
     break;
 
   case 2219: /* func_arg_list: func_arg_expr  */
@@ -49353,7 +49313,7 @@
                                 {
 					(yyval.list) = list_make1((yyvsp[0].node));
 				}
-#line 49357 "gram.c"
+#line 49317 "gram.c"
     break;
 
   case 2220: /* func_arg_list: func_arg_list ',' func_arg_expr  */
@@ -49361,7 +49321,7 @@
                                 {
 					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
 				}
-#line 49365 "gram.c"
+#line 49325 "gram.c"
     break;
 
   case 2221: /* func_arg_expr: a_expr  */
@@ -49369,7 +49329,7 @@
                                 {
 					(yyval.node) = (yyvsp[0].node);
 				}
-#line 49373 "gram.c"
+#line 49333 "gram.c"
     break;
 
   case 2222: /* func_arg_expr: param_name COLON_EQUALS a_expr  */
@@ -49383,7 +49343,7 @@
 					na->location = (yylsp[-2]);
 					(yyval.node) = (Node *) na;
 				}
-#line 49387 "gram.c"
+#line 49347 "gram.c"
     break;
 
   case 2223: /* func_arg_expr: param_name EQUALS_GREATER a_expr  */
@@ -49397,31 +49357,31 @@
 					na->location = (yylsp[-2]);
 					(yyval.node) = (Node *) na;
 				}
-#line 49401 "gram.c"
+#line 49361 "gram.c"
     break;
 
   case 2224: /* func_arg_list_opt: func_arg_list  */
 #line 16096 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 49407 "gram.c"
+#line 49367 "gram.c"
     break;
 
   case 2225: /* func_arg_list_opt: %empty  */
 #line 16097 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 49413 "gram.c"
+#line 49373 "gram.c"
     break;
 
   case 2226: /* type_list: Typename  */
 #line 16100 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].typnam)); }
-#line 49419 "gram.c"
+#line 49379 "gram.c"
     break;
 
   case 2227: /* type_list: type_list ',' Typename  */
 #line 16101 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
-#line 49425 "gram.c"
+#line 49385 "gram.c"
     break;
 
   case 2228: /* array_expr: '[' expr_list ']'  */
@@ -49429,7 +49389,7 @@
                                 {
 					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
 				}
-#line 49433 "gram.c"
+#line 49393 "gram.c"
     break;
 
   case 2229: /* array_expr: '[' array_expr_list ']'  */
@@ -49437,7 +49397,7 @@
                                 {
 					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
 				}
-#line 49441 "gram.c"
+#line 49401 "gram.c"
     break;
 
   case 2230: /* array_expr: '[' ']'  */
@@ -49445,19 +49405,19 @@
                                 {
 					(yyval.node) = makeAArrayExpr(NIL, (yylsp[-1]));
 				}
-#line 49449 "gram.c"
+#line 49409 "gram.c"
     break;
 
   case 2231: /* array_expr_list: array_expr  */
 #line 16118 "gram.y"
                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 49455 "gram.c"
+#line 49415 "gram.c"
     break;
 
   case 2232: /* array_expr_list: array_expr_list ',' array_expr  */
 #line 16119 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 49461 "gram.c"
+#line 49421 "gram.c"
     break;
 
   case 2233: /* extract_list: extract_arg FROM a_expr  */
@@ -49465,79 +49425,79 @@
                                 {
 					(yyval.list) = list_make2(makeStringConst((yyvsp[-2].str), (yylsp[-2])), (yyvsp[0].node));
 				}
-#line 49469 "gram.c"
+#line 49429 "gram.c"
     break;
 
   case 2234: /* extract_arg: IDENT  */
 #line 16134 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 49475 "gram.c"
+#line 49435 "gram.c"
     break;
 
   case 2235: /* extract_arg: YEAR_P  */
 #line 16135 "gram.y"
                                                                                                 { (yyval.str) = "year"; }
-#line 49481 "gram.c"
+#line 49441 "gram.c"
     break;
 
   case 2236: /* extract_arg: MONTH_P  */
 #line 16136 "gram.y"
                                                                                                 { (yyval.str) = "month"; }
-#line 49487 "gram.c"
+#line 49447 "gram.c"
     break;
 
   case 2237: /* extract_arg: DAY_P  */
 #line 16137 "gram.y"
                                                                                                 { (yyval.str) = "day"; }
-#line 49493 "gram.c"
+#line 49453 "gram.c"
     break;
 
   case 2238: /* extract_arg: HOUR_P  */
 #line 16138 "gram.y"
                                                                                                 { (yyval.str) = "hour"; }
-#line 49499 "gram.c"
+#line 49459 "gram.c"
     break;
 
   case 2239: /* extract_arg: MINUTE_P  */
 #line 16139 "gram.y"
                                                                                                 { (yyval.str) = "minute"; }
-#line 49505 "gram.c"
+#line 49465 "gram.c"
     break;
 
   case 2240: /* extract_arg: SECOND_P  */
 #line 16140 "gram.y"
                                                                                                 { (yyval.str) = "second"; }
-#line 49511 "gram.c"
+#line 49471 "gram.c"
     break;
 
   case 2241: /* extract_arg: Sconst  */
 #line 16141 "gram.y"
                                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 49517 "gram.c"
+#line 49477 "gram.c"
     break;
 
   case 2242: /* unicode_normal_form: NFC  */
 #line 16145 "gram.y"
                                                                                                         { (yyval.str) = "NFC"; }
-#line 49523 "gram.c"
+#line 49483 "gram.c"
     break;
 
   case 2243: /* unicode_normal_form: NFD  */
 #line 16146 "gram.y"
                                                                                                 { (yyval.str) = "NFD"; }
-#line 49529 "gram.c"
+#line 49489 "gram.c"
     break;
 
   case 2244: /* unicode_normal_form: NFKC  */
 #line 16147 "gram.y"
                                                                                                 { (yyval.str) = "NFKC"; }
-#line 49535 "gram.c"
+#line 49495 "gram.c"
     break;
 
   case 2245: /* unicode_normal_form: NFKD  */
 #line 16148 "gram.y"
                                                                                                 { (yyval.str) = "NFKD"; }
-#line 49541 "gram.c"
+#line 49501 "gram.c"
     break;
 
   case 2246: /* overlay_list: a_expr PLACING a_expr FROM a_expr FOR a_expr  */
@@ -49546,7 +49506,7 @@
 					/* overlay(A PLACING B FROM C FOR D) is converted to overlay(A, B, C, D) */
 					(yyval.list) = list_make4((yyvsp[-6].node), (yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node));
 				}
-#line 49550 "gram.c"
+#line 49510 "gram.c"
     break;
 
   case 2247: /* overlay_list: a_expr PLACING a_expr FROM a_expr  */
@@ -49555,13 +49515,13 @@
 					/* overlay(A PLACING B FROM C) is converted to overlay(A, B, C) */
 					(yyval.list) = list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node));
 				}
-#line 49559 "gram.c"
+#line 49519 "gram.c"
     break;
 
   case 2248: /* position_list: b_expr IN_P b_expr  */
 #line 16167 "gram.y"
                                                                                         { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-2].node)); }
-#line 49565 "gram.c"
+#line 49525 "gram.c"
     break;
 
   case 2249: /* substr_list: a_expr FROM a_expr FOR a_expr  */
@@ -49569,7 +49529,7 @@
                                 {
 					(yyval.list) = list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node));
 				}
-#line 49573 "gram.c"
+#line 49533 "gram.c"
     break;
 
   case 2250: /* substr_list: a_expr FOR a_expr FROM a_expr  */
@@ -49578,7 +49538,7 @@
 					/* not legal per SQL, but might as well allow it */
 					(yyval.list) = list_make3((yyvsp[-4].node), (yyvsp[0].node), (yyvsp[-2].node));
 				}
-#line 49582 "gram.c"
+#line 49542 "gram.c"
     break;
 
   case 2251: /* substr_list: a_expr FROM a_expr  */
@@ -49593,7 +49553,7 @@
 					 */
 					(yyval.list) = list_make2((yyvsp[-2].node), (yyvsp[0].node));
 				}
-#line 49597 "gram.c"
+#line 49557 "gram.c"
     break;
 
   case 2252: /* substr_list: a_expr FOR a_expr  */
@@ -49614,7 +49574,7 @@
 									makeTypeCast((yyvsp[0].node),
 												 SystemTypeName("int4"), -1));
 				}
-#line 49618 "gram.c"
+#line 49578 "gram.c"
     break;
 
   case 2253: /* substr_list: a_expr SIMILAR a_expr ESCAPE a_expr  */
@@ -49622,25 +49582,25 @@
                                 {
 					(yyval.list) = list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node));
 				}
-#line 49626 "gram.c"
+#line 49586 "gram.c"
     break;
 
   case 2254: /* trim_list: a_expr FROM expr_list  */
 #line 16231 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[0].list), (yyvsp[-2].node)); }
-#line 49632 "gram.c"
+#line 49592 "gram.c"
     break;
 
   case 2255: /* trim_list: FROM expr_list  */
 #line 16232 "gram.y"
                                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 49638 "gram.c"
+#line 49598 "gram.c"
     break;
 
   case 2256: /* trim_list: expr_list  */
 #line 16233 "gram.y"
                                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 49644 "gram.c"
+#line 49604 "gram.c"
     break;
 
   case 2257: /* in_expr: select_with_parens  */
@@ -49652,13 +49612,13 @@
 					/* other fields will be filled later */
 					(yyval.node) = (Node *) n;
 				}
-#line 49656 "gram.c"
+#line 49616 "gram.c"
     break;
 
   case 2258: /* in_expr: '(' expr_list ')'  */
 #line 16244 "gram.y"
                                                                                         { (yyval.node) = (Node *) (yyvsp[-1].list); }
-#line 49662 "gram.c"
+#line 49622 "gram.c"
     break;
 
   case 2259: /* case_expr: CASE case_arg when_clause_list case_default END_P  */
@@ -49673,19 +49633,19 @@
 					c->location = (yylsp[-4]);
 					(yyval.node) = (Node *) c;
 				}
-#line 49677 "gram.c"
+#line 49637 "gram.c"
     break;
 
   case 2260: /* when_clause_list: when_clause  */
 #line 16269 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 49683 "gram.c"
+#line 49643 "gram.c"
     break;
 
   case 2261: /* when_clause_list: when_clause_list when_clause  */
 #line 16270 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 49689 "gram.c"
+#line 49649 "gram.c"
     break;
 
   case 2262: /* when_clause: WHEN a_expr THEN a_expr  */
@@ -49698,31 +49658,31 @@
 					w->location = (yylsp[-3]);
 					(yyval.node) = (Node *) w;
 				}
-#line 49702 "gram.c"
+#line 49662 "gram.c"
     break;
 
   case 2263: /* case_default: ELSE a_expr  */
 #line 16286 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 49708 "gram.c"
+#line 49668 "gram.c"
     break;
 
   case 2264: /* case_default: %empty  */
 #line 16287 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 49714 "gram.c"
+#line 49674 "gram.c"
     break;
 
   case 2265: /* case_arg: a_expr  */
 #line 16290 "gram.y"
                                                                                         { (yyval.node) = (yyvsp[0].node); }
-#line 49720 "gram.c"
+#line 49680 "gram.c"
     break;
 
   case 2266: /* case_arg: %empty  */
 #line 16291 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 49726 "gram.c"
+#line 49686 "gram.c"
     break;
 
   case 2267: /* columnref: ColId  */
@@ -49730,7 +49690,7 @@
                                 {
 					(yyval.node) = makeColumnRef((yyvsp[0].str), NIL, (yylsp[0]), yyscanner);
 				}
-#line 49734 "gram.c"
+#line 49694 "gram.c"
     break;
 
   case 2268: /* columnref: ColId indirection  */
@@ -49738,7 +49698,7 @@
                                 {
 					(yyval.node) = makeColumnRef((yyvsp[-1].str), (yyvsp[0].list), (yylsp[-1]), yyscanner);
 				}
-#line 49742 "gram.c"
+#line 49702 "gram.c"
     break;
 
   case 2269: /* indirection_el: '.' attr_name  */
@@ -49746,7 +49706,7 @@
                                 {
 					(yyval.node) = (Node *) makeString((yyvsp[0].str));
 				}
-#line 49750 "gram.c"
+#line 49710 "gram.c"
     break;
 
   case 2270: /* indirection_el: '.' '*'  */
@@ -49754,7 +49714,7 @@
                                 {
 					(yyval.node) = (Node *) makeNode(A_Star);
 				}
-#line 49758 "gram.c"
+#line 49718 "gram.c"
     break;
 
   case 2271: /* indirection_el: '[' a_expr ']'  */
@@ -49767,7 +49727,7 @@
 					ai->uidx = (yyvsp[-1].node);
 					(yyval.node) = (Node *) ai;
 				}
-#line 49771 "gram.c"
+#line 49731 "gram.c"
     break;
 
   case 2272: /* indirection_el: '[' opt_slice_bound ':' opt_slice_bound ']'  */
@@ -49780,43 +49740,43 @@
 					ai->uidx = (yyvsp[-1].node);
 					(yyval.node) = (Node *) ai;
 				}
-#line 49784 "gram.c"
+#line 49744 "gram.c"
     break;
 
   case 2273: /* opt_slice_bound: a_expr  */
 #line 16334 "gram.y"
                                                                                                 { (yyval.node) = (yyvsp[0].node); }
-#line 49790 "gram.c"
+#line 49750 "gram.c"
     break;
 
   case 2274: /* opt_slice_bound: %empty  */
 #line 16335 "gram.y"
                                                                                                 { (yyval.node) = NULL; }
-#line 49796 "gram.c"
+#line 49756 "gram.c"
     break;
 
   case 2275: /* indirection: indirection_el  */
 #line 16339 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 49802 "gram.c"
+#line 49762 "gram.c"
     break;
 
   case 2276: /* indirection: indirection indirection_el  */
 #line 16340 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 49808 "gram.c"
+#line 49768 "gram.c"
     break;
 
   case 2277: /* opt_indirection: %empty  */
 #line 16344 "gram.y"
                                                                                                 { (yyval.list) = NIL; }
-#line 49814 "gram.c"
+#line 49774 "gram.c"
     break;
 
   case 2278: /* opt_indirection: opt_indirection indirection_el  */
 #line 16345 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
-#line 49820 "gram.c"
+#line 49780 "gram.c"
     break;
 
   case 2281: /* json_value_expr: a_expr json_format_clause_opt  */
@@ -49826,7 +49786,7 @@
 				(yyval.node) = (Node *) makeJsonValueExpr((Expr *) (yyvsp[-1].node), NULL,
 												castNode(JsonFormat, (yyvsp[0].node)));
 			}
-#line 49830 "gram.c"
+#line 49790 "gram.c"
     break;
 
   case 2282: /* json_format_clause_opt: FORMAT_LA JSON json_encoding_clause_opt  */
@@ -49834,7 +49794,7 @@
                                 {
 					(yyval.node) = (Node *) makeJsonFormat(JS_FORMAT_JSON, (yyvsp[0].ival), (yylsp[-2]));
 				}
-#line 49838 "gram.c"
+#line 49798 "gram.c"
     break;
 
   case 2283: /* json_format_clause_opt: %empty  */
@@ -49842,19 +49802,19 @@
                                 {
 					(yyval.node) = (Node *) makeJsonFormat(JS_FORMAT_DEFAULT, JS_ENC_DEFAULT, -1);
 				}
-#line 49846 "gram.c"
+#line 49806 "gram.c"
     break;
 
   case 2284: /* json_encoding_clause_opt: ENCODING name  */
 #line 16374 "gram.y"
                                                                         { (yyval.ival) = makeJsonEncoding((yyvsp[0].str)); }
-#line 49852 "gram.c"
+#line 49812 "gram.c"
     break;
 
   case 2285: /* json_encoding_clause_opt: %empty  */
 #line 16375 "gram.y"
                                                                         { (yyval.ival) = JS_ENC_DEFAULT; }
-#line 49858 "gram.c"
+#line 49818 "gram.c"
     break;
 
   case 2286: /* json_output_clause_opt: RETURNING Typename json_format_clause_opt  */
@@ -49867,145 +49827,145 @@
 					n->returning->format = (JsonFormat *) (yyvsp[0].node);
 					(yyval.node) = (Node *) n;
 				}
-#line 49871 "gram.c"
+#line 49831 "gram.c"
     break;
 
   case 2287: /* json_output_clause_opt: %empty  */
 #line 16388 "gram.y"
                                                                                         { (yyval.node) = NULL; }
-#line 49877 "gram.c"
+#line 49837 "gram.c"
     break;
 
   case 2288: /* json_predicate_type_constraint: JSON  */
 #line 16392 "gram.y"
                                                                                                 { (yyval.ival) = JS_TYPE_ANY; }
-#line 49883 "gram.c"
+#line 49843 "gram.c"
     break;
 
   case 2289: /* json_predicate_type_constraint: JSON VALUE_P  */
 #line 16393 "gram.y"
                                                                                         { (yyval.ival) = JS_TYPE_ANY; }
-#line 49889 "gram.c"
+#line 49849 "gram.c"
     break;
 
   case 2290: /* json_predicate_type_constraint: JSON ARRAY  */
 #line 16394 "gram.y"
                                                                                         { (yyval.ival) = JS_TYPE_ARRAY; }
-#line 49895 "gram.c"
+#line 49855 "gram.c"
     break;
 
   case 2291: /* json_predicate_type_constraint: JSON OBJECT_P  */
 #line 16395 "gram.y"
                                                                                         { (yyval.ival) = JS_TYPE_OBJECT; }
-#line 49901 "gram.c"
+#line 49861 "gram.c"
     break;
 
   case 2292: /* json_predicate_type_constraint: JSON SCALAR  */
 #line 16396 "gram.y"
                                                                                         { (yyval.ival) = JS_TYPE_SCALAR; }
-#line 49907 "gram.c"
+#line 49867 "gram.c"
     break;
 
   case 2293: /* json_key_uniqueness_constraint_opt: WITH UNIQUE KEYS  */
 #line 16401 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 49913 "gram.c"
+#line 49873 "gram.c"
     break;
 
   case 2294: /* json_key_uniqueness_constraint_opt: WITH UNIQUE  */
 #line 16402 "gram.y"
                                                                                                 { (yyval.boolean) = true; }
-#line 49919 "gram.c"
+#line 49879 "gram.c"
     break;
 
   case 2295: /* json_key_uniqueness_constraint_opt: WITHOUT UNIQUE KEYS  */
 #line 16403 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 49925 "gram.c"
+#line 49885 "gram.c"
     break;
 
   case 2296: /* json_key_uniqueness_constraint_opt: WITHOUT UNIQUE  */
 #line 16404 "gram.y"
                                                                                                 { (yyval.boolean) = false; }
-#line 49931 "gram.c"
+#line 49891 "gram.c"
     break;
 
   case 2297: /* json_key_uniqueness_constraint_opt: %empty  */
 #line 16405 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 49937 "gram.c"
+#line 49897 "gram.c"
     break;
 
   case 2298: /* json_name_and_value_list: json_name_and_value  */
 #line 16410 "gram.y"
                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 49943 "gram.c"
+#line 49903 "gram.c"
     break;
 
   case 2299: /* json_name_and_value_list: json_name_and_value_list ',' json_name_and_value  */
 #line 16412 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
-#line 49949 "gram.c"
+#line 49909 "gram.c"
     break;
 
   case 2300: /* json_name_and_value: c_expr VALUE_P json_value_expr  */
 #line 16422 "gram.y"
                                 { (yyval.node) = makeJsonKeyValue((yyvsp[-2].node), (yyvsp[0].node)); }
-#line 49955 "gram.c"
+#line 49915 "gram.c"
     break;
 
   case 2301: /* json_name_and_value: a_expr ':' json_value_expr  */
 #line 16425 "gram.y"
                                 { (yyval.node) = makeJsonKeyValue((yyvsp[-2].node), (yyvsp[0].node)); }
-#line 49961 "gram.c"
+#line 49921 "gram.c"
     break;
 
   case 2302: /* json_object_constructor_null_clause_opt: NULL_P ON NULL_P  */
 #line 16430 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 49967 "gram.c"
+#line 49927 "gram.c"
     break;
 
   case 2303: /* json_object_constructor_null_clause_opt: ABSENT ON NULL_P  */
 #line 16431 "gram.y"
                                                                                 { (yyval.boolean) = true; }
-#line 49973 "gram.c"
+#line 49933 "gram.c"
     break;
 
   case 2304: /* json_object_constructor_null_clause_opt: %empty  */
 #line 16432 "gram.y"
                                                                                 { (yyval.boolean) = false; }
-#line 49979 "gram.c"
+#line 49939 "gram.c"
     break;
 
   case 2305: /* json_array_constructor_null_clause_opt: NULL_P ON NULL_P  */
 #line 16436 "gram.y"
                                                                                         { (yyval.boolean) = false; }
-#line 49985 "gram.c"
+#line 49945 "gram.c"
     break;
 
   case 2306: /* json_array_constructor_null_clause_opt: ABSENT ON NULL_P  */
 #line 16437 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 49991 "gram.c"
+#line 49951 "gram.c"
     break;
 
   case 2307: /* json_array_constructor_null_clause_opt: %empty  */
 #line 16438 "gram.y"
                                                                                         { (yyval.boolean) = true; }
-#line 49997 "gram.c"
+#line 49957 "gram.c"
     break;
 
   case 2308: /* json_value_expr_list: json_value_expr  */
 #line 16442 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].node)); }
-#line 50003 "gram.c"
+#line 49963 "gram.c"
     break;
 
   case 2309: /* json_value_expr_list: json_value_expr_list ',' json_value_expr  */
 #line 16443 "gram.y"
                                                                         { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));}
-#line 50009 "gram.c"
+#line 49969 "gram.c"
     break;
 
   case 2310: /* json_aggregate_func: JSON_OBJECTAGG '(' json_name_and_value json_object_constructor_null_clause_opt json_key_uniqueness_constraint_opt json_output_clause_opt ')'  */
@@ -50022,7 +49982,7 @@
 					n->constructor->location = (yylsp[-6]);
 					(yyval.node) = (Node *) n;
 				}
-#line 50026 "gram.c"
+#line 49986 "gram.c"
     break;
 
   case 2311: /* json_aggregate_func: JSON_ARRAYAGG '(' json_value_expr json_array_aggregate_order_by_clause_opt json_array_constructor_null_clause_opt json_output_clause_opt ')'  */
@@ -50038,43 +49998,43 @@
 					n->constructor->location = (yylsp[-6]);
 					(yyval.node) = (Node *) n;
 				}
-#line 50042 "gram.c"
+#line 50002 "gram.c"
     break;
 
   case 2312: /* json_array_aggregate_order_by_clause_opt: ORDER BY sortby_list  */
 #line 16485 "gram.y"
                                                                                 { (yyval.list) = (yyvsp[0].list); }
-#line 50048 "gram.c"
+#line 50008 "gram.c"
     break;
 
   case 2313: /* json_array_aggregate_order_by_clause_opt: %empty  */
 #line 16486 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 50054 "gram.c"
+#line 50014 "gram.c"
     break;
 
   case 2314: /* opt_target_list: target_list  */
 #line 16495 "gram.y"
                                                                         { (yyval.list) = (yyvsp[0].list); }
-#line 50060 "gram.c"
+#line 50020 "gram.c"
     break;
 
   case 2315: /* opt_target_list: %empty  */
 #line 16496 "gram.y"
                                                                                         { (yyval.list) = NIL; }
-#line 50066 "gram.c"
+#line 50026 "gram.c"
     break;
 
   case 2316: /* target_list: target_el  */
 #line 16500 "gram.y"
                                                                                                 { (yyval.list) = list_make1((yyvsp[0].target)); }
-#line 50072 "gram.c"
+#line 50032 "gram.c"
     break;
 
   case 2317: /* target_list: target_list ',' target_el  */
 #line 16501 "gram.y"
                                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
-#line 50078 "gram.c"
+#line 50038 "gram.c"
     break;
 
   case 2318: /* target_el: a_expr AS ColLabel  */
@@ -50086,7 +50046,7 @@
 					(yyval.target)->val = (Node *) (yyvsp[-2].node);
 					(yyval.target)->location = (yylsp[-2]);
 				}
-#line 50090 "gram.c"
+#line 50050 "gram.c"
     break;
 
   case 2319: /* target_el: a_expr BareColLabel  */
@@ -50098,7 +50058,7 @@
 					(yyval.target)->val = (Node *) (yyvsp[-1].node);
 					(yyval.target)->location = (yylsp[-1]);
 				}
-#line 50102 "gram.c"
+#line 50062 "gram.c"
     break;
 
   case 2320: /* target_el: a_expr  */
@@ -50110,7 +50070,7 @@
 					(yyval.target)->val = (Node *) (yyvsp[0].node);
 					(yyval.target)->location = (yylsp[0]);
 				}
-#line 50114 "gram.c"
+#line 50074 "gram.c"
     break;
 
   case 2321: /* target_el: '*'  */
@@ -50127,19 +50087,19 @@
 					(yyval.target)->val = (Node *) n;
 					(yyval.target)->location = (yylsp[0]);
 				}
-#line 50131 "gram.c"
+#line 50091 "gram.c"
     break;
 
   case 2322: /* qualified_name_list: qualified_name  */
 #line 16551 "gram.y"
                                                                                         { (yyval.list) = list_make1((yyvsp[0].range)); }
-#line 50137 "gram.c"
+#line 50097 "gram.c"
     break;
 
   case 2323: /* qualified_name_list: qualified_name_list ',' qualified_name  */
 #line 16552 "gram.y"
                                                                  { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
-#line 50143 "gram.c"
+#line 50103 "gram.c"
     break;
 
   case 2324: /* qualified_name: ColId  */
@@ -50147,7 +50107,7 @@
                                 {
 					(yyval.range) = makeRangeVar(NULL, (yyvsp[0].str), (yylsp[0]));
 				}
-#line 50151 "gram.c"
+#line 50111 "gram.c"
     break;
 
   case 2325: /* qualified_name: ColId indirection  */
@@ -50155,43 +50115,43 @@
                                 {
 					(yyval.range) = makeRangeVarFromQualifiedName((yyvsp[-1].str), (yyvsp[0].list), (yylsp[-1]), yyscanner);
 				}
-#line 50159 "gram.c"
+#line 50119 "gram.c"
     break;
 
   case 2326: /* name_list: name  */
 #line 16574 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 50165 "gram.c"
+#line 50125 "gram.c"
     break;
 
   case 2327: /* name_list: name_list ',' name  */
 #line 16576 "gram.y"
                                         { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
-#line 50171 "gram.c"
+#line 50131 "gram.c"
     break;
 
   case 2328: /* name: ColId  */
 #line 16580 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50177 "gram.c"
+#line 50137 "gram.c"
     break;
 
   case 2329: /* attr_name: ColLabel  */
 #line 16582 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50183 "gram.c"
+#line 50143 "gram.c"
     break;
 
   case 2330: /* file_name: Sconst  */
 #line 16584 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50189 "gram.c"
+#line 50149 "gram.c"
     break;
 
   case 2331: /* func_name: type_function_name  */
 #line 16595 "gram.y"
                                         { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
-#line 50195 "gram.c"
+#line 50155 "gram.c"
     break;
 
   case 2332: /* func_name: ColId indirection  */
@@ -50200,7 +50160,7 @@
 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)),
 											 yyscanner);
 					}
-#line 50204 "gram.c"
+#line 50164 "gram.c"
     break;
 
   case 2333: /* AexprConst: Iconst  */
@@ -50208,7 +50168,7 @@
                                 {
 					(yyval.node) = makeIntConst((yyvsp[0].ival), (yylsp[0]));
 				}
-#line 50212 "gram.c"
+#line 50172 "gram.c"
     break;
 
   case 2334: /* AexprConst: FCONST  */
@@ -50216,7 +50176,7 @@
                                 {
 					(yyval.node) = makeFloatConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 50220 "gram.c"
+#line 50180 "gram.c"
     break;
 
   case 2335: /* AexprConst: Sconst  */
@@ -50224,7 +50184,7 @@
                                 {
 					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 50228 "gram.c"
+#line 50188 "gram.c"
     break;
 
   case 2336: /* AexprConst: BCONST  */
@@ -50232,7 +50192,7 @@
                                 {
 					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 50236 "gram.c"
+#line 50196 "gram.c"
     break;
 
   case 2337: /* AexprConst: XCONST  */
@@ -50245,7 +50205,7 @@
 					 */
 					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
 				}
-#line 50249 "gram.c"
+#line 50209 "gram.c"
     break;
 
   case 2338: /* AexprConst: func_name Sconst  */
@@ -50257,7 +50217,7 @@
 					t->location = (yylsp[-1]);
 					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
 				}
-#line 50261 "gram.c"
+#line 50221 "gram.c"
     break;
 
   case 2339: /* AexprConst: func_name '(' func_arg_list opt_sort_clause ')' Sconst  */
@@ -50293,7 +50253,7 @@
 					t->location = (yylsp[-5]);
 					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
 				}
-#line 50297 "gram.c"
+#line 50257 "gram.c"
     break;
 
   case 2340: /* AexprConst: ConstTypename Sconst  */
@@ -50301,7 +50261,7 @@
                                 {
 					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), (yyvsp[-1].typnam));
 				}
-#line 50305 "gram.c"
+#line 50265 "gram.c"
     break;
 
   case 2341: /* AexprConst: ConstInterval Sconst opt_interval  */
@@ -50312,7 +50272,7 @@
 					t->typmods = (yyvsp[0].list);
 					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
 				}
-#line 50316 "gram.c"
+#line 50276 "gram.c"
     break;
 
   case 2342: /* AexprConst: ConstInterval '(' Iconst ')' Sconst  */
@@ -50324,7 +50284,7 @@
 											makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
 					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
 				}
-#line 50328 "gram.c"
+#line 50288 "gram.c"
     break;
 
   case 2343: /* AexprConst: TRUE_P  */
@@ -50332,7 +50292,7 @@
                                 {
 					(yyval.node) = makeBoolAConst(true, (yylsp[0]));
 				}
-#line 50336 "gram.c"
+#line 50296 "gram.c"
     break;
 
   case 2344: /* AexprConst: FALSE_P  */
@@ -50340,7 +50300,7 @@
                                 {
 					(yyval.node) = makeBoolAConst(false, (yylsp[0]));
 				}
-#line 50344 "gram.c"
+#line 50304 "gram.c"
     break;
 
   case 2345: /* AexprConst: NULL_P  */
@@ -50348,37 +50308,37 @@
                                 {
 					(yyval.node) = makeNullAConst((yylsp[0]));
 				}
-#line 50352 "gram.c"
+#line 50312 "gram.c"
     break;
 
   case 2346: /* Iconst: ICONST  */
 #line 16705 "gram.y"
                                                                                         { (yyval.ival) = (yyvsp[0].ival); }
-#line 50358 "gram.c"
+#line 50318 "gram.c"
     break;
 
   case 2347: /* Sconst: SCONST  */
 #line 16706 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50364 "gram.c"
+#line 50324 "gram.c"
     break;
 
   case 2348: /* SignedIconst: Iconst  */
 #line 16708 "gram.y"
                                                                                 { (yyval.ival) = (yyvsp[0].ival); }
-#line 50370 "gram.c"
+#line 50330 "gram.c"
     break;
 
   case 2349: /* SignedIconst: '+' Iconst  */
 #line 16709 "gram.y"
                                                                                         { (yyval.ival) = + (yyvsp[0].ival); }
-#line 50376 "gram.c"
+#line 50336 "gram.c"
     break;
 
   case 2350: /* SignedIconst: '-' Iconst  */
 #line 16710 "gram.y"
                                                                                         { (yyval.ival) = - (yyvsp[0].ival); }
-#line 50382 "gram.c"
+#line 50342 "gram.c"
     break;
 
   case 2351: /* RoleId: RoleSpec  */
@@ -50421,7 +50381,7 @@
 							break;
 					}
 				}
-#line 50425 "gram.c"
+#line 50385 "gram.c"
     break;
 
   case 2352: /* RoleSpec: NonReservedWord  */
@@ -50453,7 +50413,7 @@
 					}
 					(yyval.rolespec) = n;
 				}
-#line 50457 "gram.c"
+#line 50417 "gram.c"
     break;
 
   case 2353: /* RoleSpec: CURRENT_ROLE  */
@@ -50461,7 +50421,7 @@
                                 {
 					(yyval.rolespec) = makeRoleSpec(ROLESPEC_CURRENT_ROLE, (yylsp[0]));
 				}
-#line 50465 "gram.c"
+#line 50425 "gram.c"
     break;
 
   case 2354: /* RoleSpec: CURRENT_USER  */
@@ -50469,7 +50429,7 @@
                                 {
 					(yyval.rolespec) = makeRoleSpec(ROLESPEC_CURRENT_USER, (yylsp[0]));
 				}
-#line 50473 "gram.c"
+#line 50433 "gram.c"
     break;
 
   case 2355: /* RoleSpec: SESSION_USER  */
@@ -50477,19 +50437,19 @@
                                 {
 					(yyval.rolespec) = makeRoleSpec(ROLESPEC_SESSION_USER, (yylsp[0]));
 				}
-#line 50481 "gram.c"
+#line 50441 "gram.c"
     break;
 
   case 2356: /* role_list: RoleSpec  */
 #line 16798 "gram.y"
                                 { (yyval.list) = list_make1((yyvsp[0].rolespec)); }
-#line 50487 "gram.c"
+#line 50447 "gram.c"
     break;
 
   case 2357: /* role_list: role_list ',' RoleSpec  */
 #line 16800 "gram.y"
                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].rolespec)); }
-#line 50493 "gram.c"
+#line 50453 "gram.c"
     break;
 
   case 2358: /* PLpgSQL_Expr: opt_distinct_clause opt_target_list from_clause where_clause group_clause having_clause window_clause opt_sort_clause opt_select_limit opt_for_locking_clause  */
@@ -50520,7 +50480,7 @@
 					n->lockingClause = (yyvsp[0].list);
 					(yyval.node) = (Node *) n;
 				}
-#line 50524 "gram.c"
+#line 50484 "gram.c"
     break;
 
   case 2359: /* PLAssignStmt: plassign_target opt_indirection plassign_equals PLpgSQL_Expr  */
@@ -50535,125 +50495,125 @@
 					n->location = (yylsp[-3]);
 					(yyval.node) = (Node *) n;
 				}
-#line 50539 "gram.c"
+#line 50499 "gram.c"
     break;
 
   case 2360: /* plassign_target: ColId  */
 #line 16862 "gram.y"
                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50545 "gram.c"
+#line 50505 "gram.c"
     break;
 
   case 2361: /* plassign_target: PARAM  */
 #line 16863 "gram.y"
                                                                                         { (yyval.str) = psprintf("$%d", (yyvsp[0].ival)); }
-#line 50551 "gram.c"
+#line 50511 "gram.c"
     break;
 
   case 2364: /* ColId: IDENT  */
 #line 16884 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50557 "gram.c"
+#line 50517 "gram.c"
     break;
 
   case 2365: /* ColId: unreserved_keyword  */
 #line 16885 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50563 "gram.c"
+#line 50523 "gram.c"
     break;
 
   case 2366: /* ColId: col_name_keyword  */
 #line 16886 "gram.y"
                                                                                         { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50569 "gram.c"
+#line 50529 "gram.c"
     break;
 
   case 2367: /* type_function_name: IDENT  */
 #line 16891 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 50575 "gram.c"
+#line 50535 "gram.c"
     break;
 
   case 2368: /* type_function_name: unreserved_keyword  */
 #line 16892 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50581 "gram.c"
+#line 50541 "gram.c"
     break;
 
   case 2369: /* type_function_name: type_func_name_keyword  */
 #line 16893 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50587 "gram.c"
+#line 50547 "gram.c"
     break;
 
   case 2370: /* NonReservedWord: IDENT  */
 #line 16898 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 50593 "gram.c"
+#line 50553 "gram.c"
     break;
 
   case 2371: /* NonReservedWord: unreserved_keyword  */
 #line 16899 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50599 "gram.c"
+#line 50559 "gram.c"
     break;
 
   case 2372: /* NonReservedWord: col_name_keyword  */
 #line 16900 "gram.y"
                                                                                         { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50605 "gram.c"
+#line 50565 "gram.c"
     break;
 
   case 2373: /* NonReservedWord: type_func_name_keyword  */
 #line 16901 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50611 "gram.c"
+#line 50571 "gram.c"
     break;
 
   case 2374: /* ColLabel: IDENT  */
 #line 16907 "gram.y"
                                                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 50617 "gram.c"
+#line 50577 "gram.c"
     break;
 
   case 2375: /* ColLabel: unreserved_keyword  */
 #line 16908 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50623 "gram.c"
+#line 50583 "gram.c"
     break;
 
   case 2376: /* ColLabel: col_name_keyword  */
 #line 16909 "gram.y"
                                                                                         { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50629 "gram.c"
+#line 50589 "gram.c"
     break;
 
   case 2377: /* ColLabel: type_func_name_keyword  */
 #line 16910 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50635 "gram.c"
+#line 50595 "gram.c"
     break;
 
   case 2378: /* ColLabel: reserved_keyword  */
 #line 16911 "gram.y"
                                                                                         { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50641 "gram.c"
+#line 50601 "gram.c"
     break;
 
   case 2379: /* BareColLabel: IDENT  */
 #line 16917 "gram.y"
                                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 50647 "gram.c"
+#line 50607 "gram.c"
     break;
 
   case 2380: /* BareColLabel: bare_label_keyword  */
 #line 16918 "gram.y"
                                                                                 { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
-#line 50653 "gram.c"
+#line 50613 "gram.c"
     break;
 
 
-#line 50657 "gram.c"
+#line 50617 "gram.c"
 
       default: break;
     }
@@ -50737,6 +50697,7 @@
      label yyerrorlab therefore never appears in user code.  */
   if (0)
     YYERROR;
+  ++yynerrs;
 
   /* Do not reclaim the symbols of the rule whose action triggered
      this YYERROR.  */
@@ -50800,7 +50761,7 @@
 `-------------------------------------*/
 yyacceptlab:
   yyresult = 0;
-  goto yyreturn;
+  goto yyreturnlab;
 
 
 /*-----------------------------------.
@@ -50808,24 +50769,22 @@
 `-----------------------------------*/
 yyabortlab:
   yyresult = 1;
-  goto yyreturn;
+  goto yyreturnlab;
 
 
-#if !defined yyoverflow
-/*-------------------------------------------------.
-| yyexhaustedlab -- memory exhaustion comes here.  |
-`-------------------------------------------------*/
+/*-----------------------------------------------------------.
+| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
+`-----------------------------------------------------------*/
 yyexhaustedlab:
   yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
   yyresult = 2;
-  goto yyreturn;
-#endif
+  goto yyreturnlab;
 
 
-/*-------------------------------------------------------.
-| yyreturn -- parsing is finished, clean up and return.  |
-`-------------------------------------------------------*/
-yyreturn:
+/*----------------------------------------------------------.
+| yyreturnlab -- parsing is finished, clean up and return.  |
+`----------------------------------------------------------*/
+yyreturnlab:
   if (yychar != YYEMPTY)
     {
       /* Make sure we have latest lookahead translation.  See comments at
