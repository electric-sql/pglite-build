--- postgresql-16.2/src/interfaces/ecpg/preproc/preproc.c	2024-02-05 22:52:24.000000000 +0100
+++ postgresql-16.2-wasm/src/interfaces/ecpg/preproc/preproc.c	2024-05-06 08:21:46.035099374 +0200
@@ -1,4 +1,4 @@
-/* A Bison parser, made by GNU Bison 3.7.5.  */
+/* A Bison parser, made by GNU Bison 3.8.2.  */
 
 /* Bison implementation for Yacc-like parsers in C
 
@@ -16,7 +16,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -46,10 +46,10 @@
    USER NAME SPACE" below.  */
 
 /* Identify Bison output, and Bison version.  */
-#define YYBISON 30705
+#define YYBISON 30802
 
 /* Bison version string.  */
-#define YYBISON_VERSION "3.7.5"
+#define YYBISON_VERSION "3.8.2"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -2299,12 +2299,18 @@
 # define YY_USE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && ! defined __ICC && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
-# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                            \
+#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
+# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
+#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
+    _Pragma ("GCC diagnostic push")                                     \
+    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
+# else
+#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
     _Pragma ("GCC diagnostic push")                                     \
     _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
     _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
+# endif
 # define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
     _Pragma ("GCC diagnostic pop")
 #else
@@ -2578,7 +2584,7 @@
 };
 
 #if YYDEBUG
-  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
+/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_int16 yyrline[] =
 {
        0,  1698,  1698,  1701,  1705,  1715,  1717,  1719,  1721,  1723,
@@ -3325,74 +3331,6 @@
 }
 #endif
 
-#ifdef YYPRINT
-/* YYTOKNUM[NUM] -- (External) token number corresponding to the
-   (internal) symbol number NUM (which must be that of a token).  */
-static const yytype_int16 yytoknum[] =
-{
-       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
-     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
-     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
-     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
-     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
-     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
-     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
-     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
-     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
-     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
-     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
-     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
-     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
-     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
-     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
-     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
-     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
-     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
-     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
-     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
-     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
-     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
-     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
-     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
-     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
-     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
-     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
-     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
-     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
-     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
-     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
-     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
-     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
-     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
-     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
-     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
-     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
-     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
-     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
-     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
-     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
-     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
-     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
-     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
-     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
-     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
-     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
-     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
-     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
-     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
-     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
-     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
-     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
-     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
-     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
-     825,    60,    62,    61,    43,    45,    42,    47,    37,    94,
-     826,    91,    93,    40,    41,    46,    44,    59,    58,   123,
-     125
-};
-#endif
-
 #define YYPACT_NINF (-6179)
 
 #define yypact_value_is_default(Yyn) \
@@ -3403,8 +3341,8 @@
 #define yytable_value_is_error(Yyn) \
   ((Yyn) == YYTABLE_NINF)
 
-  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
-     STATE-NUM.  */
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
 static const int yypact[] =
 {
    -6179,   626, 15192, -6179, -6179, -6179, -6179, -6179, -6179, -6179,
@@ -4096,9 +4034,9 @@
     2984,  4692, -6179, -6179
 };
 
-  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
-     Performed when YYTABLE does not specify something else to do.  Zero
-     means the default is an error.  */
+/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
+   Performed when YYTABLE does not specify something else to do.  Zero
+   means the default is an error.  */
 static const yytype_int16 yydefact[] =
 {
     3270,     0,     2,     1,  3704,  3708,  3712,  3713,  3635,  3714,
@@ -4790,7 +4728,7 @@
        0,     0,   769,  1664
 };
 
-  /* YYPGOTO[NTERM-NUM].  */
+/* YYPGOTO[NTERM-NUM].  */
 static const int yypgoto[] =
 {
    -6179, -6179,  4927,  -767, -2111, -5588, -1544,  6660, -6179, -6179,
@@ -4880,7 +4818,7 @@
    -5649, -1199,  -312,  4363, -1361
 };
 
-  /* YYDEFGOTO[NTERM-NUM].  */
+/* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
        0,     1,   162,   163,  1475,  1480,  2298,  2324,   164,   165,
@@ -4970,9 +4908,9 @@
     2413,  1653,  3646,  2423,  2424
 };
 
-  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
-     positive, shift that token.  If negative, reduce the rule whose
-     number is the opposite.  If YYTABLE_NINF, syntax error.  */
+/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule whose
+   number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_int16 yytable[] =
 {
       75,   174,   292,   287,   277,  1240,   281,   285,   183,   282,
@@ -35633,8 +35571,8 @@
      557,    -1,   559,   560
 };
 
-  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
-     symbol of state STATE-NUM.  */
+/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
+   state STATE-NUM.  */
 static const yytype_int16 yystos[] =
 {
        0,   592,  1285,     0,     5,    24,    34,    35,    39,    41,
@@ -36326,7 +36264,7 @@
      814,   526,   584,  1075
 };
 
-  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
 static const yytype_int16 yyr1[] =
 {
        0,   591,   592,   593,   593,   594,   594,   594,   594,   594,
@@ -36707,7 +36645,7 @@
     1435,  1435
 };
 
-  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
+/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
 static const yytype_int8 yyr2[] =
 {
        0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
@@ -37097,6 +37035,7 @@
 #define YYACCEPT        goto yyacceptlab
 #define YYABORT         goto yyabortlab
 #define YYERROR         goto yyerrorlab
+#define YYNOMEM         goto yyexhaustedlab
 
 
 #define YYRECOVERING()  (!!yyerrstatus)
@@ -37164,12 +37103,19 @@
 } while (0)
 
 
-/* YY_LOCATION_PRINT -- Print the location on the stream.
+/* YYLOCATION_PRINT -- Print the location on the stream.
    This macro was not mandated originally: define only if we know
    we won't break user code: when these are the locations we know.  */
 
-# ifndef YY_LOCATION_PRINT
-#  if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+# ifndef YYLOCATION_PRINT
+
+#  if defined YY_LOCATION_PRINT
+
+   /* Temporary convenience wrapper in case some people defined the
+      undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))
+
+#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
 
 /* Print *YYLOCP on YYO.  Private, do not rely on its existence. */
 
@@ -37197,15 +37143,23 @@
         res += YYFPRINTF (yyo, "-%d", end_col);
     }
   return res;
- }
+}
+
+#   define YYLOCATION_PRINT  yy_location_print_
 
-#   define YY_LOCATION_PRINT(File, Loc)          \
-  yy_location_print_ (File, &(Loc))
+    /* Temporary convenience wrapper in case some people defined the
+       undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))
 
 #  else
-#   define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+
+#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
+    /* Temporary convenience wrapper in case some people defined the
+       undocumented and private YY_LOCATION_PRINT macros.  */
+#   define YY_LOCATION_PRINT  YYLOCATION_PRINT
+
 #  endif
-# endif /* !defined YY_LOCATION_PRINT */
+# endif /* !defined YYLOCATION_PRINT */
 
 
 # define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
@@ -37233,10 +37187,6 @@
   YY_USE (yylocationp);
   if (!yyvaluep)
     return;
-# ifdef YYPRINT
-  if (yykind < YYNTOKENS)
-    YYPRINT (yyo, yytoknum[yykind], *yyvaluep);
-# endif
   YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
   YY_USE (yykind);
   YY_IGNORE_MAYBE_UNINITIALIZED_END
@@ -37254,7 +37204,7 @@
   YYFPRINTF (yyo, "%s %s (",
              yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));
 
-  YY_LOCATION_PRINT (yyo, *yylocationp);
+  YYLOCATION_PRINT (yyo, yylocationp);
   YYFPRINTF (yyo, ": ");
   yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp);
   YYFPRINTF (yyo, ")");
@@ -37440,6 +37390,7 @@
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yychar = YYEMPTY; /* Cause a token to be read.  */
+
   yylsp[0] = yylloc;
   goto yysetstate;
 
@@ -37466,7 +37417,7 @@
 
   if (yyss + yystacksize - 1 <= yyssp)
 #if !defined yyoverflow && !defined YYSTACK_RELOCATE
-    goto yyexhaustedlab;
+    YYNOMEM;
 #else
     {
       /* Get the current used size of the three stacks, in elements.  */
@@ -37497,7 +37448,7 @@
 # else /* defined YYSTACK_RELOCATE */
       /* Extend the stack our own way.  */
       if (YYMAXDEPTH <= yystacksize)
-        goto yyexhaustedlab;
+        YYNOMEM;
       yystacksize *= 2;
       if (YYMAXDEPTH < yystacksize)
         yystacksize = YYMAXDEPTH;
@@ -37508,7 +37459,7 @@
           YY_CAST (union yyalloc *,
                    YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
         if (! yyptr)
-          goto yyexhaustedlab;
+          YYNOMEM;
         YYSTACK_RELOCATE (yyss_alloc, yyss);
         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
         YYSTACK_RELOCATE (yyls_alloc, yyls);
@@ -37532,6 +37483,7 @@
     }
 #endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */
 
+
   if (yystate == YYFINAL)
     YYACCEPT;
 
@@ -37652,7 +37604,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 37656 "preproc.c"
+#line 37608 "preproc.c"
     break;
 
   case 4: /* toplevel_stmt: TransactionStmtLegacy  */
@@ -37662,217 +37614,217 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 37666 "preproc.c"
+#line 37618 "preproc.c"
     break;
 
   case 5: /* stmt: AlterEventTrigStmt  */
 #line 1716 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37672 "preproc.c"
+#line 37624 "preproc.c"
     break;
 
   case 6: /* stmt: AlterCollationStmt  */
 #line 1718 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37678 "preproc.c"
+#line 37630 "preproc.c"
     break;
 
   case 7: /* stmt: AlterDatabaseStmt  */
 #line 1720 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37684 "preproc.c"
+#line 37636 "preproc.c"
     break;
 
   case 8: /* stmt: AlterDatabaseSetStmt  */
 #line 1722 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37690 "preproc.c"
+#line 37642 "preproc.c"
     break;
 
   case 9: /* stmt: AlterDefaultPrivilegesStmt  */
 #line 1724 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37696 "preproc.c"
+#line 37648 "preproc.c"
     break;
 
   case 10: /* stmt: AlterDomainStmt  */
 #line 1726 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37702 "preproc.c"
+#line 37654 "preproc.c"
     break;
 
   case 11: /* stmt: AlterEnumStmt  */
 #line 1728 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37708 "preproc.c"
+#line 37660 "preproc.c"
     break;
 
   case 12: /* stmt: AlterExtensionStmt  */
 #line 1730 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37714 "preproc.c"
+#line 37666 "preproc.c"
     break;
 
   case 13: /* stmt: AlterExtensionContentsStmt  */
 #line 1732 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37720 "preproc.c"
+#line 37672 "preproc.c"
     break;
 
   case 14: /* stmt: AlterFdwStmt  */
 #line 1734 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37726 "preproc.c"
+#line 37678 "preproc.c"
     break;
 
   case 15: /* stmt: AlterForeignServerStmt  */
 #line 1736 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37732 "preproc.c"
+#line 37684 "preproc.c"
     break;
 
   case 16: /* stmt: AlterFunctionStmt  */
 #line 1738 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37738 "preproc.c"
+#line 37690 "preproc.c"
     break;
 
   case 17: /* stmt: AlterGroupStmt  */
 #line 1740 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37744 "preproc.c"
+#line 37696 "preproc.c"
     break;
 
   case 18: /* stmt: AlterObjectDependsStmt  */
 #line 1742 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37750 "preproc.c"
+#line 37702 "preproc.c"
     break;
 
   case 19: /* stmt: AlterObjectSchemaStmt  */
 #line 1744 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37756 "preproc.c"
+#line 37708 "preproc.c"
     break;
 
   case 20: /* stmt: AlterOwnerStmt  */
 #line 1746 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37762 "preproc.c"
+#line 37714 "preproc.c"
     break;
 
   case 21: /* stmt: AlterOperatorStmt  */
 #line 1748 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37768 "preproc.c"
+#line 37720 "preproc.c"
     break;
 
   case 22: /* stmt: AlterTypeStmt  */
 #line 1750 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37774 "preproc.c"
+#line 37726 "preproc.c"
     break;
 
   case 23: /* stmt: AlterPolicyStmt  */
 #line 1752 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37780 "preproc.c"
+#line 37732 "preproc.c"
     break;
 
   case 24: /* stmt: AlterSeqStmt  */
 #line 1754 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37786 "preproc.c"
+#line 37738 "preproc.c"
     break;
 
   case 25: /* stmt: AlterSystemStmt  */
 #line 1756 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37792 "preproc.c"
+#line 37744 "preproc.c"
     break;
 
   case 26: /* stmt: AlterTableStmt  */
 #line 1758 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37798 "preproc.c"
+#line 37750 "preproc.c"
     break;
 
   case 27: /* stmt: AlterTblSpcStmt  */
 #line 1760 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37804 "preproc.c"
+#line 37756 "preproc.c"
     break;
 
   case 28: /* stmt: AlterCompositeTypeStmt  */
 #line 1762 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37810 "preproc.c"
+#line 37762 "preproc.c"
     break;
 
   case 29: /* stmt: AlterPublicationStmt  */
 #line 1764 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37816 "preproc.c"
+#line 37768 "preproc.c"
     break;
 
   case 30: /* stmt: AlterRoleSetStmt  */
 #line 1766 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37822 "preproc.c"
+#line 37774 "preproc.c"
     break;
 
   case 31: /* stmt: AlterRoleStmt  */
 #line 1768 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37828 "preproc.c"
+#line 37780 "preproc.c"
     break;
 
   case 32: /* stmt: AlterSubscriptionStmt  */
 #line 1770 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37834 "preproc.c"
+#line 37786 "preproc.c"
     break;
 
   case 33: /* stmt: AlterStatsStmt  */
 #line 1772 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37840 "preproc.c"
+#line 37792 "preproc.c"
     break;
 
   case 34: /* stmt: AlterTSConfigurationStmt  */
 #line 1774 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37846 "preproc.c"
+#line 37798 "preproc.c"
     break;
 
   case 35: /* stmt: AlterTSDictionaryStmt  */
 #line 1776 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37852 "preproc.c"
+#line 37804 "preproc.c"
     break;
 
   case 36: /* stmt: AlterUserMappingStmt  */
 #line 1778 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37858 "preproc.c"
+#line 37810 "preproc.c"
     break;
 
   case 37: /* stmt: AnalyzeStmt  */
 #line 1780 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37864 "preproc.c"
+#line 37816 "preproc.c"
     break;
 
   case 38: /* stmt: CallStmt  */
 #line 1782 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37870 "preproc.c"
+#line 37822 "preproc.c"
     break;
 
   case 39: /* stmt: CheckPointStmt  */
 #line 1784 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37876 "preproc.c"
+#line 37828 "preproc.c"
     break;
 
   case 40: /* stmt: ClosePortalStmt  */
@@ -37894,223 +37846,223 @@
 
 		output_statement((yyvsp[0].str), 0, ECPGst_normal);
 	}
-#line 37898 "preproc.c"
+#line 37850 "preproc.c"
     break;
 
   case 41: /* stmt: ClusterStmt  */
 #line 1804 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37904 "preproc.c"
+#line 37856 "preproc.c"
     break;
 
   case 42: /* stmt: CommentStmt  */
 #line 1806 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37910 "preproc.c"
+#line 37862 "preproc.c"
     break;
 
   case 43: /* stmt: ConstraintsSetStmt  */
 #line 1808 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37916 "preproc.c"
+#line 37868 "preproc.c"
     break;
 
   case 44: /* stmt: CopyStmt  */
 #line 1810 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37922 "preproc.c"
+#line 37874 "preproc.c"
     break;
 
   case 45: /* stmt: CreateAmStmt  */
 #line 1812 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37928 "preproc.c"
+#line 37880 "preproc.c"
     break;
 
   case 46: /* stmt: CreateAsStmt  */
 #line 1814 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37934 "preproc.c"
+#line 37886 "preproc.c"
     break;
 
   case 47: /* stmt: CreateAssertionStmt  */
 #line 1816 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37940 "preproc.c"
+#line 37892 "preproc.c"
     break;
 
   case 48: /* stmt: CreateCastStmt  */
 #line 1818 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37946 "preproc.c"
+#line 37898 "preproc.c"
     break;
 
   case 49: /* stmt: CreateConversionStmt  */
 #line 1820 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37952 "preproc.c"
+#line 37904 "preproc.c"
     break;
 
   case 50: /* stmt: CreateDomainStmt  */
 #line 1822 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37958 "preproc.c"
+#line 37910 "preproc.c"
     break;
 
   case 51: /* stmt: CreateExtensionStmt  */
 #line 1824 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37964 "preproc.c"
+#line 37916 "preproc.c"
     break;
 
   case 52: /* stmt: CreateFdwStmt  */
 #line 1826 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37970 "preproc.c"
+#line 37922 "preproc.c"
     break;
 
   case 53: /* stmt: CreateForeignServerStmt  */
 #line 1828 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37976 "preproc.c"
+#line 37928 "preproc.c"
     break;
 
   case 54: /* stmt: CreateForeignTableStmt  */
 #line 1830 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37982 "preproc.c"
+#line 37934 "preproc.c"
     break;
 
   case 55: /* stmt: CreateFunctionStmt  */
 #line 1832 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37988 "preproc.c"
+#line 37940 "preproc.c"
     break;
 
   case 56: /* stmt: CreateGroupStmt  */
 #line 1834 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 37994 "preproc.c"
+#line 37946 "preproc.c"
     break;
 
   case 57: /* stmt: CreateMatViewStmt  */
 #line 1836 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38000 "preproc.c"
+#line 37952 "preproc.c"
     break;
 
   case 58: /* stmt: CreateOpClassStmt  */
 #line 1838 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38006 "preproc.c"
+#line 37958 "preproc.c"
     break;
 
   case 59: /* stmt: CreateOpFamilyStmt  */
 #line 1840 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38012 "preproc.c"
+#line 37964 "preproc.c"
     break;
 
   case 60: /* stmt: CreatePublicationStmt  */
 #line 1842 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38018 "preproc.c"
+#line 37970 "preproc.c"
     break;
 
   case 61: /* stmt: AlterOpFamilyStmt  */
 #line 1844 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38024 "preproc.c"
+#line 37976 "preproc.c"
     break;
 
   case 62: /* stmt: CreatePolicyStmt  */
 #line 1846 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38030 "preproc.c"
+#line 37982 "preproc.c"
     break;
 
   case 63: /* stmt: CreatePLangStmt  */
 #line 1848 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38036 "preproc.c"
+#line 37988 "preproc.c"
     break;
 
   case 64: /* stmt: CreateSchemaStmt  */
 #line 1850 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38042 "preproc.c"
+#line 37994 "preproc.c"
     break;
 
   case 65: /* stmt: CreateSeqStmt  */
 #line 1852 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38048 "preproc.c"
+#line 38000 "preproc.c"
     break;
 
   case 66: /* stmt: CreateStmt  */
 #line 1854 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38054 "preproc.c"
+#line 38006 "preproc.c"
     break;
 
   case 67: /* stmt: CreateSubscriptionStmt  */
 #line 1856 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38060 "preproc.c"
+#line 38012 "preproc.c"
     break;
 
   case 68: /* stmt: CreateStatsStmt  */
 #line 1858 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38066 "preproc.c"
+#line 38018 "preproc.c"
     break;
 
   case 69: /* stmt: CreateTableSpaceStmt  */
 #line 1860 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38072 "preproc.c"
+#line 38024 "preproc.c"
     break;
 
   case 70: /* stmt: CreateTransformStmt  */
 #line 1862 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38078 "preproc.c"
+#line 38030 "preproc.c"
     break;
 
   case 71: /* stmt: CreateTrigStmt  */
 #line 1864 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38084 "preproc.c"
+#line 38036 "preproc.c"
     break;
 
   case 72: /* stmt: CreateEventTrigStmt  */
 #line 1866 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38090 "preproc.c"
+#line 38042 "preproc.c"
     break;
 
   case 73: /* stmt: CreateRoleStmt  */
 #line 1868 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38096 "preproc.c"
+#line 38048 "preproc.c"
     break;
 
   case 74: /* stmt: CreateUserStmt  */
 #line 1870 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38102 "preproc.c"
+#line 38054 "preproc.c"
     break;
 
   case 75: /* stmt: CreateUserMappingStmt  */
 #line 1872 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38108 "preproc.c"
+#line 38060 "preproc.c"
     break;
 
   case 76: /* stmt: CreatedbStmt  */
 #line 1874 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38114 "preproc.c"
+#line 38066 "preproc.c"
     break;
 
   case 77: /* stmt: DeallocateStmt  */
@@ -38118,103 +38070,103 @@
         {
 		output_deallocate_prepare_statement((yyvsp[0].str));
 	}
-#line 38122 "preproc.c"
+#line 38074 "preproc.c"
     break;
 
   case 78: /* stmt: DeclareCursorStmt  */
 #line 1880 "preproc.y"
         { output_simple_statement((yyvsp[0].str), (strncmp((yyvsp[0].str), "ECPGset_var", strlen("ECPGset_var")) == 0) ? 4 : 0); }
-#line 38128 "preproc.c"
+#line 38080 "preproc.c"
     break;
 
   case 79: /* stmt: DefineStmt  */
 #line 1882 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38134 "preproc.c"
+#line 38086 "preproc.c"
     break;
 
   case 80: /* stmt: DeleteStmt  */
 #line 1884 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_prepnormal); }
-#line 38140 "preproc.c"
+#line 38092 "preproc.c"
     break;
 
   case 81: /* stmt: DiscardStmt  */
 #line 1886 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_normal); }
-#line 38146 "preproc.c"
+#line 38098 "preproc.c"
     break;
 
   case 82: /* stmt: DoStmt  */
 #line 1888 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38152 "preproc.c"
+#line 38104 "preproc.c"
     break;
 
   case 83: /* stmt: DropCastStmt  */
 #line 1890 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38158 "preproc.c"
+#line 38110 "preproc.c"
     break;
 
   case 84: /* stmt: DropOpClassStmt  */
 #line 1892 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38164 "preproc.c"
+#line 38116 "preproc.c"
     break;
 
   case 85: /* stmt: DropOpFamilyStmt  */
 #line 1894 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38170 "preproc.c"
+#line 38122 "preproc.c"
     break;
 
   case 86: /* stmt: DropOwnedStmt  */
 #line 1896 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38176 "preproc.c"
+#line 38128 "preproc.c"
     break;
 
   case 87: /* stmt: DropStmt  */
 #line 1898 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38182 "preproc.c"
+#line 38134 "preproc.c"
     break;
 
   case 88: /* stmt: DropSubscriptionStmt  */
 #line 1900 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38188 "preproc.c"
+#line 38140 "preproc.c"
     break;
 
   case 89: /* stmt: DropTableSpaceStmt  */
 #line 1902 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38194 "preproc.c"
+#line 38146 "preproc.c"
     break;
 
   case 90: /* stmt: DropTransformStmt  */
 #line 1904 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38200 "preproc.c"
+#line 38152 "preproc.c"
     break;
 
   case 91: /* stmt: DropRoleStmt  */
 #line 1906 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38206 "preproc.c"
+#line 38158 "preproc.c"
     break;
 
   case 92: /* stmt: DropUserMappingStmt  */
 #line 1908 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38212 "preproc.c"
+#line 38164 "preproc.c"
     break;
 
   case 93: /* stmt: DropdbStmt  */
 #line 1910 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38218 "preproc.c"
+#line 38170 "preproc.c"
     break;
 
   case 94: /* stmt: ExecuteStmt  */
@@ -38242,85 +38194,85 @@
 			output_statement(cat_str(3, mm_strdup("execute"), mm_strdup("$0"), (yyvsp[0].exec).type), 0, ECPGst_exec_with_exprlist);
 		}
 	}
-#line 38246 "preproc.c"
+#line 38198 "preproc.c"
     break;
 
   case 95: /* stmt: ExplainStmt  */
 #line 1936 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38252 "preproc.c"
+#line 38204 "preproc.c"
     break;
 
   case 96: /* stmt: FetchStmt  */
 #line 1938 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_normal); }
-#line 38258 "preproc.c"
+#line 38210 "preproc.c"
     break;
 
   case 97: /* stmt: GrantStmt  */
 #line 1940 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38264 "preproc.c"
+#line 38216 "preproc.c"
     break;
 
   case 98: /* stmt: GrantRoleStmt  */
 #line 1942 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38270 "preproc.c"
+#line 38222 "preproc.c"
     break;
 
   case 99: /* stmt: ImportForeignSchemaStmt  */
 #line 1944 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38276 "preproc.c"
+#line 38228 "preproc.c"
     break;
 
   case 100: /* stmt: IndexStmt  */
 #line 1946 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38282 "preproc.c"
+#line 38234 "preproc.c"
     break;
 
   case 101: /* stmt: InsertStmt  */
 #line 1948 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_prepnormal); }
-#line 38288 "preproc.c"
+#line 38240 "preproc.c"
     break;
 
   case 102: /* stmt: ListenStmt  */
 #line 1950 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38294 "preproc.c"
+#line 38246 "preproc.c"
     break;
 
   case 103: /* stmt: RefreshMatViewStmt  */
 #line 1952 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38300 "preproc.c"
+#line 38252 "preproc.c"
     break;
 
   case 104: /* stmt: LoadStmt  */
 #line 1954 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38306 "preproc.c"
+#line 38258 "preproc.c"
     break;
 
   case 105: /* stmt: LockStmt  */
 #line 1956 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38312 "preproc.c"
+#line 38264 "preproc.c"
     break;
 
   case 106: /* stmt: MergeStmt  */
 #line 1958 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38318 "preproc.c"
+#line 38270 "preproc.c"
     break;
 
   case 107: /* stmt: NotifyStmt  */
 #line 1960 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38324 "preproc.c"
+#line 38276 "preproc.c"
     break;
 
   case 108: /* stmt: PrepareStmt  */
@@ -38352,73 +38304,73 @@
 			output_statement(cat_str(5, mm_strdup("prepare"), mm_strdup("$0"), (yyvsp[0].prep).type, mm_strdup("as"), (yyvsp[0].prep).stmt), 0, ECPGst_prepare);
 		}
 	}
-#line 38356 "preproc.c"
+#line 38308 "preproc.c"
     break;
 
   case 109: /* stmt: ReassignOwnedStmt  */
 #line 1990 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38362 "preproc.c"
+#line 38314 "preproc.c"
     break;
 
   case 110: /* stmt: ReindexStmt  */
 #line 1992 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38368 "preproc.c"
+#line 38320 "preproc.c"
     break;
 
   case 111: /* stmt: RemoveAggrStmt  */
 #line 1994 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38374 "preproc.c"
+#line 38326 "preproc.c"
     break;
 
   case 112: /* stmt: RemoveFuncStmt  */
 #line 1996 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38380 "preproc.c"
+#line 38332 "preproc.c"
     break;
 
   case 113: /* stmt: RemoveOperStmt  */
 #line 1998 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38386 "preproc.c"
+#line 38338 "preproc.c"
     break;
 
   case 114: /* stmt: RenameStmt  */
 #line 2000 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38392 "preproc.c"
+#line 38344 "preproc.c"
     break;
 
   case 115: /* stmt: RevokeStmt  */
 #line 2002 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38398 "preproc.c"
+#line 38350 "preproc.c"
     break;
 
   case 116: /* stmt: RevokeRoleStmt  */
 #line 2004 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38404 "preproc.c"
+#line 38356 "preproc.c"
     break;
 
   case 117: /* stmt: RuleStmt  */
 #line 2006 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38410 "preproc.c"
+#line 38362 "preproc.c"
     break;
 
   case 118: /* stmt: SecLabelStmt  */
 #line 2008 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38416 "preproc.c"
+#line 38368 "preproc.c"
     break;
 
   case 119: /* stmt: SelectStmt  */
 #line 2010 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_prepnormal); }
-#line 38422 "preproc.c"
+#line 38374 "preproc.c"
     break;
 
   case 120: /* stmt: TransactionStmt  */
@@ -38428,55 +38380,55 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38432 "preproc.c"
+#line 38384 "preproc.c"
     break;
 
   case 121: /* stmt: TruncateStmt  */
 #line 2018 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38438 "preproc.c"
+#line 38390 "preproc.c"
     break;
 
   case 122: /* stmt: UnlistenStmt  */
 #line 2020 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38444 "preproc.c"
+#line 38396 "preproc.c"
     break;
 
   case 123: /* stmt: UpdateStmt  */
 #line 2022 "preproc.y"
         { output_statement((yyvsp[0].str), 1, ECPGst_prepnormal); }
-#line 38450 "preproc.c"
+#line 38402 "preproc.c"
     break;
 
   case 124: /* stmt: VacuumStmt  */
 #line 2024 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38456 "preproc.c"
+#line 38408 "preproc.c"
     break;
 
   case 125: /* stmt: VariableResetStmt  */
 #line 2026 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38462 "preproc.c"
+#line 38414 "preproc.c"
     break;
 
   case 126: /* stmt: VariableSetStmt  */
 #line 2028 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38468 "preproc.c"
+#line 38420 "preproc.c"
     break;
 
   case 127: /* stmt: VariableShowStmt  */
 #line 2030 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38474 "preproc.c"
+#line 38426 "preproc.c"
     break;
 
   case 128: /* stmt: ViewStmt  */
 #line 2032 "preproc.y"
  { output_statement((yyvsp[0].str), 0, ECPGst_normal); }
-#line 38480 "preproc.c"
+#line 38432 "preproc.c"
     break;
 
   case 129: /* stmt: ECPGAllocateDescr  */
@@ -38486,7 +38438,7 @@
 		whenever_action(0);
 		free((yyvsp[0].str));
 	}
-#line 38490 "preproc.c"
+#line 38442 "preproc.c"
     break;
 
   case 130: /* stmt: ECPGConnect  */
@@ -38500,7 +38452,7 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38504 "preproc.c"
+#line 38456 "preproc.c"
     break;
 
   case 131: /* stmt: ECPGDeclareStmt  */
@@ -38508,7 +38460,7 @@
         {
 		output_simple_statement((yyvsp[0].str), 0);
 	}
-#line 38512 "preproc.c"
+#line 38464 "preproc.c"
     break;
 
   case 132: /* stmt: ECPGCursorStmt  */
@@ -38516,7 +38468,7 @@
         {
 		 output_simple_statement((yyvsp[0].str), (strncmp((yyvsp[0].str), "ECPGset_var", strlen("ECPGset_var")) == 0) ? 4 : 0);
 	}
-#line 38520 "preproc.c"
+#line 38472 "preproc.c"
     break;
 
   case 133: /* stmt: ECPGDeallocateDescr  */
@@ -38526,7 +38478,7 @@
 		whenever_action(0);
 		free((yyvsp[0].str));
 	}
-#line 38530 "preproc.c"
+#line 38482 "preproc.c"
     break;
 
   case 134: /* stmt: ECPGDeclare  */
@@ -38534,7 +38486,7 @@
         {
 		output_simple_statement((yyvsp[0].str), 0);
 	}
-#line 38538 "preproc.c"
+#line 38490 "preproc.c"
     break;
 
   case 135: /* stmt: ECPGDescribe  */
@@ -38550,7 +38502,7 @@
 
 		free((yyvsp[0].describe).stmt_name);
 	}
-#line 38554 "preproc.c"
+#line 38506 "preproc.c"
     break;
 
   case 136: /* stmt: ECPGDisconnect  */
@@ -38564,13 +38516,13 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38568 "preproc.c"
+#line 38520 "preproc.c"
     break;
 
   case 137: /* stmt: ECPGExecuteImmediateStmt  */
 #line 2089 "preproc.y"
                                         { output_statement((yyvsp[0].str), 0, ECPGst_exec_immediate); }
-#line 38574 "preproc.c"
+#line 38526 "preproc.c"
     break;
 
   case 138: /* stmt: ECPGFree  */
@@ -38588,7 +38540,7 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38592 "preproc.c"
+#line 38544 "preproc.c"
     break;
 
   case 139: /* stmt: ECPGGetDescriptor  */
@@ -38599,7 +38551,7 @@
 		free((yyvsp[0].descriptor).name);
 		free((yyvsp[0].descriptor).str);
 	}
-#line 38603 "preproc.c"
+#line 38555 "preproc.c"
     break;
 
   case 140: /* stmt: ECPGGetDescriptorHeader  */
@@ -38609,7 +38561,7 @@
 		output_get_descr_header((yyvsp[0].str));
 		free((yyvsp[0].str));
 	}
-#line 38613 "preproc.c"
+#line 38565 "preproc.c"
     break;
 
   case 141: /* stmt: ECPGOpen  */
@@ -38624,7 +38576,7 @@
 			ptr->opened = true;
 		}
 	}
-#line 38628 "preproc.c"
+#line 38580 "preproc.c"
     break;
 
   case 142: /* stmt: ECPGSetAutocommit  */
@@ -38634,7 +38586,7 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38638 "preproc.c"
+#line 38590 "preproc.c"
     break;
 
   case 143: /* stmt: ECPGSetConnection  */
@@ -38647,7 +38599,7 @@
 		whenever_action(2);
 		free((yyvsp[0].str));
 	}
-#line 38651 "preproc.c"
+#line 38603 "preproc.c"
     break;
 
   case 144: /* stmt: ECPGSetDescriptor  */
@@ -38658,7 +38610,7 @@
 		free((yyvsp[0].descriptor).name);
 		free((yyvsp[0].descriptor).str);
 	}
-#line 38662 "preproc.c"
+#line 38614 "preproc.c"
     break;
 
   case 145: /* stmt: ECPGSetDescriptorHeader  */
@@ -38668,7 +38620,7 @@
 		output_set_descr_header((yyvsp[0].str));
 		free((yyvsp[0].str));
 	}
-#line 38672 "preproc.c"
+#line 38624 "preproc.c"
     break;
 
   case 146: /* stmt: ECPGTypedef  */
@@ -38681,7 +38633,7 @@
 		free((yyvsp[0].str));
 		output_line_number();
 	}
-#line 38685 "preproc.c"
+#line 38637 "preproc.c"
     break;
 
   case 147: /* stmt: ECPGVar  */
@@ -38692,7 +38644,7 @@
 
 		output_simple_statement((yyvsp[0].str), 0);
 	}
-#line 38696 "preproc.c"
+#line 38648 "preproc.c"
     break;
 
   case 148: /* stmt: ECPGWhenever  */
@@ -38703,13 +38655,13 @@
 
 		output_simple_statement((yyvsp[0].str), 0);
 	}
-#line 38707 "preproc.c"
+#line 38659 "preproc.c"
     break;
 
   case 149: /* stmt: %empty  */
 #line 2180 "preproc.y"
  { (yyval.str) = NULL; }
-#line 38713 "preproc.c"
+#line 38665 "preproc.c"
     break;
 
   case 150: /* opt_single_name: ColId  */
@@ -38717,14 +38669,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 38721 "preproc.c"
+#line 38673 "preproc.c"
     break;
 
   case 151: /* opt_single_name: %empty  */
 #line 2190 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38728 "preproc.c"
+#line 38680 "preproc.c"
     break;
 
   case 152: /* opt_qualified_name: any_name  */
@@ -38732,14 +38684,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 38736 "preproc.c"
+#line 38688 "preproc.c"
     break;
 
   case 153: /* opt_qualified_name: %empty  */
 #line 2201 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38743 "preproc.c"
+#line 38695 "preproc.c"
     break;
 
   case 154: /* opt_concurrently: CONCURRENTLY  */
@@ -38747,14 +38699,14 @@
  { 
  (yyval.str) = mm_strdup("concurrently");
 }
-#line 38751 "preproc.c"
+#line 38703 "preproc.c"
     break;
 
   case 155: /* opt_concurrently: %empty  */
 #line 2212 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38758 "preproc.c"
+#line 38710 "preproc.c"
     break;
 
   case 156: /* opt_drop_behavior: CASCADE  */
@@ -38762,7 +38714,7 @@
  { 
  (yyval.str) = mm_strdup("cascade");
 }
-#line 38766 "preproc.c"
+#line 38718 "preproc.c"
     break;
 
   case 157: /* opt_drop_behavior: RESTRICT  */
@@ -38770,14 +38722,14 @@
  { 
  (yyval.str) = mm_strdup("restrict");
 }
-#line 38774 "preproc.c"
+#line 38726 "preproc.c"
     break;
 
   case 158: /* opt_drop_behavior: %empty  */
 #line 2227 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38781 "preproc.c"
+#line 38733 "preproc.c"
     break;
 
   case 159: /* CallStmt: CALL func_application  */
@@ -38785,7 +38737,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("call"),(yyvsp[0].str));
 }
-#line 38789 "preproc.c"
+#line 38741 "preproc.c"
     break;
 
   case 160: /* CreateRoleStmt: CREATE ROLE RoleId opt_with OptRoleList  */
@@ -38793,7 +38745,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create role"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38797 "preproc.c"
+#line 38749 "preproc.c"
     break;
 
   case 161: /* opt_with: WITH  */
@@ -38801,7 +38753,7 @@
  { 
  (yyval.str) = mm_strdup("with");
 }
-#line 38805 "preproc.c"
+#line 38757 "preproc.c"
     break;
 
   case 162: /* opt_with: WITH_LA  */
@@ -38809,14 +38761,14 @@
  { 
  (yyval.str) = mm_strdup("with");
 }
-#line 38813 "preproc.c"
+#line 38765 "preproc.c"
     break;
 
   case 163: /* opt_with: %empty  */
 #line 2258 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38820 "preproc.c"
+#line 38772 "preproc.c"
     break;
 
   case 164: /* OptRoleList: OptRoleList CreateOptRoleElem  */
@@ -38824,14 +38776,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38828 "preproc.c"
+#line 38780 "preproc.c"
     break;
 
   case 165: /* OptRoleList: %empty  */
 #line 2269 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38835 "preproc.c"
+#line 38787 "preproc.c"
     break;
 
   case 166: /* AlterOptRoleList: AlterOptRoleList AlterOptRoleElem  */
@@ -38839,14 +38791,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38843 "preproc.c"
+#line 38795 "preproc.c"
     break;
 
   case 167: /* AlterOptRoleList: %empty  */
 #line 2280 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 38850 "preproc.c"
+#line 38802 "preproc.c"
     break;
 
   case 168: /* AlterOptRoleElem: PASSWORD ecpg_sconst  */
@@ -38854,7 +38806,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("password"),(yyvsp[0].str));
 }
-#line 38858 "preproc.c"
+#line 38810 "preproc.c"
     break;
 
   case 169: /* AlterOptRoleElem: PASSWORD NULL_P  */
@@ -38862,7 +38814,7 @@
  { 
  (yyval.str) = mm_strdup("password null");
 }
-#line 38866 "preproc.c"
+#line 38818 "preproc.c"
     break;
 
   case 170: /* AlterOptRoleElem: ENCRYPTED PASSWORD ecpg_sconst  */
@@ -38870,7 +38822,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("encrypted password"),(yyvsp[0].str));
 }
-#line 38874 "preproc.c"
+#line 38826 "preproc.c"
     break;
 
   case 171: /* AlterOptRoleElem: UNENCRYPTED PASSWORD ecpg_sconst  */
@@ -38879,7 +38831,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("unencrypted password"),(yyvsp[0].str));
 }
-#line 38883 "preproc.c"
+#line 38835 "preproc.c"
     break;
 
   case 172: /* AlterOptRoleElem: INHERIT  */
@@ -38887,7 +38839,7 @@
  { 
  (yyval.str) = mm_strdup("inherit");
 }
-#line 38891 "preproc.c"
+#line 38843 "preproc.c"
     break;
 
   case 173: /* AlterOptRoleElem: CONNECTION LIMIT SignedIconst  */
@@ -38895,7 +38847,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("connection limit"),(yyvsp[0].str));
 }
-#line 38899 "preproc.c"
+#line 38851 "preproc.c"
     break;
 
   case 174: /* AlterOptRoleElem: VALID UNTIL ecpg_sconst  */
@@ -38903,7 +38855,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("valid until"),(yyvsp[0].str));
 }
-#line 38907 "preproc.c"
+#line 38859 "preproc.c"
     break;
 
   case 175: /* AlterOptRoleElem: USER role_list  */
@@ -38911,7 +38863,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("user"),(yyvsp[0].str));
 }
-#line 38915 "preproc.c"
+#line 38867 "preproc.c"
     break;
 
   case 176: /* AlterOptRoleElem: ecpg_ident  */
@@ -38919,7 +38871,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 38923 "preproc.c"
+#line 38875 "preproc.c"
     break;
 
   case 177: /* CreateOptRoleElem: AlterOptRoleElem  */
@@ -38927,7 +38879,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 38931 "preproc.c"
+#line 38883 "preproc.c"
     break;
 
   case 178: /* CreateOptRoleElem: SYSID Iconst  */
@@ -38935,7 +38887,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("sysid"),(yyvsp[0].str));
 }
-#line 38939 "preproc.c"
+#line 38891 "preproc.c"
     break;
 
   case 179: /* CreateOptRoleElem: ADMIN role_list  */
@@ -38943,7 +38895,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("admin"),(yyvsp[0].str));
 }
-#line 38947 "preproc.c"
+#line 38899 "preproc.c"
     break;
 
   case 180: /* CreateOptRoleElem: ROLE role_list  */
@@ -38951,7 +38903,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[0].str));
 }
-#line 38955 "preproc.c"
+#line 38907 "preproc.c"
     break;
 
   case 181: /* CreateOptRoleElem: IN_P ROLE role_list  */
@@ -38959,7 +38911,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("in role"),(yyvsp[0].str));
 }
-#line 38963 "preproc.c"
+#line 38915 "preproc.c"
     break;
 
   case 182: /* CreateOptRoleElem: IN_P GROUP_P role_list  */
@@ -38967,7 +38919,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("in group"),(yyvsp[0].str));
 }
-#line 38971 "preproc.c"
+#line 38923 "preproc.c"
     break;
 
   case 183: /* CreateUserStmt: CREATE USER RoleId opt_with OptRoleList  */
@@ -38975,7 +38927,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create user"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38979 "preproc.c"
+#line 38931 "preproc.c"
     break;
 
   case 184: /* AlterRoleStmt: ALTER ROLE RoleSpec opt_with AlterOptRoleList  */
@@ -38983,7 +38935,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38987 "preproc.c"
+#line 38939 "preproc.c"
     break;
 
   case 185: /* AlterRoleStmt: ALTER USER RoleSpec opt_with AlterOptRoleList  */
@@ -38991,14 +38943,14 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 38995 "preproc.c"
+#line 38947 "preproc.c"
     break;
 
   case 186: /* opt_in_database: %empty  */
 #line 2376 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 39002 "preproc.c"
+#line 38954 "preproc.c"
     break;
 
   case 187: /* opt_in_database: IN_P DATABASE name  */
@@ -39006,7 +38958,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("in database"),(yyvsp[0].str));
 }
-#line 39010 "preproc.c"
+#line 38962 "preproc.c"
     break;
 
   case 188: /* AlterRoleSetStmt: ALTER ROLE RoleSpec opt_in_database SetResetClause  */
@@ -39014,7 +38966,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39018 "preproc.c"
+#line 38970 "preproc.c"
     break;
 
   case 189: /* AlterRoleSetStmt: ALTER ROLE ALL opt_in_database SetResetClause  */
@@ -39022,7 +38974,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter role all"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39026 "preproc.c"
+#line 38978 "preproc.c"
     break;
 
   case 190: /* AlterRoleSetStmt: ALTER USER RoleSpec opt_in_database SetResetClause  */
@@ -39030,7 +38982,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39034 "preproc.c"
+#line 38986 "preproc.c"
     break;
 
   case 191: /* AlterRoleSetStmt: ALTER USER ALL opt_in_database SetResetClause  */
@@ -39038,7 +38990,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter user all"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39042 "preproc.c"
+#line 38994 "preproc.c"
     break;
 
   case 192: /* DropRoleStmt: DROP ROLE role_list  */
@@ -39046,7 +38998,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop role"),(yyvsp[0].str));
 }
-#line 39050 "preproc.c"
+#line 39002 "preproc.c"
     break;
 
   case 193: /* DropRoleStmt: DROP ROLE IF_P EXISTS role_list  */
@@ -39054,7 +39006,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop role if exists"),(yyvsp[0].str));
 }
-#line 39058 "preproc.c"
+#line 39010 "preproc.c"
     break;
 
   case 194: /* DropRoleStmt: DROP USER role_list  */
@@ -39062,7 +39014,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop user"),(yyvsp[0].str));
 }
-#line 39066 "preproc.c"
+#line 39018 "preproc.c"
     break;
 
   case 195: /* DropRoleStmt: DROP USER IF_P EXISTS role_list  */
@@ -39070,7 +39022,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop user if exists"),(yyvsp[0].str));
 }
-#line 39074 "preproc.c"
+#line 39026 "preproc.c"
     break;
 
   case 196: /* DropRoleStmt: DROP GROUP_P role_list  */
@@ -39078,7 +39030,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop group"),(yyvsp[0].str));
 }
-#line 39082 "preproc.c"
+#line 39034 "preproc.c"
     break;
 
   case 197: /* DropRoleStmt: DROP GROUP_P IF_P EXISTS role_list  */
@@ -39086,7 +39038,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop group if exists"),(yyvsp[0].str));
 }
-#line 39090 "preproc.c"
+#line 39042 "preproc.c"
     break;
 
   case 198: /* CreateGroupStmt: CREATE GROUP_P RoleId opt_with OptRoleList  */
@@ -39094,7 +39046,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create group"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39098 "preproc.c"
+#line 39050 "preproc.c"
     break;
 
   case 199: /* AlterGroupStmt: ALTER GROUP_P RoleSpec add_drop USER role_list  */
@@ -39102,7 +39054,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter group"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("user"),(yyvsp[0].str));
 }
-#line 39106 "preproc.c"
+#line 39058 "preproc.c"
     break;
 
   case 200: /* add_drop: ADD_P  */
@@ -39110,7 +39062,7 @@
  { 
  (yyval.str) = mm_strdup("add");
 }
-#line 39114 "preproc.c"
+#line 39066 "preproc.c"
     break;
 
   case 201: /* add_drop: DROP  */
@@ -39118,7 +39070,7 @@
  { 
  (yyval.str) = mm_strdup("drop");
 }
-#line 39122 "preproc.c"
+#line 39074 "preproc.c"
     break;
 
   case 202: /* CreateSchemaStmt: CREATE SCHEMA opt_single_name AUTHORIZATION RoleSpec OptSchemaEltList  */
@@ -39126,7 +39078,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create schema"),(yyvsp[-3].str),mm_strdup("authorization"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39130 "preproc.c"
+#line 39082 "preproc.c"
     break;
 
   case 203: /* CreateSchemaStmt: CREATE SCHEMA ColId OptSchemaEltList  */
@@ -39134,7 +39086,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create schema"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39138 "preproc.c"
+#line 39090 "preproc.c"
     break;
 
   case 204: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS opt_single_name AUTHORIZATION RoleSpec OptSchemaEltList  */
@@ -39143,7 +39095,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(5,mm_strdup("create schema if not exists"),(yyvsp[-3].str),mm_strdup("authorization"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39147 "preproc.c"
+#line 39099 "preproc.c"
     break;
 
   case 205: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS ColId OptSchemaEltList  */
@@ -39152,7 +39104,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,mm_strdup("create schema if not exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39156 "preproc.c"
+#line 39108 "preproc.c"
     break;
 
   case 206: /* OptSchemaEltList: OptSchemaEltList schema_stmt  */
@@ -39160,14 +39112,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39164 "preproc.c"
+#line 39116 "preproc.c"
     break;
 
   case 207: /* OptSchemaEltList: %empty  */
 #line 2489 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 39171 "preproc.c"
+#line 39123 "preproc.c"
     break;
 
   case 208: /* schema_stmt: CreateStmt  */
@@ -39175,7 +39127,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39179 "preproc.c"
+#line 39131 "preproc.c"
     break;
 
   case 209: /* schema_stmt: IndexStmt  */
@@ -39183,7 +39135,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39187 "preproc.c"
+#line 39139 "preproc.c"
     break;
 
   case 210: /* schema_stmt: CreateSeqStmt  */
@@ -39191,7 +39143,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39195 "preproc.c"
+#line 39147 "preproc.c"
     break;
 
   case 211: /* schema_stmt: CreateTrigStmt  */
@@ -39199,7 +39151,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39203 "preproc.c"
+#line 39155 "preproc.c"
     break;
 
   case 212: /* schema_stmt: GrantStmt  */
@@ -39207,7 +39159,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39211 "preproc.c"
+#line 39163 "preproc.c"
     break;
 
   case 213: /* schema_stmt: ViewStmt  */
@@ -39215,7 +39167,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39219 "preproc.c"
+#line 39171 "preproc.c"
     break;
 
   case 214: /* VariableSetStmt: SET set_rest  */
@@ -39223,7 +39175,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 39227 "preproc.c"
+#line 39179 "preproc.c"
     break;
 
   case 215: /* VariableSetStmt: SET LOCAL set_rest  */
@@ -39231,7 +39183,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set local"),(yyvsp[0].str));
 }
-#line 39235 "preproc.c"
+#line 39187 "preproc.c"
     break;
 
   case 216: /* VariableSetStmt: SET SESSION set_rest  */
@@ -39239,7 +39191,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set session"),(yyvsp[0].str));
 }
-#line 39243 "preproc.c"
+#line 39195 "preproc.c"
     break;
 
   case 217: /* set_rest: TRANSACTION transaction_mode_list  */
@@ -39247,7 +39199,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("transaction"),(yyvsp[0].str));
 }
-#line 39251 "preproc.c"
+#line 39203 "preproc.c"
     break;
 
   case 218: /* set_rest: SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list  */
@@ -39255,7 +39207,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("session characteristics as transaction"),(yyvsp[0].str));
 }
-#line 39259 "preproc.c"
+#line 39211 "preproc.c"
     break;
 
   case 219: /* set_rest: set_rest_more  */
@@ -39263,7 +39215,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39267 "preproc.c"
+#line 39219 "preproc.c"
     break;
 
   case 220: /* generic_set: var_name TO var_list  */
@@ -39271,7 +39223,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 39275 "preproc.c"
+#line 39227 "preproc.c"
     break;
 
   case 221: /* generic_set: var_name '=' var_list  */
@@ -39279,7 +39231,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 39283 "preproc.c"
+#line 39235 "preproc.c"
     break;
 
   case 222: /* generic_set: var_name TO DEFAULT  */
@@ -39287,7 +39239,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("to default"));
 }
-#line 39291 "preproc.c"
+#line 39243 "preproc.c"
     break;
 
   case 223: /* generic_set: var_name '=' DEFAULT  */
@@ -39295,7 +39247,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("= default"));
 }
-#line 39299 "preproc.c"
+#line 39251 "preproc.c"
     break;
 
   case 224: /* set_rest_more: generic_set  */
@@ -39303,7 +39255,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39307 "preproc.c"
+#line 39259 "preproc.c"
     break;
 
   case 225: /* set_rest_more: var_name FROM CURRENT_P  */
@@ -39311,7 +39263,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("from current"));
 }
-#line 39315 "preproc.c"
+#line 39267 "preproc.c"
     break;
 
   case 226: /* set_rest_more: TIME ZONE zone_value  */
@@ -39319,7 +39271,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("time zone"),(yyvsp[0].str));
 }
-#line 39323 "preproc.c"
+#line 39275 "preproc.c"
     break;
 
   case 227: /* set_rest_more: CATALOG_P ecpg_sconst  */
@@ -39328,7 +39280,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("catalog"),(yyvsp[0].str));
 }
-#line 39332 "preproc.c"
+#line 39284 "preproc.c"
     break;
 
   case 228: /* set_rest_more: SCHEMA ecpg_sconst  */
@@ -39336,7 +39288,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[0].str));
 }
-#line 39340 "preproc.c"
+#line 39292 "preproc.c"
     break;
 
   case 229: /* set_rest_more: NAMES opt_encoding  */
@@ -39344,7 +39296,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("names"),(yyvsp[0].str));
 }
-#line 39348 "preproc.c"
+#line 39300 "preproc.c"
     break;
 
   case 230: /* set_rest_more: ROLE NonReservedWord_or_Sconst  */
@@ -39352,7 +39304,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[0].str));
 }
-#line 39356 "preproc.c"
+#line 39308 "preproc.c"
     break;
 
   case 231: /* set_rest_more: SESSION AUTHORIZATION NonReservedWord_or_Sconst  */
@@ -39360,7 +39312,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("session authorization"),(yyvsp[0].str));
 }
-#line 39364 "preproc.c"
+#line 39316 "preproc.c"
     break;
 
   case 232: /* set_rest_more: SESSION AUTHORIZATION DEFAULT  */
@@ -39368,7 +39320,7 @@
  { 
  (yyval.str) = mm_strdup("session authorization default");
 }
-#line 39372 "preproc.c"
+#line 39324 "preproc.c"
     break;
 
   case 233: /* set_rest_more: XML_P OPTION document_or_content  */
@@ -39376,7 +39328,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("xml option"),(yyvsp[0].str));
 }
-#line 39380 "preproc.c"
+#line 39332 "preproc.c"
     break;
 
   case 234: /* set_rest_more: TRANSACTION SNAPSHOT ecpg_sconst  */
@@ -39384,7 +39336,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("transaction snapshot"),(yyvsp[0].str));
 }
-#line 39388 "preproc.c"
+#line 39340 "preproc.c"
     break;
 
   case 235: /* var_name: ECPGColId  */
@@ -39392,7 +39344,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39396 "preproc.c"
+#line 39348 "preproc.c"
     break;
 
   case 236: /* var_name: var_name '.' ColId  */
@@ -39400,7 +39352,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("."),(yyvsp[0].str));
 }
-#line 39404 "preproc.c"
+#line 39356 "preproc.c"
     break;
 
   case 237: /* var_list: var_value  */
@@ -39408,7 +39360,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39412 "preproc.c"
+#line 39364 "preproc.c"
     break;
 
   case 238: /* var_list: var_list ',' var_value  */
@@ -39416,7 +39368,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 39420 "preproc.c"
+#line 39372 "preproc.c"
     break;
 
   case 239: /* var_value: opt_boolean_or_string  */
@@ -39424,7 +39376,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39428 "preproc.c"
+#line 39380 "preproc.c"
     break;
 
   case 240: /* var_value: NumericOnly  */
@@ -39438,7 +39390,7 @@
 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39442 "preproc.c"
+#line 39394 "preproc.c"
     break;
 
   case 241: /* iso_level: READ UNCOMMITTED  */
@@ -39446,7 +39398,7 @@
  { 
  (yyval.str) = mm_strdup("read uncommitted");
 }
-#line 39450 "preproc.c"
+#line 39402 "preproc.c"
     break;
 
   case 242: /* iso_level: READ COMMITTED  */
@@ -39454,7 +39406,7 @@
  { 
  (yyval.str) = mm_strdup("read committed");
 }
-#line 39458 "preproc.c"
+#line 39410 "preproc.c"
     break;
 
   case 243: /* iso_level: REPEATABLE READ  */
@@ -39462,7 +39414,7 @@
  { 
  (yyval.str) = mm_strdup("repeatable read");
 }
-#line 39466 "preproc.c"
+#line 39418 "preproc.c"
     break;
 
   case 244: /* iso_level: SERIALIZABLE  */
@@ -39470,7 +39422,7 @@
  { 
  (yyval.str) = mm_strdup("serializable");
 }
-#line 39474 "preproc.c"
+#line 39426 "preproc.c"
     break;
 
   case 245: /* opt_boolean_or_string: TRUE_P  */
@@ -39478,7 +39430,7 @@
  { 
  (yyval.str) = mm_strdup("true");
 }
-#line 39482 "preproc.c"
+#line 39434 "preproc.c"
     break;
 
   case 246: /* opt_boolean_or_string: FALSE_P  */
@@ -39486,7 +39438,7 @@
  { 
  (yyval.str) = mm_strdup("false");
 }
-#line 39490 "preproc.c"
+#line 39442 "preproc.c"
     break;
 
   case 247: /* opt_boolean_or_string: ON  */
@@ -39494,7 +39446,7 @@
  { 
  (yyval.str) = mm_strdup("on");
 }
-#line 39498 "preproc.c"
+#line 39450 "preproc.c"
     break;
 
   case 248: /* opt_boolean_or_string: NonReservedWord_or_Sconst  */
@@ -39502,7 +39454,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39506 "preproc.c"
+#line 39458 "preproc.c"
     break;
 
   case 249: /* zone_value: ecpg_sconst  */
@@ -39510,7 +39462,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39514 "preproc.c"
+#line 39466 "preproc.c"
     break;
 
   case 250: /* zone_value: ecpg_ident  */
@@ -39518,7 +39470,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39522 "preproc.c"
+#line 39474 "preproc.c"
     break;
 
   case 251: /* zone_value: ConstInterval ecpg_sconst opt_interval  */
@@ -39526,7 +39478,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39530 "preproc.c"
+#line 39482 "preproc.c"
     break;
 
   case 252: /* zone_value: ConstInterval '(' Iconst ')' ecpg_sconst  */
@@ -39534,7 +39486,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 39538 "preproc.c"
+#line 39490 "preproc.c"
     break;
 
   case 253: /* zone_value: NumericOnly  */
@@ -39542,7 +39494,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39546 "preproc.c"
+#line 39498 "preproc.c"
     break;
 
   case 254: /* zone_value: DEFAULT  */
@@ -39550,7 +39502,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 39554 "preproc.c"
+#line 39506 "preproc.c"
     break;
 
   case 255: /* zone_value: LOCAL  */
@@ -39558,7 +39510,7 @@
  { 
  (yyval.str) = mm_strdup("local");
 }
-#line 39562 "preproc.c"
+#line 39514 "preproc.c"
     break;
 
   case 256: /* opt_encoding: ecpg_sconst  */
@@ -39566,7 +39518,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39570 "preproc.c"
+#line 39522 "preproc.c"
     break;
 
   case 257: /* opt_encoding: DEFAULT  */
@@ -39574,14 +39526,14 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 39578 "preproc.c"
+#line 39530 "preproc.c"
     break;
 
   case 258: /* opt_encoding: %empty  */
 #line 2747 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 39585 "preproc.c"
+#line 39537 "preproc.c"
     break;
 
   case 259: /* NonReservedWord_or_Sconst: NonReservedWord  */
@@ -39589,7 +39541,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39593 "preproc.c"
+#line 39545 "preproc.c"
     break;
 
   case 260: /* NonReservedWord_or_Sconst: ecpg_sconst  */
@@ -39597,7 +39549,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39601 "preproc.c"
+#line 39553 "preproc.c"
     break;
 
   case 261: /* VariableResetStmt: RESET reset_rest  */
@@ -39605,7 +39557,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[0].str));
 }
-#line 39609 "preproc.c"
+#line 39561 "preproc.c"
     break;
 
   case 262: /* reset_rest: generic_reset  */
@@ -39613,7 +39565,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39617 "preproc.c"
+#line 39569 "preproc.c"
     break;
 
   case 263: /* reset_rest: TIME ZONE  */
@@ -39621,7 +39573,7 @@
  { 
  (yyval.str) = mm_strdup("time zone");
 }
-#line 39625 "preproc.c"
+#line 39577 "preproc.c"
     break;
 
   case 264: /* reset_rest: TRANSACTION ISOLATION LEVEL  */
@@ -39629,7 +39581,7 @@
  { 
  (yyval.str) = mm_strdup("transaction isolation level");
 }
-#line 39633 "preproc.c"
+#line 39585 "preproc.c"
     break;
 
   case 265: /* reset_rest: SESSION AUTHORIZATION  */
@@ -39637,7 +39589,7 @@
  { 
  (yyval.str) = mm_strdup("session authorization");
 }
-#line 39641 "preproc.c"
+#line 39593 "preproc.c"
     break;
 
   case 266: /* generic_reset: var_name  */
@@ -39645,7 +39597,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39649 "preproc.c"
+#line 39601 "preproc.c"
     break;
 
   case 267: /* generic_reset: ALL  */
@@ -39653,7 +39605,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 39657 "preproc.c"
+#line 39609 "preproc.c"
     break;
 
   case 268: /* SetResetClause: SET set_rest  */
@@ -39661,7 +39613,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 39665 "preproc.c"
+#line 39617 "preproc.c"
     break;
 
   case 269: /* SetResetClause: VariableResetStmt  */
@@ -39669,7 +39621,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39673 "preproc.c"
+#line 39625 "preproc.c"
     break;
 
   case 270: /* FunctionSetResetClause: SET set_rest_more  */
@@ -39677,7 +39629,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 39681 "preproc.c"
+#line 39633 "preproc.c"
     break;
 
   case 271: /* FunctionSetResetClause: VariableResetStmt  */
@@ -39685,7 +39637,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39689 "preproc.c"
+#line 39641 "preproc.c"
     break;
 
   case 272: /* VariableShowStmt: SHOW var_name ecpg_into  */
@@ -39693,7 +39645,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("show"),(yyvsp[-1].str));
 }
-#line 39697 "preproc.c"
+#line 39649 "preproc.c"
     break;
 
   case 273: /* VariableShowStmt: SHOW TIME ZONE ecpg_into  */
@@ -39701,7 +39653,7 @@
  { 
  (yyval.str) = mm_strdup("show time zone");
 }
-#line 39705 "preproc.c"
+#line 39657 "preproc.c"
     break;
 
   case 274: /* VariableShowStmt: SHOW TRANSACTION ISOLATION LEVEL ecpg_into  */
@@ -39709,7 +39661,7 @@
  { 
  (yyval.str) = mm_strdup("show transaction isolation level");
 }
-#line 39713 "preproc.c"
+#line 39665 "preproc.c"
     break;
 
   case 275: /* VariableShowStmt: SHOW SESSION AUTHORIZATION ecpg_into  */
@@ -39717,7 +39669,7 @@
  { 
  (yyval.str) = mm_strdup("show session authorization");
 }
-#line 39721 "preproc.c"
+#line 39673 "preproc.c"
     break;
 
   case 276: /* VariableShowStmt: SHOW ALL  */
@@ -39726,7 +39678,7 @@
 		mmerror(PARSE_ERROR, ET_ERROR, "SHOW ALL is not implemented");
 		(yyval.str) = EMPTY;
 	}
-#line 39730 "preproc.c"
+#line 39682 "preproc.c"
     break;
 
   case 277: /* ConstraintsSetStmt: SET CONSTRAINTS constraints_set_list constraints_set_mode  */
@@ -39734,7 +39686,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("set constraints"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39738 "preproc.c"
+#line 39690 "preproc.c"
     break;
 
   case 278: /* constraints_set_list: ALL  */
@@ -39742,7 +39694,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 39746 "preproc.c"
+#line 39698 "preproc.c"
     break;
 
   case 279: /* constraints_set_list: qualified_name_list  */
@@ -39750,7 +39702,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39754 "preproc.c"
+#line 39706 "preproc.c"
     break;
 
   case 280: /* constraints_set_mode: DEFERRED  */
@@ -39758,7 +39710,7 @@
  { 
  (yyval.str) = mm_strdup("deferred");
 }
-#line 39762 "preproc.c"
+#line 39714 "preproc.c"
     break;
 
   case 281: /* constraints_set_mode: IMMEDIATE  */
@@ -39766,7 +39718,7 @@
  { 
  (yyval.str) = mm_strdup("immediate");
 }
-#line 39770 "preproc.c"
+#line 39722 "preproc.c"
     break;
 
   case 282: /* CheckPointStmt: CHECKPOINT  */
@@ -39774,7 +39726,7 @@
  { 
  (yyval.str) = mm_strdup("checkpoint");
 }
-#line 39778 "preproc.c"
+#line 39730 "preproc.c"
     break;
 
   case 283: /* DiscardStmt: DISCARD ALL  */
@@ -39782,7 +39734,7 @@
  { 
  (yyval.str) = mm_strdup("discard all");
 }
-#line 39786 "preproc.c"
+#line 39738 "preproc.c"
     break;
 
   case 284: /* DiscardStmt: DISCARD TEMP  */
@@ -39790,7 +39742,7 @@
  { 
  (yyval.str) = mm_strdup("discard temp");
 }
-#line 39794 "preproc.c"
+#line 39746 "preproc.c"
     break;
 
   case 285: /* DiscardStmt: DISCARD TEMPORARY  */
@@ -39798,7 +39750,7 @@
  { 
  (yyval.str) = mm_strdup("discard temporary");
 }
-#line 39802 "preproc.c"
+#line 39754 "preproc.c"
     break;
 
   case 286: /* DiscardStmt: DISCARD PLANS  */
@@ -39806,7 +39758,7 @@
  { 
  (yyval.str) = mm_strdup("discard plans");
 }
-#line 39810 "preproc.c"
+#line 39762 "preproc.c"
     break;
 
   case 287: /* DiscardStmt: DISCARD SEQUENCES  */
@@ -39814,7 +39766,7 @@
  { 
  (yyval.str) = mm_strdup("discard sequences");
 }
-#line 39818 "preproc.c"
+#line 39770 "preproc.c"
     break;
 
   case 288: /* AlterTableStmt: ALTER TABLE relation_expr alter_table_cmds  */
@@ -39822,7 +39774,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter table"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39826 "preproc.c"
+#line 39778 "preproc.c"
     break;
 
   case 289: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds  */
@@ -39830,7 +39782,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter table if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39834 "preproc.c"
+#line 39786 "preproc.c"
     break;
 
   case 290: /* AlterTableStmt: ALTER TABLE relation_expr partition_cmd  */
@@ -39838,7 +39790,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter table"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39842 "preproc.c"
+#line 39794 "preproc.c"
     break;
 
   case 291: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr partition_cmd  */
@@ -39846,7 +39798,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter table if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39850 "preproc.c"
+#line 39802 "preproc.c"
     break;
 
   case 292: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -39854,7 +39806,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter table all in tablespace"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39858 "preproc.c"
+#line 39810 "preproc.c"
     break;
 
   case 293: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -39862,7 +39814,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter table all in tablespace"),(yyvsp[-7].str),mm_strdup("owned by"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39866 "preproc.c"
+#line 39818 "preproc.c"
     break;
 
   case 294: /* AlterTableStmt: ALTER INDEX qualified_name alter_table_cmds  */
@@ -39870,7 +39822,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter index"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39874 "preproc.c"
+#line 39826 "preproc.c"
     break;
 
   case 295: /* AlterTableStmt: ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds  */
@@ -39878,7 +39830,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter index if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39882 "preproc.c"
+#line 39834 "preproc.c"
     break;
 
   case 296: /* AlterTableStmt: ALTER INDEX qualified_name index_partition_cmd  */
@@ -39886,7 +39838,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter index"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39890 "preproc.c"
+#line 39842 "preproc.c"
     break;
 
   case 297: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -39894,7 +39846,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter index all in tablespace"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39898 "preproc.c"
+#line 39850 "preproc.c"
     break;
 
   case 298: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -39902,7 +39854,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter index all in tablespace"),(yyvsp[-7].str),mm_strdup("owned by"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39906 "preproc.c"
+#line 39858 "preproc.c"
     break;
 
   case 299: /* AlterTableStmt: ALTER SEQUENCE qualified_name alter_table_cmds  */
@@ -39910,7 +39862,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39914 "preproc.c"
+#line 39866 "preproc.c"
     break;
 
   case 300: /* AlterTableStmt: ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds  */
@@ -39918,7 +39870,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39922 "preproc.c"
+#line 39874 "preproc.c"
     break;
 
   case 301: /* AlterTableStmt: ALTER VIEW qualified_name alter_table_cmds  */
@@ -39926,7 +39878,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter view"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39930 "preproc.c"
+#line 39882 "preproc.c"
     break;
 
   case 302: /* AlterTableStmt: ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds  */
@@ -39934,7 +39886,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter view if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39938 "preproc.c"
+#line 39890 "preproc.c"
     break;
 
   case 303: /* AlterTableStmt: ALTER MATERIALIZED VIEW qualified_name alter_table_cmds  */
@@ -39942,7 +39894,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter materialized view"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39946 "preproc.c"
+#line 39898 "preproc.c"
     break;
 
   case 304: /* AlterTableStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name alter_table_cmds  */
@@ -39950,7 +39902,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter materialized view if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39954 "preproc.c"
+#line 39906 "preproc.c"
     break;
 
   case 305: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
@@ -39958,7 +39910,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter materialized view all in tablespace"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39962 "preproc.c"
+#line 39914 "preproc.c"
     break;
 
   case 306: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
@@ -39966,7 +39918,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter materialized view all in tablespace"),(yyvsp[-7].str),mm_strdup("owned by"),(yyvsp[-4].str),mm_strdup("set tablespace"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39970 "preproc.c"
+#line 39922 "preproc.c"
     break;
 
   case 307: /* AlterTableStmt: ALTER FOREIGN TABLE relation_expr alter_table_cmds  */
@@ -39974,7 +39926,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39978 "preproc.c"
+#line 39930 "preproc.c"
     break;
 
   case 308: /* AlterTableStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr alter_table_cmds  */
@@ -39982,7 +39934,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 39986 "preproc.c"
+#line 39938 "preproc.c"
     break;
 
   case 309: /* alter_table_cmds: alter_table_cmd  */
@@ -39990,7 +39942,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 39994 "preproc.c"
+#line 39946 "preproc.c"
     break;
 
   case 310: /* alter_table_cmds: alter_table_cmds ',' alter_table_cmd  */
@@ -39998,7 +39950,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 40002 "preproc.c"
+#line 39954 "preproc.c"
     break;
 
   case 311: /* partition_cmd: ATTACH PARTITION qualified_name PartitionBoundSpec  */
@@ -40006,7 +39958,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("attach partition"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40010 "preproc.c"
+#line 39962 "preproc.c"
     break;
 
   case 312: /* partition_cmd: DETACH PARTITION qualified_name opt_concurrently  */
@@ -40014,7 +39966,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("detach partition"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40018 "preproc.c"
+#line 39970 "preproc.c"
     break;
 
   case 313: /* partition_cmd: DETACH PARTITION qualified_name FINALIZE  */
@@ -40022,7 +39974,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("detach partition"),(yyvsp[-1].str),mm_strdup("finalize"));
 }
-#line 40026 "preproc.c"
+#line 39978 "preproc.c"
     break;
 
   case 314: /* index_partition_cmd: ATTACH PARTITION qualified_name  */
@@ -40030,7 +39982,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("attach partition"),(yyvsp[0].str));
 }
-#line 40034 "preproc.c"
+#line 39986 "preproc.c"
     break;
 
   case 315: /* alter_table_cmd: ADD_P columnDef  */
@@ -40038,7 +39990,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[0].str));
 }
-#line 40042 "preproc.c"
+#line 39994 "preproc.c"
     break;
 
   case 316: /* alter_table_cmd: ADD_P IF_P NOT EXISTS columnDef  */
@@ -40046,7 +39998,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add if not exists"),(yyvsp[0].str));
 }
-#line 40050 "preproc.c"
+#line 40002 "preproc.c"
     break;
 
   case 317: /* alter_table_cmd: ADD_P COLUMN columnDef  */
@@ -40054,7 +40006,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add column"),(yyvsp[0].str));
 }
-#line 40058 "preproc.c"
+#line 40010 "preproc.c"
     break;
 
   case 318: /* alter_table_cmd: ADD_P COLUMN IF_P NOT EXISTS columnDef  */
@@ -40062,7 +40014,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add column if not exists"),(yyvsp[0].str));
 }
-#line 40066 "preproc.c"
+#line 40018 "preproc.c"
     break;
 
   case 319: /* alter_table_cmd: ALTER opt_column ColId alter_column_default  */
@@ -40070,7 +40022,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40074 "preproc.c"
+#line 40026 "preproc.c"
     break;
 
   case 320: /* alter_table_cmd: ALTER opt_column ColId DROP NOT NULL_P  */
@@ -40078,7 +40030,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("drop not null"));
 }
-#line 40082 "preproc.c"
+#line 40034 "preproc.c"
     break;
 
   case 321: /* alter_table_cmd: ALTER opt_column ColId SET NOT NULL_P  */
@@ -40086,7 +40038,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("set not null"));
 }
-#line 40090 "preproc.c"
+#line 40042 "preproc.c"
     break;
 
   case 322: /* alter_table_cmd: ALTER opt_column ColId DROP EXPRESSION  */
@@ -40094,7 +40046,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("drop expression"));
 }
-#line 40098 "preproc.c"
+#line 40050 "preproc.c"
     break;
 
   case 323: /* alter_table_cmd: ALTER opt_column ColId DROP EXPRESSION IF_P EXISTS  */
@@ -40102,7 +40054,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("drop expression if exists"));
 }
-#line 40106 "preproc.c"
+#line 40058 "preproc.c"
     break;
 
   case 324: /* alter_table_cmd: ALTER opt_column ColId SET STATISTICS SignedIconst  */
@@ -40110,7 +40062,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("set statistics"),(yyvsp[0].str));
 }
-#line 40114 "preproc.c"
+#line 40066 "preproc.c"
     break;
 
   case 325: /* alter_table_cmd: ALTER opt_column Iconst SET STATISTICS SignedIconst  */
@@ -40118,7 +40070,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("set statistics"),(yyvsp[0].str));
 }
-#line 40122 "preproc.c"
+#line 40074 "preproc.c"
     break;
 
   case 326: /* alter_table_cmd: ALTER opt_column ColId SET reloptions  */
@@ -40126,7 +40078,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 40130 "preproc.c"
+#line 40082 "preproc.c"
     break;
 
   case 327: /* alter_table_cmd: ALTER opt_column ColId RESET reloptions  */
@@ -40134,7 +40086,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("reset"),(yyvsp[0].str));
 }
-#line 40138 "preproc.c"
+#line 40090 "preproc.c"
     break;
 
   case 328: /* alter_table_cmd: ALTER opt_column ColId SET column_storage  */
@@ -40142,7 +40094,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 40146 "preproc.c"
+#line 40098 "preproc.c"
     break;
 
   case 329: /* alter_table_cmd: ALTER opt_column ColId SET column_compression  */
@@ -40150,7 +40102,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 40154 "preproc.c"
+#line 40106 "preproc.c"
     break;
 
   case 330: /* alter_table_cmd: ALTER opt_column ColId ADD_P GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
@@ -40158,7 +40110,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter"),(yyvsp[-7].str),(yyvsp[-6].str),mm_strdup("add generated"),(yyvsp[-3].str),mm_strdup("as identity"),(yyvsp[0].str));
 }
-#line 40162 "preproc.c"
+#line 40114 "preproc.c"
     break;
 
   case 331: /* alter_table_cmd: ALTER opt_column ColId alter_identity_column_option_list  */
@@ -40166,7 +40118,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40170 "preproc.c"
+#line 40122 "preproc.c"
     break;
 
   case 332: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P  */
@@ -40174,7 +40126,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("drop identity"));
 }
-#line 40178 "preproc.c"
+#line 40130 "preproc.c"
     break;
 
   case 333: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P IF_P EXISTS  */
@@ -40182,7 +40134,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("drop identity if exists"));
 }
-#line 40186 "preproc.c"
+#line 40138 "preproc.c"
     break;
 
   case 334: /* alter_table_cmd: DROP opt_column IF_P EXISTS ColId opt_drop_behavior  */
@@ -40190,7 +40142,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[-4].str),mm_strdup("if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40194 "preproc.c"
+#line 40146 "preproc.c"
     break;
 
   case 335: /* alter_table_cmd: DROP opt_column ColId opt_drop_behavior  */
@@ -40198,7 +40150,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40202 "preproc.c"
+#line 40154 "preproc.c"
     break;
 
   case 336: /* alter_table_cmd: ALTER opt_column ColId opt_set_data TYPE_P Typename opt_collate_clause alter_using  */
@@ -40206,7 +40158,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("alter"),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("type"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40210 "preproc.c"
+#line 40162 "preproc.c"
     break;
 
   case 337: /* alter_table_cmd: ALTER opt_column ColId alter_generic_options  */
@@ -40214,7 +40166,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40218 "preproc.c"
+#line 40170 "preproc.c"
     break;
 
   case 338: /* alter_table_cmd: ADD_P TableConstraint  */
@@ -40222,7 +40174,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[0].str));
 }
-#line 40226 "preproc.c"
+#line 40178 "preproc.c"
     break;
 
   case 339: /* alter_table_cmd: ALTER CONSTRAINT name ConstraintAttributeSpec  */
@@ -40230,7 +40182,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter constraint"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40234 "preproc.c"
+#line 40186 "preproc.c"
     break;
 
   case 340: /* alter_table_cmd: VALIDATE CONSTRAINT name  */
@@ -40238,7 +40190,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("validate constraint"),(yyvsp[0].str));
 }
-#line 40242 "preproc.c"
+#line 40194 "preproc.c"
     break;
 
   case 341: /* alter_table_cmd: DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
@@ -40246,7 +40198,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40250 "preproc.c"
+#line 40202 "preproc.c"
     break;
 
   case 342: /* alter_table_cmd: DROP CONSTRAINT name opt_drop_behavior  */
@@ -40254,7 +40206,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40258 "preproc.c"
+#line 40210 "preproc.c"
     break;
 
   case 343: /* alter_table_cmd: SET WITHOUT OIDS  */
@@ -40262,7 +40214,7 @@
  { 
  (yyval.str) = mm_strdup("set without oids");
 }
-#line 40266 "preproc.c"
+#line 40218 "preproc.c"
     break;
 
   case 344: /* alter_table_cmd: CLUSTER ON name  */
@@ -40270,7 +40222,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("cluster on"),(yyvsp[0].str));
 }
-#line 40274 "preproc.c"
+#line 40226 "preproc.c"
     break;
 
   case 345: /* alter_table_cmd: SET WITHOUT CLUSTER  */
@@ -40278,7 +40230,7 @@
  { 
  (yyval.str) = mm_strdup("set without cluster");
 }
-#line 40282 "preproc.c"
+#line 40234 "preproc.c"
     break;
 
   case 346: /* alter_table_cmd: SET LOGGED  */
@@ -40286,7 +40238,7 @@
  { 
  (yyval.str) = mm_strdup("set logged");
 }
-#line 40290 "preproc.c"
+#line 40242 "preproc.c"
     break;
 
   case 347: /* alter_table_cmd: SET UNLOGGED  */
@@ -40294,7 +40246,7 @@
  { 
  (yyval.str) = mm_strdup("set unlogged");
 }
-#line 40298 "preproc.c"
+#line 40250 "preproc.c"
     break;
 
   case 348: /* alter_table_cmd: ENABLE_P TRIGGER name  */
@@ -40302,7 +40254,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable trigger"),(yyvsp[0].str));
 }
-#line 40306 "preproc.c"
+#line 40258 "preproc.c"
     break;
 
   case 349: /* alter_table_cmd: ENABLE_P ALWAYS TRIGGER name  */
@@ -40310,7 +40262,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable always trigger"),(yyvsp[0].str));
 }
-#line 40314 "preproc.c"
+#line 40266 "preproc.c"
     break;
 
   case 350: /* alter_table_cmd: ENABLE_P REPLICA TRIGGER name  */
@@ -40318,7 +40270,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica trigger"),(yyvsp[0].str));
 }
-#line 40322 "preproc.c"
+#line 40274 "preproc.c"
     break;
 
   case 351: /* alter_table_cmd: ENABLE_P TRIGGER ALL  */
@@ -40326,7 +40278,7 @@
  { 
  (yyval.str) = mm_strdup("enable trigger all");
 }
-#line 40330 "preproc.c"
+#line 40282 "preproc.c"
     break;
 
   case 352: /* alter_table_cmd: ENABLE_P TRIGGER USER  */
@@ -40334,7 +40286,7 @@
  { 
  (yyval.str) = mm_strdup("enable trigger user");
 }
-#line 40338 "preproc.c"
+#line 40290 "preproc.c"
     break;
 
   case 353: /* alter_table_cmd: DISABLE_P TRIGGER name  */
@@ -40342,7 +40294,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("disable trigger"),(yyvsp[0].str));
 }
-#line 40346 "preproc.c"
+#line 40298 "preproc.c"
     break;
 
   case 354: /* alter_table_cmd: DISABLE_P TRIGGER ALL  */
@@ -40350,7 +40302,7 @@
  { 
  (yyval.str) = mm_strdup("disable trigger all");
 }
-#line 40354 "preproc.c"
+#line 40306 "preproc.c"
     break;
 
   case 355: /* alter_table_cmd: DISABLE_P TRIGGER USER  */
@@ -40358,7 +40310,7 @@
  { 
  (yyval.str) = mm_strdup("disable trigger user");
 }
-#line 40362 "preproc.c"
+#line 40314 "preproc.c"
     break;
 
   case 356: /* alter_table_cmd: ENABLE_P RULE name  */
@@ -40366,7 +40318,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable rule"),(yyvsp[0].str));
 }
-#line 40370 "preproc.c"
+#line 40322 "preproc.c"
     break;
 
   case 357: /* alter_table_cmd: ENABLE_P ALWAYS RULE name  */
@@ -40374,7 +40326,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable always rule"),(yyvsp[0].str));
 }
-#line 40378 "preproc.c"
+#line 40330 "preproc.c"
     break;
 
   case 358: /* alter_table_cmd: ENABLE_P REPLICA RULE name  */
@@ -40382,7 +40334,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica rule"),(yyvsp[0].str));
 }
-#line 40386 "preproc.c"
+#line 40338 "preproc.c"
     break;
 
   case 359: /* alter_table_cmd: DISABLE_P RULE name  */
@@ -40390,7 +40342,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("disable rule"),(yyvsp[0].str));
 }
-#line 40394 "preproc.c"
+#line 40346 "preproc.c"
     break;
 
   case 360: /* alter_table_cmd: INHERIT qualified_name  */
@@ -40398,7 +40350,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("inherit"),(yyvsp[0].str));
 }
-#line 40402 "preproc.c"
+#line 40354 "preproc.c"
     break;
 
   case 361: /* alter_table_cmd: NO INHERIT qualified_name  */
@@ -40406,7 +40358,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("no inherit"),(yyvsp[0].str));
 }
-#line 40410 "preproc.c"
+#line 40362 "preproc.c"
     break;
 
   case 362: /* alter_table_cmd: OF any_name  */
@@ -40414,7 +40366,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[0].str));
 }
-#line 40418 "preproc.c"
+#line 40370 "preproc.c"
     break;
 
   case 363: /* alter_table_cmd: NOT OF  */
@@ -40422,7 +40374,7 @@
  { 
  (yyval.str) = mm_strdup("not of");
 }
-#line 40426 "preproc.c"
+#line 40378 "preproc.c"
     break;
 
   case 364: /* alter_table_cmd: OWNER TO RoleSpec  */
@@ -40430,7 +40382,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 40434 "preproc.c"
+#line 40386 "preproc.c"
     break;
 
   case 365: /* alter_table_cmd: SET ACCESS METHOD name  */
@@ -40438,7 +40390,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set access method"),(yyvsp[0].str));
 }
-#line 40442 "preproc.c"
+#line 40394 "preproc.c"
     break;
 
   case 366: /* alter_table_cmd: SET TABLESPACE name  */
@@ -40446,7 +40398,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set tablespace"),(yyvsp[0].str));
 }
-#line 40450 "preproc.c"
+#line 40402 "preproc.c"
     break;
 
   case 367: /* alter_table_cmd: SET reloptions  */
@@ -40454,7 +40406,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 40458 "preproc.c"
+#line 40410 "preproc.c"
     break;
 
   case 368: /* alter_table_cmd: RESET reloptions  */
@@ -40462,7 +40414,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[0].str));
 }
-#line 40466 "preproc.c"
+#line 40418 "preproc.c"
     break;
 
   case 369: /* alter_table_cmd: REPLICA IDENTITY_P replica_identity  */
@@ -40470,7 +40422,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("replica identity"),(yyvsp[0].str));
 }
-#line 40474 "preproc.c"
+#line 40426 "preproc.c"
     break;
 
   case 370: /* alter_table_cmd: ENABLE_P ROW LEVEL SECURITY  */
@@ -40478,7 +40430,7 @@
  { 
  (yyval.str) = mm_strdup("enable row level security");
 }
-#line 40482 "preproc.c"
+#line 40434 "preproc.c"
     break;
 
   case 371: /* alter_table_cmd: DISABLE_P ROW LEVEL SECURITY  */
@@ -40486,7 +40438,7 @@
  { 
  (yyval.str) = mm_strdup("disable row level security");
 }
-#line 40490 "preproc.c"
+#line 40442 "preproc.c"
     break;
 
   case 372: /* alter_table_cmd: FORCE ROW LEVEL SECURITY  */
@@ -40494,7 +40446,7 @@
  { 
  (yyval.str) = mm_strdup("force row level security");
 }
-#line 40498 "preproc.c"
+#line 40450 "preproc.c"
     break;
 
   case 373: /* alter_table_cmd: NO FORCE ROW LEVEL SECURITY  */
@@ -40502,7 +40454,7 @@
  { 
  (yyval.str) = mm_strdup("no force row level security");
 }
-#line 40506 "preproc.c"
+#line 40458 "preproc.c"
     break;
 
   case 374: /* alter_table_cmd: alter_generic_options  */
@@ -40510,7 +40462,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40514 "preproc.c"
+#line 40466 "preproc.c"
     break;
 
   case 375: /* alter_column_default: SET DEFAULT a_expr  */
@@ -40518,7 +40470,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set default"),(yyvsp[0].str));
 }
-#line 40522 "preproc.c"
+#line 40474 "preproc.c"
     break;
 
   case 376: /* alter_column_default: DROP DEFAULT  */
@@ -40526,7 +40478,7 @@
  { 
  (yyval.str) = mm_strdup("drop default");
 }
-#line 40530 "preproc.c"
+#line 40482 "preproc.c"
     break;
 
   case 377: /* opt_collate_clause: COLLATE any_name  */
@@ -40534,14 +40486,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[0].str));
 }
-#line 40538 "preproc.c"
+#line 40490 "preproc.c"
     break;
 
   case 378: /* opt_collate_clause: %empty  */
 #line 3303 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 40545 "preproc.c"
+#line 40497 "preproc.c"
     break;
 
   case 379: /* alter_using: USING a_expr  */
@@ -40549,14 +40501,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[0].str));
 }
-#line 40553 "preproc.c"
+#line 40505 "preproc.c"
     break;
 
   case 380: /* alter_using: %empty  */
 #line 3314 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 40560 "preproc.c"
+#line 40512 "preproc.c"
     break;
 
   case 381: /* replica_identity: NOTHING  */
@@ -40564,7 +40516,7 @@
  { 
  (yyval.str) = mm_strdup("nothing");
 }
-#line 40568 "preproc.c"
+#line 40520 "preproc.c"
     break;
 
   case 382: /* replica_identity: FULL  */
@@ -40572,7 +40524,7 @@
  { 
  (yyval.str) = mm_strdup("full");
 }
-#line 40576 "preproc.c"
+#line 40528 "preproc.c"
     break;
 
   case 383: /* replica_identity: DEFAULT  */
@@ -40580,7 +40532,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 40584 "preproc.c"
+#line 40536 "preproc.c"
     break;
 
   case 384: /* replica_identity: USING INDEX name  */
@@ -40588,7 +40540,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using index"),(yyvsp[0].str));
 }
-#line 40592 "preproc.c"
+#line 40544 "preproc.c"
     break;
 
   case 385: /* reloptions: '(' reloption_list ')'  */
@@ -40596,7 +40548,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 40600 "preproc.c"
+#line 40552 "preproc.c"
     break;
 
   case 386: /* opt_reloptions: WITH reloptions  */
@@ -40604,14 +40556,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[0].str));
 }
-#line 40608 "preproc.c"
+#line 40560 "preproc.c"
     break;
 
   case 387: /* opt_reloptions: %empty  */
 #line 3353 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 40615 "preproc.c"
+#line 40567 "preproc.c"
     break;
 
   case 388: /* reloption_list: reloption_elem  */
@@ -40619,7 +40571,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40623 "preproc.c"
+#line 40575 "preproc.c"
     break;
 
   case 389: /* reloption_list: reloption_list ',' reloption_elem  */
@@ -40627,7 +40579,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 40631 "preproc.c"
+#line 40583 "preproc.c"
     break;
 
   case 390: /* reloption_elem: ColLabel '=' def_arg  */
@@ -40635,7 +40587,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 40639 "preproc.c"
+#line 40591 "preproc.c"
     break;
 
   case 391: /* reloption_elem: ColLabel  */
@@ -40643,7 +40595,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40647 "preproc.c"
+#line 40599 "preproc.c"
     break;
 
   case 392: /* reloption_elem: ColLabel '.' ColLabel '=' def_arg  */
@@ -40651,7 +40603,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("."),(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 40655 "preproc.c"
+#line 40607 "preproc.c"
     break;
 
   case 393: /* reloption_elem: ColLabel '.' ColLabel  */
@@ -40659,7 +40611,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("."),(yyvsp[0].str));
 }
-#line 40663 "preproc.c"
+#line 40615 "preproc.c"
     break;
 
   case 394: /* alter_identity_column_option_list: alter_identity_column_option  */
@@ -40667,7 +40619,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40671 "preproc.c"
+#line 40623 "preproc.c"
     break;
 
   case 395: /* alter_identity_column_option_list: alter_identity_column_option_list alter_identity_column_option  */
@@ -40675,7 +40627,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40679 "preproc.c"
+#line 40631 "preproc.c"
     break;
 
   case 396: /* alter_identity_column_option: RESTART  */
@@ -40683,7 +40635,7 @@
  { 
  (yyval.str) = mm_strdup("restart");
 }
-#line 40687 "preproc.c"
+#line 40639 "preproc.c"
     break;
 
   case 397: /* alter_identity_column_option: RESTART opt_with NumericOnly  */
@@ -40691,7 +40643,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("restart"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40695 "preproc.c"
+#line 40647 "preproc.c"
     break;
 
   case 398: /* alter_identity_column_option: SET SeqOptElem  */
@@ -40699,7 +40651,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 40703 "preproc.c"
+#line 40655 "preproc.c"
     break;
 
   case 399: /* alter_identity_column_option: SET GENERATED generated_when  */
@@ -40707,7 +40659,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set generated"),(yyvsp[0].str));
 }
-#line 40711 "preproc.c"
+#line 40663 "preproc.c"
     break;
 
   case 400: /* PartitionBoundSpec: FOR VALUES WITH '(' hash_partbound ')'  */
@@ -40715,7 +40667,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("for values with ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 40719 "preproc.c"
+#line 40671 "preproc.c"
     break;
 
   case 401: /* PartitionBoundSpec: FOR VALUES IN_P '(' expr_list ')'  */
@@ -40723,7 +40675,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("for values in ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 40727 "preproc.c"
+#line 40679 "preproc.c"
     break;
 
   case 402: /* PartitionBoundSpec: FOR VALUES FROM '(' expr_list ')' TO '(' expr_list ')'  */
@@ -40731,7 +40683,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("for values from ("),(yyvsp[-5].str),mm_strdup(") to ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 40735 "preproc.c"
+#line 40687 "preproc.c"
     break;
 
   case 403: /* PartitionBoundSpec: DEFAULT  */
@@ -40739,7 +40691,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 40743 "preproc.c"
+#line 40695 "preproc.c"
     break;
 
   case 404: /* hash_partbound_elem: NonReservedWord Iconst  */
@@ -40747,7 +40699,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40751 "preproc.c"
+#line 40703 "preproc.c"
     break;
 
   case 405: /* hash_partbound: hash_partbound_elem  */
@@ -40755,7 +40707,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40759 "preproc.c"
+#line 40711 "preproc.c"
     break;
 
   case 406: /* hash_partbound: hash_partbound ',' hash_partbound_elem  */
@@ -40763,7 +40715,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 40767 "preproc.c"
+#line 40719 "preproc.c"
     break;
 
   case 407: /* AlterCompositeTypeStmt: ALTER TYPE_P any_name alter_type_cmds  */
@@ -40771,7 +40723,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter type"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40775 "preproc.c"
+#line 40727 "preproc.c"
     break;
 
   case 408: /* alter_type_cmds: alter_type_cmd  */
@@ -40779,7 +40731,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40783 "preproc.c"
+#line 40735 "preproc.c"
     break;
 
   case 409: /* alter_type_cmds: alter_type_cmds ',' alter_type_cmd  */
@@ -40787,7 +40739,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 40791 "preproc.c"
+#line 40743 "preproc.c"
     break;
 
   case 410: /* alter_type_cmd: ADD_P ATTRIBUTE TableFuncElement opt_drop_behavior  */
@@ -40795,7 +40747,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("add attribute"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40799 "preproc.c"
+#line 40751 "preproc.c"
     break;
 
   case 411: /* alter_type_cmd: DROP ATTRIBUTE IF_P EXISTS ColId opt_drop_behavior  */
@@ -40803,7 +40755,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40807 "preproc.c"
+#line 40759 "preproc.c"
     break;
 
   case 412: /* alter_type_cmd: DROP ATTRIBUTE ColId opt_drop_behavior  */
@@ -40811,7 +40763,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40815 "preproc.c"
+#line 40767 "preproc.c"
     break;
 
   case 413: /* alter_type_cmd: ALTER ATTRIBUTE ColId opt_set_data TYPE_P Typename opt_collate_clause opt_drop_behavior  */
@@ -40819,7 +40771,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter attribute"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("type"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40823 "preproc.c"
+#line 40775 "preproc.c"
     break;
 
   case 414: /* ClosePortalStmt: CLOSE cursor_name  */
@@ -40839,7 +40791,7 @@
 		}
 		(yyval.str) = cat2_str(mm_strdup("close"), cursor_marker);
 	}
-#line 40843 "preproc.c"
+#line 40795 "preproc.c"
     break;
 
   case 415: /* ClosePortalStmt: CLOSE ALL  */
@@ -40847,7 +40799,7 @@
  { 
  (yyval.str) = mm_strdup("close all");
 }
-#line 40851 "preproc.c"
+#line 40803 "preproc.c"
     break;
 
   case 416: /* CopyStmt: COPY opt_binary qualified_name opt_column_list copy_from opt_program copy_file_name copy_delimiter opt_with copy_options where_clause  */
@@ -40859,7 +40811,7 @@
 
  (yyval.str) = cat_str(11,mm_strdup("copy"),(yyvsp[-9].str),(yyvsp[-8].str),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40863 "preproc.c"
+#line 40815 "preproc.c"
     break;
 
   case 417: /* CopyStmt: COPY '(' PreparableStmt ')' TO opt_program copy_file_name opt_with copy_options  */
@@ -40867,7 +40819,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("copy ("),(yyvsp[-6].str),mm_strdup(") to"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40871 "preproc.c"
+#line 40823 "preproc.c"
     break;
 
   case 418: /* copy_from: FROM  */
@@ -40875,7 +40827,7 @@
  { 
  (yyval.str) = mm_strdup("from");
 }
-#line 40879 "preproc.c"
+#line 40831 "preproc.c"
     break;
 
   case 419: /* copy_from: TO  */
@@ -40883,7 +40835,7 @@
  { 
  (yyval.str) = mm_strdup("to");
 }
-#line 40887 "preproc.c"
+#line 40839 "preproc.c"
     break;
 
   case 420: /* opt_program: PROGRAM  */
@@ -40891,14 +40843,14 @@
  { 
  (yyval.str) = mm_strdup("program");
 }
-#line 40895 "preproc.c"
+#line 40847 "preproc.c"
     break;
 
   case 421: /* opt_program: %empty  */
 #line 3560 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 40902 "preproc.c"
+#line 40854 "preproc.c"
     break;
 
   case 422: /* copy_file_name: ecpg_sconst  */
@@ -40906,7 +40858,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40910 "preproc.c"
+#line 40862 "preproc.c"
     break;
 
   case 423: /* copy_file_name: STDIN  */
@@ -40914,7 +40866,7 @@
  { 
  (yyval.str) = mm_strdup("stdin");
 }
-#line 40918 "preproc.c"
+#line 40870 "preproc.c"
     break;
 
   case 424: /* copy_file_name: STDOUT  */
@@ -40922,7 +40874,7 @@
  { 
  (yyval.str) = mm_strdup("stdout");
 }
-#line 40926 "preproc.c"
+#line 40878 "preproc.c"
     break;
 
   case 425: /* copy_options: copy_opt_list  */
@@ -40930,7 +40882,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 40934 "preproc.c"
+#line 40886 "preproc.c"
     break;
 
   case 426: /* copy_options: '(' copy_generic_opt_list ')'  */
@@ -40938,7 +40890,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 40942 "preproc.c"
+#line 40894 "preproc.c"
     break;
 
   case 427: /* copy_opt_list: copy_opt_list copy_opt_item  */
@@ -40946,14 +40898,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40950 "preproc.c"
+#line 40902 "preproc.c"
     break;
 
   case 428: /* copy_opt_list: %empty  */
 #line 3599 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 40957 "preproc.c"
+#line 40909 "preproc.c"
     break;
 
   case 429: /* copy_opt_item: BINARY  */
@@ -40961,7 +40913,7 @@
  { 
  (yyval.str) = mm_strdup("binary");
 }
-#line 40965 "preproc.c"
+#line 40917 "preproc.c"
     break;
 
   case 430: /* copy_opt_item: FREEZE  */
@@ -40969,7 +40921,7 @@
  { 
  (yyval.str) = mm_strdup("freeze");
 }
-#line 40973 "preproc.c"
+#line 40925 "preproc.c"
     break;
 
   case 431: /* copy_opt_item: DELIMITER opt_as ecpg_sconst  */
@@ -40977,7 +40929,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("delimiter"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40981 "preproc.c"
+#line 40933 "preproc.c"
     break;
 
   case 432: /* copy_opt_item: NULL_P opt_as ecpg_sconst  */
@@ -40985,7 +40937,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("null"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 40989 "preproc.c"
+#line 40941 "preproc.c"
     break;
 
   case 433: /* copy_opt_item: CSV  */
@@ -40993,7 +40945,7 @@
  { 
  (yyval.str) = mm_strdup("csv");
 }
-#line 40997 "preproc.c"
+#line 40949 "preproc.c"
     break;
 
   case 434: /* copy_opt_item: HEADER_P  */
@@ -41001,7 +40953,7 @@
  { 
  (yyval.str) = mm_strdup("header");
 }
-#line 41005 "preproc.c"
+#line 40957 "preproc.c"
     break;
 
   case 435: /* copy_opt_item: QUOTE opt_as ecpg_sconst  */
@@ -41009,7 +40961,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("quote"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41013 "preproc.c"
+#line 40965 "preproc.c"
     break;
 
   case 436: /* copy_opt_item: ESCAPE opt_as ecpg_sconst  */
@@ -41017,7 +40969,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("escape"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41021 "preproc.c"
+#line 40973 "preproc.c"
     break;
 
   case 437: /* copy_opt_item: FORCE QUOTE columnList  */
@@ -41025,7 +40977,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("force quote"),(yyvsp[0].str));
 }
-#line 41029 "preproc.c"
+#line 40981 "preproc.c"
     break;
 
   case 438: /* copy_opt_item: FORCE QUOTE '*'  */
@@ -41033,7 +40985,7 @@
  { 
  (yyval.str) = mm_strdup("force quote *");
 }
-#line 41037 "preproc.c"
+#line 40989 "preproc.c"
     break;
 
   case 439: /* copy_opt_item: FORCE NOT NULL_P columnList  */
@@ -41041,7 +40993,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("force not null"),(yyvsp[0].str));
 }
-#line 41045 "preproc.c"
+#line 40997 "preproc.c"
     break;
 
   case 440: /* copy_opt_item: FORCE NULL_P columnList  */
@@ -41049,7 +41001,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("force null"),(yyvsp[0].str));
 }
-#line 41053 "preproc.c"
+#line 41005 "preproc.c"
     break;
 
   case 441: /* copy_opt_item: ENCODING ecpg_sconst  */
@@ -41057,7 +41009,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("encoding"),(yyvsp[0].str));
 }
-#line 41061 "preproc.c"
+#line 41013 "preproc.c"
     break;
 
   case 442: /* opt_binary: BINARY  */
@@ -41065,14 +41017,14 @@
  { 
  (yyval.str) = mm_strdup("binary");
 }
-#line 41069 "preproc.c"
+#line 41021 "preproc.c"
     break;
 
   case 443: /* opt_binary: %empty  */
 #line 3666 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41076 "preproc.c"
+#line 41028 "preproc.c"
     break;
 
   case 444: /* copy_delimiter: opt_using DELIMITERS ecpg_sconst  */
@@ -41080,14 +41032,14 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("delimiters"),(yyvsp[0].str));
 }
-#line 41084 "preproc.c"
+#line 41036 "preproc.c"
     break;
 
   case 445: /* copy_delimiter: %empty  */
 #line 3677 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41091 "preproc.c"
+#line 41043 "preproc.c"
     break;
 
   case 446: /* opt_using: USING  */
@@ -41095,14 +41047,14 @@
  { 
  (yyval.str) = mm_strdup("using");
 }
-#line 41099 "preproc.c"
+#line 41051 "preproc.c"
     break;
 
   case 447: /* opt_using: %empty  */
 #line 3688 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41106 "preproc.c"
+#line 41058 "preproc.c"
     break;
 
   case 448: /* copy_generic_opt_list: copy_generic_opt_elem  */
@@ -41110,7 +41062,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41114 "preproc.c"
+#line 41066 "preproc.c"
     break;
 
   case 449: /* copy_generic_opt_list: copy_generic_opt_list ',' copy_generic_opt_elem  */
@@ -41118,7 +41070,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41122 "preproc.c"
+#line 41074 "preproc.c"
     break;
 
   case 450: /* copy_generic_opt_elem: ColLabel copy_generic_opt_arg  */
@@ -41126,7 +41078,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41130 "preproc.c"
+#line 41082 "preproc.c"
     break;
 
   case 451: /* copy_generic_opt_arg: opt_boolean_or_string  */
@@ -41134,7 +41086,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41138 "preproc.c"
+#line 41090 "preproc.c"
     break;
 
   case 452: /* copy_generic_opt_arg: NumericOnly  */
@@ -41142,7 +41094,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41146 "preproc.c"
+#line 41098 "preproc.c"
     break;
 
   case 453: /* copy_generic_opt_arg: '*'  */
@@ -41150,7 +41102,7 @@
  { 
  (yyval.str) = mm_strdup("*");
 }
-#line 41154 "preproc.c"
+#line 41106 "preproc.c"
     break;
 
   case 454: /* copy_generic_opt_arg: '(' copy_generic_opt_arg_list ')'  */
@@ -41158,14 +41110,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 41162 "preproc.c"
+#line 41114 "preproc.c"
     break;
 
   case 455: /* copy_generic_opt_arg: %empty  */
 #line 3731 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41169 "preproc.c"
+#line 41121 "preproc.c"
     break;
 
   case 456: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list_item  */
@@ -41173,7 +41125,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41177 "preproc.c"
+#line 41129 "preproc.c"
     break;
 
   case 457: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item  */
@@ -41181,7 +41133,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41185 "preproc.c"
+#line 41137 "preproc.c"
     break;
 
   case 458: /* copy_generic_opt_arg_list_item: opt_boolean_or_string  */
@@ -41189,7 +41141,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41193 "preproc.c"
+#line 41145 "preproc.c"
     break;
 
   case 459: /* CreateStmt: CREATE OptTemp TABLE qualified_name '(' OptTableElementList ')' OptInherit OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41197,7 +41149,7 @@
  { 
  (yyval.str) = cat_str(13,mm_strdup("create"),(yyvsp[-11].str),mm_strdup("table"),(yyvsp[-9].str),mm_strdup("("),(yyvsp[-7].str),mm_strdup(")"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41201 "preproc.c"
+#line 41153 "preproc.c"
     break;
 
   case 460: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41205,7 +41157,7 @@
  { 
  (yyval.str) = cat_str(13,mm_strdup("create"),(yyvsp[-14].str),mm_strdup("table if not exists"),(yyvsp[-9].str),mm_strdup("("),(yyvsp[-7].str),mm_strdup(")"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41209 "preproc.c"
+#line 41161 "preproc.c"
     break;
 
   case 461: /* CreateStmt: CREATE OptTemp TABLE qualified_name OF any_name OptTypedTableElementList OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41213,7 +41165,7 @@
  { 
  (yyval.str) = cat_str(12,mm_strdup("create"),(yyvsp[-10].str),mm_strdup("table"),(yyvsp[-8].str),mm_strdup("of"),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41217 "preproc.c"
+#line 41169 "preproc.c"
     break;
 
   case 462: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name OF any_name OptTypedTableElementList OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41221,7 +41173,7 @@
  { 
  (yyval.str) = cat_str(12,mm_strdup("create"),(yyvsp[-13].str),mm_strdup("table if not exists"),(yyvsp[-8].str),mm_strdup("of"),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41225 "preproc.c"
+#line 41177 "preproc.c"
     break;
 
   case 463: /* CreateStmt: CREATE OptTemp TABLE qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41229,7 +41181,7 @@
  { 
  (yyval.str) = cat_str(13,mm_strdup("create"),(yyvsp[-12].str),mm_strdup("table"),(yyvsp[-10].str),mm_strdup("partition of"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41233 "preproc.c"
+#line 41185 "preproc.c"
     break;
 
   case 464: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec OptPartitionSpec table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -41237,7 +41189,7 @@
  { 
  (yyval.str) = cat_str(13,mm_strdup("create"),(yyvsp[-15].str),mm_strdup("table if not exists"),(yyvsp[-10].str),mm_strdup("partition of"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41241 "preproc.c"
+#line 41193 "preproc.c"
     break;
 
   case 465: /* OptTemp: TEMPORARY  */
@@ -41245,7 +41197,7 @@
  { 
  (yyval.str) = mm_strdup("temporary");
 }
-#line 41249 "preproc.c"
+#line 41201 "preproc.c"
     break;
 
   case 466: /* OptTemp: TEMP  */
@@ -41253,7 +41205,7 @@
  { 
  (yyval.str) = mm_strdup("temp");
 }
-#line 41257 "preproc.c"
+#line 41209 "preproc.c"
     break;
 
   case 467: /* OptTemp: LOCAL TEMPORARY  */
@@ -41261,7 +41213,7 @@
  { 
  (yyval.str) = mm_strdup("local temporary");
 }
-#line 41265 "preproc.c"
+#line 41217 "preproc.c"
     break;
 
   case 468: /* OptTemp: LOCAL TEMP  */
@@ -41269,7 +41221,7 @@
  { 
  (yyval.str) = mm_strdup("local temp");
 }
-#line 41273 "preproc.c"
+#line 41225 "preproc.c"
     break;
 
   case 469: /* OptTemp: GLOBAL TEMPORARY  */
@@ -41277,7 +41229,7 @@
  { 
  (yyval.str) = mm_strdup("global temporary");
 }
-#line 41281 "preproc.c"
+#line 41233 "preproc.c"
     break;
 
   case 470: /* OptTemp: GLOBAL TEMP  */
@@ -41285,7 +41237,7 @@
  { 
  (yyval.str) = mm_strdup("global temp");
 }
-#line 41289 "preproc.c"
+#line 41241 "preproc.c"
     break;
 
   case 471: /* OptTemp: UNLOGGED  */
@@ -41293,14 +41245,14 @@
  { 
  (yyval.str) = mm_strdup("unlogged");
 }
-#line 41297 "preproc.c"
+#line 41249 "preproc.c"
     break;
 
   case 472: /* OptTemp: %empty  */
 #line 3814 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41304 "preproc.c"
+#line 41256 "preproc.c"
     break;
 
   case 473: /* OptTableElementList: TableElementList  */
@@ -41308,14 +41260,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41312 "preproc.c"
+#line 41264 "preproc.c"
     break;
 
   case 474: /* OptTableElementList: %empty  */
 #line 3825 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41319 "preproc.c"
+#line 41271 "preproc.c"
     break;
 
   case 475: /* OptTypedTableElementList: '(' TypedTableElementList ')'  */
@@ -41323,14 +41275,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 41327 "preproc.c"
+#line 41279 "preproc.c"
     break;
 
   case 476: /* OptTypedTableElementList: %empty  */
 #line 3836 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41334 "preproc.c"
+#line 41286 "preproc.c"
     break;
 
   case 477: /* TableElementList: TableElement  */
@@ -41338,7 +41290,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41342 "preproc.c"
+#line 41294 "preproc.c"
     break;
 
   case 478: /* TableElementList: TableElementList ',' TableElement  */
@@ -41346,7 +41298,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41350 "preproc.c"
+#line 41302 "preproc.c"
     break;
 
   case 479: /* TypedTableElementList: TypedTableElement  */
@@ -41354,7 +41306,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41358 "preproc.c"
+#line 41310 "preproc.c"
     break;
 
   case 480: /* TypedTableElementList: TypedTableElementList ',' TypedTableElement  */
@@ -41362,7 +41314,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41366 "preproc.c"
+#line 41318 "preproc.c"
     break;
 
   case 481: /* TableElement: columnDef  */
@@ -41370,7 +41322,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41374 "preproc.c"
+#line 41326 "preproc.c"
     break;
 
   case 482: /* TableElement: TableLikeClause  */
@@ -41378,7 +41330,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41382 "preproc.c"
+#line 41334 "preproc.c"
     break;
 
   case 483: /* TableElement: TableConstraint  */
@@ -41386,7 +41338,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41390 "preproc.c"
+#line 41342 "preproc.c"
     break;
 
   case 484: /* TypedTableElement: columnOptions  */
@@ -41394,7 +41346,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41398 "preproc.c"
+#line 41350 "preproc.c"
     break;
 
   case 485: /* TypedTableElement: TableConstraint  */
@@ -41402,7 +41354,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41406 "preproc.c"
+#line 41358 "preproc.c"
     break;
 
   case 486: /* columnDef: ColId Typename opt_column_storage opt_column_compression create_generic_options ColQualList  */
@@ -41410,7 +41362,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41414 "preproc.c"
+#line 41366 "preproc.c"
     break;
 
   case 487: /* columnOptions: ColId ColQualList  */
@@ -41418,7 +41370,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41422 "preproc.c"
+#line 41374 "preproc.c"
     break;
 
   case 488: /* columnOptions: ColId WITH OPTIONS ColQualList  */
@@ -41426,7 +41378,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("with options"),(yyvsp[0].str));
 }
-#line 41430 "preproc.c"
+#line 41382 "preproc.c"
     break;
 
   case 489: /* column_compression: COMPRESSION ColId  */
@@ -41434,7 +41386,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("compression"),(yyvsp[0].str));
 }
-#line 41438 "preproc.c"
+#line 41390 "preproc.c"
     break;
 
   case 490: /* column_compression: COMPRESSION DEFAULT  */
@@ -41442,7 +41394,7 @@
  { 
  (yyval.str) = mm_strdup("compression default");
 }
-#line 41446 "preproc.c"
+#line 41398 "preproc.c"
     break;
 
   case 491: /* opt_column_compression: column_compression  */
@@ -41450,14 +41402,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41454 "preproc.c"
+#line 41406 "preproc.c"
     break;
 
   case 492: /* opt_column_compression: %empty  */
 #line 3931 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41461 "preproc.c"
+#line 41413 "preproc.c"
     break;
 
   case 493: /* column_storage: STORAGE ColId  */
@@ -41465,7 +41417,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("storage"),(yyvsp[0].str));
 }
-#line 41469 "preproc.c"
+#line 41421 "preproc.c"
     break;
 
   case 494: /* column_storage: STORAGE DEFAULT  */
@@ -41473,7 +41425,7 @@
  { 
  (yyval.str) = mm_strdup("storage default");
 }
-#line 41477 "preproc.c"
+#line 41429 "preproc.c"
     break;
 
   case 495: /* opt_column_storage: column_storage  */
@@ -41481,14 +41433,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41485 "preproc.c"
+#line 41437 "preproc.c"
     break;
 
   case 496: /* opt_column_storage: %empty  */
 #line 3954 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41492 "preproc.c"
+#line 41444 "preproc.c"
     break;
 
   case 497: /* ColQualList: ColQualList ColConstraint  */
@@ -41496,14 +41448,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41500 "preproc.c"
+#line 41452 "preproc.c"
     break;
 
   case 498: /* ColQualList: %empty  */
 #line 3965 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41507 "preproc.c"
+#line 41459 "preproc.c"
     break;
 
   case 499: /* ColConstraint: CONSTRAINT name ColConstraintElem  */
@@ -41511,7 +41463,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41515 "preproc.c"
+#line 41467 "preproc.c"
     break;
 
   case 500: /* ColConstraint: ColConstraintElem  */
@@ -41519,7 +41471,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41523 "preproc.c"
+#line 41475 "preproc.c"
     break;
 
   case 501: /* ColConstraint: ConstraintAttr  */
@@ -41527,7 +41479,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41531 "preproc.c"
+#line 41483 "preproc.c"
     break;
 
   case 502: /* ColConstraint: COLLATE any_name  */
@@ -41535,7 +41487,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[0].str));
 }
-#line 41539 "preproc.c"
+#line 41491 "preproc.c"
     break;
 
   case 503: /* ColConstraintElem: NOT NULL_P  */
@@ -41543,7 +41495,7 @@
  { 
  (yyval.str) = mm_strdup("not null");
 }
-#line 41547 "preproc.c"
+#line 41499 "preproc.c"
     break;
 
   case 504: /* ColConstraintElem: NULL_P  */
@@ -41551,7 +41503,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 41555 "preproc.c"
+#line 41507 "preproc.c"
     break;
 
   case 505: /* ColConstraintElem: UNIQUE opt_unique_null_treatment opt_definition OptConsTableSpace  */
@@ -41559,7 +41511,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("unique"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41563 "preproc.c"
+#line 41515 "preproc.c"
     break;
 
   case 506: /* ColConstraintElem: PRIMARY KEY opt_definition OptConsTableSpace  */
@@ -41567,7 +41519,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41571 "preproc.c"
+#line 41523 "preproc.c"
     break;
 
   case 507: /* ColConstraintElem: CHECK '(' a_expr ')' opt_no_inherit  */
@@ -41575,7 +41527,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 41579 "preproc.c"
+#line 41531 "preproc.c"
     break;
 
   case 508: /* ColConstraintElem: DEFAULT b_expr  */
@@ -41583,7 +41535,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("default"),(yyvsp[0].str));
 }
-#line 41587 "preproc.c"
+#line 41539 "preproc.c"
     break;
 
   case 509: /* ColConstraintElem: GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
@@ -41591,7 +41543,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("generated"),(yyvsp[-3].str),mm_strdup("as identity"),(yyvsp[0].str));
 }
-#line 41595 "preproc.c"
+#line 41547 "preproc.c"
     break;
 
   case 510: /* ColConstraintElem: GENERATED generated_when AS '(' a_expr ')' STORED  */
@@ -41599,7 +41551,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("generated"),(yyvsp[-5].str),mm_strdup("as ("),(yyvsp[-2].str),mm_strdup(") stored"));
 }
-#line 41603 "preproc.c"
+#line 41555 "preproc.c"
     break;
 
   case 511: /* ColConstraintElem: REFERENCES qualified_name opt_column_list key_match key_actions  */
@@ -41607,7 +41559,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("references"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41611 "preproc.c"
+#line 41563 "preproc.c"
     break;
 
   case 512: /* opt_unique_null_treatment: NULLS_P DISTINCT  */
@@ -41615,7 +41567,7 @@
  { 
  (yyval.str) = mm_strdup("nulls distinct");
 }
-#line 41619 "preproc.c"
+#line 41571 "preproc.c"
     break;
 
   case 513: /* opt_unique_null_treatment: NULLS_P NOT DISTINCT  */
@@ -41623,14 +41575,14 @@
  { 
  (yyval.str) = mm_strdup("nulls not distinct");
 }
-#line 41627 "preproc.c"
+#line 41579 "preproc.c"
     break;
 
   case 514: /* opt_unique_null_treatment: %empty  */
 #line 4040 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41634 "preproc.c"
+#line 41586 "preproc.c"
     break;
 
   case 515: /* generated_when: ALWAYS  */
@@ -41638,7 +41590,7 @@
  { 
  (yyval.str) = mm_strdup("always");
 }
-#line 41642 "preproc.c"
+#line 41594 "preproc.c"
     break;
 
   case 516: /* generated_when: BY DEFAULT  */
@@ -41646,7 +41598,7 @@
  { 
  (yyval.str) = mm_strdup("by default");
 }
-#line 41650 "preproc.c"
+#line 41602 "preproc.c"
     break;
 
   case 517: /* ConstraintAttr: DEFERRABLE  */
@@ -41654,7 +41606,7 @@
  { 
  (yyval.str) = mm_strdup("deferrable");
 }
-#line 41658 "preproc.c"
+#line 41610 "preproc.c"
     break;
 
   case 518: /* ConstraintAttr: NOT DEFERRABLE  */
@@ -41662,7 +41614,7 @@
  { 
  (yyval.str) = mm_strdup("not deferrable");
 }
-#line 41666 "preproc.c"
+#line 41618 "preproc.c"
     break;
 
   case 519: /* ConstraintAttr: INITIALLY DEFERRED  */
@@ -41670,7 +41622,7 @@
  { 
  (yyval.str) = mm_strdup("initially deferred");
 }
-#line 41674 "preproc.c"
+#line 41626 "preproc.c"
     break;
 
   case 520: /* ConstraintAttr: INITIALLY IMMEDIATE  */
@@ -41678,7 +41630,7 @@
  { 
  (yyval.str) = mm_strdup("initially immediate");
 }
-#line 41682 "preproc.c"
+#line 41634 "preproc.c"
     break;
 
   case 521: /* TableLikeClause: LIKE qualified_name TableLikeOptionList  */
@@ -41686,7 +41638,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("like"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41690 "preproc.c"
+#line 41642 "preproc.c"
     break;
 
   case 522: /* TableLikeOptionList: TableLikeOptionList INCLUDING TableLikeOption  */
@@ -41694,7 +41646,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("including"),(yyvsp[0].str));
 }
-#line 41698 "preproc.c"
+#line 41650 "preproc.c"
     break;
 
   case 523: /* TableLikeOptionList: TableLikeOptionList EXCLUDING TableLikeOption  */
@@ -41702,14 +41654,14 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("excluding"),(yyvsp[0].str));
 }
-#line 41706 "preproc.c"
+#line 41658 "preproc.c"
     break;
 
   case 524: /* TableLikeOptionList: %empty  */
 #line 4095 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41713 "preproc.c"
+#line 41665 "preproc.c"
     break;
 
   case 525: /* TableLikeOption: COMMENTS  */
@@ -41717,7 +41669,7 @@
  { 
  (yyval.str) = mm_strdup("comments");
 }
-#line 41721 "preproc.c"
+#line 41673 "preproc.c"
     break;
 
   case 526: /* TableLikeOption: COMPRESSION  */
@@ -41725,7 +41677,7 @@
  { 
  (yyval.str) = mm_strdup("compression");
 }
-#line 41729 "preproc.c"
+#line 41681 "preproc.c"
     break;
 
   case 527: /* TableLikeOption: CONSTRAINTS  */
@@ -41733,7 +41685,7 @@
  { 
  (yyval.str) = mm_strdup("constraints");
 }
-#line 41737 "preproc.c"
+#line 41689 "preproc.c"
     break;
 
   case 528: /* TableLikeOption: DEFAULTS  */
@@ -41741,7 +41693,7 @@
  { 
  (yyval.str) = mm_strdup("defaults");
 }
-#line 41745 "preproc.c"
+#line 41697 "preproc.c"
     break;
 
   case 529: /* TableLikeOption: IDENTITY_P  */
@@ -41749,7 +41701,7 @@
  { 
  (yyval.str) = mm_strdup("identity");
 }
-#line 41753 "preproc.c"
+#line 41705 "preproc.c"
     break;
 
   case 530: /* TableLikeOption: GENERATED  */
@@ -41757,7 +41709,7 @@
  { 
  (yyval.str) = mm_strdup("generated");
 }
-#line 41761 "preproc.c"
+#line 41713 "preproc.c"
     break;
 
   case 531: /* TableLikeOption: INDEXES  */
@@ -41765,7 +41717,7 @@
  { 
  (yyval.str) = mm_strdup("indexes");
 }
-#line 41769 "preproc.c"
+#line 41721 "preproc.c"
     break;
 
   case 532: /* TableLikeOption: STATISTICS  */
@@ -41773,7 +41725,7 @@
  { 
  (yyval.str) = mm_strdup("statistics");
 }
-#line 41777 "preproc.c"
+#line 41729 "preproc.c"
     break;
 
   case 533: /* TableLikeOption: STORAGE  */
@@ -41781,7 +41733,7 @@
  { 
  (yyval.str) = mm_strdup("storage");
 }
-#line 41785 "preproc.c"
+#line 41737 "preproc.c"
     break;
 
   case 534: /* TableLikeOption: ALL  */
@@ -41789,7 +41741,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 41793 "preproc.c"
+#line 41745 "preproc.c"
     break;
 
   case 535: /* TableConstraint: CONSTRAINT name ConstraintElem  */
@@ -41797,7 +41749,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41801 "preproc.c"
+#line 41753 "preproc.c"
     break;
 
   case 536: /* TableConstraint: ConstraintElem  */
@@ -41805,7 +41757,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41809 "preproc.c"
+#line 41761 "preproc.c"
     break;
 
   case 537: /* ConstraintElem: CHECK '(' a_expr ')' ConstraintAttributeSpec  */
@@ -41813,7 +41765,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 41817 "preproc.c"
+#line 41769 "preproc.c"
     break;
 
   case 538: /* ConstraintElem: UNIQUE opt_unique_null_treatment '(' columnList ')' opt_c_include opt_definition OptConsTableSpace ConstraintAttributeSpec  */
@@ -41821,7 +41773,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("unique"),(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41825 "preproc.c"
+#line 41777 "preproc.c"
     break;
 
   case 539: /* ConstraintElem: UNIQUE ExistingIndex ConstraintAttributeSpec  */
@@ -41829,7 +41781,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41833 "preproc.c"
+#line 41785 "preproc.c"
     break;
 
   case 540: /* ConstraintElem: PRIMARY KEY '(' columnList ')' opt_c_include opt_definition OptConsTableSpace ConstraintAttributeSpec  */
@@ -41837,7 +41789,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("primary key ("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41841 "preproc.c"
+#line 41793 "preproc.c"
     break;
 
   case 541: /* ConstraintElem: PRIMARY KEY ExistingIndex ConstraintAttributeSpec  */
@@ -41845,7 +41797,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41849 "preproc.c"
+#line 41801 "preproc.c"
     break;
 
   case 542: /* ConstraintElem: EXCLUDE access_method_clause '(' ExclusionConstraintList ')' opt_c_include opt_definition OptConsTableSpace OptWhereClause ConstraintAttributeSpec  */
@@ -41853,7 +41805,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("exclude"),(yyvsp[-8].str),mm_strdup("("),(yyvsp[-6].str),mm_strdup(")"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41857 "preproc.c"
+#line 41809 "preproc.c"
     break;
 
   case 543: /* ConstraintElem: FOREIGN KEY '(' columnList ')' REFERENCES qualified_name opt_column_list key_match key_actions ConstraintAttributeSpec  */
@@ -41861,7 +41813,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("foreign key ("),(yyvsp[-7].str),mm_strdup(") references"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 41865 "preproc.c"
+#line 41817 "preproc.c"
     break;
 
   case 544: /* opt_no_inherit: NO INHERIT  */
@@ -41869,14 +41821,14 @@
  { 
  (yyval.str) = mm_strdup("no inherit");
 }
-#line 41873 "preproc.c"
+#line 41825 "preproc.c"
     break;
 
   case 545: /* opt_no_inherit: %empty  */
 #line 4194 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41880 "preproc.c"
+#line 41832 "preproc.c"
     break;
 
   case 546: /* opt_column_list: '(' columnList ')'  */
@@ -41884,14 +41836,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 41888 "preproc.c"
+#line 41840 "preproc.c"
     break;
 
   case 547: /* opt_column_list: %empty  */
 #line 4205 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41895 "preproc.c"
+#line 41847 "preproc.c"
     break;
 
   case 548: /* columnList: columnElem  */
@@ -41899,7 +41851,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41903 "preproc.c"
+#line 41855 "preproc.c"
     break;
 
   case 549: /* columnList: columnList ',' columnElem  */
@@ -41907,7 +41859,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41911 "preproc.c"
+#line 41863 "preproc.c"
     break;
 
   case 550: /* columnElem: ColId  */
@@ -41915,7 +41867,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41919 "preproc.c"
+#line 41871 "preproc.c"
     break;
 
   case 551: /* opt_c_include: INCLUDE '(' columnList ')'  */
@@ -41923,14 +41875,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("include ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 41927 "preproc.c"
+#line 41879 "preproc.c"
     break;
 
   case 552: /* opt_c_include: %empty  */
 #line 4236 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41934 "preproc.c"
+#line 41886 "preproc.c"
     break;
 
   case 553: /* key_match: MATCH FULL  */
@@ -41938,7 +41890,7 @@
  { 
  (yyval.str) = mm_strdup("match full");
 }
-#line 41942 "preproc.c"
+#line 41894 "preproc.c"
     break;
 
   case 554: /* key_match: MATCH PARTIAL  */
@@ -41947,7 +41899,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("match partial");
 }
-#line 41951 "preproc.c"
+#line 41903 "preproc.c"
     break;
 
   case 555: /* key_match: MATCH SIMPLE  */
@@ -41955,14 +41907,14 @@
  { 
  (yyval.str) = mm_strdup("match simple");
 }
-#line 41959 "preproc.c"
+#line 41911 "preproc.c"
     break;
 
   case 556: /* key_match: %empty  */
 #line 4256 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 41966 "preproc.c"
+#line 41918 "preproc.c"
     break;
 
   case 557: /* ExclusionConstraintList: ExclusionConstraintElem  */
@@ -41970,7 +41922,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 41974 "preproc.c"
+#line 41926 "preproc.c"
     break;
 
   case 558: /* ExclusionConstraintList: ExclusionConstraintList ',' ExclusionConstraintElem  */
@@ -41978,7 +41930,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 41982 "preproc.c"
+#line 41934 "preproc.c"
     break;
 
   case 559: /* ExclusionConstraintElem: index_elem WITH any_operator  */
@@ -41986,7 +41938,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("with"),(yyvsp[0].str));
 }
-#line 41990 "preproc.c"
+#line 41942 "preproc.c"
     break;
 
   case 560: /* ExclusionConstraintElem: index_elem WITH OPERATOR '(' any_operator ')'  */
@@ -41994,7 +41946,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-5].str),mm_strdup("with operator ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 41998 "preproc.c"
+#line 41950 "preproc.c"
     break;
 
   case 561: /* OptWhereClause: WHERE '(' a_expr ')'  */
@@ -42002,14 +41954,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("where ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42006 "preproc.c"
+#line 41958 "preproc.c"
     break;
 
   case 562: /* OptWhereClause: %empty  */
 #line 4291 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42013 "preproc.c"
+#line 41965 "preproc.c"
     break;
 
   case 563: /* key_actions: key_update  */
@@ -42017,7 +41969,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42021 "preproc.c"
+#line 41973 "preproc.c"
     break;
 
   case 564: /* key_actions: key_delete  */
@@ -42025,7 +41977,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42029 "preproc.c"
+#line 41981 "preproc.c"
     break;
 
   case 565: /* key_actions: key_update key_delete  */
@@ -42033,7 +41985,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42037 "preproc.c"
+#line 41989 "preproc.c"
     break;
 
   case 566: /* key_actions: key_delete key_update  */
@@ -42041,14 +41993,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42045 "preproc.c"
+#line 41997 "preproc.c"
     break;
 
   case 567: /* key_actions: %empty  */
 #line 4314 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42052 "preproc.c"
+#line 42004 "preproc.c"
     break;
 
   case 568: /* key_update: ON UPDATE key_action  */
@@ -42057,7 +42009,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("on update"),(yyvsp[0].str));
 }
-#line 42061 "preproc.c"
+#line 42013 "preproc.c"
     break;
 
   case 569: /* key_delete: ON DELETE_P key_action  */
@@ -42065,7 +42017,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("on delete"),(yyvsp[0].str));
 }
-#line 42069 "preproc.c"
+#line 42021 "preproc.c"
     break;
 
   case 570: /* key_action: NO ACTION  */
@@ -42073,7 +42025,7 @@
  { 
  (yyval.str) = mm_strdup("no action");
 }
-#line 42077 "preproc.c"
+#line 42029 "preproc.c"
     break;
 
   case 571: /* key_action: RESTRICT  */
@@ -42081,7 +42033,7 @@
  { 
  (yyval.str) = mm_strdup("restrict");
 }
-#line 42085 "preproc.c"
+#line 42037 "preproc.c"
     break;
 
   case 572: /* key_action: CASCADE  */
@@ -42089,7 +42041,7 @@
  { 
  (yyval.str) = mm_strdup("cascade");
 }
-#line 42093 "preproc.c"
+#line 42045 "preproc.c"
     break;
 
   case 573: /* key_action: SET NULL_P opt_column_list  */
@@ -42097,7 +42049,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set null"),(yyvsp[0].str));
 }
-#line 42101 "preproc.c"
+#line 42053 "preproc.c"
     break;
 
   case 574: /* key_action: SET DEFAULT opt_column_list  */
@@ -42105,7 +42057,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set default"),(yyvsp[0].str));
 }
-#line 42109 "preproc.c"
+#line 42061 "preproc.c"
     break;
 
   case 575: /* OptInherit: INHERITS '(' qualified_name_list ')'  */
@@ -42113,14 +42065,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("inherits ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42117 "preproc.c"
+#line 42069 "preproc.c"
     break;
 
   case 576: /* OptInherit: %empty  */
 #line 4366 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42124 "preproc.c"
+#line 42076 "preproc.c"
     break;
 
   case 577: /* OptPartitionSpec: PartitionSpec  */
@@ -42128,14 +42080,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42132 "preproc.c"
+#line 42084 "preproc.c"
     break;
 
   case 578: /* OptPartitionSpec: %empty  */
 #line 4377 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42139 "preproc.c"
+#line 42091 "preproc.c"
     break;
 
   case 579: /* PartitionSpec: PARTITION BY ColId '(' part_params ')'  */
@@ -42143,7 +42095,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("partition by"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42147 "preproc.c"
+#line 42099 "preproc.c"
     break;
 
   case 580: /* part_params: part_elem  */
@@ -42151,7 +42103,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42155 "preproc.c"
+#line 42107 "preproc.c"
     break;
 
   case 581: /* part_params: part_params ',' part_elem  */
@@ -42159,7 +42111,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 42163 "preproc.c"
+#line 42115 "preproc.c"
     break;
 
   case 582: /* part_elem: ColId opt_collate opt_qualified_name  */
@@ -42167,7 +42119,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42171 "preproc.c"
+#line 42123 "preproc.c"
     break;
 
   case 583: /* part_elem: func_expr_windowless opt_collate opt_qualified_name  */
@@ -42175,7 +42127,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42179 "preproc.c"
+#line 42131 "preproc.c"
     break;
 
   case 584: /* part_elem: '(' a_expr ')' opt_collate opt_qualified_name  */
@@ -42183,7 +42135,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[-3].str),mm_strdup(")"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42187 "preproc.c"
+#line 42139 "preproc.c"
     break;
 
   case 585: /* table_access_method_clause: USING name  */
@@ -42191,14 +42143,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[0].str));
 }
-#line 42195 "preproc.c"
+#line 42147 "preproc.c"
     break;
 
   case 586: /* table_access_method_clause: %empty  */
 #line 4424 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42202 "preproc.c"
+#line 42154 "preproc.c"
     break;
 
   case 587: /* OptWith: WITH reloptions  */
@@ -42206,7 +42158,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[0].str));
 }
-#line 42210 "preproc.c"
+#line 42162 "preproc.c"
     break;
 
   case 588: /* OptWith: WITHOUT OIDS  */
@@ -42214,14 +42166,14 @@
  { 
  (yyval.str) = mm_strdup("without oids");
 }
-#line 42218 "preproc.c"
+#line 42170 "preproc.c"
     break;
 
   case 589: /* OptWith: %empty  */
 #line 4439 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42225 "preproc.c"
+#line 42177 "preproc.c"
     break;
 
   case 590: /* OnCommitOption: ON COMMIT DROP  */
@@ -42229,7 +42181,7 @@
  { 
  (yyval.str) = mm_strdup("on commit drop");
 }
-#line 42233 "preproc.c"
+#line 42185 "preproc.c"
     break;
 
   case 591: /* OnCommitOption: ON COMMIT DELETE_P ROWS  */
@@ -42237,7 +42189,7 @@
  { 
  (yyval.str) = mm_strdup("on commit delete rows");
 }
-#line 42241 "preproc.c"
+#line 42193 "preproc.c"
     break;
 
   case 592: /* OnCommitOption: ON COMMIT PRESERVE ROWS  */
@@ -42245,14 +42197,14 @@
  { 
  (yyval.str) = mm_strdup("on commit preserve rows");
 }
-#line 42249 "preproc.c"
+#line 42201 "preproc.c"
     break;
 
   case 593: /* OnCommitOption: %empty  */
 #line 4458 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42256 "preproc.c"
+#line 42208 "preproc.c"
     break;
 
   case 594: /* OptTableSpace: TABLESPACE name  */
@@ -42260,14 +42212,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[0].str));
 }
-#line 42264 "preproc.c"
+#line 42216 "preproc.c"
     break;
 
   case 595: /* OptTableSpace: %empty  */
 #line 4469 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42271 "preproc.c"
+#line 42223 "preproc.c"
     break;
 
   case 596: /* OptConsTableSpace: USING INDEX TABLESPACE name  */
@@ -42275,14 +42227,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using index tablespace"),(yyvsp[0].str));
 }
-#line 42279 "preproc.c"
+#line 42231 "preproc.c"
     break;
 
   case 597: /* OptConsTableSpace: %empty  */
 #line 4480 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42286 "preproc.c"
+#line 42238 "preproc.c"
     break;
 
   case 598: /* ExistingIndex: USING INDEX name  */
@@ -42290,7 +42242,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using index"),(yyvsp[0].str));
 }
-#line 42294 "preproc.c"
+#line 42246 "preproc.c"
     break;
 
   case 599: /* CreateStatsStmt: CREATE STATISTICS opt_qualified_name opt_name_list ON stats_params FROM from_list  */
@@ -42298,7 +42250,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create statistics"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("on"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 42302 "preproc.c"
+#line 42254 "preproc.c"
     break;
 
   case 600: /* CreateStatsStmt: CREATE STATISTICS IF_P NOT EXISTS any_name opt_name_list ON stats_params FROM from_list  */
@@ -42306,7 +42258,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create statistics if not exists"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("on"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 42310 "preproc.c"
+#line 42262 "preproc.c"
     break;
 
   case 601: /* stats_params: stats_param  */
@@ -42314,7 +42266,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42318 "preproc.c"
+#line 42270 "preproc.c"
     break;
 
   case 602: /* stats_params: stats_params ',' stats_param  */
@@ -42322,7 +42274,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 42326 "preproc.c"
+#line 42278 "preproc.c"
     break;
 
   case 603: /* stats_param: ColId  */
@@ -42330,7 +42282,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42334 "preproc.c"
+#line 42286 "preproc.c"
     break;
 
   case 604: /* stats_param: func_expr_windowless  */
@@ -42338,7 +42290,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42342 "preproc.c"
+#line 42294 "preproc.c"
     break;
 
   case 605: /* stats_param: '(' a_expr ')'  */
@@ -42346,7 +42298,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42350 "preproc.c"
+#line 42302 "preproc.c"
     break;
 
   case 606: /* AlterStatsStmt: ALTER STATISTICS any_name SET STATISTICS SignedIconst  */
@@ -42354,7 +42306,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter statistics"),(yyvsp[-3].str),mm_strdup("set statistics"),(yyvsp[0].str));
 }
-#line 42358 "preproc.c"
+#line 42310 "preproc.c"
     break;
 
   case 607: /* AlterStatsStmt: ALTER STATISTICS IF_P EXISTS any_name SET STATISTICS SignedIconst  */
@@ -42362,7 +42314,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter statistics if exists"),(yyvsp[-3].str),mm_strdup("set statistics"),(yyvsp[0].str));
 }
-#line 42366 "preproc.c"
+#line 42318 "preproc.c"
     break;
 
   case 608: /* create_as_target: qualified_name opt_column_list table_access_method_clause OptWith OnCommitOption OptTableSpace  */
@@ -42370,7 +42322,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42374 "preproc.c"
+#line 42326 "preproc.c"
     break;
 
   case 609: /* opt_with_data: WITH DATA_P  */
@@ -42378,7 +42330,7 @@
  { 
  (yyval.str) = mm_strdup("with data");
 }
-#line 42382 "preproc.c"
+#line 42334 "preproc.c"
     break;
 
   case 610: /* opt_with_data: WITH NO DATA_P  */
@@ -42386,14 +42338,14 @@
  { 
  (yyval.str) = mm_strdup("with no data");
 }
-#line 42390 "preproc.c"
+#line 42342 "preproc.c"
     break;
 
   case 611: /* opt_with_data: %empty  */
 #line 4563 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42397 "preproc.c"
+#line 42349 "preproc.c"
     break;
 
   case 612: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW create_mv_target AS SelectStmt opt_with_data  */
@@ -42401,7 +42353,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[-6].str),mm_strdup("materialized view"),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42405 "preproc.c"
+#line 42357 "preproc.c"
     break;
 
   case 613: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW IF_P NOT EXISTS create_mv_target AS SelectStmt opt_with_data  */
@@ -42409,7 +42361,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[-9].str),mm_strdup("materialized view if not exists"),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42413 "preproc.c"
+#line 42365 "preproc.c"
     break;
 
   case 614: /* create_mv_target: qualified_name opt_column_list table_access_method_clause opt_reloptions OptTableSpace  */
@@ -42417,7 +42369,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42421 "preproc.c"
+#line 42373 "preproc.c"
     break;
 
   case 615: /* OptNoLog: UNLOGGED  */
@@ -42425,14 +42377,14 @@
  { 
  (yyval.str) = mm_strdup("unlogged");
 }
-#line 42429 "preproc.c"
+#line 42381 "preproc.c"
     break;
 
   case 616: /* OptNoLog: %empty  */
 #line 4594 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42436 "preproc.c"
+#line 42388 "preproc.c"
     break;
 
   case 617: /* RefreshMatViewStmt: REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data  */
@@ -42440,7 +42392,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("refresh materialized view"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42444 "preproc.c"
+#line 42396 "preproc.c"
     break;
 
   case 618: /* CreateSeqStmt: CREATE OptTemp SEQUENCE qualified_name OptSeqOptList  */
@@ -42448,7 +42400,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create"),(yyvsp[-3].str),mm_strdup("sequence"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42452 "preproc.c"
+#line 42404 "preproc.c"
     break;
 
   case 619: /* CreateSeqStmt: CREATE OptTemp SEQUENCE IF_P NOT EXISTS qualified_name OptSeqOptList  */
@@ -42456,7 +42408,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create"),(yyvsp[-6].str),mm_strdup("sequence if not exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42460 "preproc.c"
+#line 42412 "preproc.c"
     break;
 
   case 620: /* AlterSeqStmt: ALTER SEQUENCE qualified_name SeqOptList  */
@@ -42464,7 +42416,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42468 "preproc.c"
+#line 42420 "preproc.c"
     break;
 
   case 621: /* AlterSeqStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SeqOptList  */
@@ -42472,7 +42424,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42476 "preproc.c"
+#line 42428 "preproc.c"
     break;
 
   case 622: /* OptSeqOptList: SeqOptList  */
@@ -42480,14 +42432,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42484 "preproc.c"
+#line 42436 "preproc.c"
     break;
 
   case 623: /* OptSeqOptList: %empty  */
 #line 4637 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42491 "preproc.c"
+#line 42443 "preproc.c"
     break;
 
   case 624: /* OptParenthesizedSeqOptList: '(' SeqOptList ')'  */
@@ -42495,14 +42447,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42499 "preproc.c"
+#line 42451 "preproc.c"
     break;
 
   case 625: /* OptParenthesizedSeqOptList: %empty  */
 #line 4648 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42506 "preproc.c"
+#line 42458 "preproc.c"
     break;
 
   case 626: /* SeqOptList: SeqOptElem  */
@@ -42510,7 +42462,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42514 "preproc.c"
+#line 42466 "preproc.c"
     break;
 
   case 627: /* SeqOptList: SeqOptList SeqOptElem  */
@@ -42518,7 +42470,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42522 "preproc.c"
+#line 42474 "preproc.c"
     break;
 
   case 628: /* SeqOptElem: AS SimpleTypename  */
@@ -42526,7 +42478,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[0].str));
 }
-#line 42530 "preproc.c"
+#line 42482 "preproc.c"
     break;
 
   case 629: /* SeqOptElem: CACHE NumericOnly  */
@@ -42534,7 +42486,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("cache"),(yyvsp[0].str));
 }
-#line 42538 "preproc.c"
+#line 42490 "preproc.c"
     break;
 
   case 630: /* SeqOptElem: CYCLE  */
@@ -42542,7 +42494,7 @@
  { 
  (yyval.str) = mm_strdup("cycle");
 }
-#line 42546 "preproc.c"
+#line 42498 "preproc.c"
     break;
 
   case 631: /* SeqOptElem: NO CYCLE  */
@@ -42550,7 +42502,7 @@
  { 
  (yyval.str) = mm_strdup("no cycle");
 }
-#line 42554 "preproc.c"
+#line 42506 "preproc.c"
     break;
 
   case 632: /* SeqOptElem: INCREMENT opt_by NumericOnly  */
@@ -42558,7 +42510,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("increment"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42562 "preproc.c"
+#line 42514 "preproc.c"
     break;
 
   case 633: /* SeqOptElem: MAXVALUE NumericOnly  */
@@ -42566,7 +42518,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("maxvalue"),(yyvsp[0].str));
 }
-#line 42570 "preproc.c"
+#line 42522 "preproc.c"
     break;
 
   case 634: /* SeqOptElem: MINVALUE NumericOnly  */
@@ -42574,7 +42526,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("minvalue"),(yyvsp[0].str));
 }
-#line 42578 "preproc.c"
+#line 42530 "preproc.c"
     break;
 
   case 635: /* SeqOptElem: NO MAXVALUE  */
@@ -42582,7 +42534,7 @@
  { 
  (yyval.str) = mm_strdup("no maxvalue");
 }
-#line 42586 "preproc.c"
+#line 42538 "preproc.c"
     break;
 
   case 636: /* SeqOptElem: NO MINVALUE  */
@@ -42590,7 +42542,7 @@
  { 
  (yyval.str) = mm_strdup("no minvalue");
 }
-#line 42594 "preproc.c"
+#line 42546 "preproc.c"
     break;
 
   case 637: /* SeqOptElem: OWNED BY any_name  */
@@ -42598,7 +42550,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("owned by"),(yyvsp[0].str));
 }
-#line 42602 "preproc.c"
+#line 42554 "preproc.c"
     break;
 
   case 638: /* SeqOptElem: SEQUENCE NAME_P any_name  */
@@ -42606,7 +42558,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("sequence name"),(yyvsp[0].str));
 }
-#line 42610 "preproc.c"
+#line 42562 "preproc.c"
     break;
 
   case 639: /* SeqOptElem: START opt_with NumericOnly  */
@@ -42614,7 +42566,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("start"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42618 "preproc.c"
+#line 42570 "preproc.c"
     break;
 
   case 640: /* SeqOptElem: RESTART  */
@@ -42622,7 +42574,7 @@
  { 
  (yyval.str) = mm_strdup("restart");
 }
-#line 42626 "preproc.c"
+#line 42578 "preproc.c"
     break;
 
   case 641: /* SeqOptElem: RESTART opt_with NumericOnly  */
@@ -42630,7 +42582,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("restart"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42634 "preproc.c"
+#line 42586 "preproc.c"
     break;
 
   case 642: /* opt_by: BY  */
@@ -42638,14 +42590,14 @@
  { 
  (yyval.str) = mm_strdup("by");
 }
-#line 42642 "preproc.c"
+#line 42594 "preproc.c"
     break;
 
   case 643: /* opt_by: %empty  */
 #line 4731 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42649 "preproc.c"
+#line 42601 "preproc.c"
     break;
 
   case 644: /* NumericOnly: ecpg_fconst  */
@@ -42653,7 +42605,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42657 "preproc.c"
+#line 42609 "preproc.c"
     break;
 
   case 645: /* NumericOnly: '+' ecpg_fconst  */
@@ -42661,7 +42613,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[0].str));
 }
-#line 42665 "preproc.c"
+#line 42617 "preproc.c"
     break;
 
   case 646: /* NumericOnly: '-' ecpg_fconst  */
@@ -42669,7 +42621,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[0].str));
 }
-#line 42673 "preproc.c"
+#line 42625 "preproc.c"
     break;
 
   case 647: /* NumericOnly: SignedIconst  */
@@ -42677,7 +42629,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42681 "preproc.c"
+#line 42633 "preproc.c"
     break;
 
   case 648: /* NumericOnly_list: NumericOnly  */
@@ -42685,7 +42637,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42689 "preproc.c"
+#line 42641 "preproc.c"
     break;
 
   case 649: /* NumericOnly_list: NumericOnly_list ',' NumericOnly  */
@@ -42693,7 +42645,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 42697 "preproc.c"
+#line 42649 "preproc.c"
     break;
 
   case 650: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE name  */
@@ -42701,7 +42653,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("language"),(yyvsp[0].str));
 }
-#line 42705 "preproc.c"
+#line 42657 "preproc.c"
     break;
 
   case 651: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE name HANDLER handler_name opt_inline_handler opt_validator  */
@@ -42709,7 +42661,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[-8].str),(yyvsp[-7].str),(yyvsp[-6].str),mm_strdup("language"),(yyvsp[-4].str),mm_strdup("handler"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42713 "preproc.c"
+#line 42665 "preproc.c"
     break;
 
   case 652: /* opt_trusted: TRUSTED  */
@@ -42717,14 +42669,14 @@
  { 
  (yyval.str) = mm_strdup("trusted");
 }
-#line 42721 "preproc.c"
+#line 42673 "preproc.c"
     break;
 
   case 653: /* opt_trusted: %empty  */
 #line 4786 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42728 "preproc.c"
+#line 42680 "preproc.c"
     break;
 
   case 654: /* handler_name: name  */
@@ -42732,7 +42684,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42736 "preproc.c"
+#line 42688 "preproc.c"
     break;
 
   case 655: /* handler_name: name attrs  */
@@ -42740,7 +42692,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42744 "preproc.c"
+#line 42696 "preproc.c"
     break;
 
   case 656: /* opt_inline_handler: INLINE_P handler_name  */
@@ -42748,14 +42700,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("inline"),(yyvsp[0].str));
 }
-#line 42752 "preproc.c"
+#line 42704 "preproc.c"
     break;
 
   case 657: /* opt_inline_handler: %empty  */
 #line 4809 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42759 "preproc.c"
+#line 42711 "preproc.c"
     break;
 
   case 658: /* validator_clause: VALIDATOR handler_name  */
@@ -42763,7 +42715,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[0].str));
 }
-#line 42767 "preproc.c"
+#line 42719 "preproc.c"
     break;
 
   case 659: /* validator_clause: NO VALIDATOR  */
@@ -42771,7 +42723,7 @@
  { 
  (yyval.str) = mm_strdup("no validator");
 }
-#line 42775 "preproc.c"
+#line 42727 "preproc.c"
     break;
 
   case 660: /* opt_validator: validator_clause  */
@@ -42779,14 +42731,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 42783 "preproc.c"
+#line 42735 "preproc.c"
     break;
 
   case 661: /* opt_validator: %empty  */
 #line 4832 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42790 "preproc.c"
+#line 42742 "preproc.c"
     break;
 
   case 662: /* opt_procedural: PROCEDURAL  */
@@ -42794,14 +42746,14 @@
  { 
  (yyval.str) = mm_strdup("procedural");
 }
-#line 42798 "preproc.c"
+#line 42750 "preproc.c"
     break;
 
   case 663: /* opt_procedural: %empty  */
 #line 4843 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42805 "preproc.c"
+#line 42757 "preproc.c"
     break;
 
   case 664: /* CreateTableSpaceStmt: CREATE TABLESPACE name OptTableSpaceOwner LOCATION ecpg_sconst opt_reloptions  */
@@ -42809,7 +42761,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create tablespace"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("location"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42813 "preproc.c"
+#line 42765 "preproc.c"
     break;
 
   case 665: /* OptTableSpaceOwner: OWNER RoleSpec  */
@@ -42817,14 +42769,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("owner"),(yyvsp[0].str));
 }
-#line 42821 "preproc.c"
+#line 42773 "preproc.c"
     break;
 
   case 666: /* OptTableSpaceOwner: %empty  */
 #line 4862 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42828 "preproc.c"
+#line 42780 "preproc.c"
     break;
 
   case 667: /* DropTableSpaceStmt: DROP TABLESPACE name  */
@@ -42832,7 +42784,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace"),(yyvsp[0].str));
 }
-#line 42836 "preproc.c"
+#line 42788 "preproc.c"
     break;
 
   case 668: /* DropTableSpaceStmt: DROP TABLESPACE IF_P EXISTS name  */
@@ -42840,7 +42792,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace if exists"),(yyvsp[0].str));
 }
-#line 42844 "preproc.c"
+#line 42796 "preproc.c"
     break;
 
   case 669: /* CreateExtensionStmt: CREATE EXTENSION name opt_with create_extension_opt_list  */
@@ -42848,7 +42800,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create extension"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42852 "preproc.c"
+#line 42804 "preproc.c"
     break;
 
   case 670: /* CreateExtensionStmt: CREATE EXTENSION IF_P NOT EXISTS name opt_with create_extension_opt_list  */
@@ -42856,7 +42808,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create extension if not exists"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42860 "preproc.c"
+#line 42812 "preproc.c"
     break;
 
   case 671: /* create_extension_opt_list: create_extension_opt_list create_extension_opt_item  */
@@ -42864,14 +42816,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42868 "preproc.c"
+#line 42820 "preproc.c"
     break;
 
   case 672: /* create_extension_opt_list: %empty  */
 #line 4897 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42875 "preproc.c"
+#line 42827 "preproc.c"
     break;
 
   case 673: /* create_extension_opt_item: SCHEMA name  */
@@ -42879,7 +42831,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[0].str));
 }
-#line 42883 "preproc.c"
+#line 42835 "preproc.c"
     break;
 
   case 674: /* create_extension_opt_item: VERSION_P NonReservedWord_or_Sconst  */
@@ -42887,7 +42839,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[0].str));
 }
-#line 42891 "preproc.c"
+#line 42843 "preproc.c"
     break;
 
   case 675: /* create_extension_opt_item: FROM NonReservedWord_or_Sconst  */
@@ -42896,7 +42848,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[0].str));
 }
-#line 42900 "preproc.c"
+#line 42852 "preproc.c"
     break;
 
   case 676: /* create_extension_opt_item: CASCADE  */
@@ -42904,7 +42856,7 @@
  { 
  (yyval.str) = mm_strdup("cascade");
 }
-#line 42908 "preproc.c"
+#line 42860 "preproc.c"
     break;
 
   case 677: /* AlterExtensionStmt: ALTER EXTENSION name UPDATE alter_extension_opt_list  */
@@ -42912,7 +42864,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[-2].str),mm_strdup("update"),(yyvsp[0].str));
 }
-#line 42916 "preproc.c"
+#line 42868 "preproc.c"
     break;
 
   case 678: /* alter_extension_opt_list: alter_extension_opt_list alter_extension_opt_item  */
@@ -42920,14 +42872,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42924 "preproc.c"
+#line 42876 "preproc.c"
     break;
 
   case 679: /* alter_extension_opt_list: %empty  */
 #line 4937 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 42931 "preproc.c"
+#line 42883 "preproc.c"
     break;
 
   case 680: /* alter_extension_opt_item: TO NonReservedWord_or_Sconst  */
@@ -42935,7 +42887,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("to"),(yyvsp[0].str));
 }
-#line 42939 "preproc.c"
+#line 42891 "preproc.c"
     break;
 
   case 681: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop object_type_name name  */
@@ -42943,7 +42895,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42947 "preproc.c"
+#line 42899 "preproc.c"
     break;
 
   case 682: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop object_type_any_name any_name  */
@@ -42951,7 +42903,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 42955 "preproc.c"
+#line 42907 "preproc.c"
     break;
 
   case 683: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop AGGREGATE aggregate_with_argtypes  */
@@ -42959,7 +42911,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("aggregate"),(yyvsp[0].str));
 }
-#line 42963 "preproc.c"
+#line 42915 "preproc.c"
     break;
 
   case 684: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CAST '(' Typename AS Typename ')'  */
@@ -42967,7 +42919,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("alter extension"),(yyvsp[-7].str),(yyvsp[-6].str),mm_strdup("cast ("),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 42971 "preproc.c"
+#line 42923 "preproc.c"
     break;
 
   case 685: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop DOMAIN_P Typename  */
@@ -42975,7 +42927,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("domain"),(yyvsp[0].str));
 }
-#line 42979 "preproc.c"
+#line 42931 "preproc.c"
     break;
 
   case 686: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FUNCTION function_with_argtypes  */
@@ -42983,7 +42935,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("function"),(yyvsp[0].str));
 }
-#line 42987 "preproc.c"
+#line 42939 "preproc.c"
     break;
 
   case 687: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR operator_with_argtypes  */
@@ -42991,7 +42943,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("operator"),(yyvsp[0].str));
 }
-#line 42995 "preproc.c"
+#line 42947 "preproc.c"
     break;
 
   case 688: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING name  */
@@ -42999,7 +42951,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[-6].str),(yyvsp[-5].str),mm_strdup("operator class"),(yyvsp[-2].str),mm_strdup("using"),(yyvsp[0].str));
 }
-#line 43003 "preproc.c"
+#line 42955 "preproc.c"
     break;
 
   case 689: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING name  */
@@ -43007,7 +42959,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[-6].str),(yyvsp[-5].str),mm_strdup("operator family"),(yyvsp[-2].str),mm_strdup("using"),(yyvsp[0].str));
 }
-#line 43011 "preproc.c"
+#line 42963 "preproc.c"
     break;
 
   case 690: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop PROCEDURE function_with_argtypes  */
@@ -43015,7 +42967,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("procedure"),(yyvsp[0].str));
 }
-#line 43019 "preproc.c"
+#line 42971 "preproc.c"
     break;
 
   case 691: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop ROUTINE function_with_argtypes  */
@@ -43023,7 +42975,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("routine"),(yyvsp[0].str));
 }
-#line 43027 "preproc.c"
+#line 42979 "preproc.c"
     break;
 
   case 692: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TRANSFORM FOR Typename LANGUAGE name  */
@@ -43031,7 +42983,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[-6].str),(yyvsp[-5].str),mm_strdup("transform for"),(yyvsp[-2].str),mm_strdup("language"),(yyvsp[0].str));
 }
-#line 43035 "preproc.c"
+#line 42987 "preproc.c"
     break;
 
   case 693: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TYPE_P Typename  */
@@ -43039,7 +42991,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("type"),(yyvsp[0].str));
 }
-#line 43043 "preproc.c"
+#line 42995 "preproc.c"
     break;
 
   case 694: /* CreateFdwStmt: CREATE FOREIGN DATA_P WRAPPER name opt_fdw_options create_generic_options  */
@@ -43047,7 +42999,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create foreign data wrapper"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43051 "preproc.c"
+#line 43003 "preproc.c"
     break;
 
   case 695: /* fdw_option: HANDLER handler_name  */
@@ -43055,7 +43007,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("handler"),(yyvsp[0].str));
 }
-#line 43059 "preproc.c"
+#line 43011 "preproc.c"
     break;
 
   case 696: /* fdw_option: NO HANDLER  */
@@ -43063,7 +43015,7 @@
  { 
  (yyval.str) = mm_strdup("no handler");
 }
-#line 43067 "preproc.c"
+#line 43019 "preproc.c"
     break;
 
   case 697: /* fdw_option: VALIDATOR handler_name  */
@@ -43071,7 +43023,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[0].str));
 }
-#line 43075 "preproc.c"
+#line 43027 "preproc.c"
     break;
 
   case 698: /* fdw_option: NO VALIDATOR  */
@@ -43079,7 +43031,7 @@
  { 
  (yyval.str) = mm_strdup("no validator");
 }
-#line 43083 "preproc.c"
+#line 43035 "preproc.c"
     break;
 
   case 699: /* fdw_options: fdw_option  */
@@ -43087,7 +43039,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43091 "preproc.c"
+#line 43043 "preproc.c"
     break;
 
   case 700: /* fdw_options: fdw_options fdw_option  */
@@ -43095,7 +43047,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43099 "preproc.c"
+#line 43051 "preproc.c"
     break;
 
   case 701: /* opt_fdw_options: fdw_options  */
@@ -43103,14 +43055,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43107 "preproc.c"
+#line 43059 "preproc.c"
     break;
 
   case 702: /* opt_fdw_options: %empty  */
 #line 5052 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43114 "preproc.c"
+#line 43066 "preproc.c"
     break;
 
   case 703: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name opt_fdw_options alter_generic_options  */
@@ -43118,7 +43070,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43122 "preproc.c"
+#line 43074 "preproc.c"
     break;
 
   case 704: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name fdw_options  */
@@ -43126,7 +43078,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign data wrapper"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43130 "preproc.c"
+#line 43082 "preproc.c"
     break;
 
   case 705: /* create_generic_options: OPTIONS '(' generic_option_list ')'  */
@@ -43134,14 +43086,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43138 "preproc.c"
+#line 43090 "preproc.c"
     break;
 
   case 706: /* create_generic_options: %empty  */
 #line 5075 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43145 "preproc.c"
+#line 43097 "preproc.c"
     break;
 
   case 707: /* generic_option_list: generic_option_elem  */
@@ -43149,7 +43101,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43153 "preproc.c"
+#line 43105 "preproc.c"
     break;
 
   case 708: /* generic_option_list: generic_option_list ',' generic_option_elem  */
@@ -43157,7 +43109,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 43161 "preproc.c"
+#line 43113 "preproc.c"
     break;
 
   case 709: /* alter_generic_options: OPTIONS '(' alter_generic_option_list ')'  */
@@ -43165,7 +43117,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43169 "preproc.c"
+#line 43121 "preproc.c"
     break;
 
   case 710: /* alter_generic_option_list: alter_generic_option_elem  */
@@ -43173,7 +43125,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43177 "preproc.c"
+#line 43129 "preproc.c"
     break;
 
   case 711: /* alter_generic_option_list: alter_generic_option_list ',' alter_generic_option_elem  */
@@ -43181,7 +43133,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 43185 "preproc.c"
+#line 43137 "preproc.c"
     break;
 
   case 712: /* alter_generic_option_elem: generic_option_elem  */
@@ -43189,7 +43141,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43193 "preproc.c"
+#line 43145 "preproc.c"
     break;
 
   case 713: /* alter_generic_option_elem: SET generic_option_elem  */
@@ -43197,7 +43149,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[0].str));
 }
-#line 43201 "preproc.c"
+#line 43153 "preproc.c"
     break;
 
   case 714: /* alter_generic_option_elem: ADD_P generic_option_elem  */
@@ -43205,7 +43157,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[0].str));
 }
-#line 43209 "preproc.c"
+#line 43161 "preproc.c"
     break;
 
   case 715: /* alter_generic_option_elem: DROP generic_option_name  */
@@ -43213,7 +43165,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop"),(yyvsp[0].str));
 }
-#line 43217 "preproc.c"
+#line 43169 "preproc.c"
     break;
 
   case 716: /* generic_option_elem: generic_option_name generic_option_arg  */
@@ -43221,7 +43173,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43225 "preproc.c"
+#line 43177 "preproc.c"
     break;
 
   case 717: /* generic_option_name: ColLabel  */
@@ -43229,7 +43181,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43233 "preproc.c"
+#line 43185 "preproc.c"
     break;
 
   case 718: /* generic_option_arg: ecpg_sconst  */
@@ -43237,7 +43189,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43241 "preproc.c"
+#line 43193 "preproc.c"
     break;
 
   case 719: /* CreateForeignServerStmt: CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
@@ -43245,7 +43197,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create server"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),mm_strdup("foreign data wrapper"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43249 "preproc.c"
+#line 43201 "preproc.c"
     break;
 
   case 720: /* CreateForeignServerStmt: CREATE SERVER IF_P NOT EXISTS name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
@@ -43253,7 +43205,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create server if not exists"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),mm_strdup("foreign data wrapper"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43257 "preproc.c"
+#line 43209 "preproc.c"
     break;
 
   case 721: /* opt_type: TYPE_P ecpg_sconst  */
@@ -43261,14 +43213,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[0].str));
 }
-#line 43265 "preproc.c"
+#line 43217 "preproc.c"
     break;
 
   case 722: /* opt_type: %empty  */
 #line 5174 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43272 "preproc.c"
+#line 43224 "preproc.c"
     break;
 
   case 723: /* foreign_server_version: VERSION_P ecpg_sconst  */
@@ -43276,7 +43228,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[0].str));
 }
-#line 43280 "preproc.c"
+#line 43232 "preproc.c"
     break;
 
   case 724: /* foreign_server_version: VERSION_P NULL_P  */
@@ -43284,7 +43236,7 @@
  { 
  (yyval.str) = mm_strdup("version null");
 }
-#line 43288 "preproc.c"
+#line 43240 "preproc.c"
     break;
 
   case 725: /* opt_foreign_server_version: foreign_server_version  */
@@ -43292,14 +43244,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43296 "preproc.c"
+#line 43248 "preproc.c"
     break;
 
   case 726: /* opt_foreign_server_version: %empty  */
 #line 5197 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43303 "preproc.c"
+#line 43255 "preproc.c"
     break;
 
   case 727: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version alter_generic_options  */
@@ -43307,7 +43259,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43311 "preproc.c"
+#line 43263 "preproc.c"
     break;
 
   case 728: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version  */
@@ -43315,7 +43267,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43319 "preproc.c"
+#line 43271 "preproc.c"
     break;
 
   case 729: /* AlterForeignServerStmt: ALTER SERVER name alter_generic_options  */
@@ -43323,7 +43275,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43327 "preproc.c"
+#line 43279 "preproc.c"
     break;
 
   case 730: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name '(' OptTableElementList ')' OptInherit SERVER name create_generic_options  */
@@ -43331,7 +43283,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create foreign table"),(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43335 "preproc.c"
+#line 43287 "preproc.c"
     break;
 
   case 731: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit SERVER name create_generic_options  */
@@ -43339,7 +43291,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create foreign table if not exists"),(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43343 "preproc.c"
+#line 43295 "preproc.c"
     break;
 
   case 732: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec SERVER name create_generic_options  */
@@ -43347,7 +43299,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create foreign table"),(yyvsp[-8].str),mm_strdup("partition of"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43351 "preproc.c"
+#line 43303 "preproc.c"
     break;
 
   case 733: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name PARTITION OF qualified_name OptTypedTableElementList PartitionBoundSpec SERVER name create_generic_options  */
@@ -43355,7 +43307,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create foreign table if not exists"),(yyvsp[-8].str),mm_strdup("partition of"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43359 "preproc.c"
+#line 43311 "preproc.c"
     break;
 
   case 734: /* ImportForeignSchemaStmt: IMPORT_P FOREIGN SCHEMA name import_qualification FROM SERVER name INTO name create_generic_options  */
@@ -43363,7 +43315,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("import foreign schema"),(yyvsp[-7].str),(yyvsp[-6].str),mm_strdup("from server"),(yyvsp[-3].str),mm_strdup("into"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43367 "preproc.c"
+#line 43319 "preproc.c"
     break;
 
   case 735: /* import_qualification_type: LIMIT TO  */
@@ -43371,7 +43323,7 @@
  { 
  (yyval.str) = mm_strdup("limit to");
 }
-#line 43375 "preproc.c"
+#line 43327 "preproc.c"
     break;
 
   case 736: /* import_qualification_type: EXCEPT  */
@@ -43379,7 +43331,7 @@
  { 
  (yyval.str) = mm_strdup("except");
 }
-#line 43383 "preproc.c"
+#line 43335 "preproc.c"
     break;
 
   case 737: /* import_qualification: import_qualification_type '(' relation_expr_list ')'  */
@@ -43387,14 +43339,14 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43391 "preproc.c"
+#line 43343 "preproc.c"
     break;
 
   case 738: /* import_qualification: %empty  */
 #line 5264 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43398 "preproc.c"
+#line 43350 "preproc.c"
     break;
 
   case 739: /* CreateUserMappingStmt: CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options  */
@@ -43402,7 +43354,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create user mapping for"),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43406 "preproc.c"
+#line 43358 "preproc.c"
     break;
 
   case 740: /* CreateUserMappingStmt: CREATE USER MAPPING IF_P NOT EXISTS FOR auth_ident SERVER name create_generic_options  */
@@ -43410,7 +43362,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create user mapping if not exists for"),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43414 "preproc.c"
+#line 43366 "preproc.c"
     break;
 
   case 741: /* auth_ident: RoleSpec  */
@@ -43418,7 +43370,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43422 "preproc.c"
+#line 43374 "preproc.c"
     break;
 
   case 742: /* auth_ident: USER  */
@@ -43426,7 +43378,7 @@
  { 
  (yyval.str) = mm_strdup("user");
 }
-#line 43430 "preproc.c"
+#line 43382 "preproc.c"
     break;
 
   case 743: /* DropUserMappingStmt: DROP USER MAPPING FOR auth_ident SERVER name  */
@@ -43434,7 +43386,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping for"),(yyvsp[-2].str),mm_strdup("server"),(yyvsp[0].str));
 }
-#line 43438 "preproc.c"
+#line 43390 "preproc.c"
     break;
 
   case 744: /* DropUserMappingStmt: DROP USER MAPPING IF_P EXISTS FOR auth_ident SERVER name  */
@@ -43442,7 +43394,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping if exists for"),(yyvsp[-2].str),mm_strdup("server"),(yyvsp[0].str));
 }
-#line 43446 "preproc.c"
+#line 43398 "preproc.c"
     break;
 
   case 745: /* AlterUserMappingStmt: ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options  */
@@ -43450,7 +43402,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter user mapping for"),(yyvsp[-3].str),mm_strdup("server"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43454 "preproc.c"
+#line 43406 "preproc.c"
     break;
 
   case 746: /* CreatePolicyStmt: CREATE POLICY name ON qualified_name RowSecurityDefaultPermissive RowSecurityDefaultForCmd RowSecurityDefaultToRole RowSecurityOptionalExpr RowSecurityOptionalWithCheck  */
@@ -43458,7 +43410,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create policy"),(yyvsp[-7].str),mm_strdup("on"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43462 "preproc.c"
+#line 43414 "preproc.c"
     break;
 
   case 747: /* AlterPolicyStmt: ALTER POLICY name ON qualified_name RowSecurityOptionalToRole RowSecurityOptionalExpr RowSecurityOptionalWithCheck  */
@@ -43466,7 +43418,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter policy"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43470 "preproc.c"
+#line 43422 "preproc.c"
     break;
 
   case 748: /* RowSecurityOptionalExpr: USING '(' a_expr ')'  */
@@ -43474,14 +43426,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("using ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43478 "preproc.c"
+#line 43430 "preproc.c"
     break;
 
   case 749: /* RowSecurityOptionalExpr: %empty  */
 #line 5335 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43485 "preproc.c"
+#line 43437 "preproc.c"
     break;
 
   case 750: /* RowSecurityOptionalWithCheck: WITH CHECK '(' a_expr ')'  */
@@ -43489,14 +43441,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("with check ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43493 "preproc.c"
+#line 43445 "preproc.c"
     break;
 
   case 751: /* RowSecurityOptionalWithCheck: %empty  */
 #line 5346 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43500 "preproc.c"
+#line 43452 "preproc.c"
     break;
 
   case 752: /* RowSecurityDefaultToRole: TO role_list  */
@@ -43504,14 +43456,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("to"),(yyvsp[0].str));
 }
-#line 43508 "preproc.c"
+#line 43460 "preproc.c"
     break;
 
   case 753: /* RowSecurityDefaultToRole: %empty  */
 #line 5357 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43515 "preproc.c"
+#line 43467 "preproc.c"
     break;
 
   case 754: /* RowSecurityOptionalToRole: TO role_list  */
@@ -43519,14 +43471,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("to"),(yyvsp[0].str));
 }
-#line 43523 "preproc.c"
+#line 43475 "preproc.c"
     break;
 
   case 755: /* RowSecurityOptionalToRole: %empty  */
 #line 5368 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43530 "preproc.c"
+#line 43482 "preproc.c"
     break;
 
   case 756: /* RowSecurityDefaultPermissive: AS ecpg_ident  */
@@ -43534,14 +43486,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[0].str));
 }
-#line 43538 "preproc.c"
+#line 43490 "preproc.c"
     break;
 
   case 757: /* RowSecurityDefaultPermissive: %empty  */
 #line 5379 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43545 "preproc.c"
+#line 43497 "preproc.c"
     break;
 
   case 758: /* RowSecurityDefaultForCmd: FOR row_security_cmd  */
@@ -43549,14 +43501,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[0].str));
 }
-#line 43553 "preproc.c"
+#line 43505 "preproc.c"
     break;
 
   case 759: /* RowSecurityDefaultForCmd: %empty  */
 #line 5390 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43560 "preproc.c"
+#line 43512 "preproc.c"
     break;
 
   case 760: /* row_security_cmd: ALL  */
@@ -43564,7 +43516,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 43568 "preproc.c"
+#line 43520 "preproc.c"
     break;
 
   case 761: /* row_security_cmd: SELECT  */
@@ -43572,7 +43524,7 @@
  { 
  (yyval.str) = mm_strdup("select");
 }
-#line 43576 "preproc.c"
+#line 43528 "preproc.c"
     break;
 
   case 762: /* row_security_cmd: INSERT  */
@@ -43580,7 +43532,7 @@
  { 
  (yyval.str) = mm_strdup("insert");
 }
-#line 43584 "preproc.c"
+#line 43536 "preproc.c"
     break;
 
   case 763: /* row_security_cmd: UPDATE  */
@@ -43588,7 +43540,7 @@
  { 
  (yyval.str) = mm_strdup("update");
 }
-#line 43592 "preproc.c"
+#line 43544 "preproc.c"
     break;
 
   case 764: /* row_security_cmd: DELETE_P  */
@@ -43596,7 +43548,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 43600 "preproc.c"
+#line 43552 "preproc.c"
     break;
 
   case 765: /* CreateAmStmt: CREATE ACCESS METHOD name TYPE_P am_type HANDLER handler_name  */
@@ -43604,7 +43556,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create access method"),(yyvsp[-4].str),mm_strdup("type"),(yyvsp[-2].str),mm_strdup("handler"),(yyvsp[0].str));
 }
-#line 43608 "preproc.c"
+#line 43560 "preproc.c"
     break;
 
   case 766: /* am_type: INDEX  */
@@ -43612,7 +43564,7 @@
  { 
  (yyval.str) = mm_strdup("index");
 }
-#line 43616 "preproc.c"
+#line 43568 "preproc.c"
     break;
 
   case 767: /* am_type: TABLE  */
@@ -43620,7 +43572,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 43624 "preproc.c"
+#line 43576 "preproc.c"
     break;
 
   case 768: /* CreateTrigStmt: CREATE opt_or_replace TRIGGER name TriggerActionTime TriggerEvents ON qualified_name TriggerReferencing TriggerForSpec TriggerWhen EXECUTE FUNCTION_or_PROCEDURE func_name '(' TriggerFuncArgs ')'  */
@@ -43628,7 +43580,7 @@
  { 
  (yyval.str) = cat_str(17,mm_strdup("create"),(yyvsp[-15].str),mm_strdup("trigger"),(yyvsp[-13].str),(yyvsp[-12].str),(yyvsp[-11].str),mm_strdup("on"),(yyvsp[-9].str),(yyvsp[-8].str),(yyvsp[-7].str),(yyvsp[-6].str),mm_strdup("execute"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43632 "preproc.c"
+#line 43584 "preproc.c"
     break;
 
   case 769: /* CreateTrigStmt: CREATE opt_or_replace CONSTRAINT TRIGGER name AFTER TriggerEvents ON qualified_name OptConstrFromTable ConstraintAttributeSpec FOR EACH ROW TriggerWhen EXECUTE FUNCTION_or_PROCEDURE func_name '(' TriggerFuncArgs ')'  */
@@ -43637,7 +43589,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(18,mm_strdup("create"),(yyvsp[-19].str),mm_strdup("constraint trigger"),(yyvsp[-16].str),mm_strdup("after"),(yyvsp[-14].str),mm_strdup("on"),(yyvsp[-12].str),(yyvsp[-11].str),(yyvsp[-10].str),mm_strdup("for each row"),(yyvsp[-6].str),mm_strdup("execute"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43641 "preproc.c"
+#line 43593 "preproc.c"
     break;
 
   case 770: /* TriggerActionTime: BEFORE  */
@@ -43645,7 +43597,7 @@
  { 
  (yyval.str) = mm_strdup("before");
 }
-#line 43649 "preproc.c"
+#line 43601 "preproc.c"
     break;
 
   case 771: /* TriggerActionTime: AFTER  */
@@ -43653,7 +43605,7 @@
  { 
  (yyval.str) = mm_strdup("after");
 }
-#line 43657 "preproc.c"
+#line 43609 "preproc.c"
     break;
 
   case 772: /* TriggerActionTime: INSTEAD OF  */
@@ -43661,7 +43613,7 @@
  { 
  (yyval.str) = mm_strdup("instead of");
 }
-#line 43665 "preproc.c"
+#line 43617 "preproc.c"
     break;
 
   case 773: /* TriggerEvents: TriggerOneEvent  */
@@ -43669,7 +43621,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43673 "preproc.c"
+#line 43625 "preproc.c"
     break;
 
   case 774: /* TriggerEvents: TriggerEvents OR TriggerOneEvent  */
@@ -43677,7 +43629,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("or"),(yyvsp[0].str));
 }
-#line 43681 "preproc.c"
+#line 43633 "preproc.c"
     break;
 
   case 775: /* TriggerOneEvent: INSERT  */
@@ -43685,7 +43637,7 @@
  { 
  (yyval.str) = mm_strdup("insert");
 }
-#line 43689 "preproc.c"
+#line 43641 "preproc.c"
     break;
 
   case 776: /* TriggerOneEvent: DELETE_P  */
@@ -43693,7 +43645,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 43697 "preproc.c"
+#line 43649 "preproc.c"
     break;
 
   case 777: /* TriggerOneEvent: UPDATE  */
@@ -43701,7 +43653,7 @@
  { 
  (yyval.str) = mm_strdup("update");
 }
-#line 43705 "preproc.c"
+#line 43657 "preproc.c"
     break;
 
   case 778: /* TriggerOneEvent: UPDATE OF columnList  */
@@ -43709,7 +43661,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("update of"),(yyvsp[0].str));
 }
-#line 43713 "preproc.c"
+#line 43665 "preproc.c"
     break;
 
   case 779: /* TriggerOneEvent: TRUNCATE  */
@@ -43717,7 +43669,7 @@
  { 
  (yyval.str) = mm_strdup("truncate");
 }
-#line 43721 "preproc.c"
+#line 43673 "preproc.c"
     break;
 
   case 780: /* TriggerReferencing: REFERENCING TriggerTransitions  */
@@ -43725,14 +43677,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("referencing"),(yyvsp[0].str));
 }
-#line 43729 "preproc.c"
+#line 43681 "preproc.c"
     break;
 
   case 781: /* TriggerReferencing: %empty  */
 #line 5510 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43736 "preproc.c"
+#line 43688 "preproc.c"
     break;
 
   case 782: /* TriggerTransitions: TriggerTransition  */
@@ -43740,7 +43692,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43744 "preproc.c"
+#line 43696 "preproc.c"
     break;
 
   case 783: /* TriggerTransitions: TriggerTransitions TriggerTransition  */
@@ -43748,7 +43700,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43752 "preproc.c"
+#line 43704 "preproc.c"
     break;
 
   case 784: /* TriggerTransition: TransitionOldOrNew TransitionRowOrTable opt_as TransitionRelName  */
@@ -43756,7 +43708,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43760 "preproc.c"
+#line 43712 "preproc.c"
     break;
 
   case 785: /* TransitionOldOrNew: NEW  */
@@ -43764,7 +43716,7 @@
  { 
  (yyval.str) = mm_strdup("new");
 }
-#line 43768 "preproc.c"
+#line 43720 "preproc.c"
     break;
 
   case 786: /* TransitionOldOrNew: OLD  */
@@ -43772,7 +43724,7 @@
  { 
  (yyval.str) = mm_strdup("old");
 }
-#line 43776 "preproc.c"
+#line 43728 "preproc.c"
     break;
 
   case 787: /* TransitionRowOrTable: TABLE  */
@@ -43780,7 +43732,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 43784 "preproc.c"
+#line 43736 "preproc.c"
     break;
 
   case 788: /* TransitionRowOrTable: ROW  */
@@ -43788,7 +43740,7 @@
  { 
  (yyval.str) = mm_strdup("row");
 }
-#line 43792 "preproc.c"
+#line 43744 "preproc.c"
     break;
 
   case 789: /* TransitionRelName: ColId  */
@@ -43796,7 +43748,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43800 "preproc.c"
+#line 43752 "preproc.c"
     break;
 
   case 790: /* TriggerForSpec: FOR TriggerForOptEach TriggerForType  */
@@ -43804,14 +43756,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("for"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43808 "preproc.c"
+#line 43760 "preproc.c"
     break;
 
   case 791: /* TriggerForSpec: %empty  */
 #line 5573 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43815 "preproc.c"
+#line 43767 "preproc.c"
     break;
 
   case 792: /* TriggerForOptEach: EACH  */
@@ -43819,14 +43771,14 @@
  { 
  (yyval.str) = mm_strdup("each");
 }
-#line 43823 "preproc.c"
+#line 43775 "preproc.c"
     break;
 
   case 793: /* TriggerForOptEach: %empty  */
 #line 5584 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43830 "preproc.c"
+#line 43782 "preproc.c"
     break;
 
   case 794: /* TriggerForType: ROW  */
@@ -43834,7 +43786,7 @@
  { 
  (yyval.str) = mm_strdup("row");
 }
-#line 43838 "preproc.c"
+#line 43790 "preproc.c"
     break;
 
   case 795: /* TriggerForType: STATEMENT  */
@@ -43842,7 +43794,7 @@
  { 
  (yyval.str) = mm_strdup("statement");
 }
-#line 43846 "preproc.c"
+#line 43798 "preproc.c"
     break;
 
   case 796: /* TriggerWhen: WHEN '(' a_expr ')'  */
@@ -43850,14 +43802,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("when ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 43854 "preproc.c"
+#line 43806 "preproc.c"
     break;
 
   case 797: /* TriggerWhen: %empty  */
 #line 5607 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43861 "preproc.c"
+#line 43813 "preproc.c"
     break;
 
   case 798: /* FUNCTION_or_PROCEDURE: FUNCTION  */
@@ -43865,7 +43817,7 @@
  { 
  (yyval.str) = mm_strdup("function");
 }
-#line 43869 "preproc.c"
+#line 43821 "preproc.c"
     break;
 
   case 799: /* FUNCTION_or_PROCEDURE: PROCEDURE  */
@@ -43873,7 +43825,7 @@
  { 
  (yyval.str) = mm_strdup("procedure");
 }
-#line 43877 "preproc.c"
+#line 43829 "preproc.c"
     break;
 
   case 800: /* TriggerFuncArgs: TriggerFuncArg  */
@@ -43881,7 +43833,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43885 "preproc.c"
+#line 43837 "preproc.c"
     break;
 
   case 801: /* TriggerFuncArgs: TriggerFuncArgs ',' TriggerFuncArg  */
@@ -43889,14 +43841,14 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 43893 "preproc.c"
+#line 43845 "preproc.c"
     break;
 
   case 802: /* TriggerFuncArgs: %empty  */
 #line 5634 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43900 "preproc.c"
+#line 43852 "preproc.c"
     break;
 
   case 803: /* TriggerFuncArg: Iconst  */
@@ -43904,7 +43856,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43908 "preproc.c"
+#line 43860 "preproc.c"
     break;
 
   case 804: /* TriggerFuncArg: ecpg_fconst  */
@@ -43912,7 +43864,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43916 "preproc.c"
+#line 43868 "preproc.c"
     break;
 
   case 805: /* TriggerFuncArg: ecpg_sconst  */
@@ -43920,7 +43872,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43924 "preproc.c"
+#line 43876 "preproc.c"
     break;
 
   case 806: /* TriggerFuncArg: ColLabel  */
@@ -43928,7 +43880,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 43932 "preproc.c"
+#line 43884 "preproc.c"
     break;
 
   case 807: /* OptConstrFromTable: FROM qualified_name  */
@@ -43936,21 +43888,21 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[0].str));
 }
-#line 43940 "preproc.c"
+#line 43892 "preproc.c"
     break;
 
   case 808: /* OptConstrFromTable: %empty  */
 #line 5665 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43947 "preproc.c"
+#line 43899 "preproc.c"
     break;
 
   case 809: /* ConstraintAttributeSpec: %empty  */
 #line 5672 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 43954 "preproc.c"
+#line 43906 "preproc.c"
     break;
 
   case 810: /* ConstraintAttributeSpec: ConstraintAttributeSpec ConstraintAttributeElem  */
@@ -43958,7 +43910,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 43962 "preproc.c"
+#line 43914 "preproc.c"
     break;
 
   case 811: /* ConstraintAttributeElem: NOT DEFERRABLE  */
@@ -43966,7 +43918,7 @@
  { 
  (yyval.str) = mm_strdup("not deferrable");
 }
-#line 43970 "preproc.c"
+#line 43922 "preproc.c"
     break;
 
   case 812: /* ConstraintAttributeElem: DEFERRABLE  */
@@ -43974,7 +43926,7 @@
  { 
  (yyval.str) = mm_strdup("deferrable");
 }
-#line 43978 "preproc.c"
+#line 43930 "preproc.c"
     break;
 
   case 813: /* ConstraintAttributeElem: INITIALLY IMMEDIATE  */
@@ -43982,7 +43934,7 @@
  { 
  (yyval.str) = mm_strdup("initially immediate");
 }
-#line 43986 "preproc.c"
+#line 43938 "preproc.c"
     break;
 
   case 814: /* ConstraintAttributeElem: INITIALLY DEFERRED  */
@@ -43990,7 +43942,7 @@
  { 
  (yyval.str) = mm_strdup("initially deferred");
 }
-#line 43994 "preproc.c"
+#line 43946 "preproc.c"
     break;
 
   case 815: /* ConstraintAttributeElem: NOT VALID  */
@@ -43998,7 +43950,7 @@
  { 
  (yyval.str) = mm_strdup("not valid");
 }
-#line 44002 "preproc.c"
+#line 43954 "preproc.c"
     break;
 
   case 816: /* ConstraintAttributeElem: NO INHERIT  */
@@ -44006,7 +43958,7 @@
  { 
  (yyval.str) = mm_strdup("no inherit");
 }
-#line 44010 "preproc.c"
+#line 43962 "preproc.c"
     break;
 
   case 817: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel EXECUTE FUNCTION_or_PROCEDURE func_name '(' ')'  */
@@ -44014,7 +43966,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("create event trigger"),(yyvsp[-7].str),mm_strdup("on"),(yyvsp[-5].str),mm_strdup("execute"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("( )"));
 }
-#line 44018 "preproc.c"
+#line 43970 "preproc.c"
     break;
 
   case 818: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel WHEN event_trigger_when_list EXECUTE FUNCTION_or_PROCEDURE func_name '(' ')'  */
@@ -44022,7 +43974,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("create event trigger"),(yyvsp[-9].str),mm_strdup("on"),(yyvsp[-7].str),mm_strdup("when"),(yyvsp[-5].str),mm_strdup("execute"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("( )"));
 }
-#line 44026 "preproc.c"
+#line 43978 "preproc.c"
     break;
 
   case 819: /* event_trigger_when_list: event_trigger_when_item  */
@@ -44030,7 +43982,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44034 "preproc.c"
+#line 43986 "preproc.c"
     break;
 
   case 820: /* event_trigger_when_list: event_trigger_when_list AND event_trigger_when_item  */
@@ -44038,7 +43990,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 44042 "preproc.c"
+#line 43994 "preproc.c"
     break;
 
   case 821: /* event_trigger_when_item: ColId IN_P '(' event_trigger_value_list ')'  */
@@ -44046,7 +43998,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-4].str),mm_strdup("in ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44050 "preproc.c"
+#line 44002 "preproc.c"
     break;
 
   case 822: /* event_trigger_value_list: SCONST  */
@@ -44054,7 +44006,7 @@
  { 
  (yyval.str) = mm_strdup("sconst");
 }
-#line 44058 "preproc.c"
+#line 44010 "preproc.c"
     break;
 
   case 823: /* event_trigger_value_list: event_trigger_value_list ',' SCONST  */
@@ -44062,7 +44014,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup(", sconst"));
 }
-#line 44066 "preproc.c"
+#line 44018 "preproc.c"
     break;
 
   case 824: /* AlterEventTrigStmt: ALTER EVENT TRIGGER name enable_trigger  */
@@ -44070,7 +44022,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter event trigger"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44074 "preproc.c"
+#line 44026 "preproc.c"
     break;
 
   case 825: /* enable_trigger: ENABLE_P  */
@@ -44078,7 +44030,7 @@
  { 
  (yyval.str) = mm_strdup("enable");
 }
-#line 44082 "preproc.c"
+#line 44034 "preproc.c"
     break;
 
   case 826: /* enable_trigger: ENABLE_P REPLICA  */
@@ -44086,7 +44038,7 @@
  { 
  (yyval.str) = mm_strdup("enable replica");
 }
-#line 44090 "preproc.c"
+#line 44042 "preproc.c"
     break;
 
   case 827: /* enable_trigger: ENABLE_P ALWAYS  */
@@ -44094,7 +44046,7 @@
  { 
  (yyval.str) = mm_strdup("enable always");
 }
-#line 44098 "preproc.c"
+#line 44050 "preproc.c"
     break;
 
   case 828: /* enable_trigger: DISABLE_P  */
@@ -44102,7 +44054,7 @@
  { 
  (yyval.str) = mm_strdup("disable");
 }
-#line 44106 "preproc.c"
+#line 44058 "preproc.c"
     break;
 
   case 829: /* CreateAssertionStmt: CREATE ASSERTION any_name CHECK '(' a_expr ')' ConstraintAttributeSpec  */
@@ -44111,7 +44063,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(6,mm_strdup("create assertion"),(yyvsp[-5].str),mm_strdup("check ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 44115 "preproc.c"
+#line 44067 "preproc.c"
     break;
 
   case 830: /* DefineStmt: CREATE opt_or_replace AGGREGATE func_name aggr_args definition  */
@@ -44119,7 +44071,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create"),(yyvsp[-4].str),mm_strdup("aggregate"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44123 "preproc.c"
+#line 44075 "preproc.c"
     break;
 
   case 831: /* DefineStmt: CREATE opt_or_replace AGGREGATE func_name old_aggr_definition  */
@@ -44127,7 +44079,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create"),(yyvsp[-3].str),mm_strdup("aggregate"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44131 "preproc.c"
+#line 44083 "preproc.c"
     break;
 
   case 832: /* DefineStmt: CREATE OPERATOR any_operator definition  */
@@ -44135,7 +44087,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create operator"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44139 "preproc.c"
+#line 44091 "preproc.c"
     break;
 
   case 833: /* DefineStmt: CREATE TYPE_P any_name definition  */
@@ -44143,7 +44095,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create type"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44147 "preproc.c"
+#line 44099 "preproc.c"
     break;
 
   case 834: /* DefineStmt: CREATE TYPE_P any_name  */
@@ -44151,7 +44103,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("create type"),(yyvsp[0].str));
 }
-#line 44155 "preproc.c"
+#line 44107 "preproc.c"
     break;
 
   case 835: /* DefineStmt: CREATE TYPE_P any_name AS '(' OptTableFuncElementList ')'  */
@@ -44159,7 +44111,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[-4].str),mm_strdup("as ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44163 "preproc.c"
+#line 44115 "preproc.c"
     break;
 
   case 836: /* DefineStmt: CREATE TYPE_P any_name AS ENUM_P '(' opt_enum_val_list ')'  */
@@ -44167,7 +44119,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[-5].str),mm_strdup("as enum ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44171 "preproc.c"
+#line 44123 "preproc.c"
     break;
 
   case 837: /* DefineStmt: CREATE TYPE_P any_name AS RANGE definition  */
@@ -44175,7 +44127,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create type"),(yyvsp[-3].str),mm_strdup("as range"),(yyvsp[0].str));
 }
-#line 44179 "preproc.c"
+#line 44131 "preproc.c"
     break;
 
   case 838: /* DefineStmt: CREATE TEXT_P SEARCH PARSER any_name definition  */
@@ -44183,7 +44135,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create text search parser"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44187 "preproc.c"
+#line 44139 "preproc.c"
     break;
 
   case 839: /* DefineStmt: CREATE TEXT_P SEARCH DICTIONARY any_name definition  */
@@ -44191,7 +44143,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create text search dictionary"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44195 "preproc.c"
+#line 44147 "preproc.c"
     break;
 
   case 840: /* DefineStmt: CREATE TEXT_P SEARCH TEMPLATE any_name definition  */
@@ -44199,7 +44151,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create text search template"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44203 "preproc.c"
+#line 44155 "preproc.c"
     break;
 
   case 841: /* DefineStmt: CREATE TEXT_P SEARCH CONFIGURATION any_name definition  */
@@ -44207,7 +44159,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create text search configuration"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44211 "preproc.c"
+#line 44163 "preproc.c"
     break;
 
   case 842: /* DefineStmt: CREATE COLLATION any_name definition  */
@@ -44215,7 +44167,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create collation"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44219 "preproc.c"
+#line 44171 "preproc.c"
     break;
 
   case 843: /* DefineStmt: CREATE COLLATION IF_P NOT EXISTS any_name definition  */
@@ -44223,7 +44175,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create collation if not exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44227 "preproc.c"
+#line 44179 "preproc.c"
     break;
 
   case 844: /* DefineStmt: CREATE COLLATION any_name FROM any_name  */
@@ -44231,7 +44183,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create collation"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 44235 "preproc.c"
+#line 44187 "preproc.c"
     break;
 
   case 845: /* DefineStmt: CREATE COLLATION IF_P NOT EXISTS any_name FROM any_name  */
@@ -44239,7 +44191,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create collation if not exists"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 44243 "preproc.c"
+#line 44195 "preproc.c"
     break;
 
   case 846: /* definition: '(' def_list ')'  */
@@ -44247,7 +44199,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44251 "preproc.c"
+#line 44203 "preproc.c"
     break;
 
   case 847: /* def_list: def_elem  */
@@ -44255,7 +44207,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44259 "preproc.c"
+#line 44211 "preproc.c"
     break;
 
   case 848: /* def_list: def_list ',' def_elem  */
@@ -44263,7 +44215,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 44267 "preproc.c"
+#line 44219 "preproc.c"
     break;
 
   case 849: /* def_elem: ColLabel '=' def_arg  */
@@ -44271,7 +44223,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 44275 "preproc.c"
+#line 44227 "preproc.c"
     break;
 
   case 850: /* def_elem: ColLabel  */
@@ -44279,7 +44231,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44283 "preproc.c"
+#line 44235 "preproc.c"
     break;
 
   case 851: /* def_arg: func_type  */
@@ -44287,7 +44239,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44291 "preproc.c"
+#line 44243 "preproc.c"
     break;
 
   case 852: /* def_arg: reserved_keyword  */
@@ -44295,7 +44247,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44299 "preproc.c"
+#line 44251 "preproc.c"
     break;
 
   case 853: /* def_arg: qual_all_Op  */
@@ -44303,7 +44255,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44307 "preproc.c"
+#line 44259 "preproc.c"
     break;
 
   case 854: /* def_arg: NumericOnly  */
@@ -44311,7 +44263,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44315 "preproc.c"
+#line 44267 "preproc.c"
     break;
 
   case 855: /* def_arg: ecpg_sconst  */
@@ -44319,7 +44271,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44323 "preproc.c"
+#line 44275 "preproc.c"
     break;
 
   case 856: /* def_arg: NONE  */
@@ -44327,7 +44279,7 @@
  { 
  (yyval.str) = mm_strdup("none");
 }
-#line 44331 "preproc.c"
+#line 44283 "preproc.c"
     break;
 
   case 857: /* old_aggr_definition: '(' old_aggr_list ')'  */
@@ -44335,7 +44287,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44339 "preproc.c"
+#line 44291 "preproc.c"
     break;
 
   case 858: /* old_aggr_list: old_aggr_elem  */
@@ -44343,7 +44295,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44347 "preproc.c"
+#line 44299 "preproc.c"
     break;
 
   case 859: /* old_aggr_list: old_aggr_list ',' old_aggr_elem  */
@@ -44351,7 +44303,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 44355 "preproc.c"
+#line 44307 "preproc.c"
     break;
 
   case 860: /* old_aggr_elem: ecpg_ident '=' def_arg  */
@@ -44359,7 +44311,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 44363 "preproc.c"
+#line 44315 "preproc.c"
     break;
 
   case 861: /* opt_enum_val_list: enum_val_list  */
@@ -44367,14 +44319,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44371 "preproc.c"
+#line 44323 "preproc.c"
     break;
 
   case 862: /* opt_enum_val_list: %empty  */
 #line 5952 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44378 "preproc.c"
+#line 44330 "preproc.c"
     break;
 
   case 863: /* enum_val_list: ecpg_sconst  */
@@ -44382,7 +44334,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44386 "preproc.c"
+#line 44338 "preproc.c"
     break;
 
   case 864: /* enum_val_list: enum_val_list ',' ecpg_sconst  */
@@ -44390,7 +44342,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 44394 "preproc.c"
+#line 44346 "preproc.c"
     break;
 
   case 865: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists ecpg_sconst  */
@@ -44398,7 +44350,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter type"),(yyvsp[-4].str),mm_strdup("add value"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44402 "preproc.c"
+#line 44354 "preproc.c"
     break;
 
   case 866: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists ecpg_sconst BEFORE ecpg_sconst  */
@@ -44406,7 +44358,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[-6].str),mm_strdup("add value"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("before"),(yyvsp[0].str));
 }
-#line 44410 "preproc.c"
+#line 44362 "preproc.c"
     break;
 
   case 867: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists ecpg_sconst AFTER ecpg_sconst  */
@@ -44414,7 +44366,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[-6].str),mm_strdup("add value"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("after"),(yyvsp[0].str));
 }
-#line 44418 "preproc.c"
+#line 44370 "preproc.c"
     break;
 
   case 868: /* AlterEnumStmt: ALTER TYPE_P any_name RENAME VALUE_P ecpg_sconst TO ecpg_sconst  */
@@ -44422,7 +44374,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter type"),(yyvsp[-5].str),mm_strdup("rename value"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 44426 "preproc.c"
+#line 44378 "preproc.c"
     break;
 
   case 869: /* opt_if_not_exists: IF_P NOT EXISTS  */
@@ -44430,14 +44382,14 @@
  { 
  (yyval.str) = mm_strdup("if not exists");
 }
-#line 44434 "preproc.c"
+#line 44386 "preproc.c"
     break;
 
   case 870: /* opt_if_not_exists: %empty  */
 #line 5995 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44441 "preproc.c"
+#line 44393 "preproc.c"
     break;
 
   case 871: /* CreateOpClassStmt: CREATE OPERATOR CLASS any_name opt_default FOR TYPE_P Typename USING name opt_opfamily AS opclass_item_list  */
@@ -44445,7 +44397,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("create operator class"),(yyvsp[-9].str),(yyvsp[-8].str),mm_strdup("for type"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 44449 "preproc.c"
+#line 44401 "preproc.c"
     break;
 
   case 872: /* opclass_item_list: opclass_item  */
@@ -44453,7 +44405,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44457 "preproc.c"
+#line 44409 "preproc.c"
     break;
 
   case 873: /* opclass_item_list: opclass_item_list ',' opclass_item  */
@@ -44461,7 +44413,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 44465 "preproc.c"
+#line 44417 "preproc.c"
     break;
 
   case 874: /* opclass_item: OPERATOR Iconst any_operator opclass_purpose opt_recheck  */
@@ -44469,7 +44421,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44473 "preproc.c"
+#line 44425 "preproc.c"
     break;
 
   case 875: /* opclass_item: OPERATOR Iconst operator_with_argtypes opclass_purpose opt_recheck  */
@@ -44477,7 +44429,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44481 "preproc.c"
+#line 44433 "preproc.c"
     break;
 
   case 876: /* opclass_item: FUNCTION Iconst function_with_argtypes  */
@@ -44485,7 +44437,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("function"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44489 "preproc.c"
+#line 44441 "preproc.c"
     break;
 
   case 877: /* opclass_item: FUNCTION Iconst '(' type_list ')' function_with_argtypes  */
@@ -44493,7 +44445,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("function"),(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 44497 "preproc.c"
+#line 44449 "preproc.c"
     break;
 
   case 878: /* opclass_item: STORAGE Typename  */
@@ -44501,7 +44453,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("storage"),(yyvsp[0].str));
 }
-#line 44505 "preproc.c"
+#line 44457 "preproc.c"
     break;
 
   case 879: /* opt_default: DEFAULT  */
@@ -44509,14 +44461,14 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 44513 "preproc.c"
+#line 44465 "preproc.c"
     break;
 
   case 880: /* opt_default: %empty  */
 #line 6050 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44520 "preproc.c"
+#line 44472 "preproc.c"
     break;
 
   case 881: /* opt_opfamily: FAMILY any_name  */
@@ -44524,14 +44476,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("family"),(yyvsp[0].str));
 }
-#line 44528 "preproc.c"
+#line 44480 "preproc.c"
     break;
 
   case 882: /* opt_opfamily: %empty  */
 #line 6061 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44535 "preproc.c"
+#line 44487 "preproc.c"
     break;
 
   case 883: /* opclass_purpose: FOR SEARCH  */
@@ -44539,7 +44491,7 @@
  { 
  (yyval.str) = mm_strdup("for search");
 }
-#line 44543 "preproc.c"
+#line 44495 "preproc.c"
     break;
 
   case 884: /* opclass_purpose: FOR ORDER BY any_name  */
@@ -44547,14 +44499,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for order by"),(yyvsp[0].str));
 }
-#line 44551 "preproc.c"
+#line 44503 "preproc.c"
     break;
 
   case 885: /* opclass_purpose: %empty  */
 #line 6076 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44558 "preproc.c"
+#line 44510 "preproc.c"
     break;
 
   case 886: /* opt_recheck: RECHECK  */
@@ -44563,14 +44515,14 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("recheck");
 }
-#line 44567 "preproc.c"
+#line 44519 "preproc.c"
     break;
 
   case 887: /* opt_recheck: %empty  */
 #line 6088 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 44574 "preproc.c"
+#line 44526 "preproc.c"
     break;
 
   case 888: /* CreateOpFamilyStmt: CREATE OPERATOR FAMILY any_name USING name  */
@@ -44578,7 +44530,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create operator family"),(yyvsp[-2].str),mm_strdup("using"),(yyvsp[0].str));
 }
-#line 44582 "preproc.c"
+#line 44534 "preproc.c"
     break;
 
   case 889: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING name ADD_P opclass_item_list  */
@@ -44586,7 +44538,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[-4].str),mm_strdup("using"),(yyvsp[-2].str),mm_strdup("add"),(yyvsp[0].str));
 }
-#line 44590 "preproc.c"
+#line 44542 "preproc.c"
     break;
 
   case 890: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING name DROP opclass_drop_list  */
@@ -44594,7 +44546,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[-4].str),mm_strdup("using"),(yyvsp[-2].str),mm_strdup("drop"),(yyvsp[0].str));
 }
-#line 44598 "preproc.c"
+#line 44550 "preproc.c"
     break;
 
   case 891: /* opclass_drop_list: opclass_drop  */
@@ -44602,7 +44554,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44606 "preproc.c"
+#line 44558 "preproc.c"
     break;
 
   case 892: /* opclass_drop_list: opclass_drop_list ',' opclass_drop  */
@@ -44610,7 +44562,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 44614 "preproc.c"
+#line 44566 "preproc.c"
     break;
 
   case 893: /* opclass_drop: OPERATOR Iconst '(' type_list ')'  */
@@ -44618,7 +44570,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44622 "preproc.c"
+#line 44574 "preproc.c"
     break;
 
   case 894: /* opclass_drop: FUNCTION Iconst '(' type_list ')'  */
@@ -44626,7 +44578,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("function"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 44630 "preproc.c"
+#line 44582 "preproc.c"
     break;
 
   case 895: /* DropOpClassStmt: DROP OPERATOR CLASS any_name USING name opt_drop_behavior  */
@@ -44634,7 +44586,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class"),(yyvsp[-3].str),mm_strdup("using"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44638 "preproc.c"
+#line 44590 "preproc.c"
     break;
 
   case 896: /* DropOpClassStmt: DROP OPERATOR CLASS IF_P EXISTS any_name USING name opt_drop_behavior  */
@@ -44642,7 +44594,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class if exists"),(yyvsp[-3].str),mm_strdup("using"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44646 "preproc.c"
+#line 44598 "preproc.c"
     break;
 
   case 897: /* DropOpFamilyStmt: DROP OPERATOR FAMILY any_name USING name opt_drop_behavior  */
@@ -44650,7 +44602,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family"),(yyvsp[-3].str),mm_strdup("using"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44654 "preproc.c"
+#line 44606 "preproc.c"
     break;
 
   case 898: /* DropOpFamilyStmt: DROP OPERATOR FAMILY IF_P EXISTS any_name USING name opt_drop_behavior  */
@@ -44658,7 +44610,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family if exists"),(yyvsp[-3].str),mm_strdup("using"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44662 "preproc.c"
+#line 44614 "preproc.c"
     break;
 
   case 899: /* DropOwnedStmt: DROP OWNED BY role_list opt_drop_behavior  */
@@ -44666,7 +44618,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop owned by"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44670 "preproc.c"
+#line 44622 "preproc.c"
     break;
 
   case 900: /* ReassignOwnedStmt: REASSIGN OWNED BY role_list TO RoleSpec  */
@@ -44674,7 +44626,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("reassign owned by"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 44678 "preproc.c"
+#line 44630 "preproc.c"
     break;
 
   case 901: /* DropStmt: DROP object_type_any_name IF_P EXISTS any_name_list opt_drop_behavior  */
@@ -44682,7 +44634,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[-4].str),mm_strdup("if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44686 "preproc.c"
+#line 44638 "preproc.c"
     break;
 
   case 902: /* DropStmt: DROP object_type_any_name any_name_list opt_drop_behavior  */
@@ -44690,7 +44642,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44694 "preproc.c"
+#line 44646 "preproc.c"
     break;
 
   case 903: /* DropStmt: DROP drop_type_name IF_P EXISTS name_list opt_drop_behavior  */
@@ -44698,7 +44650,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[-4].str),mm_strdup("if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44702 "preproc.c"
+#line 44654 "preproc.c"
     break;
 
   case 904: /* DropStmt: DROP drop_type_name name_list opt_drop_behavior  */
@@ -44706,7 +44658,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44710 "preproc.c"
+#line 44662 "preproc.c"
     break;
 
   case 905: /* DropStmt: DROP object_type_name_on_any_name name ON any_name opt_drop_behavior  */
@@ -44714,7 +44666,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("drop"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("on"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44718 "preproc.c"
+#line 44670 "preproc.c"
     break;
 
   case 906: /* DropStmt: DROP object_type_name_on_any_name IF_P EXISTS name ON any_name opt_drop_behavior  */
@@ -44722,7 +44674,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("drop"),(yyvsp[-6].str),mm_strdup("if exists"),(yyvsp[-3].str),mm_strdup("on"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44726 "preproc.c"
+#line 44678 "preproc.c"
     break;
 
   case 907: /* DropStmt: DROP TYPE_P type_name_list opt_drop_behavior  */
@@ -44730,7 +44682,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop type"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44734 "preproc.c"
+#line 44686 "preproc.c"
     break;
 
   case 908: /* DropStmt: DROP TYPE_P IF_P EXISTS type_name_list opt_drop_behavior  */
@@ -44738,7 +44690,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop type if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44742 "preproc.c"
+#line 44694 "preproc.c"
     break;
 
   case 909: /* DropStmt: DROP DOMAIN_P type_name_list opt_drop_behavior  */
@@ -44746,7 +44698,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop domain"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44750 "preproc.c"
+#line 44702 "preproc.c"
     break;
 
   case 910: /* DropStmt: DROP DOMAIN_P IF_P EXISTS type_name_list opt_drop_behavior  */
@@ -44754,7 +44706,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop domain if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44758 "preproc.c"
+#line 44710 "preproc.c"
     break;
 
   case 911: /* DropStmt: DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior  */
@@ -44762,7 +44714,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44766 "preproc.c"
+#line 44718 "preproc.c"
     break;
 
   case 912: /* DropStmt: DROP INDEX CONCURRENTLY IF_P EXISTS any_name_list opt_drop_behavior  */
@@ -44770,7 +44722,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 44774 "preproc.c"
+#line 44726 "preproc.c"
     break;
 
   case 913: /* object_type_any_name: TABLE  */
@@ -44778,7 +44730,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 44782 "preproc.c"
+#line 44734 "preproc.c"
     break;
 
   case 914: /* object_type_any_name: SEQUENCE  */
@@ -44786,7 +44738,7 @@
  { 
  (yyval.str) = mm_strdup("sequence");
 }
-#line 44790 "preproc.c"
+#line 44742 "preproc.c"
     break;
 
   case 915: /* object_type_any_name: VIEW  */
@@ -44794,7 +44746,7 @@
  { 
  (yyval.str) = mm_strdup("view");
 }
-#line 44798 "preproc.c"
+#line 44750 "preproc.c"
     break;
 
   case 916: /* object_type_any_name: MATERIALIZED VIEW  */
@@ -44802,7 +44754,7 @@
  { 
  (yyval.str) = mm_strdup("materialized view");
 }
-#line 44806 "preproc.c"
+#line 44758 "preproc.c"
     break;
 
   case 917: /* object_type_any_name: INDEX  */
@@ -44810,7 +44762,7 @@
  { 
  (yyval.str) = mm_strdup("index");
 }
-#line 44814 "preproc.c"
+#line 44766 "preproc.c"
     break;
 
   case 918: /* object_type_any_name: FOREIGN TABLE  */
@@ -44818,7 +44770,7 @@
  { 
  (yyval.str) = mm_strdup("foreign table");
 }
-#line 44822 "preproc.c"
+#line 44774 "preproc.c"
     break;
 
   case 919: /* object_type_any_name: COLLATION  */
@@ -44826,7 +44778,7 @@
  { 
  (yyval.str) = mm_strdup("collation");
 }
-#line 44830 "preproc.c"
+#line 44782 "preproc.c"
     break;
 
   case 920: /* object_type_any_name: CONVERSION_P  */
@@ -44834,7 +44786,7 @@
  { 
  (yyval.str) = mm_strdup("conversion");
 }
-#line 44838 "preproc.c"
+#line 44790 "preproc.c"
     break;
 
   case 921: /* object_type_any_name: STATISTICS  */
@@ -44842,7 +44794,7 @@
  { 
  (yyval.str) = mm_strdup("statistics");
 }
-#line 44846 "preproc.c"
+#line 44798 "preproc.c"
     break;
 
   case 922: /* object_type_any_name: TEXT_P SEARCH PARSER  */
@@ -44850,7 +44802,7 @@
  { 
  (yyval.str) = mm_strdup("text search parser");
 }
-#line 44854 "preproc.c"
+#line 44806 "preproc.c"
     break;
 
   case 923: /* object_type_any_name: TEXT_P SEARCH DICTIONARY  */
@@ -44858,7 +44810,7 @@
  { 
  (yyval.str) = mm_strdup("text search dictionary");
 }
-#line 44862 "preproc.c"
+#line 44814 "preproc.c"
     break;
 
   case 924: /* object_type_any_name: TEXT_P SEARCH TEMPLATE  */
@@ -44866,7 +44818,7 @@
  { 
  (yyval.str) = mm_strdup("text search template");
 }
-#line 44870 "preproc.c"
+#line 44822 "preproc.c"
     break;
 
   case 925: /* object_type_any_name: TEXT_P SEARCH CONFIGURATION  */
@@ -44874,7 +44826,7 @@
  { 
  (yyval.str) = mm_strdup("text search configuration");
 }
-#line 44878 "preproc.c"
+#line 44830 "preproc.c"
     break;
 
   case 926: /* object_type_name: drop_type_name  */
@@ -44882,7 +44834,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 44886 "preproc.c"
+#line 44838 "preproc.c"
     break;
 
   case 927: /* object_type_name: DATABASE  */
@@ -44890,7 +44842,7 @@
  { 
  (yyval.str) = mm_strdup("database");
 }
-#line 44894 "preproc.c"
+#line 44846 "preproc.c"
     break;
 
   case 928: /* object_type_name: ROLE  */
@@ -44898,7 +44850,7 @@
  { 
  (yyval.str) = mm_strdup("role");
 }
-#line 44902 "preproc.c"
+#line 44854 "preproc.c"
     break;
 
   case 929: /* object_type_name: SUBSCRIPTION  */
@@ -44906,7 +44858,7 @@
  { 
  (yyval.str) = mm_strdup("subscription");
 }
-#line 44910 "preproc.c"
+#line 44862 "preproc.c"
     break;
 
   case 930: /* object_type_name: TABLESPACE  */
@@ -44914,7 +44866,7 @@
  { 
  (yyval.str) = mm_strdup("tablespace");
 }
-#line 44918 "preproc.c"
+#line 44870 "preproc.c"
     break;
 
   case 931: /* drop_type_name: ACCESS METHOD  */
@@ -44922,7 +44874,7 @@
  { 
  (yyval.str) = mm_strdup("access method");
 }
-#line 44926 "preproc.c"
+#line 44878 "preproc.c"
     break;
 
   case 932: /* drop_type_name: EVENT TRIGGER  */
@@ -44930,7 +44882,7 @@
  { 
  (yyval.str) = mm_strdup("event trigger");
 }
-#line 44934 "preproc.c"
+#line 44886 "preproc.c"
     break;
 
   case 933: /* drop_type_name: EXTENSION  */
@@ -44938,7 +44890,7 @@
  { 
  (yyval.str) = mm_strdup("extension");
 }
-#line 44942 "preproc.c"
+#line 44894 "preproc.c"
     break;
 
   case 934: /* drop_type_name: FOREIGN DATA_P WRAPPER  */
@@ -44946,7 +44898,7 @@
  { 
  (yyval.str) = mm_strdup("foreign data wrapper");
 }
-#line 44950 "preproc.c"
+#line 44902 "preproc.c"
     break;
 
   case 935: /* drop_type_name: opt_procedural LANGUAGE  */
@@ -44954,7 +44906,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("language"));
 }
-#line 44958 "preproc.c"
+#line 44910 "preproc.c"
     break;
 
   case 936: /* drop_type_name: PUBLICATION  */
@@ -44962,7 +44914,7 @@
  { 
  (yyval.str) = mm_strdup("publication");
 }
-#line 44966 "preproc.c"
+#line 44918 "preproc.c"
     break;
 
   case 937: /* drop_type_name: SCHEMA  */
@@ -44970,7 +44922,7 @@
  { 
  (yyval.str) = mm_strdup("schema");
 }
-#line 44974 "preproc.c"
+#line 44926 "preproc.c"
     break;
 
   case 938: /* drop_type_name: SERVER  */
@@ -44978,7 +44930,7 @@
  { 
  (yyval.str) = mm_strdup("server");
 }
-#line 44982 "preproc.c"
+#line 44934 "preproc.c"
     break;
 
   case 939: /* object_type_name_on_any_name: POLICY  */
@@ -44986,7 +44938,7 @@
  { 
  (yyval.str) = mm_strdup("policy");
 }
-#line 44990 "preproc.c"
+#line 44942 "preproc.c"
     break;
 
   case 940: /* object_type_name_on_any_name: RULE  */
@@ -44994,7 +44946,7 @@
  { 
  (yyval.str) = mm_strdup("rule");
 }
-#line 44998 "preproc.c"
+#line 44950 "preproc.c"
     break;
 
   case 941: /* object_type_name_on_any_name: TRIGGER  */
@@ -45002,7 +44954,7 @@
  { 
  (yyval.str) = mm_strdup("trigger");
 }
-#line 45006 "preproc.c"
+#line 44958 "preproc.c"
     break;
 
   case 942: /* any_name_list: any_name  */
@@ -45010,7 +44962,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45014 "preproc.c"
+#line 44966 "preproc.c"
     break;
 
   case 943: /* any_name_list: any_name_list ',' any_name  */
@@ -45018,7 +44970,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 45022 "preproc.c"
+#line 44974 "preproc.c"
     break;
 
   case 944: /* any_name: ColId  */
@@ -45026,7 +44978,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45030 "preproc.c"
+#line 44982 "preproc.c"
     break;
 
   case 945: /* any_name: ColId attrs  */
@@ -45034,7 +44986,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45038 "preproc.c"
+#line 44990 "preproc.c"
     break;
 
   case 946: /* attrs: '.' attr_name  */
@@ -45042,7 +44994,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[0].str));
 }
-#line 45046 "preproc.c"
+#line 44998 "preproc.c"
     break;
 
   case 947: /* attrs: attrs '.' attr_name  */
@@ -45050,7 +45002,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("."),(yyvsp[0].str));
 }
-#line 45054 "preproc.c"
+#line 45006 "preproc.c"
     break;
 
   case 948: /* type_name_list: Typename  */
@@ -45058,7 +45010,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45062 "preproc.c"
+#line 45014 "preproc.c"
     break;
 
   case 949: /* type_name_list: type_name_list ',' Typename  */
@@ -45066,7 +45018,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 45070 "preproc.c"
+#line 45022 "preproc.c"
     break;
 
   case 950: /* TruncateStmt: TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior  */
@@ -45074,7 +45026,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("truncate"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45078 "preproc.c"
+#line 45030 "preproc.c"
     break;
 
   case 951: /* opt_restart_seqs: CONTINUE_P IDENTITY_P  */
@@ -45082,7 +45034,7 @@
  { 
  (yyval.str) = mm_strdup("continue identity");
 }
-#line 45086 "preproc.c"
+#line 45038 "preproc.c"
     break;
 
   case 952: /* opt_restart_seqs: RESTART IDENTITY_P  */
@@ -45090,14 +45042,14 @@
  { 
  (yyval.str) = mm_strdup("restart identity");
 }
-#line 45094 "preproc.c"
+#line 45046 "preproc.c"
     break;
 
   case 953: /* opt_restart_seqs: %empty  */
 #line 6427 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 45101 "preproc.c"
+#line 45053 "preproc.c"
     break;
 
   case 954: /* CommentStmt: COMMENT ON object_type_any_name any_name IS comment_text  */
@@ -45105,7 +45057,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("comment on"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45109 "preproc.c"
+#line 45061 "preproc.c"
     break;
 
   case 955: /* CommentStmt: COMMENT ON COLUMN any_name IS comment_text  */
@@ -45113,7 +45065,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on column"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45117 "preproc.c"
+#line 45069 "preproc.c"
     break;
 
   case 956: /* CommentStmt: COMMENT ON object_type_name name IS comment_text  */
@@ -45121,7 +45073,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("comment on"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45125 "preproc.c"
+#line 45077 "preproc.c"
     break;
 
   case 957: /* CommentStmt: COMMENT ON TYPE_P Typename IS comment_text  */
@@ -45129,7 +45081,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on type"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45133 "preproc.c"
+#line 45085 "preproc.c"
     break;
 
   case 958: /* CommentStmt: COMMENT ON DOMAIN_P Typename IS comment_text  */
@@ -45137,7 +45089,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on domain"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45141 "preproc.c"
+#line 45093 "preproc.c"
     break;
 
   case 959: /* CommentStmt: COMMENT ON AGGREGATE aggregate_with_argtypes IS comment_text  */
@@ -45145,7 +45097,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on aggregate"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45149 "preproc.c"
+#line 45101 "preproc.c"
     break;
 
   case 960: /* CommentStmt: COMMENT ON FUNCTION function_with_argtypes IS comment_text  */
@@ -45153,7 +45105,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on function"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45157 "preproc.c"
+#line 45109 "preproc.c"
     break;
 
   case 961: /* CommentStmt: COMMENT ON OPERATOR operator_with_argtypes IS comment_text  */
@@ -45161,7 +45113,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on operator"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45165 "preproc.c"
+#line 45117 "preproc.c"
     break;
 
   case 962: /* CommentStmt: COMMENT ON CONSTRAINT name ON any_name IS comment_text  */
@@ -45169,7 +45121,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on constraint"),(yyvsp[-4].str),mm_strdup("on"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45173 "preproc.c"
+#line 45125 "preproc.c"
     break;
 
   case 963: /* CommentStmt: COMMENT ON CONSTRAINT name ON DOMAIN_P any_name IS comment_text  */
@@ -45177,7 +45129,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on constraint"),(yyvsp[-5].str),mm_strdup("on domain"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45181 "preproc.c"
+#line 45133 "preproc.c"
     break;
 
   case 964: /* CommentStmt: COMMENT ON object_type_name_on_any_name name ON any_name IS comment_text  */
@@ -45185,7 +45137,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("comment on"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("on"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45189 "preproc.c"
+#line 45141 "preproc.c"
     break;
 
   case 965: /* CommentStmt: COMMENT ON PROCEDURE function_with_argtypes IS comment_text  */
@@ -45193,7 +45145,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on procedure"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45197 "preproc.c"
+#line 45149 "preproc.c"
     break;
 
   case 966: /* CommentStmt: COMMENT ON ROUTINE function_with_argtypes IS comment_text  */
@@ -45201,7 +45153,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on routine"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45205 "preproc.c"
+#line 45157 "preproc.c"
     break;
 
   case 967: /* CommentStmt: COMMENT ON TRANSFORM FOR Typename LANGUAGE name IS comment_text  */
@@ -45209,7 +45161,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on transform for"),(yyvsp[-4].str),mm_strdup("language"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45213 "preproc.c"
+#line 45165 "preproc.c"
     break;
 
   case 968: /* CommentStmt: COMMENT ON OPERATOR CLASS any_name USING name IS comment_text  */
@@ -45217,7 +45169,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator class"),(yyvsp[-4].str),mm_strdup("using"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45221 "preproc.c"
+#line 45173 "preproc.c"
     break;
 
   case 969: /* CommentStmt: COMMENT ON OPERATOR FAMILY any_name USING name IS comment_text  */
@@ -45225,7 +45177,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator family"),(yyvsp[-4].str),mm_strdup("using"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45229 "preproc.c"
+#line 45181 "preproc.c"
     break;
 
   case 970: /* CommentStmt: COMMENT ON LARGE_P OBJECT_P NumericOnly IS comment_text  */
@@ -45233,7 +45185,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("comment on large object"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45237 "preproc.c"
+#line 45189 "preproc.c"
     break;
 
   case 971: /* CommentStmt: COMMENT ON CAST '(' Typename AS Typename ')' IS comment_text  */
@@ -45241,7 +45193,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("comment on cast ("),(yyvsp[-5].str),mm_strdup("as"),(yyvsp[-3].str),mm_strdup(") is"),(yyvsp[0].str));
 }
-#line 45245 "preproc.c"
+#line 45197 "preproc.c"
     break;
 
   case 972: /* comment_text: ecpg_sconst  */
@@ -45249,7 +45201,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45253 "preproc.c"
+#line 45205 "preproc.c"
     break;
 
   case 973: /* comment_text: NULL_P  */
@@ -45257,7 +45209,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 45261 "preproc.c"
+#line 45213 "preproc.c"
     break;
 
   case 974: /* SecLabelStmt: SECURITY LABEL opt_provider ON object_type_any_name any_name IS security_label  */
@@ -45265,7 +45217,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45269 "preproc.c"
+#line 45221 "preproc.c"
     break;
 
   case 975: /* SecLabelStmt: SECURITY LABEL opt_provider ON COLUMN any_name IS security_label  */
@@ -45273,7 +45225,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on column"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45277 "preproc.c"
+#line 45229 "preproc.c"
     break;
 
   case 976: /* SecLabelStmt: SECURITY LABEL opt_provider ON object_type_name name IS security_label  */
@@ -45281,7 +45233,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45285 "preproc.c"
+#line 45237 "preproc.c"
     break;
 
   case 977: /* SecLabelStmt: SECURITY LABEL opt_provider ON TYPE_P Typename IS security_label  */
@@ -45289,7 +45241,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on type"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45293 "preproc.c"
+#line 45245 "preproc.c"
     break;
 
   case 978: /* SecLabelStmt: SECURITY LABEL opt_provider ON DOMAIN_P Typename IS security_label  */
@@ -45297,7 +45249,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on domain"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45301 "preproc.c"
+#line 45253 "preproc.c"
     break;
 
   case 979: /* SecLabelStmt: SECURITY LABEL opt_provider ON AGGREGATE aggregate_with_argtypes IS security_label  */
@@ -45305,7 +45257,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on aggregate"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45309 "preproc.c"
+#line 45261 "preproc.c"
     break;
 
   case 980: /* SecLabelStmt: SECURITY LABEL opt_provider ON FUNCTION function_with_argtypes IS security_label  */
@@ -45313,7 +45265,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on function"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45317 "preproc.c"
+#line 45269 "preproc.c"
     break;
 
   case 981: /* SecLabelStmt: SECURITY LABEL opt_provider ON LARGE_P OBJECT_P NumericOnly IS security_label  */
@@ -45321,7 +45273,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-6].str),mm_strdup("on large object"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45325 "preproc.c"
+#line 45277 "preproc.c"
     break;
 
   case 982: /* SecLabelStmt: SECURITY LABEL opt_provider ON PROCEDURE function_with_argtypes IS security_label  */
@@ -45329,7 +45281,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on procedure"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45333 "preproc.c"
+#line 45285 "preproc.c"
     break;
 
   case 983: /* SecLabelStmt: SECURITY LABEL opt_provider ON ROUTINE function_with_argtypes IS security_label  */
@@ -45337,7 +45289,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[-5].str),mm_strdup("on routine"),(yyvsp[-2].str),mm_strdup("is"),(yyvsp[0].str));
 }
-#line 45341 "preproc.c"
+#line 45293 "preproc.c"
     break;
 
   case 984: /* opt_provider: FOR NonReservedWord_or_Sconst  */
@@ -45345,14 +45297,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[0].str));
 }
-#line 45349 "preproc.c"
+#line 45301 "preproc.c"
     break;
 
   case 985: /* opt_provider: %empty  */
 #line 6570 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 45356 "preproc.c"
+#line 45308 "preproc.c"
     break;
 
   case 986: /* security_label: ecpg_sconst  */
@@ -45360,7 +45312,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45364 "preproc.c"
+#line 45316 "preproc.c"
     break;
 
   case 987: /* security_label: NULL_P  */
@@ -45368,7 +45320,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 45372 "preproc.c"
+#line 45324 "preproc.c"
     break;
 
   case 988: /* FetchStmt: FETCH fetch_args  */
@@ -45376,7 +45328,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("fetch"),(yyvsp[0].str));
 }
-#line 45380 "preproc.c"
+#line 45332 "preproc.c"
     break;
 
   case 989: /* FetchStmt: MOVE fetch_args  */
@@ -45384,7 +45336,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("move"),(yyvsp[0].str));
 }
-#line 45388 "preproc.c"
+#line 45340 "preproc.c"
     break;
 
   case 990: /* FetchStmt: FETCH fetch_args ecpg_fetch_into  */
@@ -45392,7 +45344,7 @@
         {
 		(yyval.str) = cat2_str(mm_strdup("fetch"), (yyvsp[-1].str));
 	}
-#line 45396 "preproc.c"
+#line 45348 "preproc.c"
     break;
 
   case 991: /* FetchStmt: FETCH FORWARD cursor_name opt_ecpg_fetch_into  */
@@ -45405,7 +45357,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward"), cursor_marker);
 	}
-#line 45409 "preproc.c"
+#line 45361 "preproc.c"
     break;
 
   case 992: /* FetchStmt: FETCH FORWARD from_in cursor_name opt_ecpg_fetch_into  */
@@ -45418,7 +45370,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward from"), cursor_marker);
 	}
-#line 45422 "preproc.c"
+#line 45374 "preproc.c"
     break;
 
   case 993: /* FetchStmt: FETCH BACKWARD cursor_name opt_ecpg_fetch_into  */
@@ -45431,7 +45383,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward"), cursor_marker);
 	}
-#line 45435 "preproc.c"
+#line 45387 "preproc.c"
     break;
 
   case 994: /* FetchStmt: FETCH BACKWARD from_in cursor_name opt_ecpg_fetch_into  */
@@ -45444,7 +45396,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward from"), cursor_marker);
 	}
-#line 45448 "preproc.c"
+#line 45400 "preproc.c"
     break;
 
   case 995: /* FetchStmt: MOVE FORWARD cursor_name  */
@@ -45457,7 +45409,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("move forward"), cursor_marker);
 	}
-#line 45461 "preproc.c"
+#line 45413 "preproc.c"
     break;
 
   case 996: /* FetchStmt: MOVE FORWARD from_in cursor_name  */
@@ -45470,7 +45422,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("move forward from"), cursor_marker);
 	}
-#line 45474 "preproc.c"
+#line 45426 "preproc.c"
     break;
 
   case 997: /* FetchStmt: MOVE BACKWARD cursor_name  */
@@ -45483,7 +45435,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("move backward"), cursor_marker);
 	}
-#line 45487 "preproc.c"
+#line 45439 "preproc.c"
     break;
 
   case 998: /* FetchStmt: MOVE BACKWARD from_in cursor_name  */
@@ -45496,7 +45448,7 @@
 
 		(yyval.str) = cat_str(2, mm_strdup("move backward from"), cursor_marker);
 	}
-#line 45500 "preproc.c"
+#line 45452 "preproc.c"
     break;
 
   case 999: /* fetch_args: cursor_name  */
@@ -45514,7 +45466,7 @@
 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45518 "preproc.c"
+#line 45470 "preproc.c"
     break;
 
   case 1000: /* fetch_args: from_in cursor_name  */
@@ -45532,7 +45484,7 @@
 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45536 "preproc.c"
+#line 45488 "preproc.c"
     break;
 
   case 1001: /* fetch_args: NEXT opt_from_in cursor_name  */
@@ -45550,7 +45502,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("next"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45554 "preproc.c"
+#line 45506 "preproc.c"
     break;
 
   case 1002: /* fetch_args: PRIOR opt_from_in cursor_name  */
@@ -45568,7 +45520,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("prior"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45572 "preproc.c"
+#line 45524 "preproc.c"
     break;
 
   case 1003: /* fetch_args: FIRST_P opt_from_in cursor_name  */
@@ -45586,7 +45538,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("first"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45590 "preproc.c"
+#line 45542 "preproc.c"
     break;
 
   case 1004: /* fetch_args: LAST_P opt_from_in cursor_name  */
@@ -45604,7 +45556,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("last"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45608 "preproc.c"
+#line 45560 "preproc.c"
     break;
 
   case 1005: /* fetch_args: ABSOLUTE_P SignedIconst opt_from_in cursor_name  */
@@ -45627,7 +45579,7 @@
 
  (yyval.str) = cat_str(4,mm_strdup("absolute"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45631 "preproc.c"
+#line 45583 "preproc.c"
     break;
 
   case 1006: /* fetch_args: RELATIVE_P SignedIconst opt_from_in cursor_name  */
@@ -45650,7 +45602,7 @@
 
  (yyval.str) = cat_str(4,mm_strdup("relative"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45654 "preproc.c"
+#line 45606 "preproc.c"
     break;
 
   case 1007: /* fetch_args: SignedIconst opt_from_in cursor_name  */
@@ -45673,7 +45625,7 @@
 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45677 "preproc.c"
+#line 45629 "preproc.c"
     break;
 
   case 1008: /* fetch_args: ALL opt_from_in cursor_name  */
@@ -45691,7 +45643,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("all"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45695 "preproc.c"
+#line 45647 "preproc.c"
     break;
 
   case 1009: /* fetch_args: FORWARD SignedIconst opt_from_in cursor_name  */
@@ -45714,7 +45666,7 @@
 
  (yyval.str) = cat_str(4,mm_strdup("forward"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45718 "preproc.c"
+#line 45670 "preproc.c"
     break;
 
   case 1010: /* fetch_args: FORWARD ALL opt_from_in cursor_name  */
@@ -45732,7 +45684,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("forward all"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45736 "preproc.c"
+#line 45688 "preproc.c"
     break;
 
   case 1011: /* fetch_args: BACKWARD SignedIconst opt_from_in cursor_name  */
@@ -45755,7 +45707,7 @@
 
  (yyval.str) = cat_str(4,mm_strdup("backward"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45759 "preproc.c"
+#line 45711 "preproc.c"
     break;
 
   case 1012: /* fetch_args: BACKWARD ALL opt_from_in cursor_name  */
@@ -45773,7 +45725,7 @@
 
  (yyval.str) = cat_str(3,mm_strdup("backward all"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45777 "preproc.c"
+#line 45729 "preproc.c"
     break;
 
   case 1013: /* from_in: FROM  */
@@ -45781,7 +45733,7 @@
  { 
  (yyval.str) = mm_strdup("from");
 }
-#line 45785 "preproc.c"
+#line 45737 "preproc.c"
     break;
 
   case 1014: /* from_in: IN_P  */
@@ -45789,7 +45741,7 @@
  { 
  (yyval.str) = mm_strdup("in");
 }
-#line 45793 "preproc.c"
+#line 45745 "preproc.c"
     break;
 
   case 1015: /* opt_from_in: from_in  */
@@ -45797,14 +45749,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45801 "preproc.c"
+#line 45753 "preproc.c"
     break;
 
   case 1016: /* opt_from_in: %empty  */
 #line 6918 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 45808 "preproc.c"
+#line 45760 "preproc.c"
     break;
 
   case 1017: /* GrantStmt: GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option opt_granted_by  */
@@ -45812,7 +45764,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("grant"),(yyvsp[-6].str),mm_strdup("on"),(yyvsp[-4].str),mm_strdup("to"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45816 "preproc.c"
+#line 45768 "preproc.c"
     break;
 
   case 1018: /* RevokeStmt: REVOKE privileges ON privilege_target FROM grantee_list opt_granted_by opt_drop_behavior  */
@@ -45820,7 +45772,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("revoke"),(yyvsp[-6].str),mm_strdup("on"),(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45824 "preproc.c"
+#line 45776 "preproc.c"
     break;
 
   case 1019: /* RevokeStmt: REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_granted_by opt_drop_behavior  */
@@ -45828,7 +45780,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("revoke grant option for"),(yyvsp[-6].str),mm_strdup("on"),(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45832 "preproc.c"
+#line 45784 "preproc.c"
     break;
 
   case 1020: /* privileges: privilege_list  */
@@ -45836,7 +45788,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45840 "preproc.c"
+#line 45792 "preproc.c"
     break;
 
   case 1021: /* privileges: ALL  */
@@ -45844,7 +45796,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 45848 "preproc.c"
+#line 45800 "preproc.c"
     break;
 
   case 1022: /* privileges: ALL PRIVILEGES  */
@@ -45852,7 +45804,7 @@
  { 
  (yyval.str) = mm_strdup("all privileges");
 }
-#line 45856 "preproc.c"
+#line 45808 "preproc.c"
     break;
 
   case 1023: /* privileges: ALL '(' columnList ')'  */
@@ -45860,7 +45812,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("all ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 45864 "preproc.c"
+#line 45816 "preproc.c"
     break;
 
   case 1024: /* privileges: ALL PRIVILEGES '(' columnList ')'  */
@@ -45868,7 +45820,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("all privileges ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 45872 "preproc.c"
+#line 45824 "preproc.c"
     break;
 
   case 1025: /* privilege_list: privilege  */
@@ -45876,7 +45828,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45880 "preproc.c"
+#line 45832 "preproc.c"
     break;
 
   case 1026: /* privilege_list: privilege_list ',' privilege  */
@@ -45884,7 +45836,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 45888 "preproc.c"
+#line 45840 "preproc.c"
     break;
 
   case 1027: /* privilege: SELECT opt_column_list  */
@@ -45892,7 +45844,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("select"),(yyvsp[0].str));
 }
-#line 45896 "preproc.c"
+#line 45848 "preproc.c"
     break;
 
   case 1028: /* privilege: REFERENCES opt_column_list  */
@@ -45900,7 +45852,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("references"),(yyvsp[0].str));
 }
-#line 45904 "preproc.c"
+#line 45856 "preproc.c"
     break;
 
   case 1029: /* privilege: CREATE opt_column_list  */
@@ -45908,7 +45860,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("create"),(yyvsp[0].str));
 }
-#line 45912 "preproc.c"
+#line 45864 "preproc.c"
     break;
 
   case 1030: /* privilege: ALTER SYSTEM_P  */
@@ -45916,7 +45868,7 @@
  { 
  (yyval.str) = mm_strdup("alter system");
 }
-#line 45920 "preproc.c"
+#line 45872 "preproc.c"
     break;
 
   case 1031: /* privilege: ColId opt_column_list  */
@@ -45924,7 +45876,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 45928 "preproc.c"
+#line 45880 "preproc.c"
     break;
 
   case 1032: /* parameter_name_list: parameter_name  */
@@ -45932,7 +45884,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45936 "preproc.c"
+#line 45888 "preproc.c"
     break;
 
   case 1033: /* parameter_name_list: parameter_name_list ',' parameter_name  */
@@ -45940,7 +45892,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 45944 "preproc.c"
+#line 45896 "preproc.c"
     break;
 
   case 1034: /* parameter_name: ColId  */
@@ -45948,7 +45900,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45952 "preproc.c"
+#line 45904 "preproc.c"
     break;
 
   case 1035: /* parameter_name: parameter_name '.' ColId  */
@@ -45956,7 +45908,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("."),(yyvsp[0].str));
 }
-#line 45960 "preproc.c"
+#line 45912 "preproc.c"
     break;
 
   case 1036: /* privilege_target: qualified_name_list  */
@@ -45964,7 +45916,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 45968 "preproc.c"
+#line 45920 "preproc.c"
     break;
 
   case 1037: /* privilege_target: TABLE qualified_name_list  */
@@ -45972,7 +45924,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[0].str));
 }
-#line 45976 "preproc.c"
+#line 45928 "preproc.c"
     break;
 
   case 1038: /* privilege_target: SEQUENCE qualified_name_list  */
@@ -45980,7 +45932,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("sequence"),(yyvsp[0].str));
 }
-#line 45984 "preproc.c"
+#line 45936 "preproc.c"
     break;
 
   case 1039: /* privilege_target: FOREIGN DATA_P WRAPPER name_list  */
@@ -45988,7 +45940,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("foreign data wrapper"),(yyvsp[0].str));
 }
-#line 45992 "preproc.c"
+#line 45944 "preproc.c"
     break;
 
   case 1040: /* privilege_target: FOREIGN SERVER name_list  */
@@ -45996,7 +45948,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("foreign server"),(yyvsp[0].str));
 }
-#line 46000 "preproc.c"
+#line 45952 "preproc.c"
     break;
 
   case 1041: /* privilege_target: FUNCTION function_with_argtypes_list  */
@@ -46004,7 +45956,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("function"),(yyvsp[0].str));
 }
-#line 46008 "preproc.c"
+#line 45960 "preproc.c"
     break;
 
   case 1042: /* privilege_target: PROCEDURE function_with_argtypes_list  */
@@ -46012,7 +45964,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("procedure"),(yyvsp[0].str));
 }
-#line 46016 "preproc.c"
+#line 45968 "preproc.c"
     break;
 
   case 1043: /* privilege_target: ROUTINE function_with_argtypes_list  */
@@ -46020,7 +45972,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("routine"),(yyvsp[0].str));
 }
-#line 46024 "preproc.c"
+#line 45976 "preproc.c"
     break;
 
   case 1044: /* privilege_target: DATABASE name_list  */
@@ -46028,7 +45980,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("database"),(yyvsp[0].str));
 }
-#line 46032 "preproc.c"
+#line 45984 "preproc.c"
     break;
 
   case 1045: /* privilege_target: DOMAIN_P any_name_list  */
@@ -46036,7 +45988,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("domain"),(yyvsp[0].str));
 }
-#line 46040 "preproc.c"
+#line 45992 "preproc.c"
     break;
 
   case 1046: /* privilege_target: LANGUAGE name_list  */
@@ -46044,7 +45996,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[0].str));
 }
-#line 46048 "preproc.c"
+#line 46000 "preproc.c"
     break;
 
   case 1047: /* privilege_target: LARGE_P OBJECT_P NumericOnly_list  */
@@ -46052,7 +46004,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("large object"),(yyvsp[0].str));
 }
-#line 46056 "preproc.c"
+#line 46008 "preproc.c"
     break;
 
   case 1048: /* privilege_target: PARAMETER parameter_name_list  */
@@ -46060,7 +46012,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("parameter"),(yyvsp[0].str));
 }
-#line 46064 "preproc.c"
+#line 46016 "preproc.c"
     break;
 
   case 1049: /* privilege_target: SCHEMA name_list  */
@@ -46068,7 +46020,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[0].str));
 }
-#line 46072 "preproc.c"
+#line 46024 "preproc.c"
     break;
 
   case 1050: /* privilege_target: TABLESPACE name_list  */
@@ -46076,7 +46028,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[0].str));
 }
-#line 46080 "preproc.c"
+#line 46032 "preproc.c"
     break;
 
   case 1051: /* privilege_target: TYPE_P any_name_list  */
@@ -46084,7 +46036,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[0].str));
 }
-#line 46088 "preproc.c"
+#line 46040 "preproc.c"
     break;
 
   case 1052: /* privilege_target: ALL TABLES IN_P SCHEMA name_list  */
@@ -46092,7 +46044,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("all tables in schema"),(yyvsp[0].str));
 }
-#line 46096 "preproc.c"
+#line 46048 "preproc.c"
     break;
 
   case 1053: /* privilege_target: ALL SEQUENCES IN_P SCHEMA name_list  */
@@ -46100,7 +46052,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("all sequences in schema"),(yyvsp[0].str));
 }
-#line 46104 "preproc.c"
+#line 46056 "preproc.c"
     break;
 
   case 1054: /* privilege_target: ALL FUNCTIONS IN_P SCHEMA name_list  */
@@ -46108,7 +46060,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("all functions in schema"),(yyvsp[0].str));
 }
-#line 46112 "preproc.c"
+#line 46064 "preproc.c"
     break;
 
   case 1055: /* privilege_target: ALL PROCEDURES IN_P SCHEMA name_list  */
@@ -46116,7 +46068,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("all procedures in schema"),(yyvsp[0].str));
 }
-#line 46120 "preproc.c"
+#line 46072 "preproc.c"
     break;
 
   case 1056: /* privilege_target: ALL ROUTINES IN_P SCHEMA name_list  */
@@ -46124,7 +46076,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("all routines in schema"),(yyvsp[0].str));
 }
-#line 46128 "preproc.c"
+#line 46080 "preproc.c"
     break;
 
   case 1057: /* grantee_list: grantee  */
@@ -46132,7 +46084,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46136 "preproc.c"
+#line 46088 "preproc.c"
     break;
 
   case 1058: /* grantee_list: grantee_list ',' grantee  */
@@ -46140,7 +46092,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46144 "preproc.c"
+#line 46096 "preproc.c"
     break;
 
   case 1059: /* grantee: RoleSpec  */
@@ -46148,7 +46100,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46152 "preproc.c"
+#line 46104 "preproc.c"
     break;
 
   case 1060: /* grantee: GROUP_P RoleSpec  */
@@ -46156,7 +46108,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("group"),(yyvsp[0].str));
 }
-#line 46160 "preproc.c"
+#line 46112 "preproc.c"
     break;
 
   case 1061: /* opt_grant_grant_option: WITH GRANT OPTION  */
@@ -46164,14 +46116,14 @@
  { 
  (yyval.str) = mm_strdup("with grant option");
 }
-#line 46168 "preproc.c"
+#line 46120 "preproc.c"
     break;
 
   case 1062: /* opt_grant_grant_option: %empty  */
 #line 7145 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46175 "preproc.c"
+#line 46127 "preproc.c"
     break;
 
   case 1063: /* GrantRoleStmt: GRANT privilege_list TO role_list opt_granted_by  */
@@ -46179,7 +46131,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("grant"),(yyvsp[-3].str),mm_strdup("to"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46183 "preproc.c"
+#line 46135 "preproc.c"
     break;
 
   case 1064: /* GrantRoleStmt: GRANT privilege_list TO role_list WITH grant_role_opt_list opt_granted_by  */
@@ -46187,7 +46139,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[-5].str),mm_strdup("to"),(yyvsp[-3].str),mm_strdup("with"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46191 "preproc.c"
+#line 46143 "preproc.c"
     break;
 
   case 1065: /* RevokeRoleStmt: REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
@@ -46195,7 +46147,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("revoke"),(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46199 "preproc.c"
+#line 46151 "preproc.c"
     break;
 
   case 1066: /* RevokeRoleStmt: REVOKE ColId OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
@@ -46203,7 +46155,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("revoke"),(yyvsp[-7].str),mm_strdup("option for"),(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46207 "preproc.c"
+#line 46159 "preproc.c"
     break;
 
   case 1067: /* grant_role_opt_list: grant_role_opt_list ',' grant_role_opt  */
@@ -46211,7 +46163,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46215 "preproc.c"
+#line 46167 "preproc.c"
     break;
 
   case 1068: /* grant_role_opt_list: grant_role_opt  */
@@ -46219,7 +46171,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46223 "preproc.c"
+#line 46175 "preproc.c"
     break;
 
   case 1069: /* grant_role_opt: ColLabel grant_role_opt_value  */
@@ -46227,7 +46179,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46231 "preproc.c"
+#line 46183 "preproc.c"
     break;
 
   case 1070: /* grant_role_opt_value: OPTION  */
@@ -46235,7 +46187,7 @@
  { 
  (yyval.str) = mm_strdup("option");
 }
-#line 46239 "preproc.c"
+#line 46191 "preproc.c"
     break;
 
   case 1071: /* grant_role_opt_value: TRUE_P  */
@@ -46243,7 +46195,7 @@
  { 
  (yyval.str) = mm_strdup("true");
 }
-#line 46247 "preproc.c"
+#line 46199 "preproc.c"
     break;
 
   case 1072: /* grant_role_opt_value: FALSE_P  */
@@ -46251,7 +46203,7 @@
  { 
  (yyval.str) = mm_strdup("false");
 }
-#line 46255 "preproc.c"
+#line 46207 "preproc.c"
     break;
 
   case 1073: /* opt_granted_by: GRANTED BY RoleSpec  */
@@ -46259,14 +46211,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("granted by"),(yyvsp[0].str));
 }
-#line 46263 "preproc.c"
+#line 46215 "preproc.c"
     break;
 
   case 1074: /* opt_granted_by: %empty  */
 #line 7216 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46270 "preproc.c"
+#line 46222 "preproc.c"
     break;
 
   case 1075: /* AlterDefaultPrivilegesStmt: ALTER DEFAULT PRIVILEGES DefACLOptionList DefACLAction  */
@@ -46274,7 +46226,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter default privileges"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46278 "preproc.c"
+#line 46230 "preproc.c"
     break;
 
   case 1076: /* DefACLOptionList: DefACLOptionList DefACLOption  */
@@ -46282,14 +46234,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46286 "preproc.c"
+#line 46238 "preproc.c"
     break;
 
   case 1077: /* DefACLOptionList: %empty  */
 #line 7235 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46293 "preproc.c"
+#line 46245 "preproc.c"
     break;
 
   case 1078: /* DefACLOption: IN_P SCHEMA name_list  */
@@ -46297,7 +46249,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("in schema"),(yyvsp[0].str));
 }
-#line 46301 "preproc.c"
+#line 46253 "preproc.c"
     break;
 
   case 1079: /* DefACLOption: FOR ROLE role_list  */
@@ -46305,7 +46257,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for role"),(yyvsp[0].str));
 }
-#line 46309 "preproc.c"
+#line 46261 "preproc.c"
     break;
 
   case 1080: /* DefACLOption: FOR USER role_list  */
@@ -46313,7 +46265,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for user"),(yyvsp[0].str));
 }
-#line 46317 "preproc.c"
+#line 46269 "preproc.c"
     break;
 
   case 1081: /* DefACLAction: GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option  */
@@ -46321,7 +46273,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("to"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46325 "preproc.c"
+#line 46277 "preproc.c"
     break;
 
   case 1082: /* DefACLAction: REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
@@ -46329,7 +46281,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("revoke"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("from"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46333 "preproc.c"
+#line 46285 "preproc.c"
     break;
 
   case 1083: /* DefACLAction: REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
@@ -46337,7 +46289,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("revoke grant option for"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("from"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46341 "preproc.c"
+#line 46293 "preproc.c"
     break;
 
   case 1084: /* defacl_privilege_target: TABLES  */
@@ -46345,7 +46297,7 @@
  { 
  (yyval.str) = mm_strdup("tables");
 }
-#line 46349 "preproc.c"
+#line 46301 "preproc.c"
     break;
 
   case 1085: /* defacl_privilege_target: FUNCTIONS  */
@@ -46353,7 +46305,7 @@
  { 
  (yyval.str) = mm_strdup("functions");
 }
-#line 46357 "preproc.c"
+#line 46309 "preproc.c"
     break;
 
   case 1086: /* defacl_privilege_target: ROUTINES  */
@@ -46361,7 +46313,7 @@
  { 
  (yyval.str) = mm_strdup("routines");
 }
-#line 46365 "preproc.c"
+#line 46317 "preproc.c"
     break;
 
   case 1087: /* defacl_privilege_target: SEQUENCES  */
@@ -46369,7 +46321,7 @@
  { 
  (yyval.str) = mm_strdup("sequences");
 }
-#line 46373 "preproc.c"
+#line 46325 "preproc.c"
     break;
 
   case 1088: /* defacl_privilege_target: TYPES_P  */
@@ -46377,7 +46329,7 @@
  { 
  (yyval.str) = mm_strdup("types");
 }
-#line 46381 "preproc.c"
+#line 46333 "preproc.c"
     break;
 
   case 1089: /* defacl_privilege_target: SCHEMAS  */
@@ -46385,7 +46337,7 @@
  { 
  (yyval.str) = mm_strdup("schemas");
 }
-#line 46389 "preproc.c"
+#line 46341 "preproc.c"
     break;
 
   case 1090: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently opt_single_name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_unique_null_treatment opt_reloptions OptTableSpace where_clause  */
@@ -46393,7 +46345,7 @@
  { 
  (yyval.str) = cat_str(16,mm_strdup("create"),(yyvsp[-14].str),mm_strdup("index"),(yyvsp[-12].str),(yyvsp[-11].str),mm_strdup("on"),(yyvsp[-9].str),(yyvsp[-8].str),mm_strdup("("),(yyvsp[-6].str),mm_strdup(")"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46397 "preproc.c"
+#line 46349 "preproc.c"
     break;
 
   case 1091: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently IF_P NOT EXISTS name ON relation_expr access_method_clause '(' index_params ')' opt_include opt_unique_null_treatment opt_reloptions OptTableSpace where_clause  */
@@ -46401,7 +46353,7 @@
  { 
  (yyval.str) = cat_str(17,mm_strdup("create"),(yyvsp[-17].str),mm_strdup("index"),(yyvsp[-15].str),mm_strdup("if not exists"),(yyvsp[-11].str),mm_strdup("on"),(yyvsp[-9].str),(yyvsp[-8].str),mm_strdup("("),(yyvsp[-6].str),mm_strdup(")"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46405 "preproc.c"
+#line 46357 "preproc.c"
     break;
 
   case 1092: /* opt_unique: UNIQUE  */
@@ -46409,14 +46361,14 @@
  { 
  (yyval.str) = mm_strdup("unique");
 }
-#line 46413 "preproc.c"
+#line 46365 "preproc.c"
     break;
 
   case 1093: /* opt_unique: %empty  */
 #line 7318 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46420 "preproc.c"
+#line 46372 "preproc.c"
     break;
 
   case 1094: /* access_method_clause: USING name  */
@@ -46424,14 +46376,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[0].str));
 }
-#line 46428 "preproc.c"
+#line 46380 "preproc.c"
     break;
 
   case 1095: /* access_method_clause: %empty  */
 #line 7329 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46435 "preproc.c"
+#line 46387 "preproc.c"
     break;
 
   case 1096: /* index_params: index_elem  */
@@ -46439,7 +46391,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46443 "preproc.c"
+#line 46395 "preproc.c"
     break;
 
   case 1097: /* index_params: index_params ',' index_elem  */
@@ -46447,7 +46399,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46451 "preproc.c"
+#line 46403 "preproc.c"
     break;
 
   case 1098: /* index_elem_options: opt_collate opt_qualified_name opt_asc_desc opt_nulls_order  */
@@ -46455,7 +46407,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46459 "preproc.c"
+#line 46411 "preproc.c"
     break;
 
   case 1099: /* index_elem_options: opt_collate any_name reloptions opt_asc_desc opt_nulls_order  */
@@ -46463,7 +46415,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46467 "preproc.c"
+#line 46419 "preproc.c"
     break;
 
   case 1100: /* index_elem: ColId index_elem_options  */
@@ -46471,7 +46423,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46475 "preproc.c"
+#line 46427 "preproc.c"
     break;
 
   case 1101: /* index_elem: func_expr_windowless index_elem_options  */
@@ -46479,7 +46431,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46483 "preproc.c"
+#line 46435 "preproc.c"
     break;
 
   case 1102: /* index_elem: '(' a_expr ')' index_elem_options  */
@@ -46487,7 +46439,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 46491 "preproc.c"
+#line 46443 "preproc.c"
     break;
 
   case 1103: /* opt_include: INCLUDE '(' index_including_params ')'  */
@@ -46495,14 +46447,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("include ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46499 "preproc.c"
+#line 46451 "preproc.c"
     break;
 
   case 1104: /* opt_include: %empty  */
 #line 7380 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46506 "preproc.c"
+#line 46458 "preproc.c"
     break;
 
   case 1105: /* index_including_params: index_elem  */
@@ -46510,7 +46462,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46514 "preproc.c"
+#line 46466 "preproc.c"
     break;
 
   case 1106: /* index_including_params: index_including_params ',' index_elem  */
@@ -46518,7 +46470,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46522 "preproc.c"
+#line 46474 "preproc.c"
     break;
 
   case 1107: /* opt_collate: COLLATE any_name  */
@@ -46526,14 +46478,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[0].str));
 }
-#line 46530 "preproc.c"
+#line 46482 "preproc.c"
     break;
 
   case 1108: /* opt_collate: %empty  */
 #line 7403 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46537 "preproc.c"
+#line 46489 "preproc.c"
     break;
 
   case 1109: /* opt_asc_desc: ASC  */
@@ -46541,7 +46493,7 @@
  { 
  (yyval.str) = mm_strdup("asc");
 }
-#line 46545 "preproc.c"
+#line 46497 "preproc.c"
     break;
 
   case 1110: /* opt_asc_desc: DESC  */
@@ -46549,14 +46501,14 @@
  { 
  (yyval.str) = mm_strdup("desc");
 }
-#line 46553 "preproc.c"
+#line 46505 "preproc.c"
     break;
 
   case 1111: /* opt_asc_desc: %empty  */
 #line 7418 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46560 "preproc.c"
+#line 46512 "preproc.c"
     break;
 
   case 1112: /* opt_nulls_order: NULLS_LA FIRST_P  */
@@ -46564,7 +46516,7 @@
  { 
  (yyval.str) = mm_strdup("nulls first");
 }
-#line 46568 "preproc.c"
+#line 46520 "preproc.c"
     break;
 
   case 1113: /* opt_nulls_order: NULLS_LA LAST_P  */
@@ -46572,14 +46524,14 @@
  { 
  (yyval.str) = mm_strdup("nulls last");
 }
-#line 46576 "preproc.c"
+#line 46528 "preproc.c"
     break;
 
   case 1114: /* opt_nulls_order: %empty  */
 #line 7433 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46583 "preproc.c"
+#line 46535 "preproc.c"
     break;
 
   case 1115: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return opt_createfunc_opt_list opt_routine_body  */
@@ -46587,7 +46539,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[-7].str),mm_strdup("function"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("returns"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46591 "preproc.c"
+#line 46543 "preproc.c"
     break;
 
   case 1116: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE '(' table_func_column_list ')' opt_createfunc_opt_list opt_routine_body  */
@@ -46595,7 +46547,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[-10].str),mm_strdup("function"),(yyvsp[-8].str),(yyvsp[-7].str),mm_strdup("returns table ("),(yyvsp[-3].str),mm_strdup(")"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46599 "preproc.c"
+#line 46551 "preproc.c"
     break;
 
   case 1117: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults opt_createfunc_opt_list opt_routine_body  */
@@ -46603,7 +46555,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[-5].str),mm_strdup("function"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46607 "preproc.c"
+#line 46559 "preproc.c"
     break;
 
   case 1118: /* CreateFunctionStmt: CREATE opt_or_replace PROCEDURE func_name func_args_with_defaults opt_createfunc_opt_list opt_routine_body  */
@@ -46611,7 +46563,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[-5].str),mm_strdup("procedure"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46615 "preproc.c"
+#line 46567 "preproc.c"
     break;
 
   case 1119: /* opt_or_replace: OR REPLACE  */
@@ -46619,14 +46571,14 @@
  { 
  (yyval.str) = mm_strdup("or replace");
 }
-#line 46623 "preproc.c"
+#line 46575 "preproc.c"
     break;
 
   case 1120: /* opt_or_replace: %empty  */
 #line 7464 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46630 "preproc.c"
+#line 46582 "preproc.c"
     break;
 
   case 1121: /* func_args: '(' func_args_list ')'  */
@@ -46634,7 +46586,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46638 "preproc.c"
+#line 46590 "preproc.c"
     break;
 
   case 1122: /* func_args: '(' ')'  */
@@ -46642,7 +46594,7 @@
  { 
  (yyval.str) = mm_strdup("( )");
 }
-#line 46646 "preproc.c"
+#line 46598 "preproc.c"
     break;
 
   case 1123: /* func_args_list: func_arg  */
@@ -46650,7 +46602,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46654 "preproc.c"
+#line 46606 "preproc.c"
     break;
 
   case 1124: /* func_args_list: func_args_list ',' func_arg  */
@@ -46658,7 +46610,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46662 "preproc.c"
+#line 46614 "preproc.c"
     break;
 
   case 1125: /* function_with_argtypes_list: function_with_argtypes  */
@@ -46666,7 +46618,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46670 "preproc.c"
+#line 46622 "preproc.c"
     break;
 
   case 1126: /* function_with_argtypes_list: function_with_argtypes_list ',' function_with_argtypes  */
@@ -46674,7 +46626,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46678 "preproc.c"
+#line 46630 "preproc.c"
     break;
 
   case 1127: /* function_with_argtypes: func_name func_args  */
@@ -46682,7 +46634,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46686 "preproc.c"
+#line 46638 "preproc.c"
     break;
 
   case 1128: /* function_with_argtypes: type_func_name_keyword  */
@@ -46690,7 +46642,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46694 "preproc.c"
+#line 46646 "preproc.c"
     break;
 
   case 1129: /* function_with_argtypes: ColId  */
@@ -46698,7 +46650,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46702 "preproc.c"
+#line 46654 "preproc.c"
     break;
 
   case 1130: /* function_with_argtypes: ColId indirection  */
@@ -46706,7 +46658,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46710 "preproc.c"
+#line 46662 "preproc.c"
     break;
 
   case 1131: /* func_args_with_defaults: '(' func_args_with_defaults_list ')'  */
@@ -46714,7 +46666,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46718 "preproc.c"
+#line 46670 "preproc.c"
     break;
 
   case 1132: /* func_args_with_defaults: '(' ')'  */
@@ -46722,7 +46674,7 @@
  { 
  (yyval.str) = mm_strdup("( )");
 }
-#line 46726 "preproc.c"
+#line 46678 "preproc.c"
     break;
 
   case 1133: /* func_args_with_defaults_list: func_arg_with_default  */
@@ -46730,7 +46682,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46734 "preproc.c"
+#line 46686 "preproc.c"
     break;
 
   case 1134: /* func_args_with_defaults_list: func_args_with_defaults_list ',' func_arg_with_default  */
@@ -46738,7 +46690,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46742 "preproc.c"
+#line 46694 "preproc.c"
     break;
 
   case 1135: /* func_arg: arg_class param_name func_type  */
@@ -46746,7 +46698,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46750 "preproc.c"
+#line 46702 "preproc.c"
     break;
 
   case 1136: /* func_arg: param_name arg_class func_type  */
@@ -46754,7 +46706,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46758 "preproc.c"
+#line 46710 "preproc.c"
     break;
 
   case 1137: /* func_arg: param_name func_type  */
@@ -46762,7 +46714,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46766 "preproc.c"
+#line 46718 "preproc.c"
     break;
 
   case 1138: /* func_arg: arg_class func_type  */
@@ -46770,7 +46722,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46774 "preproc.c"
+#line 46726 "preproc.c"
     break;
 
   case 1139: /* func_arg: func_type  */
@@ -46778,7 +46730,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46782 "preproc.c"
+#line 46734 "preproc.c"
     break;
 
   case 1140: /* arg_class: IN_P  */
@@ -46786,7 +46738,7 @@
  { 
  (yyval.str) = mm_strdup("in");
 }
-#line 46790 "preproc.c"
+#line 46742 "preproc.c"
     break;
 
   case 1141: /* arg_class: OUT_P  */
@@ -46794,7 +46746,7 @@
  { 
  (yyval.str) = mm_strdup("out");
 }
-#line 46798 "preproc.c"
+#line 46750 "preproc.c"
     break;
 
   case 1142: /* arg_class: INOUT  */
@@ -46802,7 +46754,7 @@
  { 
  (yyval.str) = mm_strdup("inout");
 }
-#line 46806 "preproc.c"
+#line 46758 "preproc.c"
     break;
 
   case 1143: /* arg_class: IN_P OUT_P  */
@@ -46810,7 +46762,7 @@
  { 
  (yyval.str) = mm_strdup("in out");
 }
-#line 46814 "preproc.c"
+#line 46766 "preproc.c"
     break;
 
   case 1144: /* arg_class: VARIADIC  */
@@ -46818,7 +46770,7 @@
  { 
  (yyval.str) = mm_strdup("variadic");
 }
-#line 46822 "preproc.c"
+#line 46774 "preproc.c"
     break;
 
   case 1145: /* param_name: type_function_name  */
@@ -46826,7 +46778,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46830 "preproc.c"
+#line 46782 "preproc.c"
     break;
 
   case 1146: /* func_return: func_type  */
@@ -46834,7 +46786,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46838 "preproc.c"
+#line 46790 "preproc.c"
     break;
 
   case 1147: /* func_type: Typename  */
@@ -46842,7 +46794,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46846 "preproc.c"
+#line 46798 "preproc.c"
     break;
 
   case 1148: /* func_type: type_function_name attrs '%' TYPE_P  */
@@ -46850,7 +46802,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("% type"));
 }
-#line 46854 "preproc.c"
+#line 46806 "preproc.c"
     break;
 
   case 1149: /* func_type: SETOF type_function_name attrs '%' TYPE_P  */
@@ -46858,7 +46810,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("setof"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("% type"));
 }
-#line 46862 "preproc.c"
+#line 46814 "preproc.c"
     break;
 
   case 1150: /* func_arg_with_default: func_arg  */
@@ -46866,7 +46818,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46870 "preproc.c"
+#line 46822 "preproc.c"
     break;
 
   case 1151: /* func_arg_with_default: func_arg DEFAULT a_expr  */
@@ -46874,7 +46826,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("default"),(yyvsp[0].str));
 }
-#line 46878 "preproc.c"
+#line 46830 "preproc.c"
     break;
 
   case 1152: /* func_arg_with_default: func_arg '=' a_expr  */
@@ -46882,7 +46834,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 46886 "preproc.c"
+#line 46838 "preproc.c"
     break;
 
   case 1153: /* aggr_arg: func_arg  */
@@ -46891,7 +46843,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46895 "preproc.c"
+#line 46847 "preproc.c"
     break;
 
   case 1154: /* aggr_args: '(' '*' ')'  */
@@ -46899,7 +46851,7 @@
  { 
  (yyval.str) = mm_strdup("( * )");
 }
-#line 46903 "preproc.c"
+#line 46855 "preproc.c"
     break;
 
   case 1155: /* aggr_args: '(' aggr_args_list ')'  */
@@ -46907,7 +46859,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46911 "preproc.c"
+#line 46863 "preproc.c"
     break;
 
   case 1156: /* aggr_args: '(' ORDER BY aggr_args_list ')'  */
@@ -46915,7 +46867,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("( order by"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46919 "preproc.c"
+#line 46871 "preproc.c"
     break;
 
   case 1157: /* aggr_args: '(' aggr_args_list ORDER BY aggr_args_list ')'  */
@@ -46923,7 +46875,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[-4].str),mm_strdup("order by"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 46927 "preproc.c"
+#line 46879 "preproc.c"
     break;
 
   case 1158: /* aggr_args_list: aggr_arg  */
@@ -46931,7 +46883,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46935 "preproc.c"
+#line 46887 "preproc.c"
     break;
 
   case 1159: /* aggr_args_list: aggr_args_list ',' aggr_arg  */
@@ -46939,7 +46891,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46943 "preproc.c"
+#line 46895 "preproc.c"
     break;
 
   case 1160: /* aggregate_with_argtypes: func_name aggr_args  */
@@ -46947,7 +46899,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46951 "preproc.c"
+#line 46903 "preproc.c"
     break;
 
   case 1161: /* aggregate_with_argtypes_list: aggregate_with_argtypes  */
@@ -46955,7 +46907,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46959 "preproc.c"
+#line 46911 "preproc.c"
     break;
 
   case 1162: /* aggregate_with_argtypes_list: aggregate_with_argtypes_list ',' aggregate_with_argtypes  */
@@ -46963,7 +46915,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 46967 "preproc.c"
+#line 46919 "preproc.c"
     break;
 
   case 1163: /* opt_createfunc_opt_list: createfunc_opt_list  */
@@ -46971,14 +46923,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46975 "preproc.c"
+#line 46927 "preproc.c"
     break;
 
   case 1164: /* opt_createfunc_opt_list: %empty  */
 #line 7712 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 46982 "preproc.c"
+#line 46934 "preproc.c"
     break;
 
   case 1165: /* createfunc_opt_list: createfunc_opt_item  */
@@ -46986,7 +46938,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 46990 "preproc.c"
+#line 46942 "preproc.c"
     break;
 
   case 1166: /* createfunc_opt_list: createfunc_opt_list createfunc_opt_item  */
@@ -46994,7 +46946,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 46998 "preproc.c"
+#line 46950 "preproc.c"
     break;
 
   case 1167: /* common_func_opt_item: CALLED ON NULL_P INPUT_P  */
@@ -47002,7 +46954,7 @@
  { 
  (yyval.str) = mm_strdup("called on null input");
 }
-#line 47006 "preproc.c"
+#line 46958 "preproc.c"
     break;
 
   case 1168: /* common_func_opt_item: RETURNS NULL_P ON NULL_P INPUT_P  */
@@ -47010,7 +46962,7 @@
  { 
  (yyval.str) = mm_strdup("returns null on null input");
 }
-#line 47014 "preproc.c"
+#line 46966 "preproc.c"
     break;
 
   case 1169: /* common_func_opt_item: STRICT_P  */
@@ -47018,7 +46970,7 @@
  { 
  (yyval.str) = mm_strdup("strict");
 }
-#line 47022 "preproc.c"
+#line 46974 "preproc.c"
     break;
 
   case 1170: /* common_func_opt_item: IMMUTABLE  */
@@ -47026,7 +46978,7 @@
  { 
  (yyval.str) = mm_strdup("immutable");
 }
-#line 47030 "preproc.c"
+#line 46982 "preproc.c"
     break;
 
   case 1171: /* common_func_opt_item: STABLE  */
@@ -47034,7 +46986,7 @@
  { 
  (yyval.str) = mm_strdup("stable");
 }
-#line 47038 "preproc.c"
+#line 46990 "preproc.c"
     break;
 
   case 1172: /* common_func_opt_item: VOLATILE  */
@@ -47042,7 +46994,7 @@
  { 
  (yyval.str) = mm_strdup("volatile");
 }
-#line 47046 "preproc.c"
+#line 46998 "preproc.c"
     break;
 
   case 1173: /* common_func_opt_item: EXTERNAL SECURITY DEFINER  */
@@ -47050,7 +47002,7 @@
  { 
  (yyval.str) = mm_strdup("external security definer");
 }
-#line 47054 "preproc.c"
+#line 47006 "preproc.c"
     break;
 
   case 1174: /* common_func_opt_item: EXTERNAL SECURITY INVOKER  */
@@ -47058,7 +47010,7 @@
  { 
  (yyval.str) = mm_strdup("external security invoker");
 }
-#line 47062 "preproc.c"
+#line 47014 "preproc.c"
     break;
 
   case 1175: /* common_func_opt_item: SECURITY DEFINER  */
@@ -47066,7 +47018,7 @@
  { 
  (yyval.str) = mm_strdup("security definer");
 }
-#line 47070 "preproc.c"
+#line 47022 "preproc.c"
     break;
 
   case 1176: /* common_func_opt_item: SECURITY INVOKER  */
@@ -47074,7 +47026,7 @@
  { 
  (yyval.str) = mm_strdup("security invoker");
 }
-#line 47078 "preproc.c"
+#line 47030 "preproc.c"
     break;
 
   case 1177: /* common_func_opt_item: LEAKPROOF  */
@@ -47082,7 +47034,7 @@
  { 
  (yyval.str) = mm_strdup("leakproof");
 }
-#line 47086 "preproc.c"
+#line 47038 "preproc.c"
     break;
 
   case 1178: /* common_func_opt_item: NOT LEAKPROOF  */
@@ -47090,7 +47042,7 @@
  { 
  (yyval.str) = mm_strdup("not leakproof");
 }
-#line 47094 "preproc.c"
+#line 47046 "preproc.c"
     break;
 
   case 1179: /* common_func_opt_item: COST NumericOnly  */
@@ -47098,7 +47050,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("cost"),(yyvsp[0].str));
 }
-#line 47102 "preproc.c"
+#line 47054 "preproc.c"
     break;
 
   case 1180: /* common_func_opt_item: ROWS NumericOnly  */
@@ -47106,7 +47058,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("rows"),(yyvsp[0].str));
 }
-#line 47110 "preproc.c"
+#line 47062 "preproc.c"
     break;
 
   case 1181: /* common_func_opt_item: SUPPORT any_name  */
@@ -47114,7 +47066,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("support"),(yyvsp[0].str));
 }
-#line 47118 "preproc.c"
+#line 47070 "preproc.c"
     break;
 
   case 1182: /* common_func_opt_item: FunctionSetResetClause  */
@@ -47122,7 +47074,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47126 "preproc.c"
+#line 47078 "preproc.c"
     break;
 
   case 1183: /* common_func_opt_item: PARALLEL ColId  */
@@ -47130,7 +47082,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("parallel"),(yyvsp[0].str));
 }
-#line 47134 "preproc.c"
+#line 47086 "preproc.c"
     break;
 
   case 1184: /* createfunc_opt_item: AS func_as  */
@@ -47138,7 +47090,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[0].str));
 }
-#line 47142 "preproc.c"
+#line 47094 "preproc.c"
     break;
 
   case 1185: /* createfunc_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
@@ -47146,7 +47098,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[0].str));
 }
-#line 47150 "preproc.c"
+#line 47102 "preproc.c"
     break;
 
   case 1186: /* createfunc_opt_item: TRANSFORM transform_type_list  */
@@ -47154,7 +47106,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("transform"),(yyvsp[0].str));
 }
-#line 47158 "preproc.c"
+#line 47110 "preproc.c"
     break;
 
   case 1187: /* createfunc_opt_item: WINDOW  */
@@ -47162,7 +47114,7 @@
  { 
  (yyval.str) = mm_strdup("window");
 }
-#line 47166 "preproc.c"
+#line 47118 "preproc.c"
     break;
 
   case 1188: /* createfunc_opt_item: common_func_opt_item  */
@@ -47170,7 +47122,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47174 "preproc.c"
+#line 47126 "preproc.c"
     break;
 
   case 1189: /* func_as: ecpg_sconst  */
@@ -47178,7 +47130,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47182 "preproc.c"
+#line 47134 "preproc.c"
     break;
 
   case 1190: /* func_as: ecpg_sconst ',' ecpg_sconst  */
@@ -47186,7 +47138,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 47190 "preproc.c"
+#line 47142 "preproc.c"
     break;
 
   case 1191: /* ReturnStmt: RETURN a_expr  */
@@ -47194,7 +47146,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("return"),(yyvsp[0].str));
 }
-#line 47198 "preproc.c"
+#line 47150 "preproc.c"
     break;
 
   case 1192: /* opt_routine_body: ReturnStmt  */
@@ -47202,7 +47154,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47206 "preproc.c"
+#line 47158 "preproc.c"
     break;
 
   case 1193: /* opt_routine_body: BEGIN_P ATOMIC routine_body_stmt_list END_P  */
@@ -47210,14 +47162,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("begin atomic"),(yyvsp[-1].str),mm_strdup("end"));
 }
-#line 47214 "preproc.c"
+#line 47166 "preproc.c"
     break;
 
   case 1194: /* opt_routine_body: %empty  */
 #line 7855 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47221 "preproc.c"
+#line 47173 "preproc.c"
     break;
 
   case 1195: /* routine_body_stmt_list: routine_body_stmt_list routine_body_stmt ';'  */
@@ -47225,14 +47177,14 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(";"));
 }
-#line 47229 "preproc.c"
+#line 47181 "preproc.c"
     break;
 
   case 1196: /* routine_body_stmt_list: %empty  */
 #line 7866 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47236 "preproc.c"
+#line 47188 "preproc.c"
     break;
 
   case 1197: /* routine_body_stmt: stmt  */
@@ -47240,7 +47192,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47244 "preproc.c"
+#line 47196 "preproc.c"
     break;
 
   case 1198: /* routine_body_stmt: ReturnStmt  */
@@ -47248,7 +47200,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47252 "preproc.c"
+#line 47204 "preproc.c"
     break;
 
   case 1199: /* transform_type_list: FOR TYPE_P Typename  */
@@ -47256,7 +47208,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("for type"),(yyvsp[0].str));
 }
-#line 47260 "preproc.c"
+#line 47212 "preproc.c"
     break;
 
   case 1200: /* transform_type_list: transform_type_list ',' FOR TYPE_P Typename  */
@@ -47264,7 +47216,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-4].str),mm_strdup(", for type"),(yyvsp[0].str));
 }
-#line 47268 "preproc.c"
+#line 47220 "preproc.c"
     break;
 
   case 1201: /* opt_definition: WITH definition  */
@@ -47272,14 +47224,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[0].str));
 }
-#line 47276 "preproc.c"
+#line 47228 "preproc.c"
     break;
 
   case 1202: /* opt_definition: %empty  */
 #line 7901 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47283 "preproc.c"
+#line 47235 "preproc.c"
     break;
 
   case 1203: /* table_func_column: param_name func_type  */
@@ -47287,7 +47239,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47291 "preproc.c"
+#line 47243 "preproc.c"
     break;
 
   case 1204: /* table_func_column_list: table_func_column  */
@@ -47295,7 +47247,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47299 "preproc.c"
+#line 47251 "preproc.c"
     break;
 
   case 1205: /* table_func_column_list: table_func_column_list ',' table_func_column  */
@@ -47303,7 +47255,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 47307 "preproc.c"
+#line 47259 "preproc.c"
     break;
 
   case 1206: /* AlterFunctionStmt: ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -47311,7 +47263,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47315 "preproc.c"
+#line 47267 "preproc.c"
     break;
 
   case 1207: /* AlterFunctionStmt: ALTER PROCEDURE function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -47319,7 +47271,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter procedure"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47323 "preproc.c"
+#line 47275 "preproc.c"
     break;
 
   case 1208: /* AlterFunctionStmt: ALTER ROUTINE function_with_argtypes alterfunc_opt_list opt_restrict  */
@@ -47327,7 +47279,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter routine"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47331 "preproc.c"
+#line 47283 "preproc.c"
     break;
 
   case 1209: /* alterfunc_opt_list: common_func_opt_item  */
@@ -47335,7 +47287,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47339 "preproc.c"
+#line 47291 "preproc.c"
     break;
 
   case 1210: /* alterfunc_opt_list: alterfunc_opt_list common_func_opt_item  */
@@ -47343,7 +47295,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47347 "preproc.c"
+#line 47299 "preproc.c"
     break;
 
   case 1211: /* opt_restrict: RESTRICT  */
@@ -47351,14 +47303,14 @@
  { 
  (yyval.str) = mm_strdup("restrict");
 }
-#line 47355 "preproc.c"
+#line 47307 "preproc.c"
     break;
 
   case 1212: /* opt_restrict: %empty  */
 #line 7960 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47362 "preproc.c"
+#line 47314 "preproc.c"
     break;
 
   case 1213: /* RemoveFuncStmt: DROP FUNCTION function_with_argtypes_list opt_drop_behavior  */
@@ -47366,7 +47318,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop function"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47370 "preproc.c"
+#line 47322 "preproc.c"
     break;
 
   case 1214: /* RemoveFuncStmt: DROP FUNCTION IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -47374,7 +47326,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop function if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47378 "preproc.c"
+#line 47330 "preproc.c"
     break;
 
   case 1215: /* RemoveFuncStmt: DROP PROCEDURE function_with_argtypes_list opt_drop_behavior  */
@@ -47382,7 +47334,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop procedure"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47386 "preproc.c"
+#line 47338 "preproc.c"
     break;
 
   case 1216: /* RemoveFuncStmt: DROP PROCEDURE IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -47390,7 +47342,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop procedure if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47394 "preproc.c"
+#line 47346 "preproc.c"
     break;
 
   case 1217: /* RemoveFuncStmt: DROP ROUTINE function_with_argtypes_list opt_drop_behavior  */
@@ -47398,7 +47350,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop routine"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47402 "preproc.c"
+#line 47354 "preproc.c"
     break;
 
   case 1218: /* RemoveFuncStmt: DROP ROUTINE IF_P EXISTS function_with_argtypes_list opt_drop_behavior  */
@@ -47406,7 +47358,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop routine if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47410 "preproc.c"
+#line 47362 "preproc.c"
     break;
 
   case 1219: /* RemoveAggrStmt: DROP AGGREGATE aggregate_with_argtypes_list opt_drop_behavior  */
@@ -47414,7 +47366,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop aggregate"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47418 "preproc.c"
+#line 47370 "preproc.c"
     break;
 
   case 1220: /* RemoveAggrStmt: DROP AGGREGATE IF_P EXISTS aggregate_with_argtypes_list opt_drop_behavior  */
@@ -47422,7 +47374,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop aggregate if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47426 "preproc.c"
+#line 47378 "preproc.c"
     break;
 
   case 1221: /* RemoveOperStmt: DROP OPERATOR operator_with_argtypes_list opt_drop_behavior  */
@@ -47430,7 +47382,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop operator"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47434 "preproc.c"
+#line 47386 "preproc.c"
     break;
 
   case 1222: /* RemoveOperStmt: DROP OPERATOR IF_P EXISTS operator_with_argtypes_list opt_drop_behavior  */
@@ -47438,7 +47390,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop operator if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47442 "preproc.c"
+#line 47394 "preproc.c"
     break;
 
   case 1223: /* oper_argtypes: '(' Typename ')'  */
@@ -47446,7 +47398,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 47450 "preproc.c"
+#line 47402 "preproc.c"
     break;
 
   case 1224: /* oper_argtypes: '(' Typename ',' Typename ')'  */
@@ -47454,7 +47406,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 47458 "preproc.c"
+#line 47410 "preproc.c"
     break;
 
   case 1225: /* oper_argtypes: '(' NONE ',' Typename ')'  */
@@ -47462,7 +47414,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("( none ,"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 47466 "preproc.c"
+#line 47418 "preproc.c"
     break;
 
   case 1226: /* oper_argtypes: '(' Typename ',' NONE ')'  */
@@ -47470,7 +47422,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-3].str),mm_strdup(", none )"));
 }
-#line 47474 "preproc.c"
+#line 47426 "preproc.c"
     break;
 
   case 1227: /* any_operator: all_Op  */
@@ -47478,7 +47430,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47482 "preproc.c"
+#line 47434 "preproc.c"
     break;
 
   case 1228: /* any_operator: ColId '.' any_operator  */
@@ -47486,7 +47438,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("."),(yyvsp[0].str));
 }
-#line 47490 "preproc.c"
+#line 47442 "preproc.c"
     break;
 
   case 1229: /* operator_with_argtypes_list: operator_with_argtypes  */
@@ -47494,7 +47446,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47498 "preproc.c"
+#line 47450 "preproc.c"
     break;
 
   case 1230: /* operator_with_argtypes_list: operator_with_argtypes_list ',' operator_with_argtypes  */
@@ -47502,7 +47454,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 47506 "preproc.c"
+#line 47458 "preproc.c"
     break;
 
   case 1231: /* operator_with_argtypes: any_operator oper_argtypes  */
@@ -47510,7 +47462,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47514 "preproc.c"
+#line 47466 "preproc.c"
     break;
 
   case 1232: /* DoStmt: DO dostmt_opt_list  */
@@ -47518,7 +47470,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("do"),(yyvsp[0].str));
 }
-#line 47522 "preproc.c"
+#line 47474 "preproc.c"
     break;
 
   case 1233: /* dostmt_opt_list: dostmt_opt_item  */
@@ -47526,7 +47478,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47530 "preproc.c"
+#line 47482 "preproc.c"
     break;
 
   case 1234: /* dostmt_opt_list: dostmt_opt_list dostmt_opt_item  */
@@ -47534,7 +47486,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47538 "preproc.c"
+#line 47490 "preproc.c"
     break;
 
   case 1235: /* dostmt_opt_item: ecpg_sconst  */
@@ -47542,7 +47494,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 47546 "preproc.c"
+#line 47498 "preproc.c"
     break;
 
   case 1236: /* dostmt_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
@@ -47550,7 +47502,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[0].str));
 }
-#line 47554 "preproc.c"
+#line 47506 "preproc.c"
     break;
 
   case 1237: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH FUNCTION function_with_argtypes cast_context  */
@@ -47558,7 +47510,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create cast ("),(yyvsp[-7].str),mm_strdup("as"),(yyvsp[-5].str),mm_strdup(") with function"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47562 "preproc.c"
+#line 47514 "preproc.c"
     break;
 
   case 1238: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITHOUT FUNCTION cast_context  */
@@ -47566,7 +47518,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[-6].str),mm_strdup("as"),(yyvsp[-4].str),mm_strdup(") without function"),(yyvsp[0].str));
 }
-#line 47570 "preproc.c"
+#line 47522 "preproc.c"
     break;
 
   case 1239: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH INOUT cast_context  */
@@ -47574,7 +47526,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[-6].str),mm_strdup("as"),(yyvsp[-4].str),mm_strdup(") with inout"),(yyvsp[0].str));
 }
-#line 47578 "preproc.c"
+#line 47530 "preproc.c"
     break;
 
   case 1240: /* cast_context: AS IMPLICIT_P  */
@@ -47582,7 +47534,7 @@
  { 
  (yyval.str) = mm_strdup("as implicit");
 }
-#line 47586 "preproc.c"
+#line 47538 "preproc.c"
     break;
 
   case 1241: /* cast_context: AS ASSIGNMENT  */
@@ -47590,14 +47542,14 @@
  { 
  (yyval.str) = mm_strdup("as assignment");
 }
-#line 47594 "preproc.c"
+#line 47546 "preproc.c"
     break;
 
   case 1242: /* cast_context: %empty  */
 #line 8127 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47601 "preproc.c"
+#line 47553 "preproc.c"
     break;
 
   case 1243: /* DropCastStmt: DROP CAST opt_if_exists '(' Typename AS Typename ')' opt_drop_behavior  */
@@ -47605,7 +47557,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("drop cast"),(yyvsp[-6].str),mm_strdup("("),(yyvsp[-4].str),mm_strdup("as"),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 47609 "preproc.c"
+#line 47561 "preproc.c"
     break;
 
   case 1244: /* opt_if_exists: IF_P EXISTS  */
@@ -47613,14 +47565,14 @@
  { 
  (yyval.str) = mm_strdup("if exists");
 }
-#line 47617 "preproc.c"
+#line 47569 "preproc.c"
     break;
 
   case 1245: /* opt_if_exists: %empty  */
 #line 8146 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47624 "preproc.c"
+#line 47576 "preproc.c"
     break;
 
   case 1246: /* CreateTransformStmt: CREATE opt_or_replace TRANSFORM FOR Typename LANGUAGE name '(' transform_element_list ')'  */
@@ -47628,7 +47580,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[-8].str),mm_strdup("transform for"),(yyvsp[-5].str),mm_strdup("language"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 47632 "preproc.c"
+#line 47584 "preproc.c"
     break;
 
   case 1247: /* transform_element_list: FROM SQL_P WITH FUNCTION function_with_argtypes ',' TO SQL_P WITH FUNCTION function_with_argtypes  */
@@ -47636,7 +47588,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("from sql with function"),(yyvsp[-6].str),mm_strdup(", to sql with function"),(yyvsp[0].str));
 }
-#line 47640 "preproc.c"
+#line 47592 "preproc.c"
     break;
 
   case 1248: /* transform_element_list: TO SQL_P WITH FUNCTION function_with_argtypes ',' FROM SQL_P WITH FUNCTION function_with_argtypes  */
@@ -47644,7 +47596,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("to sql with function"),(yyvsp[-6].str),mm_strdup(", from sql with function"),(yyvsp[0].str));
 }
-#line 47648 "preproc.c"
+#line 47600 "preproc.c"
     break;
 
   case 1249: /* transform_element_list: FROM SQL_P WITH FUNCTION function_with_argtypes  */
@@ -47652,7 +47604,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("from sql with function"),(yyvsp[0].str));
 }
-#line 47656 "preproc.c"
+#line 47608 "preproc.c"
     break;
 
   case 1250: /* transform_element_list: TO SQL_P WITH FUNCTION function_with_argtypes  */
@@ -47660,7 +47612,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("to sql with function"),(yyvsp[0].str));
 }
-#line 47664 "preproc.c"
+#line 47616 "preproc.c"
     break;
 
   case 1251: /* DropTransformStmt: DROP TRANSFORM opt_if_exists FOR Typename LANGUAGE name opt_drop_behavior  */
@@ -47668,7 +47620,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("drop transform"),(yyvsp[-5].str),mm_strdup("for"),(yyvsp[-3].str),mm_strdup("language"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47672 "preproc.c"
+#line 47624 "preproc.c"
     break;
 
   case 1252: /* ReindexStmt: REINDEX opt_reindex_option_list reindex_target_relation opt_concurrently qualified_name  */
@@ -47676,7 +47628,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("reindex"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47680 "preproc.c"
+#line 47632 "preproc.c"
     break;
 
   case 1253: /* ReindexStmt: REINDEX opt_reindex_option_list SCHEMA opt_concurrently name  */
@@ -47684,7 +47636,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("reindex"),(yyvsp[-3].str),mm_strdup("schema"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47688 "preproc.c"
+#line 47640 "preproc.c"
     break;
 
   case 1254: /* ReindexStmt: REINDEX opt_reindex_option_list reindex_target_all opt_concurrently opt_single_name  */
@@ -47692,7 +47644,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("reindex"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 47696 "preproc.c"
+#line 47648 "preproc.c"
     break;
 
   case 1255: /* reindex_target_relation: INDEX  */
@@ -47700,7 +47652,7 @@
  { 
  (yyval.str) = mm_strdup("index");
 }
-#line 47704 "preproc.c"
+#line 47656 "preproc.c"
     break;
 
   case 1256: /* reindex_target_relation: TABLE  */
@@ -47708,7 +47660,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 47712 "preproc.c"
+#line 47664 "preproc.c"
     break;
 
   case 1257: /* reindex_target_all: SYSTEM_P  */
@@ -47716,7 +47668,7 @@
  { 
  (yyval.str) = mm_strdup("system");
 }
-#line 47720 "preproc.c"
+#line 47672 "preproc.c"
     break;
 
   case 1258: /* reindex_target_all: DATABASE  */
@@ -47724,7 +47676,7 @@
  { 
  (yyval.str) = mm_strdup("database");
 }
-#line 47728 "preproc.c"
+#line 47680 "preproc.c"
     break;
 
   case 1259: /* opt_reindex_option_list: '(' utility_option_list ')'  */
@@ -47732,14 +47684,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 47736 "preproc.c"
+#line 47688 "preproc.c"
     break;
 
   case 1260: /* opt_reindex_option_list: %empty  */
 #line 8233 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 47743 "preproc.c"
+#line 47695 "preproc.c"
     break;
 
   case 1261: /* AlterTblSpcStmt: ALTER TABLESPACE name SET reloptions  */
@@ -47747,7 +47699,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 47751 "preproc.c"
+#line 47703 "preproc.c"
     break;
 
   case 1262: /* AlterTblSpcStmt: ALTER TABLESPACE name RESET reloptions  */
@@ -47755,7 +47707,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[-2].str),mm_strdup("reset"),(yyvsp[0].str));
 }
-#line 47759 "preproc.c"
+#line 47711 "preproc.c"
     break;
 
   case 1263: /* RenameStmt: ALTER AGGREGATE aggregate_with_argtypes RENAME TO name  */
@@ -47763,7 +47715,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter aggregate"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47767 "preproc.c"
+#line 47719 "preproc.c"
     break;
 
   case 1264: /* RenameStmt: ALTER COLLATION any_name RENAME TO name  */
@@ -47771,7 +47723,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47775 "preproc.c"
+#line 47727 "preproc.c"
     break;
 
   case 1265: /* RenameStmt: ALTER CONVERSION_P any_name RENAME TO name  */
@@ -47779,7 +47731,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47783 "preproc.c"
+#line 47735 "preproc.c"
     break;
 
   case 1266: /* RenameStmt: ALTER DATABASE name RENAME TO name  */
@@ -47787,7 +47739,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47791 "preproc.c"
+#line 47743 "preproc.c"
     break;
 
   case 1267: /* RenameStmt: ALTER DOMAIN_P any_name RENAME TO name  */
@@ -47795,7 +47747,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47799 "preproc.c"
+#line 47751 "preproc.c"
     break;
 
   case 1268: /* RenameStmt: ALTER DOMAIN_P any_name RENAME CONSTRAINT name TO name  */
@@ -47803,7 +47755,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter domain"),(yyvsp[-5].str),mm_strdup("rename constraint"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 47807 "preproc.c"
+#line 47759 "preproc.c"
     break;
 
   case 1269: /* RenameStmt: ALTER FOREIGN DATA_P WRAPPER name RENAME TO name  */
@@ -47811,7 +47763,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47815 "preproc.c"
+#line 47767 "preproc.c"
     break;
 
   case 1270: /* RenameStmt: ALTER FUNCTION function_with_argtypes RENAME TO name  */
@@ -47819,7 +47771,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47823 "preproc.c"
+#line 47775 "preproc.c"
     break;
 
   case 1271: /* RenameStmt: ALTER GROUP_P RoleId RENAME TO RoleId  */
@@ -47827,7 +47779,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter group"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47831 "preproc.c"
+#line 47783 "preproc.c"
     break;
 
   case 1272: /* RenameStmt: ALTER opt_procedural LANGUAGE name RENAME TO name  */
@@ -47835,7 +47787,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[-5].str),mm_strdup("language"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47839 "preproc.c"
+#line 47791 "preproc.c"
     break;
 
   case 1273: /* RenameStmt: ALTER OPERATOR CLASS any_name USING name RENAME TO name  */
@@ -47843,7 +47795,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47847 "preproc.c"
+#line 47799 "preproc.c"
     break;
 
   case 1274: /* RenameStmt: ALTER OPERATOR FAMILY any_name USING name RENAME TO name  */
@@ -47851,7 +47803,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47855 "preproc.c"
+#line 47807 "preproc.c"
     break;
 
   case 1275: /* RenameStmt: ALTER POLICY name ON qualified_name RENAME TO name  */
@@ -47859,7 +47811,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter policy"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47863 "preproc.c"
+#line 47815 "preproc.c"
     break;
 
   case 1276: /* RenameStmt: ALTER POLICY IF_P EXISTS name ON qualified_name RENAME TO name  */
@@ -47867,7 +47819,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter policy if exists"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47871 "preproc.c"
+#line 47823 "preproc.c"
     break;
 
   case 1277: /* RenameStmt: ALTER PROCEDURE function_with_argtypes RENAME TO name  */
@@ -47875,7 +47827,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter procedure"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47879 "preproc.c"
+#line 47831 "preproc.c"
     break;
 
   case 1278: /* RenameStmt: ALTER PUBLICATION name RENAME TO name  */
@@ -47883,7 +47835,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47887 "preproc.c"
+#line 47839 "preproc.c"
     break;
 
   case 1279: /* RenameStmt: ALTER ROUTINE function_with_argtypes RENAME TO name  */
@@ -47891,7 +47843,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter routine"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47895 "preproc.c"
+#line 47847 "preproc.c"
     break;
 
   case 1280: /* RenameStmt: ALTER SCHEMA name RENAME TO name  */
@@ -47899,7 +47851,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47903 "preproc.c"
+#line 47855 "preproc.c"
     break;
 
   case 1281: /* RenameStmt: ALTER SERVER name RENAME TO name  */
@@ -47907,7 +47859,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47911 "preproc.c"
+#line 47863 "preproc.c"
     break;
 
   case 1282: /* RenameStmt: ALTER SUBSCRIPTION name RENAME TO name  */
@@ -47915,7 +47867,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47919 "preproc.c"
+#line 47871 "preproc.c"
     break;
 
   case 1283: /* RenameStmt: ALTER TABLE relation_expr RENAME TO name  */
@@ -47923,7 +47875,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47927 "preproc.c"
+#line 47879 "preproc.c"
     break;
 
   case 1284: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME TO name  */
@@ -47931,7 +47883,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47935 "preproc.c"
+#line 47887 "preproc.c"
     break;
 
   case 1285: /* RenameStmt: ALTER SEQUENCE qualified_name RENAME TO name  */
@@ -47939,7 +47891,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47943 "preproc.c"
+#line 47895 "preproc.c"
     break;
 
   case 1286: /* RenameStmt: ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name  */
@@ -47947,7 +47899,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47951 "preproc.c"
+#line 47903 "preproc.c"
     break;
 
   case 1287: /* RenameStmt: ALTER VIEW qualified_name RENAME TO name  */
@@ -47955,7 +47907,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47959 "preproc.c"
+#line 47911 "preproc.c"
     break;
 
   case 1288: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME TO name  */
@@ -47963,7 +47915,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47967 "preproc.c"
+#line 47919 "preproc.c"
     break;
 
   case 1289: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME TO name  */
@@ -47971,7 +47923,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47975 "preproc.c"
+#line 47927 "preproc.c"
     break;
 
   case 1290: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME TO name  */
@@ -47979,7 +47931,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47983 "preproc.c"
+#line 47935 "preproc.c"
     break;
 
   case 1291: /* RenameStmt: ALTER INDEX qualified_name RENAME TO name  */
@@ -47987,7 +47939,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter index"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47991 "preproc.c"
+#line 47943 "preproc.c"
     break;
 
   case 1292: /* RenameStmt: ALTER INDEX IF_P EXISTS qualified_name RENAME TO name  */
@@ -47995,7 +47947,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter index if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 47999 "preproc.c"
+#line 47951 "preproc.c"
     break;
 
   case 1293: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME TO name  */
@@ -48003,7 +47955,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48007 "preproc.c"
+#line 47959 "preproc.c"
     break;
 
   case 1294: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME TO name  */
@@ -48011,7 +47963,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48015 "preproc.c"
+#line 47967 "preproc.c"
     break;
 
   case 1295: /* RenameStmt: ALTER TABLE relation_expr RENAME opt_column name TO name  */
@@ -48019,7 +47971,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter table"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48023 "preproc.c"
+#line 47975 "preproc.c"
     break;
 
   case 1296: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
@@ -48027,7 +47979,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter table if exists"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48031 "preproc.c"
+#line 47983 "preproc.c"
     break;
 
   case 1297: /* RenameStmt: ALTER VIEW qualified_name RENAME opt_column name TO name  */
@@ -48035,7 +47987,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter view"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48039 "preproc.c"
+#line 47991 "preproc.c"
     break;
 
   case 1298: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
@@ -48043,7 +47995,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter view if exists"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48047 "preproc.c"
+#line 47999 "preproc.c"
     break;
 
   case 1299: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name  */
@@ -48051,7 +48003,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter materialized view"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48055 "preproc.c"
+#line 48007 "preproc.c"
     break;
 
   case 1300: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
@@ -48059,7 +48011,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter materialized view if exists"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48063 "preproc.c"
+#line 48015 "preproc.c"
     break;
 
   case 1301: /* RenameStmt: ALTER TABLE relation_expr RENAME CONSTRAINT name TO name  */
@@ -48067,7 +48019,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter table"),(yyvsp[-5].str),mm_strdup("rename constraint"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48071 "preproc.c"
+#line 48023 "preproc.c"
     break;
 
   case 1302: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME CONSTRAINT name TO name  */
@@ -48075,7 +48027,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter table if exists"),(yyvsp[-5].str),mm_strdup("rename constraint"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48079 "preproc.c"
+#line 48031 "preproc.c"
     break;
 
   case 1303: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name  */
@@ -48083,7 +48035,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48087 "preproc.c"
+#line 48039 "preproc.c"
     break;
 
   case 1304: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
@@ -48091,7 +48043,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table if exists"),(yyvsp[-5].str),mm_strdup("rename"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 48095 "preproc.c"
+#line 48047 "preproc.c"
     break;
 
   case 1305: /* RenameStmt: ALTER RULE name ON qualified_name RENAME TO name  */
@@ -48099,7 +48051,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter rule"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48103 "preproc.c"
+#line 48055 "preproc.c"
     break;
 
   case 1306: /* RenameStmt: ALTER TRIGGER name ON qualified_name RENAME TO name  */
@@ -48107,7 +48059,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter trigger"),(yyvsp[-5].str),mm_strdup("on"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48111 "preproc.c"
+#line 48063 "preproc.c"
     break;
 
   case 1307: /* RenameStmt: ALTER EVENT TRIGGER name RENAME TO name  */
@@ -48115,7 +48067,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter event trigger"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48119 "preproc.c"
+#line 48071 "preproc.c"
     break;
 
   case 1308: /* RenameStmt: ALTER ROLE RoleId RENAME TO RoleId  */
@@ -48123,7 +48075,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48127 "preproc.c"
+#line 48079 "preproc.c"
     break;
 
   case 1309: /* RenameStmt: ALTER USER RoleId RENAME TO RoleId  */
@@ -48131,7 +48083,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48135 "preproc.c"
+#line 48087 "preproc.c"
     break;
 
   case 1310: /* RenameStmt: ALTER TABLESPACE name RENAME TO name  */
@@ -48139,7 +48091,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48143 "preproc.c"
+#line 48095 "preproc.c"
     break;
 
   case 1311: /* RenameStmt: ALTER STATISTICS any_name RENAME TO name  */
@@ -48147,7 +48099,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter statistics"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48151 "preproc.c"
+#line 48103 "preproc.c"
     break;
 
   case 1312: /* RenameStmt: ALTER TEXT_P SEARCH PARSER any_name RENAME TO name  */
@@ -48155,7 +48107,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48159 "preproc.c"
+#line 48111 "preproc.c"
     break;
 
   case 1313: /* RenameStmt: ALTER TEXT_P SEARCH DICTIONARY any_name RENAME TO name  */
@@ -48163,7 +48115,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48167 "preproc.c"
+#line 48119 "preproc.c"
     break;
 
   case 1314: /* RenameStmt: ALTER TEXT_P SEARCH TEMPLATE any_name RENAME TO name  */
@@ -48171,7 +48123,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48175 "preproc.c"
+#line 48127 "preproc.c"
     break;
 
   case 1315: /* RenameStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name RENAME TO name  */
@@ -48179,7 +48131,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48183 "preproc.c"
+#line 48135 "preproc.c"
     break;
 
   case 1316: /* RenameStmt: ALTER TYPE_P any_name RENAME TO name  */
@@ -48187,7 +48139,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[-3].str),mm_strdup("rename to"),(yyvsp[0].str));
 }
-#line 48191 "preproc.c"
+#line 48143 "preproc.c"
     break;
 
   case 1317: /* RenameStmt: ALTER TYPE_P any_name RENAME ATTRIBUTE name TO name opt_drop_behavior  */
@@ -48195,7 +48147,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[-6].str),mm_strdup("rename attribute"),(yyvsp[-3].str),mm_strdup("to"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48199 "preproc.c"
+#line 48151 "preproc.c"
     break;
 
   case 1318: /* opt_column: COLUMN  */
@@ -48203,14 +48155,14 @@
  { 
  (yyval.str) = mm_strdup("column");
 }
-#line 48207 "preproc.c"
+#line 48159 "preproc.c"
     break;
 
   case 1319: /* opt_column: %empty  */
 #line 8480 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 48214 "preproc.c"
+#line 48166 "preproc.c"
     break;
 
   case 1320: /* opt_set_data: SET DATA_P  */
@@ -48218,14 +48170,14 @@
  { 
  (yyval.str) = mm_strdup("set data");
 }
-#line 48222 "preproc.c"
+#line 48174 "preproc.c"
     break;
 
   case 1321: /* opt_set_data: %empty  */
 #line 8491 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 48229 "preproc.c"
+#line 48181 "preproc.c"
     break;
 
   case 1322: /* AlterObjectDependsStmt: ALTER FUNCTION function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -48233,7 +48185,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter function"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48237 "preproc.c"
+#line 48189 "preproc.c"
     break;
 
   case 1323: /* AlterObjectDependsStmt: ALTER PROCEDURE function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -48241,7 +48193,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter procedure"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48245 "preproc.c"
+#line 48197 "preproc.c"
     break;
 
   case 1324: /* AlterObjectDependsStmt: ALTER ROUTINE function_with_argtypes opt_no DEPENDS ON EXTENSION name  */
@@ -48249,7 +48201,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter routine"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48253 "preproc.c"
+#line 48205 "preproc.c"
     break;
 
   case 1325: /* AlterObjectDependsStmt: ALTER TRIGGER name ON qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -48257,7 +48209,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("alter trigger"),(yyvsp[-7].str),mm_strdup("on"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48261 "preproc.c"
+#line 48213 "preproc.c"
     break;
 
   case 1326: /* AlterObjectDependsStmt: ALTER MATERIALIZED VIEW qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -48265,7 +48217,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter materialized view"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48269 "preproc.c"
+#line 48221 "preproc.c"
     break;
 
   case 1327: /* AlterObjectDependsStmt: ALTER INDEX qualified_name opt_no DEPENDS ON EXTENSION name  */
@@ -48273,7 +48225,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter index"),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("depends on extension"),(yyvsp[0].str));
 }
-#line 48277 "preproc.c"
+#line 48229 "preproc.c"
     break;
 
   case 1328: /* opt_no: NO  */
@@ -48281,14 +48233,14 @@
  { 
  (yyval.str) = mm_strdup("no");
 }
-#line 48285 "preproc.c"
+#line 48237 "preproc.c"
     break;
 
   case 1329: /* opt_no: %empty  */
 #line 8530 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 48292 "preproc.c"
+#line 48244 "preproc.c"
     break;
 
   case 1330: /* AlterObjectSchemaStmt: ALTER AGGREGATE aggregate_with_argtypes SET SCHEMA name  */
@@ -48296,7 +48248,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter aggregate"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48300 "preproc.c"
+#line 48252 "preproc.c"
     break;
 
   case 1331: /* AlterObjectSchemaStmt: ALTER COLLATION any_name SET SCHEMA name  */
@@ -48304,7 +48256,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48308 "preproc.c"
+#line 48260 "preproc.c"
     break;
 
   case 1332: /* AlterObjectSchemaStmt: ALTER CONVERSION_P any_name SET SCHEMA name  */
@@ -48312,7 +48264,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48316 "preproc.c"
+#line 48268 "preproc.c"
     break;
 
   case 1333: /* AlterObjectSchemaStmt: ALTER DOMAIN_P any_name SET SCHEMA name  */
@@ -48320,7 +48272,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48324 "preproc.c"
+#line 48276 "preproc.c"
     break;
 
   case 1334: /* AlterObjectSchemaStmt: ALTER EXTENSION name SET SCHEMA name  */
@@ -48328,7 +48280,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48332 "preproc.c"
+#line 48284 "preproc.c"
     break;
 
   case 1335: /* AlterObjectSchemaStmt: ALTER FUNCTION function_with_argtypes SET SCHEMA name  */
@@ -48336,7 +48288,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48340 "preproc.c"
+#line 48292 "preproc.c"
     break;
 
   case 1336: /* AlterObjectSchemaStmt: ALTER OPERATOR operator_with_argtypes SET SCHEMA name  */
@@ -48344,7 +48296,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter operator"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48348 "preproc.c"
+#line 48300 "preproc.c"
     break;
 
   case 1337: /* AlterObjectSchemaStmt: ALTER OPERATOR CLASS any_name USING name SET SCHEMA name  */
@@ -48352,7 +48304,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48356 "preproc.c"
+#line 48308 "preproc.c"
     break;
 
   case 1338: /* AlterObjectSchemaStmt: ALTER OPERATOR FAMILY any_name USING name SET SCHEMA name  */
@@ -48360,7 +48312,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48364 "preproc.c"
+#line 48316 "preproc.c"
     break;
 
   case 1339: /* AlterObjectSchemaStmt: ALTER PROCEDURE function_with_argtypes SET SCHEMA name  */
@@ -48368,7 +48320,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter procedure"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48372 "preproc.c"
+#line 48324 "preproc.c"
     break;
 
   case 1340: /* AlterObjectSchemaStmt: ALTER ROUTINE function_with_argtypes SET SCHEMA name  */
@@ -48376,7 +48328,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter routine"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48380 "preproc.c"
+#line 48332 "preproc.c"
     break;
 
   case 1341: /* AlterObjectSchemaStmt: ALTER TABLE relation_expr SET SCHEMA name  */
@@ -48384,7 +48336,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48388 "preproc.c"
+#line 48340 "preproc.c"
     break;
 
   case 1342: /* AlterObjectSchemaStmt: ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
@@ -48392,7 +48344,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48396 "preproc.c"
+#line 48348 "preproc.c"
     break;
 
   case 1343: /* AlterObjectSchemaStmt: ALTER STATISTICS any_name SET SCHEMA name  */
@@ -48400,7 +48352,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter statistics"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48404 "preproc.c"
+#line 48356 "preproc.c"
     break;
 
   case 1344: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH PARSER any_name SET SCHEMA name  */
@@ -48408,7 +48360,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48412 "preproc.c"
+#line 48364 "preproc.c"
     break;
 
   case 1345: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH DICTIONARY any_name SET SCHEMA name  */
@@ -48416,7 +48368,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48420 "preproc.c"
+#line 48372 "preproc.c"
     break;
 
   case 1346: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH TEMPLATE any_name SET SCHEMA name  */
@@ -48424,7 +48376,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48428 "preproc.c"
+#line 48380 "preproc.c"
     break;
 
   case 1347: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name SET SCHEMA name  */
@@ -48432,7 +48384,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48436 "preproc.c"
+#line 48388 "preproc.c"
     break;
 
   case 1348: /* AlterObjectSchemaStmt: ALTER SEQUENCE qualified_name SET SCHEMA name  */
@@ -48440,7 +48392,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48444 "preproc.c"
+#line 48396 "preproc.c"
     break;
 
   case 1349: /* AlterObjectSchemaStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -48448,7 +48400,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48452 "preproc.c"
+#line 48404 "preproc.c"
     break;
 
   case 1350: /* AlterObjectSchemaStmt: ALTER VIEW qualified_name SET SCHEMA name  */
@@ -48456,7 +48408,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48460 "preproc.c"
+#line 48412 "preproc.c"
     break;
 
   case 1351: /* AlterObjectSchemaStmt: ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -48464,7 +48416,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48468 "preproc.c"
+#line 48420 "preproc.c"
     break;
 
   case 1352: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name  */
@@ -48472,7 +48424,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48476 "preproc.c"
+#line 48428 "preproc.c"
     break;
 
   case 1353: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
@@ -48480,7 +48432,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter materialized view if exists"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48484 "preproc.c"
+#line 48436 "preproc.c"
     break;
 
   case 1354: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE relation_expr SET SCHEMA name  */
@@ -48488,7 +48440,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48492 "preproc.c"
+#line 48444 "preproc.c"
     break;
 
   case 1355: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
@@ -48496,7 +48448,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48500 "preproc.c"
+#line 48452 "preproc.c"
     break;
 
   case 1356: /* AlterObjectSchemaStmt: ALTER TYPE_P any_name SET SCHEMA name  */
@@ -48504,7 +48456,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[-3].str),mm_strdup("set schema"),(yyvsp[0].str));
 }
-#line 48508 "preproc.c"
+#line 48460 "preproc.c"
     break;
 
   case 1357: /* AlterOperatorStmt: ALTER OPERATOR operator_with_argtypes SET '(' operator_def_list ')'  */
@@ -48512,7 +48464,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter operator"),(yyvsp[-4].str),mm_strdup("set ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 48516 "preproc.c"
+#line 48468 "preproc.c"
     break;
 
   case 1358: /* operator_def_list: operator_def_elem  */
@@ -48520,7 +48472,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48524 "preproc.c"
+#line 48476 "preproc.c"
     break;
 
   case 1359: /* operator_def_list: operator_def_list ',' operator_def_elem  */
@@ -48528,7 +48480,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 48532 "preproc.c"
+#line 48484 "preproc.c"
     break;
 
   case 1360: /* operator_def_elem: ColLabel '=' NONE  */
@@ -48536,7 +48488,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("= none"));
 }
-#line 48540 "preproc.c"
+#line 48492 "preproc.c"
     break;
 
   case 1361: /* operator_def_elem: ColLabel '=' operator_def_arg  */
@@ -48544,7 +48496,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 48548 "preproc.c"
+#line 48500 "preproc.c"
     break;
 
   case 1362: /* operator_def_arg: func_type  */
@@ -48552,7 +48504,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48556 "preproc.c"
+#line 48508 "preproc.c"
     break;
 
   case 1363: /* operator_def_arg: reserved_keyword  */
@@ -48560,7 +48512,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48564 "preproc.c"
+#line 48516 "preproc.c"
     break;
 
   case 1364: /* operator_def_arg: qual_all_Op  */
@@ -48568,7 +48520,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48572 "preproc.c"
+#line 48524 "preproc.c"
     break;
 
   case 1365: /* operator_def_arg: NumericOnly  */
@@ -48576,7 +48528,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48580 "preproc.c"
+#line 48532 "preproc.c"
     break;
 
   case 1366: /* operator_def_arg: ecpg_sconst  */
@@ -48584,7 +48536,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48588 "preproc.c"
+#line 48540 "preproc.c"
     break;
 
   case 1367: /* AlterTypeStmt: ALTER TYPE_P any_name SET '(' operator_def_list ')'  */
@@ -48592,7 +48544,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter type"),(yyvsp[-4].str),mm_strdup("set ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 48596 "preproc.c"
+#line 48548 "preproc.c"
     break;
 
   case 1368: /* AlterOwnerStmt: ALTER AGGREGATE aggregate_with_argtypes OWNER TO RoleSpec  */
@@ -48600,7 +48552,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter aggregate"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48604 "preproc.c"
+#line 48556 "preproc.c"
     break;
 
   case 1369: /* AlterOwnerStmt: ALTER COLLATION any_name OWNER TO RoleSpec  */
@@ -48608,7 +48560,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48612 "preproc.c"
+#line 48564 "preproc.c"
     break;
 
   case 1370: /* AlterOwnerStmt: ALTER CONVERSION_P any_name OWNER TO RoleSpec  */
@@ -48616,7 +48568,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48620 "preproc.c"
+#line 48572 "preproc.c"
     break;
 
   case 1371: /* AlterOwnerStmt: ALTER DATABASE name OWNER TO RoleSpec  */
@@ -48624,7 +48576,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48628 "preproc.c"
+#line 48580 "preproc.c"
     break;
 
   case 1372: /* AlterOwnerStmt: ALTER DOMAIN_P any_name OWNER TO RoleSpec  */
@@ -48632,7 +48584,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48636 "preproc.c"
+#line 48588 "preproc.c"
     break;
 
   case 1373: /* AlterOwnerStmt: ALTER FUNCTION function_with_argtypes OWNER TO RoleSpec  */
@@ -48640,7 +48592,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48644 "preproc.c"
+#line 48596 "preproc.c"
     break;
 
   case 1374: /* AlterOwnerStmt: ALTER opt_procedural LANGUAGE name OWNER TO RoleSpec  */
@@ -48648,7 +48600,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[-5].str),mm_strdup("language"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48652 "preproc.c"
+#line 48604 "preproc.c"
     break;
 
   case 1375: /* AlterOwnerStmt: ALTER LARGE_P OBJECT_P NumericOnly OWNER TO RoleSpec  */
@@ -48656,7 +48608,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter large object"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48660 "preproc.c"
+#line 48612 "preproc.c"
     break;
 
   case 1376: /* AlterOwnerStmt: ALTER OPERATOR operator_with_argtypes OWNER TO RoleSpec  */
@@ -48664,7 +48616,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter operator"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48668 "preproc.c"
+#line 48620 "preproc.c"
     break;
 
   case 1377: /* AlterOwnerStmt: ALTER OPERATOR CLASS any_name USING name OWNER TO RoleSpec  */
@@ -48672,7 +48624,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48676 "preproc.c"
+#line 48628 "preproc.c"
     break;
 
   case 1378: /* AlterOwnerStmt: ALTER OPERATOR FAMILY any_name USING name OWNER TO RoleSpec  */
@@ -48680,7 +48632,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48684 "preproc.c"
+#line 48636 "preproc.c"
     break;
 
   case 1379: /* AlterOwnerStmt: ALTER PROCEDURE function_with_argtypes OWNER TO RoleSpec  */
@@ -48688,7 +48640,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter procedure"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48692 "preproc.c"
+#line 48644 "preproc.c"
     break;
 
   case 1380: /* AlterOwnerStmt: ALTER ROUTINE function_with_argtypes OWNER TO RoleSpec  */
@@ -48696,7 +48648,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter routine"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48700 "preproc.c"
+#line 48652 "preproc.c"
     break;
 
   case 1381: /* AlterOwnerStmt: ALTER SCHEMA name OWNER TO RoleSpec  */
@@ -48704,7 +48656,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48708 "preproc.c"
+#line 48660 "preproc.c"
     break;
 
   case 1382: /* AlterOwnerStmt: ALTER TYPE_P any_name OWNER TO RoleSpec  */
@@ -48712,7 +48664,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48716 "preproc.c"
+#line 48668 "preproc.c"
     break;
 
   case 1383: /* AlterOwnerStmt: ALTER TABLESPACE name OWNER TO RoleSpec  */
@@ -48720,7 +48672,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48724 "preproc.c"
+#line 48676 "preproc.c"
     break;
 
   case 1384: /* AlterOwnerStmt: ALTER STATISTICS any_name OWNER TO RoleSpec  */
@@ -48728,7 +48680,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter statistics"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48732 "preproc.c"
+#line 48684 "preproc.c"
     break;
 
   case 1385: /* AlterOwnerStmt: ALTER TEXT_P SEARCH DICTIONARY any_name OWNER TO RoleSpec  */
@@ -48736,7 +48688,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48740 "preproc.c"
+#line 48692 "preproc.c"
     break;
 
   case 1386: /* AlterOwnerStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name OWNER TO RoleSpec  */
@@ -48744,7 +48696,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48748 "preproc.c"
+#line 48700 "preproc.c"
     break;
 
   case 1387: /* AlterOwnerStmt: ALTER FOREIGN DATA_P WRAPPER name OWNER TO RoleSpec  */
@@ -48752,7 +48704,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48756 "preproc.c"
+#line 48708 "preproc.c"
     break;
 
   case 1388: /* AlterOwnerStmt: ALTER SERVER name OWNER TO RoleSpec  */
@@ -48760,7 +48712,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48764 "preproc.c"
+#line 48716 "preproc.c"
     break;
 
   case 1389: /* AlterOwnerStmt: ALTER EVENT TRIGGER name OWNER TO RoleSpec  */
@@ -48768,7 +48720,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter event trigger"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48772 "preproc.c"
+#line 48724 "preproc.c"
     break;
 
   case 1390: /* AlterOwnerStmt: ALTER PUBLICATION name OWNER TO RoleSpec  */
@@ -48776,7 +48728,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48780 "preproc.c"
+#line 48732 "preproc.c"
     break;
 
   case 1391: /* AlterOwnerStmt: ALTER SUBSCRIPTION name OWNER TO RoleSpec  */
@@ -48784,7 +48736,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-3].str),mm_strdup("owner to"),(yyvsp[0].str));
 }
-#line 48788 "preproc.c"
+#line 48740 "preproc.c"
     break;
 
   case 1392: /* CreatePublicationStmt: CREATE PUBLICATION name opt_definition  */
@@ -48792,7 +48744,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("create publication"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48796 "preproc.c"
+#line 48748 "preproc.c"
     break;
 
   case 1393: /* CreatePublicationStmt: CREATE PUBLICATION name FOR ALL TABLES opt_definition  */
@@ -48800,7 +48752,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create publication"),(yyvsp[-4].str),mm_strdup("for all tables"),(yyvsp[0].str));
 }
-#line 48804 "preproc.c"
+#line 48756 "preproc.c"
     break;
 
   case 1394: /* CreatePublicationStmt: CREATE PUBLICATION name FOR pub_obj_list opt_definition  */
@@ -48808,7 +48760,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create publication"),(yyvsp[-3].str),mm_strdup("for"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48812 "preproc.c"
+#line 48764 "preproc.c"
     break;
 
   case 1395: /* PublicationObjSpec: TABLE relation_expr opt_column_list OptWhereClause  */
@@ -48816,7 +48768,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("table"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48820 "preproc.c"
+#line 48772 "preproc.c"
     break;
 
   case 1396: /* PublicationObjSpec: TABLES IN_P SCHEMA ColId  */
@@ -48824,7 +48776,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("tables in schema"),(yyvsp[0].str));
 }
-#line 48828 "preproc.c"
+#line 48780 "preproc.c"
     break;
 
   case 1397: /* PublicationObjSpec: TABLES IN_P SCHEMA CURRENT_SCHEMA  */
@@ -48832,7 +48784,7 @@
  { 
  (yyval.str) = mm_strdup("tables in schema current_schema");
 }
-#line 48836 "preproc.c"
+#line 48788 "preproc.c"
     break;
 
   case 1398: /* PublicationObjSpec: ColId opt_column_list OptWhereClause  */
@@ -48840,7 +48792,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48844 "preproc.c"
+#line 48796 "preproc.c"
     break;
 
   case 1399: /* PublicationObjSpec: ColId indirection opt_column_list OptWhereClause  */
@@ -48848,7 +48800,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48852 "preproc.c"
+#line 48804 "preproc.c"
     break;
 
   case 1400: /* PublicationObjSpec: extended_relation_expr opt_column_list OptWhereClause  */
@@ -48856,7 +48808,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48860 "preproc.c"
+#line 48812 "preproc.c"
     break;
 
   case 1401: /* PublicationObjSpec: CURRENT_SCHEMA  */
@@ -48864,7 +48816,7 @@
  { 
  (yyval.str) = mm_strdup("current_schema");
 }
-#line 48868 "preproc.c"
+#line 48820 "preproc.c"
     break;
 
   case 1402: /* pub_obj_list: PublicationObjSpec  */
@@ -48872,7 +48824,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 48876 "preproc.c"
+#line 48828 "preproc.c"
     break;
 
   case 1403: /* pub_obj_list: pub_obj_list ',' PublicationObjSpec  */
@@ -48880,7 +48832,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 48884 "preproc.c"
+#line 48836 "preproc.c"
     break;
 
   case 1404: /* AlterPublicationStmt: ALTER PUBLICATION name SET definition  */
@@ -48888,7 +48840,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 48892 "preproc.c"
+#line 48844 "preproc.c"
     break;
 
   case 1405: /* AlterPublicationStmt: ALTER PUBLICATION name ADD_P pub_obj_list  */
@@ -48896,7 +48848,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-2].str),mm_strdup("add"),(yyvsp[0].str));
 }
-#line 48900 "preproc.c"
+#line 48852 "preproc.c"
     break;
 
   case 1406: /* AlterPublicationStmt: ALTER PUBLICATION name SET pub_obj_list  */
@@ -48904,7 +48856,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 48908 "preproc.c"
+#line 48860 "preproc.c"
     break;
 
   case 1407: /* AlterPublicationStmt: ALTER PUBLICATION name DROP pub_obj_list  */
@@ -48912,7 +48864,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter publication"),(yyvsp[-2].str),mm_strdup("drop"),(yyvsp[0].str));
 }
-#line 48916 "preproc.c"
+#line 48868 "preproc.c"
     break;
 
   case 1408: /* CreateSubscriptionStmt: CREATE SUBSCRIPTION name CONNECTION ecpg_sconst PUBLICATION name_list opt_definition  */
@@ -48920,7 +48872,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("create subscription"),(yyvsp[-5].str),mm_strdup("connection"),(yyvsp[-3].str),mm_strdup("publication"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48924 "preproc.c"
+#line 48876 "preproc.c"
     break;
 
   case 1409: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SET definition  */
@@ -48928,7 +48880,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 48932 "preproc.c"
+#line 48884 "preproc.c"
     break;
 
   case 1410: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name CONNECTION ecpg_sconst  */
@@ -48936,7 +48888,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-2].str),mm_strdup("connection"),(yyvsp[0].str));
 }
-#line 48940 "preproc.c"
+#line 48892 "preproc.c"
     break;
 
   case 1411: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name REFRESH PUBLICATION opt_definition  */
@@ -48944,7 +48896,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-3].str),mm_strdup("refresh publication"),(yyvsp[0].str));
 }
-#line 48948 "preproc.c"
+#line 48900 "preproc.c"
     break;
 
   case 1412: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name ADD_P PUBLICATION name_list opt_definition  */
@@ -48952,7 +48904,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter subscription"),(yyvsp[-4].str),mm_strdup("add publication"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48956 "preproc.c"
+#line 48908 "preproc.c"
     break;
 
   case 1413: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name DROP PUBLICATION name_list opt_definition  */
@@ -48960,7 +48912,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter subscription"),(yyvsp[-4].str),mm_strdup("drop publication"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48964 "preproc.c"
+#line 48916 "preproc.c"
     break;
 
   case 1414: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SET PUBLICATION name_list opt_definition  */
@@ -48968,7 +48920,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter subscription"),(yyvsp[-4].str),mm_strdup("set publication"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 48972 "preproc.c"
+#line 48924 "preproc.c"
     break;
 
   case 1415: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name ENABLE_P  */
@@ -48976,7 +48928,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter subscription"),(yyvsp[-1].str),mm_strdup("enable"));
 }
-#line 48980 "preproc.c"
+#line 48932 "preproc.c"
     break;
 
   case 1416: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name DISABLE_P  */
@@ -48984,7 +48936,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter subscription"),(yyvsp[-1].str),mm_strdup("disable"));
 }
-#line 48988 "preproc.c"
+#line 48940 "preproc.c"
     break;
 
   case 1417: /* AlterSubscriptionStmt: ALTER SUBSCRIPTION name SKIP definition  */
@@ -48992,7 +48944,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter subscription"),(yyvsp[-2].str),mm_strdup("skip"),(yyvsp[0].str));
 }
-#line 48996 "preproc.c"
+#line 48948 "preproc.c"
     break;
 
   case 1418: /* DropSubscriptionStmt: DROP SUBSCRIPTION name opt_drop_behavior  */
@@ -49000,7 +48952,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop subscription"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49004 "preproc.c"
+#line 48956 "preproc.c"
     break;
 
   case 1419: /* DropSubscriptionStmt: DROP SUBSCRIPTION IF_P EXISTS name opt_drop_behavior  */
@@ -49008,7 +48960,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("drop subscription if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49012 "preproc.c"
+#line 48964 "preproc.c"
     break;
 
   case 1420: /* RuleStmt: CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead RuleActionList  */
@@ -49016,7 +48968,7 @@
  { 
  (yyval.str) = cat_str(12,mm_strdup("create"),(yyvsp[-11].str),mm_strdup("rule"),(yyvsp[-9].str),mm_strdup("as on"),(yyvsp[-6].str),mm_strdup("to"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("do"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49020 "preproc.c"
+#line 48972 "preproc.c"
     break;
 
   case 1421: /* RuleActionList: NOTHING  */
@@ -49024,7 +48976,7 @@
  { 
  (yyval.str) = mm_strdup("nothing");
 }
-#line 49028 "preproc.c"
+#line 48980 "preproc.c"
     break;
 
   case 1422: /* RuleActionList: RuleActionStmt  */
@@ -49032,7 +48984,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49036 "preproc.c"
+#line 48988 "preproc.c"
     break;
 
   case 1423: /* RuleActionList: '(' RuleActionMulti ')'  */
@@ -49040,7 +48992,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 49044 "preproc.c"
+#line 48996 "preproc.c"
     break;
 
   case 1424: /* RuleActionMulti: RuleActionMulti ';' RuleActionStmtOrEmpty  */
@@ -49048,7 +49000,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(";"),(yyvsp[0].str));
 }
-#line 49052 "preproc.c"
+#line 49004 "preproc.c"
     break;
 
   case 1425: /* RuleActionMulti: RuleActionStmtOrEmpty  */
@@ -49056,7 +49008,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49060 "preproc.c"
+#line 49012 "preproc.c"
     break;
 
   case 1426: /* RuleActionStmt: SelectStmt  */
@@ -49064,7 +49016,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49068 "preproc.c"
+#line 49020 "preproc.c"
     break;
 
   case 1427: /* RuleActionStmt: InsertStmt  */
@@ -49072,7 +49024,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49076 "preproc.c"
+#line 49028 "preproc.c"
     break;
 
   case 1428: /* RuleActionStmt: UpdateStmt  */
@@ -49080,7 +49032,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49084 "preproc.c"
+#line 49036 "preproc.c"
     break;
 
   case 1429: /* RuleActionStmt: DeleteStmt  */
@@ -49088,7 +49040,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49092 "preproc.c"
+#line 49044 "preproc.c"
     break;
 
   case 1430: /* RuleActionStmt: NotifyStmt  */
@@ -49096,7 +49048,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49100 "preproc.c"
+#line 49052 "preproc.c"
     break;
 
   case 1431: /* RuleActionStmtOrEmpty: RuleActionStmt  */
@@ -49104,14 +49056,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49108 "preproc.c"
+#line 49060 "preproc.c"
     break;
 
   case 1432: /* RuleActionStmtOrEmpty: %empty  */
 #line 9017 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49115 "preproc.c"
+#line 49067 "preproc.c"
     break;
 
   case 1433: /* event: SELECT  */
@@ -49119,7 +49071,7 @@
  { 
  (yyval.str) = mm_strdup("select");
 }
-#line 49123 "preproc.c"
+#line 49075 "preproc.c"
     break;
 
   case 1434: /* event: UPDATE  */
@@ -49127,7 +49079,7 @@
  { 
  (yyval.str) = mm_strdup("update");
 }
-#line 49131 "preproc.c"
+#line 49083 "preproc.c"
     break;
 
   case 1435: /* event: DELETE_P  */
@@ -49135,7 +49087,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 49139 "preproc.c"
+#line 49091 "preproc.c"
     break;
 
   case 1436: /* event: INSERT  */
@@ -49143,7 +49095,7 @@
  { 
  (yyval.str) = mm_strdup("insert");
 }
-#line 49147 "preproc.c"
+#line 49099 "preproc.c"
     break;
 
   case 1437: /* opt_instead: INSTEAD  */
@@ -49151,7 +49103,7 @@
  { 
  (yyval.str) = mm_strdup("instead");
 }
-#line 49155 "preproc.c"
+#line 49107 "preproc.c"
     break;
 
   case 1438: /* opt_instead: ALSO  */
@@ -49159,14 +49111,14 @@
  { 
  (yyval.str) = mm_strdup("also");
 }
-#line 49163 "preproc.c"
+#line 49115 "preproc.c"
     break;
 
   case 1439: /* opt_instead: %empty  */
 #line 9052 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49170 "preproc.c"
+#line 49122 "preproc.c"
     break;
 
   case 1440: /* NotifyStmt: NOTIFY ColId notify_payload  */
@@ -49174,7 +49126,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("notify"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49178 "preproc.c"
+#line 49130 "preproc.c"
     break;
 
   case 1441: /* notify_payload: ',' ecpg_sconst  */
@@ -49182,14 +49134,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup(","),(yyvsp[0].str));
 }
-#line 49186 "preproc.c"
+#line 49138 "preproc.c"
     break;
 
   case 1442: /* notify_payload: %empty  */
 #line 9071 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49193 "preproc.c"
+#line 49145 "preproc.c"
     break;
 
   case 1443: /* ListenStmt: LISTEN ColId  */
@@ -49197,7 +49149,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("listen"),(yyvsp[0].str));
 }
-#line 49201 "preproc.c"
+#line 49153 "preproc.c"
     break;
 
   case 1444: /* UnlistenStmt: UNLISTEN ColId  */
@@ -49205,7 +49157,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("unlisten"),(yyvsp[0].str));
 }
-#line 49209 "preproc.c"
+#line 49161 "preproc.c"
     break;
 
   case 1445: /* UnlistenStmt: UNLISTEN '*'  */
@@ -49213,7 +49165,7 @@
  { 
  (yyval.str) = mm_strdup("unlisten *");
 }
-#line 49217 "preproc.c"
+#line 49169 "preproc.c"
     break;
 
   case 1446: /* TransactionStmt: ABORT_P opt_transaction opt_transaction_chain  */
@@ -49221,7 +49173,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("abort"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49225 "preproc.c"
+#line 49177 "preproc.c"
     break;
 
   case 1447: /* TransactionStmt: START TRANSACTION transaction_mode_list_or_empty  */
@@ -49229,7 +49181,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("start transaction"),(yyvsp[0].str));
 }
-#line 49233 "preproc.c"
+#line 49185 "preproc.c"
     break;
 
   case 1448: /* TransactionStmt: COMMIT opt_transaction opt_transaction_chain  */
@@ -49237,7 +49189,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("commit"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49241 "preproc.c"
+#line 49193 "preproc.c"
     break;
 
   case 1449: /* TransactionStmt: ROLLBACK opt_transaction opt_transaction_chain  */
@@ -49245,7 +49197,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("rollback"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49249 "preproc.c"
+#line 49201 "preproc.c"
     break;
 
   case 1450: /* TransactionStmt: SAVEPOINT ColId  */
@@ -49253,7 +49205,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("savepoint"),(yyvsp[0].str));
 }
-#line 49257 "preproc.c"
+#line 49209 "preproc.c"
     break;
 
   case 1451: /* TransactionStmt: RELEASE SAVEPOINT ColId  */
@@ -49261,7 +49213,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("release savepoint"),(yyvsp[0].str));
 }
-#line 49265 "preproc.c"
+#line 49217 "preproc.c"
     break;
 
   case 1452: /* TransactionStmt: RELEASE ColId  */
@@ -49269,7 +49221,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("release"),(yyvsp[0].str));
 }
-#line 49273 "preproc.c"
+#line 49225 "preproc.c"
     break;
 
   case 1453: /* TransactionStmt: ROLLBACK opt_transaction TO SAVEPOINT ColId  */
@@ -49277,7 +49229,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[-3].str),mm_strdup("to savepoint"),(yyvsp[0].str));
 }
-#line 49281 "preproc.c"
+#line 49233 "preproc.c"
     break;
 
   case 1454: /* TransactionStmt: ROLLBACK opt_transaction TO ColId  */
@@ -49285,7 +49237,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[-2].str),mm_strdup("to"),(yyvsp[0].str));
 }
-#line 49289 "preproc.c"
+#line 49241 "preproc.c"
     break;
 
   case 1455: /* TransactionStmt: PREPARE TRANSACTION ecpg_sconst  */
@@ -49293,7 +49245,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("prepare transaction"),(yyvsp[0].str));
 }
-#line 49297 "preproc.c"
+#line 49249 "preproc.c"
     break;
 
   case 1456: /* TransactionStmt: COMMIT PREPARED ecpg_sconst  */
@@ -49301,7 +49253,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("commit prepared"),(yyvsp[0].str));
 }
-#line 49305 "preproc.c"
+#line 49257 "preproc.c"
     break;
 
   case 1457: /* TransactionStmt: ROLLBACK PREPARED ecpg_sconst  */
@@ -49309,7 +49261,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("rollback prepared"),(yyvsp[0].str));
 }
-#line 49313 "preproc.c"
+#line 49265 "preproc.c"
     break;
 
   case 1458: /* TransactionStmtLegacy: BEGIN_P opt_transaction transaction_mode_list_or_empty  */
@@ -49317,7 +49269,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("begin"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49321 "preproc.c"
+#line 49273 "preproc.c"
     break;
 
   case 1459: /* TransactionStmtLegacy: END_P opt_transaction opt_transaction_chain  */
@@ -49325,7 +49277,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("end"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49329 "preproc.c"
+#line 49281 "preproc.c"
     break;
 
   case 1460: /* opt_transaction: WORK  */
@@ -49333,7 +49285,7 @@
  { 
  (yyval.str) = mm_strdup("work");
 }
-#line 49337 "preproc.c"
+#line 49289 "preproc.c"
     break;
 
   case 1461: /* opt_transaction: TRANSACTION  */
@@ -49341,14 +49293,14 @@
  { 
  (yyval.str) = mm_strdup("transaction");
 }
-#line 49345 "preproc.c"
+#line 49297 "preproc.c"
     break;
 
   case 1462: /* opt_transaction: %empty  */
 #line 9170 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49352 "preproc.c"
+#line 49304 "preproc.c"
     break;
 
   case 1463: /* transaction_mode_item: ISOLATION LEVEL iso_level  */
@@ -49356,7 +49308,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("isolation level"),(yyvsp[0].str));
 }
-#line 49360 "preproc.c"
+#line 49312 "preproc.c"
     break;
 
   case 1464: /* transaction_mode_item: READ ONLY  */
@@ -49364,7 +49316,7 @@
  { 
  (yyval.str) = mm_strdup("read only");
 }
-#line 49368 "preproc.c"
+#line 49320 "preproc.c"
     break;
 
   case 1465: /* transaction_mode_item: READ WRITE  */
@@ -49372,7 +49324,7 @@
  { 
  (yyval.str) = mm_strdup("read write");
 }
-#line 49376 "preproc.c"
+#line 49328 "preproc.c"
     break;
 
   case 1466: /* transaction_mode_item: DEFERRABLE  */
@@ -49380,7 +49332,7 @@
  { 
  (yyval.str) = mm_strdup("deferrable");
 }
-#line 49384 "preproc.c"
+#line 49336 "preproc.c"
     break;
 
   case 1467: /* transaction_mode_item: NOT DEFERRABLE  */
@@ -49388,7 +49340,7 @@
  { 
  (yyval.str) = mm_strdup("not deferrable");
 }
-#line 49392 "preproc.c"
+#line 49344 "preproc.c"
     break;
 
   case 1468: /* transaction_mode_list: transaction_mode_item  */
@@ -49396,7 +49348,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49400 "preproc.c"
+#line 49352 "preproc.c"
     break;
 
   case 1469: /* transaction_mode_list: transaction_mode_list ',' transaction_mode_item  */
@@ -49404,7 +49356,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 49408 "preproc.c"
+#line 49360 "preproc.c"
     break;
 
   case 1470: /* transaction_mode_list: transaction_mode_list transaction_mode_item  */
@@ -49412,7 +49364,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49416 "preproc.c"
+#line 49368 "preproc.c"
     break;
 
   case 1471: /* transaction_mode_list_or_empty: transaction_mode_list  */
@@ -49420,14 +49372,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49424 "preproc.c"
+#line 49376 "preproc.c"
     break;
 
   case 1472: /* transaction_mode_list_or_empty: %empty  */
 #line 9221 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49431 "preproc.c"
+#line 49383 "preproc.c"
     break;
 
   case 1473: /* opt_transaction_chain: AND CHAIN  */
@@ -49435,7 +49387,7 @@
  { 
  (yyval.str) = mm_strdup("and chain");
 }
-#line 49439 "preproc.c"
+#line 49391 "preproc.c"
     break;
 
   case 1474: /* opt_transaction_chain: AND NO CHAIN  */
@@ -49443,14 +49395,14 @@
  { 
  (yyval.str) = mm_strdup("and no chain");
 }
-#line 49447 "preproc.c"
+#line 49399 "preproc.c"
     break;
 
   case 1475: /* opt_transaction_chain: %empty  */
 #line 9236 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49454 "preproc.c"
+#line 49406 "preproc.c"
     break;
 
   case 1476: /* ViewStmt: CREATE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
@@ -49458,7 +49410,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[-7].str),mm_strdup("view"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49462 "preproc.c"
+#line 49414 "preproc.c"
     break;
 
   case 1477: /* ViewStmt: CREATE OR REPLACE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
@@ -49466,7 +49418,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("create or replace"),(yyvsp[-7].str),mm_strdup("view"),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49470 "preproc.c"
+#line 49422 "preproc.c"
     break;
 
   case 1478: /* ViewStmt: CREATE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
@@ -49475,7 +49427,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(11,mm_strdup("create"),(yyvsp[-10].str),mm_strdup("recursive view"),(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49479 "preproc.c"
+#line 49431 "preproc.c"
     break;
 
   case 1479: /* ViewStmt: CREATE OR REPLACE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
@@ -49484,7 +49436,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(11,mm_strdup("create or replace"),(yyvsp[-10].str),mm_strdup("recursive view"),(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(")"),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49488 "preproc.c"
+#line 49440 "preproc.c"
     break;
 
   case 1480: /* opt_check_option: WITH CHECK OPTION  */
@@ -49492,7 +49444,7 @@
  { 
  (yyval.str) = mm_strdup("with check option");
 }
-#line 49496 "preproc.c"
+#line 49448 "preproc.c"
     break;
 
   case 1481: /* opt_check_option: WITH CASCADED CHECK OPTION  */
@@ -49500,7 +49452,7 @@
  { 
  (yyval.str) = mm_strdup("with cascaded check option");
 }
-#line 49504 "preproc.c"
+#line 49456 "preproc.c"
     break;
 
   case 1482: /* opt_check_option: WITH LOCAL CHECK OPTION  */
@@ -49508,14 +49460,14 @@
  { 
  (yyval.str) = mm_strdup("with local check option");
 }
-#line 49512 "preproc.c"
+#line 49464 "preproc.c"
     break;
 
   case 1483: /* opt_check_option: %empty  */
 #line 9277 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49519 "preproc.c"
+#line 49471 "preproc.c"
     break;
 
   case 1484: /* LoadStmt: LOAD file_name  */
@@ -49523,7 +49475,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("load"),(yyvsp[0].str));
 }
-#line 49527 "preproc.c"
+#line 49479 "preproc.c"
     break;
 
   case 1485: /* CreatedbStmt: CREATE DATABASE name opt_with createdb_opt_list  */
@@ -49531,7 +49483,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("create database"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49535 "preproc.c"
+#line 49487 "preproc.c"
     break;
 
   case 1486: /* createdb_opt_list: createdb_opt_items  */
@@ -49539,14 +49491,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49543 "preproc.c"
+#line 49495 "preproc.c"
     break;
 
   case 1487: /* createdb_opt_list: %empty  */
 #line 9304 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49550 "preproc.c"
+#line 49502 "preproc.c"
     break;
 
   case 1488: /* createdb_opt_items: createdb_opt_item  */
@@ -49554,7 +49506,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49558 "preproc.c"
+#line 49510 "preproc.c"
     break;
 
   case 1489: /* createdb_opt_items: createdb_opt_items createdb_opt_item  */
@@ -49562,7 +49514,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49566 "preproc.c"
+#line 49518 "preproc.c"
     break;
 
   case 1490: /* createdb_opt_item: createdb_opt_name opt_equal NumericOnly  */
@@ -49570,7 +49522,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49574 "preproc.c"
+#line 49526 "preproc.c"
     break;
 
   case 1491: /* createdb_opt_item: createdb_opt_name opt_equal opt_boolean_or_string  */
@@ -49578,7 +49530,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49582 "preproc.c"
+#line 49534 "preproc.c"
     break;
 
   case 1492: /* createdb_opt_item: createdb_opt_name opt_equal DEFAULT  */
@@ -49586,7 +49538,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup("default"));
 }
-#line 49590 "preproc.c"
+#line 49542 "preproc.c"
     break;
 
   case 1493: /* createdb_opt_name: ecpg_ident  */
@@ -49594,7 +49546,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49598 "preproc.c"
+#line 49550 "preproc.c"
     break;
 
   case 1494: /* createdb_opt_name: CONNECTION LIMIT  */
@@ -49602,7 +49554,7 @@
  { 
  (yyval.str) = mm_strdup("connection limit");
 }
-#line 49606 "preproc.c"
+#line 49558 "preproc.c"
     break;
 
   case 1495: /* createdb_opt_name: ENCODING  */
@@ -49610,7 +49562,7 @@
  { 
  (yyval.str) = mm_strdup("encoding");
 }
-#line 49614 "preproc.c"
+#line 49566 "preproc.c"
     break;
 
   case 1496: /* createdb_opt_name: LOCATION  */
@@ -49618,7 +49570,7 @@
  { 
  (yyval.str) = mm_strdup("location");
 }
-#line 49622 "preproc.c"
+#line 49574 "preproc.c"
     break;
 
   case 1497: /* createdb_opt_name: OWNER  */
@@ -49626,7 +49578,7 @@
  { 
  (yyval.str) = mm_strdup("owner");
 }
-#line 49630 "preproc.c"
+#line 49582 "preproc.c"
     break;
 
   case 1498: /* createdb_opt_name: TABLESPACE  */
@@ -49634,7 +49586,7 @@
  { 
  (yyval.str) = mm_strdup("tablespace");
 }
-#line 49638 "preproc.c"
+#line 49590 "preproc.c"
     break;
 
   case 1499: /* createdb_opt_name: TEMPLATE  */
@@ -49642,7 +49594,7 @@
  { 
  (yyval.str) = mm_strdup("template");
 }
-#line 49646 "preproc.c"
+#line 49598 "preproc.c"
     break;
 
   case 1500: /* opt_equal: '='  */
@@ -49650,14 +49602,14 @@
  { 
  (yyval.str) = mm_strdup("=");
 }
-#line 49654 "preproc.c"
+#line 49606 "preproc.c"
     break;
 
   case 1501: /* opt_equal: %empty  */
 #line 9375 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49661 "preproc.c"
+#line 49613 "preproc.c"
     break;
 
   case 1502: /* AlterDatabaseStmt: ALTER DATABASE name WITH createdb_opt_list  */
@@ -49665,7 +49617,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[-2].str),mm_strdup("with"),(yyvsp[0].str));
 }
-#line 49669 "preproc.c"
+#line 49621 "preproc.c"
     break;
 
   case 1503: /* AlterDatabaseStmt: ALTER DATABASE name createdb_opt_list  */
@@ -49673,7 +49625,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter database"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49677 "preproc.c"
+#line 49629 "preproc.c"
     break;
 
   case 1504: /* AlterDatabaseStmt: ALTER DATABASE name SET TABLESPACE name  */
@@ -49681,7 +49633,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[-3].str),mm_strdup("set tablespace"),(yyvsp[0].str));
 }
-#line 49685 "preproc.c"
+#line 49637 "preproc.c"
     break;
 
   case 1505: /* AlterDatabaseStmt: ALTER DATABASE name REFRESH COLLATION VERSION_P  */
@@ -49689,7 +49641,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter database"),(yyvsp[-3].str),mm_strdup("refresh collation version"));
 }
-#line 49693 "preproc.c"
+#line 49645 "preproc.c"
     break;
 
   case 1506: /* AlterDatabaseSetStmt: ALTER DATABASE name SetResetClause  */
@@ -49697,7 +49649,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter database"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49701 "preproc.c"
+#line 49653 "preproc.c"
     break;
 
   case 1507: /* DropdbStmt: DROP DATABASE name  */
@@ -49705,7 +49657,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop database"),(yyvsp[0].str));
 }
-#line 49709 "preproc.c"
+#line 49661 "preproc.c"
     break;
 
   case 1508: /* DropdbStmt: DROP DATABASE IF_P EXISTS name  */
@@ -49713,7 +49665,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("drop database if exists"),(yyvsp[0].str));
 }
-#line 49717 "preproc.c"
+#line 49669 "preproc.c"
     break;
 
   case 1509: /* DropdbStmt: DROP DATABASE name opt_with '(' drop_option_list ')'  */
@@ -49721,7 +49673,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("drop database"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 49725 "preproc.c"
+#line 49677 "preproc.c"
     break;
 
   case 1510: /* DropdbStmt: DROP DATABASE IF_P EXISTS name opt_with '(' drop_option_list ')'  */
@@ -49729,7 +49681,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("drop database if exists"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 49733 "preproc.c"
+#line 49685 "preproc.c"
     break;
 
   case 1511: /* drop_option_list: drop_option  */
@@ -49737,7 +49689,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 49741 "preproc.c"
+#line 49693 "preproc.c"
     break;
 
   case 1512: /* drop_option_list: drop_option_list ',' drop_option  */
@@ -49745,7 +49697,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 49749 "preproc.c"
+#line 49701 "preproc.c"
     break;
 
   case 1513: /* drop_option: FORCE  */
@@ -49753,7 +49705,7 @@
  { 
  (yyval.str) = mm_strdup("force");
 }
-#line 49757 "preproc.c"
+#line 49709 "preproc.c"
     break;
 
   case 1514: /* AlterCollationStmt: ALTER COLLATION any_name REFRESH VERSION_P  */
@@ -49761,7 +49713,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter collation"),(yyvsp[-2].str),mm_strdup("refresh version"));
 }
-#line 49765 "preproc.c"
+#line 49717 "preproc.c"
     break;
 
   case 1515: /* AlterSystemStmt: ALTER SYSTEM_P SET generic_set  */
@@ -49769,7 +49721,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("alter system set"),(yyvsp[0].str));
 }
-#line 49773 "preproc.c"
+#line 49725 "preproc.c"
     break;
 
   case 1516: /* AlterSystemStmt: ALTER SYSTEM_P RESET generic_reset  */
@@ -49777,7 +49729,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("alter system reset"),(yyvsp[0].str));
 }
-#line 49781 "preproc.c"
+#line 49733 "preproc.c"
     break;
 
   case 1517: /* CreateDomainStmt: CREATE DOMAIN_P any_name opt_as Typename ColQualList  */
@@ -49785,7 +49737,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("create domain"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49789 "preproc.c"
+#line 49741 "preproc.c"
     break;
 
   case 1518: /* AlterDomainStmt: ALTER DOMAIN_P any_name alter_column_default  */
@@ -49793,7 +49745,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49797 "preproc.c"
+#line 49749 "preproc.c"
     break;
 
   case 1519: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP NOT NULL_P  */
@@ -49801,7 +49753,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("drop not null"));
 }
-#line 49805 "preproc.c"
+#line 49757 "preproc.c"
     break;
 
   case 1520: /* AlterDomainStmt: ALTER DOMAIN_P any_name SET NOT NULL_P  */
@@ -49809,7 +49761,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("set not null"));
 }
-#line 49813 "preproc.c"
+#line 49765 "preproc.c"
     break;
 
   case 1521: /* AlterDomainStmt: ALTER DOMAIN_P any_name ADD_P TableConstraint  */
@@ -49817,7 +49769,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[-2].str),mm_strdup("add"),(yyvsp[0].str));
 }
-#line 49821 "preproc.c"
+#line 49773 "preproc.c"
     break;
 
   case 1522: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT name opt_drop_behavior  */
@@ -49825,7 +49777,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[-4].str),mm_strdup("drop constraint"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49829 "preproc.c"
+#line 49781 "preproc.c"
     break;
 
   case 1523: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
@@ -49833,7 +49785,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[-6].str),mm_strdup("drop constraint if exists"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49837 "preproc.c"
+#line 49789 "preproc.c"
     break;
 
   case 1524: /* AlterDomainStmt: ALTER DOMAIN_P any_name VALIDATE CONSTRAINT name  */
@@ -49841,7 +49793,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[-3].str),mm_strdup("validate constraint"),(yyvsp[0].str));
 }
-#line 49845 "preproc.c"
+#line 49797 "preproc.c"
     break;
 
   case 1525: /* opt_as: AS  */
@@ -49849,14 +49801,14 @@
  { 
  (yyval.str) = mm_strdup("as");
 }
-#line 49853 "preproc.c"
+#line 49805 "preproc.c"
     break;
 
   case 1526: /* opt_as: %empty  */
 #line 9514 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49860 "preproc.c"
+#line 49812 "preproc.c"
     break;
 
   case 1527: /* AlterTSDictionaryStmt: ALTER TEXT_P SEARCH DICTIONARY any_name definition  */
@@ -49864,7 +49816,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("alter text search dictionary"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49868 "preproc.c"
+#line 49820 "preproc.c"
     break;
 
   case 1528: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ADD_P MAPPING FOR name_list any_with any_name_list  */
@@ -49872,7 +49824,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[-6].str),mm_strdup("add mapping for"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49876 "preproc.c"
+#line 49828 "preproc.c"
     break;
 
   case 1529: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list any_with any_name_list  */
@@ -49880,7 +49832,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[-6].str),mm_strdup("alter mapping for"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49884 "preproc.c"
+#line 49836 "preproc.c"
     break;
 
   case 1530: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name any_with any_name  */
@@ -49888,7 +49840,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[-6].str),mm_strdup("alter mapping replace"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49892 "preproc.c"
+#line 49844 "preproc.c"
     break;
 
   case 1531: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name any_with any_name  */
@@ -49896,7 +49848,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("alter text search configuration"),(yyvsp[-8].str),mm_strdup("alter mapping for"),(yyvsp[-4].str),mm_strdup("replace"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49900 "preproc.c"
+#line 49852 "preproc.c"
     break;
 
   case 1532: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list  */
@@ -49904,7 +49856,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[-4].str),mm_strdup("drop mapping for"),(yyvsp[0].str));
 }
-#line 49908 "preproc.c"
+#line 49860 "preproc.c"
     break;
 
   case 1533: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING IF_P EXISTS FOR name_list  */
@@ -49912,7 +49864,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[-6].str),mm_strdup("drop mapping if exists for"),(yyvsp[0].str));
 }
-#line 49916 "preproc.c"
+#line 49868 "preproc.c"
     break;
 
   case 1534: /* any_with: WITH  */
@@ -49920,7 +49872,7 @@
  { 
  (yyval.str) = mm_strdup("with");
 }
-#line 49924 "preproc.c"
+#line 49876 "preproc.c"
     break;
 
   case 1535: /* any_with: WITH_LA  */
@@ -49928,7 +49880,7 @@
  { 
  (yyval.str) = mm_strdup("with");
 }
-#line 49932 "preproc.c"
+#line 49884 "preproc.c"
     break;
 
   case 1536: /* CreateConversionStmt: CREATE opt_default CONVERSION_P any_name FOR ecpg_sconst TO ecpg_sconst FROM any_name  */
@@ -49936,7 +49888,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[-8].str),mm_strdup("conversion"),(yyvsp[-6].str),mm_strdup("for"),(yyvsp[-4].str),mm_strdup("to"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 49940 "preproc.c"
+#line 49892 "preproc.c"
     break;
 
   case 1537: /* ClusterStmt: CLUSTER opt_verbose qualified_name cluster_index_specification  */
@@ -49944,7 +49896,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("cluster"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49948 "preproc.c"
+#line 49900 "preproc.c"
     break;
 
   case 1538: /* ClusterStmt: CLUSTER '(' utility_option_list ')' qualified_name cluster_index_specification  */
@@ -49952,7 +49904,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("cluster ("),(yyvsp[-3].str),mm_strdup(")"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49956 "preproc.c"
+#line 49908 "preproc.c"
     break;
 
   case 1539: /* ClusterStmt: CLUSTER opt_verbose  */
@@ -49960,7 +49912,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("cluster"),(yyvsp[0].str));
 }
-#line 49964 "preproc.c"
+#line 49916 "preproc.c"
     break;
 
   case 1540: /* ClusterStmt: CLUSTER opt_verbose name ON qualified_name  */
@@ -49968,7 +49920,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("cluster"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("on"),(yyvsp[0].str));
 }
-#line 49972 "preproc.c"
+#line 49924 "preproc.c"
     break;
 
   case 1541: /* cluster_index_specification: USING name  */
@@ -49976,14 +49928,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[0].str));
 }
-#line 49980 "preproc.c"
+#line 49932 "preproc.c"
     break;
 
   case 1542: /* cluster_index_specification: %empty  */
 #line 9601 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 49987 "preproc.c"
+#line 49939 "preproc.c"
     break;
 
   case 1543: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose opt_analyze opt_vacuum_relation_list  */
@@ -49991,7 +49943,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("vacuum"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 49995 "preproc.c"
+#line 49947 "preproc.c"
     break;
 
   case 1544: /* VacuumStmt: VACUUM '(' utility_option_list ')' opt_vacuum_relation_list  */
@@ -49999,7 +49951,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("vacuum ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50003 "preproc.c"
+#line 49955 "preproc.c"
     break;
 
   case 1545: /* AnalyzeStmt: analyze_keyword opt_verbose opt_vacuum_relation_list  */
@@ -50007,7 +49959,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50011 "preproc.c"
+#line 49963 "preproc.c"
     break;
 
   case 1546: /* AnalyzeStmt: analyze_keyword '(' utility_option_list ')' opt_vacuum_relation_list  */
@@ -50015,7 +49967,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50019 "preproc.c"
+#line 49971 "preproc.c"
     break;
 
   case 1547: /* utility_option_list: utility_option_elem  */
@@ -50023,7 +49975,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50027 "preproc.c"
+#line 49979 "preproc.c"
     break;
 
   case 1548: /* utility_option_list: utility_option_list ',' utility_option_elem  */
@@ -50031,7 +49983,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 50035 "preproc.c"
+#line 49987 "preproc.c"
     break;
 
   case 1549: /* analyze_keyword: ANALYZE  */
@@ -50039,7 +49991,7 @@
  { 
  (yyval.str) = mm_strdup("analyze");
 }
-#line 50043 "preproc.c"
+#line 49995 "preproc.c"
     break;
 
   case 1550: /* analyze_keyword: ANALYSE  */
@@ -50047,7 +49999,7 @@
  { 
  (yyval.str) = mm_strdup("analyse");
 }
-#line 50051 "preproc.c"
+#line 50003 "preproc.c"
     break;
 
   case 1551: /* utility_option_elem: utility_option_name utility_option_arg  */
@@ -50055,7 +50007,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50059 "preproc.c"
+#line 50011 "preproc.c"
     break;
 
   case 1552: /* utility_option_name: NonReservedWord  */
@@ -50063,7 +50015,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50067 "preproc.c"
+#line 50019 "preproc.c"
     break;
 
   case 1553: /* utility_option_name: analyze_keyword  */
@@ -50071,7 +50023,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50075 "preproc.c"
+#line 50027 "preproc.c"
     break;
 
   case 1554: /* utility_option_name: FORMAT_LA  */
@@ -50079,7 +50031,7 @@
  { 
  (yyval.str) = mm_strdup("format");
 }
-#line 50083 "preproc.c"
+#line 50035 "preproc.c"
     break;
 
   case 1555: /* utility_option_arg: opt_boolean_or_string  */
@@ -50087,7 +50039,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50091 "preproc.c"
+#line 50043 "preproc.c"
     break;
 
   case 1556: /* utility_option_arg: NumericOnly  */
@@ -50095,14 +50047,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50099 "preproc.c"
+#line 50051 "preproc.c"
     break;
 
   case 1557: /* utility_option_arg: %empty  */
 #line 9688 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50106 "preproc.c"
+#line 50058 "preproc.c"
     break;
 
   case 1558: /* opt_analyze: analyze_keyword  */
@@ -50110,14 +50062,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50114 "preproc.c"
+#line 50066 "preproc.c"
     break;
 
   case 1559: /* opt_analyze: %empty  */
 #line 9699 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50121 "preproc.c"
+#line 50073 "preproc.c"
     break;
 
   case 1560: /* opt_verbose: VERBOSE  */
@@ -50125,14 +50077,14 @@
  { 
  (yyval.str) = mm_strdup("verbose");
 }
-#line 50129 "preproc.c"
+#line 50081 "preproc.c"
     break;
 
   case 1561: /* opt_verbose: %empty  */
 #line 9710 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50136 "preproc.c"
+#line 50088 "preproc.c"
     break;
 
   case 1562: /* opt_full: FULL  */
@@ -50140,14 +50092,14 @@
  { 
  (yyval.str) = mm_strdup("full");
 }
-#line 50144 "preproc.c"
+#line 50096 "preproc.c"
     break;
 
   case 1563: /* opt_full: %empty  */
 #line 9721 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50151 "preproc.c"
+#line 50103 "preproc.c"
     break;
 
   case 1564: /* opt_freeze: FREEZE  */
@@ -50155,14 +50107,14 @@
  { 
  (yyval.str) = mm_strdup("freeze");
 }
-#line 50159 "preproc.c"
+#line 50111 "preproc.c"
     break;
 
   case 1565: /* opt_freeze: %empty  */
 #line 9732 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50166 "preproc.c"
+#line 50118 "preproc.c"
     break;
 
   case 1566: /* opt_name_list: '(' name_list ')'  */
@@ -50170,14 +50122,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 50174 "preproc.c"
+#line 50126 "preproc.c"
     break;
 
   case 1567: /* opt_name_list: %empty  */
 #line 9743 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50181 "preproc.c"
+#line 50133 "preproc.c"
     break;
 
   case 1568: /* vacuum_relation: qualified_name opt_name_list  */
@@ -50185,7 +50137,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50189 "preproc.c"
+#line 50141 "preproc.c"
     break;
 
   case 1569: /* vacuum_relation_list: vacuum_relation  */
@@ -50193,7 +50145,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50197 "preproc.c"
+#line 50149 "preproc.c"
     break;
 
   case 1570: /* vacuum_relation_list: vacuum_relation_list ',' vacuum_relation  */
@@ -50201,7 +50153,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 50205 "preproc.c"
+#line 50157 "preproc.c"
     break;
 
   case 1571: /* opt_vacuum_relation_list: vacuum_relation_list  */
@@ -50209,14 +50161,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50213 "preproc.c"
+#line 50165 "preproc.c"
     break;
 
   case 1572: /* opt_vacuum_relation_list: %empty  */
 #line 9774 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50220 "preproc.c"
+#line 50172 "preproc.c"
     break;
 
   case 1573: /* ExplainStmt: EXPLAIN ExplainableStmt  */
@@ -50224,7 +50176,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("explain"),(yyvsp[0].str));
 }
-#line 50228 "preproc.c"
+#line 50180 "preproc.c"
     break;
 
   case 1574: /* ExplainStmt: EXPLAIN analyze_keyword opt_verbose ExplainableStmt  */
@@ -50232,7 +50184,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("explain"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50236 "preproc.c"
+#line 50188 "preproc.c"
     break;
 
   case 1575: /* ExplainStmt: EXPLAIN VERBOSE ExplainableStmt  */
@@ -50240,7 +50192,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("explain verbose"),(yyvsp[0].str));
 }
-#line 50244 "preproc.c"
+#line 50196 "preproc.c"
     break;
 
   case 1576: /* ExplainStmt: EXPLAIN '(' utility_option_list ')' ExplainableStmt  */
@@ -50248,7 +50200,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("explain ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50252 "preproc.c"
+#line 50204 "preproc.c"
     break;
 
   case 1577: /* ExplainableStmt: SelectStmt  */
@@ -50256,7 +50208,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50260 "preproc.c"
+#line 50212 "preproc.c"
     break;
 
   case 1578: /* ExplainableStmt: InsertStmt  */
@@ -50264,7 +50216,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50268 "preproc.c"
+#line 50220 "preproc.c"
     break;
 
   case 1579: /* ExplainableStmt: UpdateStmt  */
@@ -50272,7 +50224,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50276 "preproc.c"
+#line 50228 "preproc.c"
     break;
 
   case 1580: /* ExplainableStmt: DeleteStmt  */
@@ -50280,7 +50232,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50284 "preproc.c"
+#line 50236 "preproc.c"
     break;
 
   case 1581: /* ExplainableStmt: MergeStmt  */
@@ -50288,7 +50240,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50292 "preproc.c"
+#line 50244 "preproc.c"
     break;
 
   case 1582: /* ExplainableStmt: DeclareCursorStmt  */
@@ -50296,7 +50248,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50300 "preproc.c"
+#line 50252 "preproc.c"
     break;
 
   case 1583: /* ExplainableStmt: CreateAsStmt  */
@@ -50304,7 +50256,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50308 "preproc.c"
+#line 50260 "preproc.c"
     break;
 
   case 1584: /* ExplainableStmt: CreateMatViewStmt  */
@@ -50312,7 +50264,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50316 "preproc.c"
+#line 50268 "preproc.c"
     break;
 
   case 1585: /* ExplainableStmt: RefreshMatViewStmt  */
@@ -50320,7 +50272,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50324 "preproc.c"
+#line 50276 "preproc.c"
     break;
 
   case 1586: /* ExplainableStmt: ExecuteStmt  */
@@ -50328,7 +50280,7 @@
         {
 		(yyval.str) = (yyvsp[0].exec).name;
 	}
-#line 50332 "preproc.c"
+#line 50284 "preproc.c"
     break;
 
   case 1587: /* PrepareStmt: PREPARE prepared_name prep_type_clause AS PreparableStmt  */
@@ -50338,7 +50290,7 @@
 		(yyval.prep).type = (yyvsp[-2].str);
 		(yyval.prep).stmt = (yyvsp[0].str);
 	}
-#line 50342 "preproc.c"
+#line 50294 "preproc.c"
     break;
 
   case 1588: /* PrepareStmt: PREPARE prepared_name FROM execstring  */
@@ -50348,7 +50300,7 @@
 		(yyval.prep).type = NULL;
 		(yyval.prep).stmt = (yyvsp[0].str);
 	}
-#line 50352 "preproc.c"
+#line 50304 "preproc.c"
     break;
 
   case 1589: /* prep_type_clause: '(' type_list ')'  */
@@ -50356,14 +50308,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 50360 "preproc.c"
+#line 50312 "preproc.c"
     break;
 
   case 1590: /* prep_type_clause: %empty  */
 #line 9865 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50367 "preproc.c"
+#line 50319 "preproc.c"
     break;
 
   case 1591: /* PreparableStmt: SelectStmt  */
@@ -50371,7 +50323,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50375 "preproc.c"
+#line 50327 "preproc.c"
     break;
 
   case 1592: /* PreparableStmt: InsertStmt  */
@@ -50379,7 +50331,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50383 "preproc.c"
+#line 50335 "preproc.c"
     break;
 
   case 1593: /* PreparableStmt: UpdateStmt  */
@@ -50387,7 +50339,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50391 "preproc.c"
+#line 50343 "preproc.c"
     break;
 
   case 1594: /* PreparableStmt: DeleteStmt  */
@@ -50395,7 +50347,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50399 "preproc.c"
+#line 50351 "preproc.c"
     break;
 
   case 1595: /* PreparableStmt: MergeStmt  */
@@ -50403,7 +50355,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50407 "preproc.c"
+#line 50359 "preproc.c"
     break;
 
   case 1596: /* ExecuteStmt: EXECUTE prepared_name execute_param_clause execute_rest  */
@@ -50412,7 +50364,7 @@
 		(yyval.exec).name = (yyvsp[-2].str);
 		(yyval.exec).type = (yyvsp[-1].str);
 	}
-#line 50416 "preproc.c"
+#line 50368 "preproc.c"
     break;
 
   case 1597: /* ExecuteStmt: CREATE OptTemp TABLE create_as_target AS EXECUTE prepared_name execute_param_clause opt_with_data execute_rest  */
@@ -50420,7 +50372,7 @@
         {
 		(yyval.exec).name = cat_str(8,mm_strdup("create"),(yyvsp[-8].str),mm_strdup("table"),(yyvsp[-6].str),mm_strdup("as execute"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str));
 	}
-#line 50424 "preproc.c"
+#line 50376 "preproc.c"
     break;
 
   case 1598: /* ExecuteStmt: CREATE OptTemp TABLE IF_P NOT EXISTS create_as_target AS EXECUTE prepared_name execute_param_clause opt_with_data execute_rest  */
@@ -50428,7 +50380,7 @@
         {
 		(yyval.exec).name = cat_str(8,mm_strdup("create"),(yyvsp[-11].str),mm_strdup("table if not exists"),(yyvsp[-6].str),mm_strdup("as execute"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str));
 	}
-#line 50432 "preproc.c"
+#line 50384 "preproc.c"
     break;
 
   case 1599: /* execute_param_clause: '(' expr_list ')'  */
@@ -50436,14 +50388,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 50440 "preproc.c"
+#line 50392 "preproc.c"
     break;
 
   case 1600: /* execute_param_clause: %empty  */
 #line 9917 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50447 "preproc.c"
+#line 50399 "preproc.c"
     break;
 
   case 1601: /* InsertStmt: opt_with_clause INSERT INTO insert_target insert_rest opt_on_conflict returning_clause  */
@@ -50451,7 +50403,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-6].str),mm_strdup("insert into"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50455 "preproc.c"
+#line 50407 "preproc.c"
     break;
 
   case 1602: /* insert_target: qualified_name  */
@@ -50459,7 +50411,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50463 "preproc.c"
+#line 50415 "preproc.c"
     break;
 
   case 1603: /* insert_target: qualified_name AS ColId  */
@@ -50467,7 +50419,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 50471 "preproc.c"
+#line 50423 "preproc.c"
     break;
 
   case 1604: /* insert_rest: SelectStmt  */
@@ -50475,7 +50427,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50479 "preproc.c"
+#line 50431 "preproc.c"
     break;
 
   case 1605: /* insert_rest: OVERRIDING override_kind VALUE_P SelectStmt  */
@@ -50483,7 +50435,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("overriding"),(yyvsp[-2].str),mm_strdup("value"),(yyvsp[0].str));
 }
-#line 50487 "preproc.c"
+#line 50439 "preproc.c"
     break;
 
   case 1606: /* insert_rest: '(' insert_column_list ')' SelectStmt  */
@@ -50491,7 +50443,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50495 "preproc.c"
+#line 50447 "preproc.c"
     break;
 
   case 1607: /* insert_rest: '(' insert_column_list ')' OVERRIDING override_kind VALUE_P SelectStmt  */
@@ -50499,7 +50451,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("("),(yyvsp[-5].str),mm_strdup(") overriding"),(yyvsp[-2].str),mm_strdup("value"),(yyvsp[0].str));
 }
-#line 50503 "preproc.c"
+#line 50455 "preproc.c"
     break;
 
   case 1608: /* insert_rest: DEFAULT VALUES  */
@@ -50507,7 +50459,7 @@
  { 
  (yyval.str) = mm_strdup("default values");
 }
-#line 50511 "preproc.c"
+#line 50463 "preproc.c"
     break;
 
   case 1609: /* override_kind: USER  */
@@ -50515,7 +50467,7 @@
  { 
  (yyval.str) = mm_strdup("user");
 }
-#line 50519 "preproc.c"
+#line 50471 "preproc.c"
     break;
 
   case 1610: /* override_kind: SYSTEM_P  */
@@ -50523,7 +50475,7 @@
  { 
  (yyval.str) = mm_strdup("system");
 }
-#line 50527 "preproc.c"
+#line 50479 "preproc.c"
     break;
 
   case 1611: /* insert_column_list: insert_column_item  */
@@ -50531,7 +50483,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50535 "preproc.c"
+#line 50487 "preproc.c"
     break;
 
   case 1612: /* insert_column_list: insert_column_list ',' insert_column_item  */
@@ -50539,7 +50491,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 50543 "preproc.c"
+#line 50495 "preproc.c"
     break;
 
   case 1613: /* insert_column_item: ColId opt_indirection  */
@@ -50547,7 +50499,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50551 "preproc.c"
+#line 50503 "preproc.c"
     break;
 
   case 1614: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO UPDATE SET set_clause_list where_clause  */
@@ -50555,7 +50507,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("on conflict"),(yyvsp[-5].str),mm_strdup("do update set"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50559 "preproc.c"
+#line 50511 "preproc.c"
     break;
 
   case 1615: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO NOTHING  */
@@ -50563,14 +50515,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("on conflict"),(yyvsp[-2].str),mm_strdup("do nothing"));
 }
-#line 50567 "preproc.c"
+#line 50519 "preproc.c"
     break;
 
   case 1616: /* opt_on_conflict: %empty  */
 #line 10008 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50574 "preproc.c"
+#line 50526 "preproc.c"
     break;
 
   case 1617: /* opt_conf_expr: '(' index_params ')' where_clause  */
@@ -50578,7 +50530,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50582 "preproc.c"
+#line 50534 "preproc.c"
     break;
 
   case 1618: /* opt_conf_expr: ON CONSTRAINT name  */
@@ -50586,14 +50538,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("on constraint"),(yyvsp[0].str));
 }
-#line 50590 "preproc.c"
+#line 50542 "preproc.c"
     break;
 
   case 1619: /* opt_conf_expr: %empty  */
 #line 10023 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50597 "preproc.c"
+#line 50549 "preproc.c"
     break;
 
   case 1620: /* returning_clause: RETURNING target_list opt_ecpg_into  */
@@ -50601,14 +50553,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("returning"),(yyvsp[-1].str));
 }
-#line 50605 "preproc.c"
+#line 50557 "preproc.c"
     break;
 
   case 1621: /* returning_clause: %empty  */
 #line 10034 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50612 "preproc.c"
+#line 50564 "preproc.c"
     break;
 
   case 1622: /* DeleteStmt: opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause  */
@@ -50616,7 +50568,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-6].str),mm_strdup("delete from"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50620 "preproc.c"
+#line 50572 "preproc.c"
     break;
 
   case 1623: /* using_clause: USING from_list  */
@@ -50624,14 +50576,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[0].str));
 }
-#line 50628 "preproc.c"
+#line 50580 "preproc.c"
     break;
 
   case 1624: /* using_clause: %empty  */
 #line 10053 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50635 "preproc.c"
+#line 50587 "preproc.c"
     break;
 
   case 1625: /* LockStmt: LOCK_P opt_table relation_expr_list opt_lock opt_nowait  */
@@ -50639,7 +50591,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("lock"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50643 "preproc.c"
+#line 50595 "preproc.c"
     break;
 
   case 1626: /* opt_lock: IN_P lock_type MODE  */
@@ -50647,14 +50599,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("in"),(yyvsp[-1].str),mm_strdup("mode"));
 }
-#line 50651 "preproc.c"
+#line 50603 "preproc.c"
     break;
 
   case 1627: /* opt_lock: %empty  */
 #line 10072 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50658 "preproc.c"
+#line 50610 "preproc.c"
     break;
 
   case 1628: /* lock_type: ACCESS SHARE  */
@@ -50662,7 +50614,7 @@
  { 
  (yyval.str) = mm_strdup("access share");
 }
-#line 50666 "preproc.c"
+#line 50618 "preproc.c"
     break;
 
   case 1629: /* lock_type: ROW SHARE  */
@@ -50670,7 +50622,7 @@
  { 
  (yyval.str) = mm_strdup("row share");
 }
-#line 50674 "preproc.c"
+#line 50626 "preproc.c"
     break;
 
   case 1630: /* lock_type: ROW EXCLUSIVE  */
@@ -50678,7 +50630,7 @@
  { 
  (yyval.str) = mm_strdup("row exclusive");
 }
-#line 50682 "preproc.c"
+#line 50634 "preproc.c"
     break;
 
   case 1631: /* lock_type: SHARE UPDATE EXCLUSIVE  */
@@ -50686,7 +50638,7 @@
  { 
  (yyval.str) = mm_strdup("share update exclusive");
 }
-#line 50690 "preproc.c"
+#line 50642 "preproc.c"
     break;
 
   case 1632: /* lock_type: SHARE  */
@@ -50694,7 +50646,7 @@
  { 
  (yyval.str) = mm_strdup("share");
 }
-#line 50698 "preproc.c"
+#line 50650 "preproc.c"
     break;
 
   case 1633: /* lock_type: SHARE ROW EXCLUSIVE  */
@@ -50702,7 +50654,7 @@
  { 
  (yyval.str) = mm_strdup("share row exclusive");
 }
-#line 50706 "preproc.c"
+#line 50658 "preproc.c"
     break;
 
   case 1634: /* lock_type: EXCLUSIVE  */
@@ -50710,7 +50662,7 @@
  { 
  (yyval.str) = mm_strdup("exclusive");
 }
-#line 50714 "preproc.c"
+#line 50666 "preproc.c"
     break;
 
   case 1635: /* lock_type: ACCESS EXCLUSIVE  */
@@ -50718,7 +50670,7 @@
  { 
  (yyval.str) = mm_strdup("access exclusive");
 }
-#line 50722 "preproc.c"
+#line 50674 "preproc.c"
     break;
 
   case 1636: /* opt_nowait: NOWAIT  */
@@ -50726,14 +50678,14 @@
  { 
  (yyval.str) = mm_strdup("nowait");
 }
-#line 50730 "preproc.c"
+#line 50682 "preproc.c"
     break;
 
   case 1637: /* opt_nowait: %empty  */
 #line 10119 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50737 "preproc.c"
+#line 50689 "preproc.c"
     break;
 
   case 1638: /* opt_nowait_or_skip: NOWAIT  */
@@ -50741,7 +50693,7 @@
  { 
  (yyval.str) = mm_strdup("nowait");
 }
-#line 50745 "preproc.c"
+#line 50697 "preproc.c"
     break;
 
   case 1639: /* opt_nowait_or_skip: SKIP LOCKED  */
@@ -50749,14 +50701,14 @@
  { 
  (yyval.str) = mm_strdup("skip locked");
 }
-#line 50753 "preproc.c"
+#line 50705 "preproc.c"
     break;
 
   case 1640: /* opt_nowait_or_skip: %empty  */
 #line 10134 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50760 "preproc.c"
+#line 50712 "preproc.c"
     break;
 
   case 1641: /* UpdateStmt: opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause  */
@@ -50764,7 +50716,7 @@
  { 
  (yyval.str) = cat_str(8,(yyvsp[-7].str),mm_strdup("update"),(yyvsp[-5].str),mm_strdup("set"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50768 "preproc.c"
+#line 50720 "preproc.c"
     break;
 
   case 1642: /* set_clause_list: set_clause  */
@@ -50772,7 +50724,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50776 "preproc.c"
+#line 50728 "preproc.c"
     break;
 
   case 1643: /* set_clause_list: set_clause_list ',' set_clause  */
@@ -50780,7 +50732,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 50784 "preproc.c"
+#line 50736 "preproc.c"
     break;
 
   case 1644: /* set_clause: set_target '=' a_expr  */
@@ -50788,7 +50740,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 50792 "preproc.c"
+#line 50744 "preproc.c"
     break;
 
   case 1645: /* set_clause: '(' set_target_list ')' '=' a_expr  */
@@ -50796,7 +50748,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-3].str),mm_strdup(") ="),(yyvsp[0].str));
 }
-#line 50800 "preproc.c"
+#line 50752 "preproc.c"
     break;
 
   case 1646: /* set_target: ColId opt_indirection  */
@@ -50804,7 +50756,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50808 "preproc.c"
+#line 50760 "preproc.c"
     break;
 
   case 1647: /* set_target_list: set_target  */
@@ -50812,7 +50764,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50816 "preproc.c"
+#line 50768 "preproc.c"
     break;
 
   case 1648: /* set_target_list: set_target_list ',' set_target  */
@@ -50820,7 +50772,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 50824 "preproc.c"
+#line 50776 "preproc.c"
     break;
 
   case 1649: /* MergeStmt: opt_with_clause MERGE INTO relation_expr_opt_alias USING table_ref ON a_expr merge_when_list  */
@@ -50828,7 +50780,7 @@
  { 
  (yyval.str) = cat_str(8,(yyvsp[-8].str),mm_strdup("merge into"),(yyvsp[-5].str),mm_strdup("using"),(yyvsp[-3].str),mm_strdup("on"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50832 "preproc.c"
+#line 50784 "preproc.c"
     break;
 
   case 1650: /* merge_when_list: merge_when_clause  */
@@ -50836,7 +50788,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 50840 "preproc.c"
+#line 50792 "preproc.c"
     break;
 
   case 1651: /* merge_when_list: merge_when_list merge_when_clause  */
@@ -50844,7 +50796,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 50848 "preproc.c"
+#line 50800 "preproc.c"
     break;
 
   case 1652: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN merge_update  */
@@ -50852,7 +50804,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("when matched"),(yyvsp[-2].str),mm_strdup("then"),(yyvsp[0].str));
 }
-#line 50856 "preproc.c"
+#line 50808 "preproc.c"
     break;
 
   case 1653: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN merge_delete  */
@@ -50860,7 +50812,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("when matched"),(yyvsp[-2].str),mm_strdup("then"),(yyvsp[0].str));
 }
-#line 50864 "preproc.c"
+#line 50816 "preproc.c"
     break;
 
   case 1654: /* merge_when_clause: WHEN NOT MATCHED opt_merge_when_condition THEN merge_insert  */
@@ -50868,7 +50820,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("when not matched"),(yyvsp[-2].str),mm_strdup("then"),(yyvsp[0].str));
 }
-#line 50872 "preproc.c"
+#line 50824 "preproc.c"
     break;
 
   case 1655: /* merge_when_clause: WHEN MATCHED opt_merge_when_condition THEN DO NOTHING  */
@@ -50876,7 +50828,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("when matched"),(yyvsp[-3].str),mm_strdup("then do nothing"));
 }
-#line 50880 "preproc.c"
+#line 50832 "preproc.c"
     break;
 
   case 1656: /* merge_when_clause: WHEN NOT MATCHED opt_merge_when_condition THEN DO NOTHING  */
@@ -50884,7 +50836,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("when not matched"),(yyvsp[-3].str),mm_strdup("then do nothing"));
 }
-#line 50888 "preproc.c"
+#line 50840 "preproc.c"
     break;
 
   case 1657: /* opt_merge_when_condition: AND a_expr  */
@@ -50892,14 +50844,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("and"),(yyvsp[0].str));
 }
-#line 50896 "preproc.c"
+#line 50848 "preproc.c"
     break;
 
   case 1658: /* opt_merge_when_condition: %empty  */
 #line 10241 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 50903 "preproc.c"
+#line 50855 "preproc.c"
     break;
 
   case 1659: /* merge_update: UPDATE SET set_clause_list  */
@@ -50907,7 +50859,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("update set"),(yyvsp[0].str));
 }
-#line 50911 "preproc.c"
+#line 50863 "preproc.c"
     break;
 
   case 1660: /* merge_delete: DELETE_P  */
@@ -50915,7 +50867,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 50919 "preproc.c"
+#line 50871 "preproc.c"
     break;
 
   case 1661: /* merge_insert: INSERT merge_values_clause  */
@@ -50923,7 +50875,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("insert"),(yyvsp[0].str));
 }
-#line 50927 "preproc.c"
+#line 50879 "preproc.c"
     break;
 
   case 1662: /* merge_insert: INSERT OVERRIDING override_kind VALUE_P merge_values_clause  */
@@ -50931,7 +50883,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("insert overriding"),(yyvsp[-2].str),mm_strdup("value"),(yyvsp[0].str));
 }
-#line 50935 "preproc.c"
+#line 50887 "preproc.c"
     break;
 
   case 1663: /* merge_insert: INSERT '(' insert_column_list ')' merge_values_clause  */
@@ -50939,7 +50891,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("insert ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 50943 "preproc.c"
+#line 50895 "preproc.c"
     break;
 
   case 1664: /* merge_insert: INSERT '(' insert_column_list ')' OVERRIDING override_kind VALUE_P merge_values_clause  */
@@ -50947,7 +50899,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("insert ("),(yyvsp[-5].str),mm_strdup(") overriding"),(yyvsp[-2].str),mm_strdup("value"),(yyvsp[0].str));
 }
-#line 50951 "preproc.c"
+#line 50903 "preproc.c"
     break;
 
   case 1665: /* merge_insert: INSERT DEFAULT VALUES  */
@@ -50955,7 +50907,7 @@
  { 
  (yyval.str) = mm_strdup("insert default values");
 }
-#line 50959 "preproc.c"
+#line 50911 "preproc.c"
     break;
 
   case 1666: /* merge_values_clause: VALUES '(' expr_list ')'  */
@@ -50963,7 +50915,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("values ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 50967 "preproc.c"
+#line 50919 "preproc.c"
     break;
 
   case 1667: /* DeclareCursorStmt: DECLARE cursor_name cursor_options CURSOR opt_hold FOR SelectStmt  */
@@ -51014,7 +50966,7 @@
 
 		(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
 	}
-#line 51018 "preproc.c"
+#line 50970 "preproc.c"
     break;
 
   case 1668: /* cursor_name: name  */
@@ -51022,7 +50974,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51026 "preproc.c"
+#line 50978 "preproc.c"
     break;
 
   case 1669: /* cursor_name: char_civar  */
@@ -51034,14 +50986,14 @@
 			(yyvsp[0].str) = curname;
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 51038 "preproc.c"
+#line 50990 "preproc.c"
     break;
 
   case 1670: /* cursor_options: %empty  */
 #line 10363 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51045 "preproc.c"
+#line 50997 "preproc.c"
     break;
 
   case 1671: /* cursor_options: cursor_options NO SCROLL  */
@@ -51049,7 +51001,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("no scroll"));
 }
-#line 51053 "preproc.c"
+#line 51005 "preproc.c"
     break;
 
   case 1672: /* cursor_options: cursor_options SCROLL  */
@@ -51057,7 +51009,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("scroll"));
 }
-#line 51061 "preproc.c"
+#line 51013 "preproc.c"
     break;
 
   case 1673: /* cursor_options: cursor_options BINARY  */
@@ -51065,7 +51017,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("binary"));
 }
-#line 51069 "preproc.c"
+#line 51021 "preproc.c"
     break;
 
   case 1674: /* cursor_options: cursor_options ASENSITIVE  */
@@ -51073,7 +51025,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("asensitive"));
 }
-#line 51077 "preproc.c"
+#line 51029 "preproc.c"
     break;
 
   case 1675: /* cursor_options: cursor_options INSENSITIVE  */
@@ -51081,7 +51033,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("insensitive"));
 }
-#line 51085 "preproc.c"
+#line 51037 "preproc.c"
     break;
 
   case 1676: /* opt_hold: %empty  */
@@ -51092,7 +51044,7 @@
 		else
 			(yyval.str) = EMPTY;
 	}
-#line 51096 "preproc.c"
+#line 51048 "preproc.c"
     break;
 
   case 1677: /* opt_hold: WITH HOLD  */
@@ -51100,7 +51052,7 @@
  { 
  (yyval.str) = mm_strdup("with hold");
 }
-#line 51104 "preproc.c"
+#line 51056 "preproc.c"
     break;
 
   case 1678: /* opt_hold: WITHOUT HOLD  */
@@ -51108,7 +51060,7 @@
  { 
  (yyval.str) = mm_strdup("without hold");
 }
-#line 51112 "preproc.c"
+#line 51064 "preproc.c"
     break;
 
   case 1679: /* SelectStmt: select_no_parens  */
@@ -51116,7 +51068,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51120 "preproc.c"
+#line 51072 "preproc.c"
     break;
 
   case 1680: /* SelectStmt: select_with_parens  */
@@ -51124,7 +51076,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51128 "preproc.c"
+#line 51080 "preproc.c"
     break;
 
   case 1681: /* select_with_parens: '(' select_no_parens ')'  */
@@ -51132,7 +51084,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51136 "preproc.c"
+#line 51088 "preproc.c"
     break;
 
   case 1682: /* select_with_parens: '(' select_with_parens ')'  */
@@ -51140,7 +51092,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51144 "preproc.c"
+#line 51096 "preproc.c"
     break;
 
   case 1683: /* select_no_parens: simple_select  */
@@ -51148,7 +51100,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51152 "preproc.c"
+#line 51104 "preproc.c"
     break;
 
   case 1684: /* select_no_parens: select_clause sort_clause  */
@@ -51156,7 +51108,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51160 "preproc.c"
+#line 51112 "preproc.c"
     break;
 
   case 1685: /* select_no_parens: select_clause opt_sort_clause for_locking_clause opt_select_limit  */
@@ -51164,7 +51116,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51168 "preproc.c"
+#line 51120 "preproc.c"
     break;
 
   case 1686: /* select_no_parens: select_clause opt_sort_clause select_limit opt_for_locking_clause  */
@@ -51172,7 +51124,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51176 "preproc.c"
+#line 51128 "preproc.c"
     break;
 
   case 1687: /* select_no_parens: with_clause select_clause  */
@@ -51180,7 +51132,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51184 "preproc.c"
+#line 51136 "preproc.c"
     break;
 
   case 1688: /* select_no_parens: with_clause select_clause sort_clause  */
@@ -51188,7 +51140,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51192 "preproc.c"
+#line 51144 "preproc.c"
     break;
 
   case 1689: /* select_no_parens: with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit  */
@@ -51196,7 +51148,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51200 "preproc.c"
+#line 51152 "preproc.c"
     break;
 
   case 1690: /* select_no_parens: with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause  */
@@ -51204,7 +51156,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51208 "preproc.c"
+#line 51160 "preproc.c"
     break;
 
   case 1691: /* select_clause: simple_select  */
@@ -51212,7 +51164,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51216 "preproc.c"
+#line 51168 "preproc.c"
     break;
 
   case 1692: /* select_clause: select_with_parens  */
@@ -51220,7 +51172,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51224 "preproc.c"
+#line 51176 "preproc.c"
     break;
 
   case 1693: /* simple_select: SELECT opt_all_clause opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
@@ -51228,7 +51180,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("select"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51232 "preproc.c"
+#line 51184 "preproc.c"
     break;
 
   case 1694: /* simple_select: SELECT distinct_clause target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
@@ -51236,7 +51188,7 @@
  { 
  (yyval.str) = cat_str(9,mm_strdup("select"),(yyvsp[-7].str),(yyvsp[-6].str),(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51240 "preproc.c"
+#line 51192 "preproc.c"
     break;
 
   case 1695: /* simple_select: values_clause  */
@@ -51244,7 +51196,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51248 "preproc.c"
+#line 51200 "preproc.c"
     break;
 
   case 1696: /* simple_select: TABLE relation_expr  */
@@ -51252,7 +51204,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[0].str));
 }
-#line 51256 "preproc.c"
+#line 51208 "preproc.c"
     break;
 
   case 1697: /* simple_select: select_clause UNION set_quantifier select_clause  */
@@ -51260,7 +51212,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("union"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51264 "preproc.c"
+#line 51216 "preproc.c"
     break;
 
   case 1698: /* simple_select: select_clause INTERSECT set_quantifier select_clause  */
@@ -51268,7 +51220,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("intersect"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51272 "preproc.c"
+#line 51224 "preproc.c"
     break;
 
   case 1699: /* simple_select: select_clause EXCEPT set_quantifier select_clause  */
@@ -51276,7 +51228,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("except"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51280 "preproc.c"
+#line 51232 "preproc.c"
     break;
 
   case 1700: /* with_clause: WITH cte_list  */
@@ -51284,7 +51236,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[0].str));
 }
-#line 51288 "preproc.c"
+#line 51240 "preproc.c"
     break;
 
   case 1701: /* with_clause: WITH_LA cte_list  */
@@ -51292,7 +51244,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[0].str));
 }
-#line 51296 "preproc.c"
+#line 51248 "preproc.c"
     break;
 
   case 1702: /* with_clause: WITH RECURSIVE cte_list  */
@@ -51300,7 +51252,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("with recursive"),(yyvsp[0].str));
 }
-#line 51304 "preproc.c"
+#line 51256 "preproc.c"
     break;
 
   case 1703: /* cte_list: common_table_expr  */
@@ -51308,7 +51260,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51312 "preproc.c"
+#line 51264 "preproc.c"
     break;
 
   case 1704: /* cte_list: cte_list ',' common_table_expr  */
@@ -51316,7 +51268,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 51320 "preproc.c"
+#line 51272 "preproc.c"
     break;
 
   case 1705: /* common_table_expr: name opt_name_list AS opt_materialized '(' PreparableStmt ')' opt_search_clause opt_cycle_clause  */
@@ -51324,7 +51276,7 @@
  { 
  (yyval.str) = cat_str(9,(yyvsp[-8].str),(yyvsp[-7].str),mm_strdup("as"),(yyvsp[-5].str),mm_strdup("("),(yyvsp[-3].str),mm_strdup(")"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51328 "preproc.c"
+#line 51280 "preproc.c"
     break;
 
   case 1706: /* opt_materialized: MATERIALIZED  */
@@ -51332,7 +51284,7 @@
  { 
  (yyval.str) = mm_strdup("materialized");
 }
-#line 51336 "preproc.c"
+#line 51288 "preproc.c"
     break;
 
   case 1707: /* opt_materialized: NOT MATERIALIZED  */
@@ -51340,14 +51292,14 @@
  { 
  (yyval.str) = mm_strdup("not materialized");
 }
-#line 51344 "preproc.c"
+#line 51296 "preproc.c"
     break;
 
   case 1708: /* opt_materialized: %empty  */
 #line 10557 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51351 "preproc.c"
+#line 51303 "preproc.c"
     break;
 
   case 1709: /* opt_search_clause: SEARCH DEPTH FIRST_P BY columnList SET ColId  */
@@ -51355,7 +51307,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("search depth first by"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 51359 "preproc.c"
+#line 51311 "preproc.c"
     break;
 
   case 1710: /* opt_search_clause: SEARCH BREADTH FIRST_P BY columnList SET ColId  */
@@ -51363,14 +51315,14 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("search breadth first by"),(yyvsp[-2].str),mm_strdup("set"),(yyvsp[0].str));
 }
-#line 51367 "preproc.c"
+#line 51319 "preproc.c"
     break;
 
   case 1711: /* opt_search_clause: %empty  */
 #line 10572 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51374 "preproc.c"
+#line 51326 "preproc.c"
     break;
 
   case 1712: /* opt_cycle_clause: CYCLE columnList SET ColId TO AexprConst DEFAULT AexprConst USING ColId  */
@@ -51378,7 +51330,7 @@
  { 
  (yyval.str) = cat_str(10,mm_strdup("cycle"),(yyvsp[-8].str),mm_strdup("set"),(yyvsp[-6].str),mm_strdup("to"),(yyvsp[-4].str),mm_strdup("default"),(yyvsp[-2].str),mm_strdup("using"),(yyvsp[0].str));
 }
-#line 51382 "preproc.c"
+#line 51334 "preproc.c"
     break;
 
   case 1713: /* opt_cycle_clause: CYCLE columnList SET ColId USING ColId  */
@@ -51386,14 +51338,14 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("cycle"),(yyvsp[-4].str),mm_strdup("set"),(yyvsp[-2].str),mm_strdup("using"),(yyvsp[0].str));
 }
-#line 51390 "preproc.c"
+#line 51342 "preproc.c"
     break;
 
   case 1714: /* opt_cycle_clause: %empty  */
 #line 10587 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51397 "preproc.c"
+#line 51349 "preproc.c"
     break;
 
   case 1715: /* opt_with_clause: with_clause  */
@@ -51401,14 +51353,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51405 "preproc.c"
+#line 51357 "preproc.c"
     break;
 
   case 1716: /* opt_with_clause: %empty  */
 #line 10598 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51412 "preproc.c"
+#line 51364 "preproc.c"
     break;
 
   case 1717: /* into_clause: INTO OptTempTableName  */
@@ -51417,20 +51369,20 @@
 						FoundInto = 1;
 						(yyval.str)= cat2_str(mm_strdup("into"), (yyvsp[0].str));
 					}
-#line 51421 "preproc.c"
+#line 51373 "preproc.c"
     break;
 
   case 1718: /* into_clause: ecpg_into  */
 #line 10609 "preproc.y"
                     { (yyval.str) = EMPTY; }
-#line 51427 "preproc.c"
+#line 51379 "preproc.c"
     break;
 
   case 1719: /* into_clause: %empty  */
 #line 10611 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51434 "preproc.c"
+#line 51386 "preproc.c"
     break;
 
   case 1720: /* OptTempTableName: TEMPORARY opt_table qualified_name  */
@@ -51438,7 +51390,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("temporary"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51442 "preproc.c"
+#line 51394 "preproc.c"
     break;
 
   case 1721: /* OptTempTableName: TEMP opt_table qualified_name  */
@@ -51446,7 +51398,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("temp"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51450 "preproc.c"
+#line 51402 "preproc.c"
     break;
 
   case 1722: /* OptTempTableName: LOCAL TEMPORARY opt_table qualified_name  */
@@ -51454,7 +51406,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("local temporary"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51458 "preproc.c"
+#line 51410 "preproc.c"
     break;
 
   case 1723: /* OptTempTableName: LOCAL TEMP opt_table qualified_name  */
@@ -51462,7 +51414,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("local temp"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51466 "preproc.c"
+#line 51418 "preproc.c"
     break;
 
   case 1724: /* OptTempTableName: GLOBAL TEMPORARY opt_table qualified_name  */
@@ -51470,7 +51422,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("global temporary"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51474 "preproc.c"
+#line 51426 "preproc.c"
     break;
 
   case 1725: /* OptTempTableName: GLOBAL TEMP opt_table qualified_name  */
@@ -51478,7 +51430,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("global temp"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51482 "preproc.c"
+#line 51434 "preproc.c"
     break;
 
   case 1726: /* OptTempTableName: UNLOGGED opt_table qualified_name  */
@@ -51486,7 +51438,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("unlogged"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51490 "preproc.c"
+#line 51442 "preproc.c"
     break;
 
   case 1727: /* OptTempTableName: TABLE qualified_name  */
@@ -51494,7 +51446,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[0].str));
 }
-#line 51498 "preproc.c"
+#line 51450 "preproc.c"
     break;
 
   case 1728: /* OptTempTableName: qualified_name  */
@@ -51502,7 +51454,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51506 "preproc.c"
+#line 51458 "preproc.c"
     break;
 
   case 1729: /* opt_table: TABLE  */
@@ -51510,14 +51462,14 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 51514 "preproc.c"
+#line 51466 "preproc.c"
     break;
 
   case 1730: /* opt_table: %empty  */
 #line 10662 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51521 "preproc.c"
+#line 51473 "preproc.c"
     break;
 
   case 1731: /* set_quantifier: ALL  */
@@ -51525,7 +51477,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 51529 "preproc.c"
+#line 51481 "preproc.c"
     break;
 
   case 1732: /* set_quantifier: DISTINCT  */
@@ -51533,14 +51485,14 @@
  { 
  (yyval.str) = mm_strdup("distinct");
 }
-#line 51537 "preproc.c"
+#line 51489 "preproc.c"
     break;
 
   case 1733: /* set_quantifier: %empty  */
 #line 10677 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51544 "preproc.c"
+#line 51496 "preproc.c"
     break;
 
   case 1734: /* distinct_clause: DISTINCT  */
@@ -51548,7 +51500,7 @@
  { 
  (yyval.str) = mm_strdup("distinct");
 }
-#line 51552 "preproc.c"
+#line 51504 "preproc.c"
     break;
 
   case 1735: /* distinct_clause: DISTINCT ON '(' expr_list ')'  */
@@ -51556,7 +51508,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("distinct on ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51560 "preproc.c"
+#line 51512 "preproc.c"
     break;
 
   case 1736: /* opt_all_clause: ALL  */
@@ -51564,14 +51516,14 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 51568 "preproc.c"
+#line 51520 "preproc.c"
     break;
 
   case 1737: /* opt_all_clause: %empty  */
 #line 10700 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51575 "preproc.c"
+#line 51527 "preproc.c"
     break;
 
   case 1738: /* opt_sort_clause: sort_clause  */
@@ -51579,14 +51531,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51583 "preproc.c"
+#line 51535 "preproc.c"
     break;
 
   case 1739: /* opt_sort_clause: %empty  */
 #line 10711 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51590 "preproc.c"
+#line 51542 "preproc.c"
     break;
 
   case 1740: /* sort_clause: ORDER BY sortby_list  */
@@ -51594,7 +51546,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("order by"),(yyvsp[0].str));
 }
-#line 51598 "preproc.c"
+#line 51550 "preproc.c"
     break;
 
   case 1741: /* sortby_list: sortby  */
@@ -51602,7 +51554,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51606 "preproc.c"
+#line 51558 "preproc.c"
     break;
 
   case 1742: /* sortby_list: sortby_list ',' sortby  */
@@ -51610,7 +51562,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 51614 "preproc.c"
+#line 51566 "preproc.c"
     break;
 
   case 1743: /* sortby: a_expr USING qual_all_Op opt_nulls_order  */
@@ -51618,7 +51570,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("using"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51622 "preproc.c"
+#line 51574 "preproc.c"
     break;
 
   case 1744: /* sortby: a_expr opt_asc_desc opt_nulls_order  */
@@ -51626,7 +51578,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51630 "preproc.c"
+#line 51582 "preproc.c"
     break;
 
   case 1745: /* select_limit: limit_clause offset_clause  */
@@ -51634,7 +51586,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51638 "preproc.c"
+#line 51590 "preproc.c"
     break;
 
   case 1746: /* select_limit: offset_clause limit_clause  */
@@ -51642,7 +51594,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51646 "preproc.c"
+#line 51598 "preproc.c"
     break;
 
   case 1747: /* select_limit: limit_clause  */
@@ -51650,7 +51602,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51654 "preproc.c"
+#line 51606 "preproc.c"
     break;
 
   case 1748: /* select_limit: offset_clause  */
@@ -51658,7 +51610,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51662 "preproc.c"
+#line 51614 "preproc.c"
     break;
 
   case 1749: /* opt_select_limit: select_limit  */
@@ -51666,14 +51618,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51670 "preproc.c"
+#line 51622 "preproc.c"
     break;
 
   case 1750: /* opt_select_limit: %empty  */
 #line 10774 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51677 "preproc.c"
+#line 51629 "preproc.c"
     break;
 
   case 1751: /* limit_clause: LIMIT select_limit_value  */
@@ -51681,7 +51633,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("limit"),(yyvsp[0].str));
 }
-#line 51685 "preproc.c"
+#line 51637 "preproc.c"
     break;
 
   case 1752: /* limit_clause: LIMIT select_limit_value ',' select_offset_value  */
@@ -51690,7 +51642,7 @@
 		mmerror(PARSE_ERROR, ET_WARNING, "no longer supported LIMIT #,# syntax passed to server");
 		(yyval.str) = cat_str(4, mm_strdup("limit"), (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str));
 	}
-#line 51694 "preproc.c"
+#line 51646 "preproc.c"
     break;
 
   case 1753: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows ONLY  */
@@ -51698,7 +51650,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("fetch"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup("only"));
 }
-#line 51702 "preproc.c"
+#line 51654 "preproc.c"
     break;
 
   case 1754: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows WITH TIES  */
@@ -51706,7 +51658,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("fetch"),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("with ties"));
 }
-#line 51710 "preproc.c"
+#line 51662 "preproc.c"
     break;
 
   case 1755: /* limit_clause: FETCH first_or_next row_or_rows ONLY  */
@@ -51714,7 +51666,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("fetch"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup("only"));
 }
-#line 51718 "preproc.c"
+#line 51670 "preproc.c"
     break;
 
   case 1756: /* limit_clause: FETCH first_or_next row_or_rows WITH TIES  */
@@ -51722,7 +51674,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("fetch"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("with ties"));
 }
-#line 51726 "preproc.c"
+#line 51678 "preproc.c"
     break;
 
   case 1757: /* offset_clause: OFFSET select_offset_value  */
@@ -51730,7 +51682,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("offset"),(yyvsp[0].str));
 }
-#line 51734 "preproc.c"
+#line 51686 "preproc.c"
     break;
 
   case 1758: /* offset_clause: OFFSET select_fetch_first_value row_or_rows  */
@@ -51738,7 +51690,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("offset"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51742 "preproc.c"
+#line 51694 "preproc.c"
     break;
 
   case 1759: /* select_limit_value: a_expr  */
@@ -51746,7 +51698,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51750 "preproc.c"
+#line 51702 "preproc.c"
     break;
 
   case 1760: /* select_limit_value: ALL  */
@@ -51754,7 +51706,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 51758 "preproc.c"
+#line 51710 "preproc.c"
     break;
 
   case 1761: /* select_offset_value: a_expr  */
@@ -51762,7 +51714,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51766 "preproc.c"
+#line 51718 "preproc.c"
     break;
 
   case 1762: /* select_fetch_first_value: c_expr  */
@@ -51770,7 +51722,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51774 "preproc.c"
+#line 51726 "preproc.c"
     break;
 
   case 1763: /* select_fetch_first_value: '+' I_or_F_const  */
@@ -51778,7 +51730,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[0].str));
 }
-#line 51782 "preproc.c"
+#line 51734 "preproc.c"
     break;
 
   case 1764: /* select_fetch_first_value: '-' I_or_F_const  */
@@ -51786,7 +51738,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[0].str));
 }
-#line 51790 "preproc.c"
+#line 51742 "preproc.c"
     break;
 
   case 1765: /* I_or_F_const: Iconst  */
@@ -51794,7 +51746,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51798 "preproc.c"
+#line 51750 "preproc.c"
     break;
 
   case 1766: /* I_or_F_const: ecpg_fconst  */
@@ -51802,7 +51754,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51806 "preproc.c"
+#line 51758 "preproc.c"
     break;
 
   case 1767: /* row_or_rows: ROW  */
@@ -51810,7 +51762,7 @@
  { 
  (yyval.str) = mm_strdup("row");
 }
-#line 51814 "preproc.c"
+#line 51766 "preproc.c"
     break;
 
   case 1768: /* row_or_rows: ROWS  */
@@ -51818,7 +51770,7 @@
  { 
  (yyval.str) = mm_strdup("rows");
 }
-#line 51822 "preproc.c"
+#line 51774 "preproc.c"
     break;
 
   case 1769: /* first_or_next: FIRST_P  */
@@ -51826,7 +51778,7 @@
  { 
  (yyval.str) = mm_strdup("first");
 }
-#line 51830 "preproc.c"
+#line 51782 "preproc.c"
     break;
 
   case 1770: /* first_or_next: NEXT  */
@@ -51834,7 +51786,7 @@
  { 
  (yyval.str) = mm_strdup("next");
 }
-#line 51838 "preproc.c"
+#line 51790 "preproc.c"
     break;
 
   case 1771: /* group_clause: GROUP_P BY set_quantifier group_by_list  */
@@ -51842,14 +51794,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("group by"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 51846 "preproc.c"
+#line 51798 "preproc.c"
     break;
 
   case 1772: /* group_clause: %empty  */
 #line 10898 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51853 "preproc.c"
+#line 51805 "preproc.c"
     break;
 
   case 1773: /* group_by_list: group_by_item  */
@@ -51857,7 +51809,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51861 "preproc.c"
+#line 51813 "preproc.c"
     break;
 
   case 1774: /* group_by_list: group_by_list ',' group_by_item  */
@@ -51865,7 +51817,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 51869 "preproc.c"
+#line 51821 "preproc.c"
     break;
 
   case 1775: /* group_by_item: a_expr  */
@@ -51873,7 +51825,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51877 "preproc.c"
+#line 51829 "preproc.c"
     break;
 
   case 1776: /* group_by_item: empty_grouping_set  */
@@ -51881,7 +51833,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51885 "preproc.c"
+#line 51837 "preproc.c"
     break;
 
   case 1777: /* group_by_item: cube_clause  */
@@ -51889,7 +51841,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51893 "preproc.c"
+#line 51845 "preproc.c"
     break;
 
   case 1778: /* group_by_item: rollup_clause  */
@@ -51897,7 +51849,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51901 "preproc.c"
+#line 51853 "preproc.c"
     break;
 
   case 1779: /* group_by_item: grouping_sets_clause  */
@@ -51905,7 +51857,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51909 "preproc.c"
+#line 51861 "preproc.c"
     break;
 
   case 1780: /* empty_grouping_set: '(' ')'  */
@@ -51913,7 +51865,7 @@
  { 
  (yyval.str) = mm_strdup("( )");
 }
-#line 51917 "preproc.c"
+#line 51869 "preproc.c"
     break;
 
   case 1781: /* rollup_clause: ROLLUP '(' expr_list ')'  */
@@ -51921,7 +51873,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("rollup ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51925 "preproc.c"
+#line 51877 "preproc.c"
     break;
 
   case 1782: /* cube_clause: CUBE '(' expr_list ')'  */
@@ -51929,7 +51881,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("cube ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51933 "preproc.c"
+#line 51885 "preproc.c"
     break;
 
   case 1783: /* grouping_sets_clause: GROUPING SETS '(' group_by_list ')'  */
@@ -51937,7 +51889,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("grouping sets ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 51941 "preproc.c"
+#line 51893 "preproc.c"
     break;
 
   case 1784: /* having_clause: HAVING a_expr  */
@@ -51945,14 +51897,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("having"),(yyvsp[0].str));
 }
-#line 51949 "preproc.c"
+#line 51901 "preproc.c"
     break;
 
   case 1785: /* having_clause: %empty  */
 #line 10977 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51956 "preproc.c"
+#line 51908 "preproc.c"
     break;
 
   case 1786: /* for_locking_clause: for_locking_items  */
@@ -51960,7 +51912,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51964 "preproc.c"
+#line 51916 "preproc.c"
     break;
 
   case 1787: /* for_locking_clause: FOR READ ONLY  */
@@ -51968,7 +51920,7 @@
  { 
  (yyval.str) = mm_strdup("for read only");
 }
-#line 51972 "preproc.c"
+#line 51924 "preproc.c"
     break;
 
   case 1788: /* opt_for_locking_clause: for_locking_clause  */
@@ -51976,14 +51928,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51980 "preproc.c"
+#line 51932 "preproc.c"
     break;
 
   case 1789: /* opt_for_locking_clause: %empty  */
 #line 11000 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 51987 "preproc.c"
+#line 51939 "preproc.c"
     break;
 
   case 1790: /* for_locking_items: for_locking_item  */
@@ -51991,7 +51943,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 51995 "preproc.c"
+#line 51947 "preproc.c"
     break;
 
   case 1791: /* for_locking_items: for_locking_items for_locking_item  */
@@ -51999,7 +51951,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52003 "preproc.c"
+#line 51955 "preproc.c"
     break;
 
   case 1792: /* for_locking_item: for_locking_strength locked_rels_list opt_nowait_or_skip  */
@@ -52007,7 +51959,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52011 "preproc.c"
+#line 51963 "preproc.c"
     break;
 
   case 1793: /* for_locking_strength: FOR UPDATE  */
@@ -52015,7 +51967,7 @@
  { 
  (yyval.str) = mm_strdup("for update");
 }
-#line 52019 "preproc.c"
+#line 51971 "preproc.c"
     break;
 
   case 1794: /* for_locking_strength: FOR NO KEY UPDATE  */
@@ -52023,7 +51975,7 @@
  { 
  (yyval.str) = mm_strdup("for no key update");
 }
-#line 52027 "preproc.c"
+#line 51979 "preproc.c"
     break;
 
   case 1795: /* for_locking_strength: FOR SHARE  */
@@ -52031,7 +51983,7 @@
  { 
  (yyval.str) = mm_strdup("for share");
 }
-#line 52035 "preproc.c"
+#line 51987 "preproc.c"
     break;
 
   case 1796: /* for_locking_strength: FOR KEY SHARE  */
@@ -52039,7 +51991,7 @@
  { 
  (yyval.str) = mm_strdup("for key share");
 }
-#line 52043 "preproc.c"
+#line 51995 "preproc.c"
     break;
 
   case 1797: /* locked_rels_list: OF qualified_name_list  */
@@ -52047,14 +51999,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[0].str));
 }
-#line 52051 "preproc.c"
+#line 52003 "preproc.c"
     break;
 
   case 1798: /* locked_rels_list: %empty  */
 #line 11051 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52058 "preproc.c"
+#line 52010 "preproc.c"
     break;
 
   case 1799: /* values_clause: VALUES '(' expr_list ')'  */
@@ -52062,7 +52014,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("values ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52066 "preproc.c"
+#line 52018 "preproc.c"
     break;
 
   case 1800: /* values_clause: values_clause ',' '(' expr_list ')'  */
@@ -52070,7 +52022,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-4].str),mm_strdup(", ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52074 "preproc.c"
+#line 52026 "preproc.c"
     break;
 
   case 1801: /* from_clause: FROM from_list  */
@@ -52078,14 +52030,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[0].str));
 }
-#line 52082 "preproc.c"
+#line 52034 "preproc.c"
     break;
 
   case 1802: /* from_clause: %empty  */
 #line 11074 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52089 "preproc.c"
+#line 52041 "preproc.c"
     break;
 
   case 1803: /* from_list: table_ref  */
@@ -52093,7 +52045,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52097 "preproc.c"
+#line 52049 "preproc.c"
     break;
 
   case 1804: /* from_list: from_list ',' table_ref  */
@@ -52101,7 +52053,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52105 "preproc.c"
+#line 52057 "preproc.c"
     break;
 
   case 1805: /* table_ref: relation_expr opt_alias_clause  */
@@ -52109,7 +52061,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52113 "preproc.c"
+#line 52065 "preproc.c"
     break;
 
   case 1806: /* table_ref: relation_expr opt_alias_clause tablesample_clause  */
@@ -52117,7 +52069,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52121 "preproc.c"
+#line 52073 "preproc.c"
     break;
 
   case 1807: /* table_ref: func_table func_alias_clause  */
@@ -52125,7 +52077,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52129 "preproc.c"
+#line 52081 "preproc.c"
     break;
 
   case 1808: /* table_ref: LATERAL_P func_table func_alias_clause  */
@@ -52133,7 +52085,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("lateral"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52137 "preproc.c"
+#line 52089 "preproc.c"
     break;
 
   case 1809: /* table_ref: xmltable opt_alias_clause  */
@@ -52141,7 +52093,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52145 "preproc.c"
+#line 52097 "preproc.c"
     break;
 
   case 1810: /* table_ref: LATERAL_P xmltable opt_alias_clause  */
@@ -52149,7 +52101,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("lateral"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52153 "preproc.c"
+#line 52105 "preproc.c"
     break;
 
   case 1811: /* table_ref: select_with_parens opt_alias_clause  */
@@ -52157,7 +52109,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52161 "preproc.c"
+#line 52113 "preproc.c"
     break;
 
   case 1812: /* table_ref: LATERAL_P select_with_parens opt_alias_clause  */
@@ -52165,7 +52117,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("lateral"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52169 "preproc.c"
+#line 52121 "preproc.c"
     break;
 
   case 1813: /* table_ref: joined_table  */
@@ -52173,7 +52125,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52177 "preproc.c"
+#line 52129 "preproc.c"
     break;
 
   case 1814: /* table_ref: '(' joined_table ')' alias_clause  */
@@ -52181,7 +52133,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 52185 "preproc.c"
+#line 52137 "preproc.c"
     break;
 
   case 1815: /* joined_table: '(' joined_table ')'  */
@@ -52189,7 +52141,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52193 "preproc.c"
+#line 52145 "preproc.c"
     break;
 
   case 1816: /* joined_table: table_ref CROSS JOIN table_ref  */
@@ -52197,7 +52149,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("cross join"),(yyvsp[0].str));
 }
-#line 52201 "preproc.c"
+#line 52153 "preproc.c"
     break;
 
   case 1817: /* joined_table: table_ref join_type JOIN table_ref join_qual  */
@@ -52205,7 +52157,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("join"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52209 "preproc.c"
+#line 52161 "preproc.c"
     break;
 
   case 1818: /* joined_table: table_ref JOIN table_ref join_qual  */
@@ -52213,7 +52165,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("join"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52217 "preproc.c"
+#line 52169 "preproc.c"
     break;
 
   case 1819: /* joined_table: table_ref NATURAL join_type JOIN table_ref  */
@@ -52221,7 +52173,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("natural"),(yyvsp[-2].str),mm_strdup("join"),(yyvsp[0].str));
 }
-#line 52225 "preproc.c"
+#line 52177 "preproc.c"
     break;
 
   case 1820: /* joined_table: table_ref NATURAL JOIN table_ref  */
@@ -52229,7 +52181,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("natural join"),(yyvsp[0].str));
 }
-#line 52233 "preproc.c"
+#line 52185 "preproc.c"
     break;
 
   case 1821: /* alias_clause: AS ColId '(' name_list ')'  */
@@ -52237,7 +52189,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("as"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52241 "preproc.c"
+#line 52193 "preproc.c"
     break;
 
   case 1822: /* alias_clause: AS ColId  */
@@ -52245,7 +52197,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[0].str));
 }
-#line 52249 "preproc.c"
+#line 52201 "preproc.c"
     break;
 
   case 1823: /* alias_clause: ColId '(' name_list ')'  */
@@ -52253,7 +52205,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52257 "preproc.c"
+#line 52209 "preproc.c"
     break;
 
   case 1824: /* alias_clause: ColId  */
@@ -52261,7 +52213,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52265 "preproc.c"
+#line 52217 "preproc.c"
     break;
 
   case 1825: /* opt_alias_clause: alias_clause  */
@@ -52269,14 +52221,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52273 "preproc.c"
+#line 52225 "preproc.c"
     break;
 
   case 1826: /* opt_alias_clause: %empty  */
 #line 11189 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52280 "preproc.c"
+#line 52232 "preproc.c"
     break;
 
   case 1827: /* opt_alias_clause_for_join_using: AS ColId  */
@@ -52284,14 +52236,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[0].str));
 }
-#line 52288 "preproc.c"
+#line 52240 "preproc.c"
     break;
 
   case 1828: /* opt_alias_clause_for_join_using: %empty  */
 #line 11200 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52295 "preproc.c"
+#line 52247 "preproc.c"
     break;
 
   case 1829: /* func_alias_clause: alias_clause  */
@@ -52299,7 +52251,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52303 "preproc.c"
+#line 52255 "preproc.c"
     break;
 
   case 1830: /* func_alias_clause: AS '(' TableFuncElementList ')'  */
@@ -52307,7 +52259,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("as ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52311 "preproc.c"
+#line 52263 "preproc.c"
     break;
 
   case 1831: /* func_alias_clause: AS ColId '(' TableFuncElementList ')'  */
@@ -52315,7 +52267,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("as"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52319 "preproc.c"
+#line 52271 "preproc.c"
     break;
 
   case 1832: /* func_alias_clause: ColId '(' TableFuncElementList ')'  */
@@ -52323,14 +52275,14 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52327 "preproc.c"
+#line 52279 "preproc.c"
     break;
 
   case 1833: /* func_alias_clause: %empty  */
 #line 11223 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52334 "preproc.c"
+#line 52286 "preproc.c"
     break;
 
   case 1834: /* join_type: FULL opt_outer  */
@@ -52338,7 +52290,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("full"),(yyvsp[0].str));
 }
-#line 52342 "preproc.c"
+#line 52294 "preproc.c"
     break;
 
   case 1835: /* join_type: LEFT opt_outer  */
@@ -52346,7 +52298,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("left"),(yyvsp[0].str));
 }
-#line 52350 "preproc.c"
+#line 52302 "preproc.c"
     break;
 
   case 1836: /* join_type: RIGHT opt_outer  */
@@ -52354,7 +52306,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("right"),(yyvsp[0].str));
 }
-#line 52358 "preproc.c"
+#line 52310 "preproc.c"
     break;
 
   case 1837: /* join_type: INNER_P  */
@@ -52362,7 +52314,7 @@
  { 
  (yyval.str) = mm_strdup("inner");
 }
-#line 52366 "preproc.c"
+#line 52318 "preproc.c"
     break;
 
   case 1838: /* opt_outer: OUTER_P  */
@@ -52370,14 +52322,14 @@
  { 
  (yyval.str) = mm_strdup("outer");
 }
-#line 52374 "preproc.c"
+#line 52326 "preproc.c"
     break;
 
   case 1839: /* opt_outer: %empty  */
 #line 11254 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52381 "preproc.c"
+#line 52333 "preproc.c"
     break;
 
   case 1840: /* join_qual: USING '(' name_list ')' opt_alias_clause_for_join_using  */
@@ -52385,7 +52337,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("using ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 52389 "preproc.c"
+#line 52341 "preproc.c"
     break;
 
   case 1841: /* join_qual: ON a_expr  */
@@ -52393,7 +52345,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("on"),(yyvsp[0].str));
 }
-#line 52397 "preproc.c"
+#line 52349 "preproc.c"
     break;
 
   case 1842: /* relation_expr: qualified_name  */
@@ -52401,7 +52353,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52405 "preproc.c"
+#line 52357 "preproc.c"
     break;
 
   case 1843: /* relation_expr: extended_relation_expr  */
@@ -52409,7 +52361,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52413 "preproc.c"
+#line 52365 "preproc.c"
     break;
 
   case 1844: /* extended_relation_expr: qualified_name '*'  */
@@ -52417,7 +52369,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("*"));
 }
-#line 52421 "preproc.c"
+#line 52373 "preproc.c"
     break;
 
   case 1845: /* extended_relation_expr: ONLY qualified_name  */
@@ -52425,7 +52377,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("only"),(yyvsp[0].str));
 }
-#line 52429 "preproc.c"
+#line 52381 "preproc.c"
     break;
 
   case 1846: /* extended_relation_expr: ONLY '(' qualified_name ')'  */
@@ -52433,7 +52385,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("only ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52437 "preproc.c"
+#line 52389 "preproc.c"
     break;
 
   case 1847: /* relation_expr_list: relation_expr  */
@@ -52441,7 +52393,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52445 "preproc.c"
+#line 52397 "preproc.c"
     break;
 
   case 1848: /* relation_expr_list: relation_expr_list ',' relation_expr  */
@@ -52449,7 +52401,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52453 "preproc.c"
+#line 52405 "preproc.c"
     break;
 
   case 1849: /* relation_expr_opt_alias: relation_expr  */
@@ -52457,7 +52409,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52461 "preproc.c"
+#line 52413 "preproc.c"
     break;
 
   case 1850: /* relation_expr_opt_alias: relation_expr ColId  */
@@ -52465,7 +52417,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52469 "preproc.c"
+#line 52421 "preproc.c"
     break;
 
   case 1851: /* relation_expr_opt_alias: relation_expr AS ColId  */
@@ -52473,7 +52425,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 52477 "preproc.c"
+#line 52429 "preproc.c"
     break;
 
   case 1852: /* tablesample_clause: TABLESAMPLE func_name '(' expr_list ')' opt_repeatable_clause  */
@@ -52481,7 +52433,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("tablesample"),(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 52485 "preproc.c"
+#line 52437 "preproc.c"
     break;
 
   case 1853: /* opt_repeatable_clause: REPEATABLE '(' a_expr ')'  */
@@ -52489,14 +52441,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("repeatable ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52493 "preproc.c"
+#line 52445 "preproc.c"
     break;
 
   case 1854: /* opt_repeatable_clause: %empty  */
 #line 11341 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52500 "preproc.c"
+#line 52452 "preproc.c"
     break;
 
   case 1855: /* func_table: func_expr_windowless opt_ordinality  */
@@ -52504,7 +52456,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52508 "preproc.c"
+#line 52460 "preproc.c"
     break;
 
   case 1856: /* func_table: ROWS FROM '(' rowsfrom_list ')' opt_ordinality  */
@@ -52512,7 +52464,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("rows from ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 52516 "preproc.c"
+#line 52468 "preproc.c"
     break;
 
   case 1857: /* rowsfrom_item: func_expr_windowless opt_col_def_list  */
@@ -52520,7 +52472,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52524 "preproc.c"
+#line 52476 "preproc.c"
     break;
 
   case 1858: /* rowsfrom_list: rowsfrom_item  */
@@ -52528,7 +52480,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52532 "preproc.c"
+#line 52484 "preproc.c"
     break;
 
   case 1859: /* rowsfrom_list: rowsfrom_list ',' rowsfrom_item  */
@@ -52536,7 +52488,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52540 "preproc.c"
+#line 52492 "preproc.c"
     break;
 
   case 1860: /* opt_col_def_list: AS '(' TableFuncElementList ')'  */
@@ -52544,14 +52496,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("as ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52548 "preproc.c"
+#line 52500 "preproc.c"
     break;
 
   case 1861: /* opt_col_def_list: %empty  */
 #line 11384 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52555 "preproc.c"
+#line 52507 "preproc.c"
     break;
 
   case 1862: /* opt_ordinality: WITH_LA ORDINALITY  */
@@ -52559,14 +52511,14 @@
  { 
  (yyval.str) = mm_strdup("with ordinality");
 }
-#line 52563 "preproc.c"
+#line 52515 "preproc.c"
     break;
 
   case 1863: /* opt_ordinality: %empty  */
 #line 11395 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52570 "preproc.c"
+#line 52522 "preproc.c"
     break;
 
   case 1864: /* where_clause: WHERE a_expr  */
@@ -52574,14 +52526,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[0].str));
 }
-#line 52578 "preproc.c"
+#line 52530 "preproc.c"
     break;
 
   case 1865: /* where_clause: %empty  */
 #line 11406 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52585 "preproc.c"
+#line 52537 "preproc.c"
     break;
 
   case 1866: /* where_or_current_clause: WHERE a_expr  */
@@ -52589,7 +52541,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[0].str));
 }
-#line 52593 "preproc.c"
+#line 52545 "preproc.c"
     break;
 
   case 1867: /* where_or_current_clause: WHERE CURRENT_P OF cursor_name  */
@@ -52598,14 +52550,14 @@
 		char *cursor_marker = (yyvsp[0].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[0].str);
 		(yyval.str) = cat_str(2,mm_strdup("where current of"), cursor_marker);
 	}
-#line 52602 "preproc.c"
+#line 52554 "preproc.c"
     break;
 
   case 1868: /* where_or_current_clause: %empty  */
 #line 11422 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52609 "preproc.c"
+#line 52561 "preproc.c"
     break;
 
   case 1869: /* OptTableFuncElementList: TableFuncElementList  */
@@ -52613,14 +52565,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52617 "preproc.c"
+#line 52569 "preproc.c"
     break;
 
   case 1870: /* OptTableFuncElementList: %empty  */
 #line 11433 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52624 "preproc.c"
+#line 52576 "preproc.c"
     break;
 
   case 1871: /* TableFuncElementList: TableFuncElement  */
@@ -52628,7 +52580,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52632 "preproc.c"
+#line 52584 "preproc.c"
     break;
 
   case 1872: /* TableFuncElementList: TableFuncElementList ',' TableFuncElement  */
@@ -52636,7 +52588,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52640 "preproc.c"
+#line 52592 "preproc.c"
     break;
 
   case 1873: /* TableFuncElement: ColId Typename opt_collate_clause  */
@@ -52644,7 +52596,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52648 "preproc.c"
+#line 52600 "preproc.c"
     break;
 
   case 1874: /* xmltable: XMLTABLE '(' c_expr xmlexists_argument COLUMNS xmltable_column_list ')'  */
@@ -52652,7 +52604,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("xmltable ("),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("columns"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52656 "preproc.c"
+#line 52608 "preproc.c"
     break;
 
   case 1875: /* xmltable: XMLTABLE '(' XMLNAMESPACES '(' xml_namespace_list ')' ',' c_expr xmlexists_argument COLUMNS xmltable_column_list ')'  */
@@ -52660,7 +52612,7 @@
  { 
  (yyval.str) = cat_str(8,mm_strdup("xmltable ( xmlnamespaces ("),(yyvsp[-7].str),mm_strdup(") ,"),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("columns"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52664 "preproc.c"
+#line 52616 "preproc.c"
     break;
 
   case 1876: /* xmltable_column_list: xmltable_column_el  */
@@ -52668,7 +52620,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52672 "preproc.c"
+#line 52624 "preproc.c"
     break;
 
   case 1877: /* xmltable_column_list: xmltable_column_list ',' xmltable_column_el  */
@@ -52676,7 +52628,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52680 "preproc.c"
+#line 52632 "preproc.c"
     break;
 
   case 1878: /* xmltable_column_el: ColId Typename  */
@@ -52684,7 +52636,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52688 "preproc.c"
+#line 52640 "preproc.c"
     break;
 
   case 1879: /* xmltable_column_el: ColId Typename xmltable_column_option_list  */
@@ -52692,7 +52644,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52696 "preproc.c"
+#line 52648 "preproc.c"
     break;
 
   case 1880: /* xmltable_column_el: ColId FOR ORDINALITY  */
@@ -52700,7 +52652,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("for ordinality"));
 }
-#line 52704 "preproc.c"
+#line 52656 "preproc.c"
     break;
 
   case 1881: /* xmltable_column_option_list: xmltable_column_option_el  */
@@ -52708,7 +52660,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52712 "preproc.c"
+#line 52664 "preproc.c"
     break;
 
   case 1882: /* xmltable_column_option_list: xmltable_column_option_list xmltable_column_option_el  */
@@ -52716,7 +52668,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52720 "preproc.c"
+#line 52672 "preproc.c"
     break;
 
   case 1883: /* xmltable_column_option_el: ecpg_ident b_expr  */
@@ -52724,7 +52676,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52728 "preproc.c"
+#line 52680 "preproc.c"
     break;
 
   case 1884: /* xmltable_column_option_el: DEFAULT b_expr  */
@@ -52732,7 +52684,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("default"),(yyvsp[0].str));
 }
-#line 52736 "preproc.c"
+#line 52688 "preproc.c"
     break;
 
   case 1885: /* xmltable_column_option_el: NOT NULL_P  */
@@ -52740,7 +52692,7 @@
  { 
  (yyval.str) = mm_strdup("not null");
 }
-#line 52744 "preproc.c"
+#line 52696 "preproc.c"
     break;
 
   case 1886: /* xmltable_column_option_el: NULL_P  */
@@ -52748,7 +52700,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 52752 "preproc.c"
+#line 52704 "preproc.c"
     break;
 
   case 1887: /* xml_namespace_list: xml_namespace_el  */
@@ -52756,7 +52708,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52760 "preproc.c"
+#line 52712 "preproc.c"
     break;
 
   case 1888: /* xml_namespace_list: xml_namespace_list ',' xml_namespace_el  */
@@ -52764,7 +52716,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 52768 "preproc.c"
+#line 52720 "preproc.c"
     break;
 
   case 1889: /* xml_namespace_el: b_expr AS ColLabel  */
@@ -52772,7 +52724,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 52776 "preproc.c"
+#line 52728 "preproc.c"
     break;
 
   case 1890: /* xml_namespace_el: DEFAULT b_expr  */
@@ -52780,19 +52732,19 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("default"),(yyvsp[0].str));
 }
-#line 52784 "preproc.c"
+#line 52736 "preproc.c"
     break;
 
   case 1891: /* Typename: SimpleTypename opt_array_bounds  */
 #line 11556 "preproc.y"
         {	(yyval.str) = cat2_str((yyvsp[-1].str), (yyvsp[0].index).str); }
-#line 52790 "preproc.c"
+#line 52742 "preproc.c"
     break;
 
   case 1892: /* Typename: SETOF SimpleTypename opt_array_bounds  */
 #line 11558 "preproc.y"
         {	(yyval.str) = cat_str(3, mm_strdup("setof"), (yyvsp[-1].str), (yyvsp[0].index).str); }
-#line 52796 "preproc.c"
+#line 52748 "preproc.c"
     break;
 
   case 1893: /* Typename: SimpleTypename ARRAY '[' Iconst ']'  */
@@ -52800,7 +52752,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-4].str),mm_strdup("array ["),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 52804 "preproc.c"
+#line 52756 "preproc.c"
     break;
 
   case 1894: /* Typename: SETOF SimpleTypename ARRAY '[' Iconst ']'  */
@@ -52808,7 +52760,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("setof"),(yyvsp[-4].str),mm_strdup("array ["),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 52812 "preproc.c"
+#line 52764 "preproc.c"
     break;
 
   case 1895: /* Typename: SimpleTypename ARRAY  */
@@ -52816,7 +52768,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("array"));
 }
-#line 52820 "preproc.c"
+#line 52772 "preproc.c"
     break;
 
   case 1896: /* Typename: SETOF SimpleTypename ARRAY  */
@@ -52824,7 +52776,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("setof"),(yyvsp[-1].str),mm_strdup("array"));
 }
-#line 52828 "preproc.c"
+#line 52780 "preproc.c"
     break;
 
   case 1897: /* opt_array_bounds: opt_array_bounds '[' ']'  */
@@ -52838,7 +52790,7 @@
 			(yyval.index).index2 = mm_strdup("0");
 		(yyval.index).str = cat_str(2, (yyvsp[-2].index).str, mm_strdup("[]"));
 	}
-#line 52842 "preproc.c"
+#line 52794 "preproc.c"
     break;
 
   case 1898: /* opt_array_bounds: opt_array_bounds '[' Iresult ']'  */
@@ -52852,7 +52804,7 @@
 			(yyval.index).index2 = mm_strdup((yyvsp[-1].str));
 		(yyval.index).str = cat_str(4, (yyvsp[-3].index).str, mm_strdup("["), (yyvsp[-1].str), mm_strdup("]"));
 	}
-#line 52856 "preproc.c"
+#line 52808 "preproc.c"
     break;
 
   case 1899: /* opt_array_bounds: %empty  */
@@ -52862,7 +52814,7 @@
 		(yyval.index).index2 = mm_strdup("-1");
 		(yyval.index).str= EMPTY;
 	}
-#line 52866 "preproc.c"
+#line 52818 "preproc.c"
     break;
 
   case 1900: /* SimpleTypename: GenericType  */
@@ -52870,7 +52822,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52874 "preproc.c"
+#line 52826 "preproc.c"
     break;
 
   case 1901: /* SimpleTypename: Numeric  */
@@ -52878,7 +52830,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52882 "preproc.c"
+#line 52834 "preproc.c"
     break;
 
   case 1902: /* SimpleTypename: Bit  */
@@ -52886,7 +52838,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52890 "preproc.c"
+#line 52842 "preproc.c"
     break;
 
   case 1903: /* SimpleTypename: Character  */
@@ -52894,7 +52846,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52898 "preproc.c"
+#line 52850 "preproc.c"
     break;
 
   case 1904: /* SimpleTypename: ConstDatetime  */
@@ -52902,7 +52854,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52906 "preproc.c"
+#line 52858 "preproc.c"
     break;
 
   case 1905: /* SimpleTypename: ConstInterval opt_interval  */
@@ -52910,7 +52862,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52914 "preproc.c"
+#line 52866 "preproc.c"
     break;
 
   case 1906: /* SimpleTypename: ConstInterval '(' Iconst ')'  */
@@ -52918,7 +52870,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52922 "preproc.c"
+#line 52874 "preproc.c"
     break;
 
   case 1907: /* ConstTypename: Numeric  */
@@ -52926,7 +52878,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52930 "preproc.c"
+#line 52882 "preproc.c"
     break;
 
   case 1908: /* ConstTypename: ConstBit  */
@@ -52934,7 +52886,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52938 "preproc.c"
+#line 52890 "preproc.c"
     break;
 
   case 1909: /* ConstTypename: ConstCharacter  */
@@ -52942,7 +52894,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52946 "preproc.c"
+#line 52898 "preproc.c"
     break;
 
   case 1910: /* ConstTypename: ConstDatetime  */
@@ -52950,7 +52902,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 52954 "preproc.c"
+#line 52906 "preproc.c"
     break;
 
   case 1911: /* GenericType: type_function_name opt_type_modifiers  */
@@ -52958,7 +52910,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52962 "preproc.c"
+#line 52914 "preproc.c"
     break;
 
   case 1912: /* GenericType: type_function_name attrs opt_type_modifiers  */
@@ -52966,7 +52918,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 52970 "preproc.c"
+#line 52922 "preproc.c"
     break;
 
   case 1913: /* opt_type_modifiers: '(' expr_list ')'  */
@@ -52974,14 +52926,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 52978 "preproc.c"
+#line 52930 "preproc.c"
     break;
 
   case 1914: /* opt_type_modifiers: %empty  */
 #line 11678 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 52985 "preproc.c"
+#line 52937 "preproc.c"
     break;
 
   case 1915: /* Numeric: INT_P  */
@@ -52989,7 +52941,7 @@
  { 
  (yyval.str) = mm_strdup("int");
 }
-#line 52993 "preproc.c"
+#line 52945 "preproc.c"
     break;
 
   case 1916: /* Numeric: INTEGER  */
@@ -52997,7 +52949,7 @@
  { 
  (yyval.str) = mm_strdup("integer");
 }
-#line 53001 "preproc.c"
+#line 52953 "preproc.c"
     break;
 
   case 1917: /* Numeric: SMALLINT  */
@@ -53005,7 +52957,7 @@
  { 
  (yyval.str) = mm_strdup("smallint");
 }
-#line 53009 "preproc.c"
+#line 52961 "preproc.c"
     break;
 
   case 1918: /* Numeric: BIGINT  */
@@ -53013,7 +52965,7 @@
  { 
  (yyval.str) = mm_strdup("bigint");
 }
-#line 53017 "preproc.c"
+#line 52969 "preproc.c"
     break;
 
   case 1919: /* Numeric: REAL  */
@@ -53021,7 +52973,7 @@
  { 
  (yyval.str) = mm_strdup("real");
 }
-#line 53025 "preproc.c"
+#line 52977 "preproc.c"
     break;
 
   case 1920: /* Numeric: FLOAT_P opt_float  */
@@ -53029,7 +52981,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("float"),(yyvsp[0].str));
 }
-#line 53033 "preproc.c"
+#line 52985 "preproc.c"
     break;
 
   case 1921: /* Numeric: DOUBLE_P PRECISION  */
@@ -53037,7 +52989,7 @@
  { 
  (yyval.str) = mm_strdup("double precision");
 }
-#line 53041 "preproc.c"
+#line 52993 "preproc.c"
     break;
 
   case 1922: /* Numeric: DECIMAL_P opt_type_modifiers  */
@@ -53045,7 +52997,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("decimal"),(yyvsp[0].str));
 }
-#line 53049 "preproc.c"
+#line 53001 "preproc.c"
     break;
 
   case 1923: /* Numeric: DEC opt_type_modifiers  */
@@ -53053,7 +53005,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("dec"),(yyvsp[0].str));
 }
-#line 53057 "preproc.c"
+#line 53009 "preproc.c"
     break;
 
   case 1924: /* Numeric: NUMERIC opt_type_modifiers  */
@@ -53061,7 +53013,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("numeric"),(yyvsp[0].str));
 }
-#line 53065 "preproc.c"
+#line 53017 "preproc.c"
     break;
 
   case 1925: /* Numeric: BOOLEAN_P  */
@@ -53069,7 +53021,7 @@
  { 
  (yyval.str) = mm_strdup("boolean");
 }
-#line 53073 "preproc.c"
+#line 53025 "preproc.c"
     break;
 
   case 1926: /* opt_float: '(' Iconst ')'  */
@@ -53077,14 +53029,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 53081 "preproc.c"
+#line 53033 "preproc.c"
     break;
 
   case 1927: /* opt_float: %empty  */
 #line 11737 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 53088 "preproc.c"
+#line 53040 "preproc.c"
     break;
 
   case 1928: /* Bit: BitWithLength  */
@@ -53092,7 +53044,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53096 "preproc.c"
+#line 53048 "preproc.c"
     break;
 
   case 1929: /* Bit: BitWithoutLength  */
@@ -53100,7 +53052,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53104 "preproc.c"
+#line 53056 "preproc.c"
     break;
 
   case 1930: /* ConstBit: BitWithLength  */
@@ -53108,7 +53060,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53112 "preproc.c"
+#line 53064 "preproc.c"
     break;
 
   case 1931: /* ConstBit: BitWithoutLength  */
@@ -53116,7 +53068,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53120 "preproc.c"
+#line 53072 "preproc.c"
     break;
 
   case 1932: /* BitWithLength: BIT opt_varying '(' expr_list ')'  */
@@ -53124,7 +53076,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("bit"),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 53128 "preproc.c"
+#line 53080 "preproc.c"
     break;
 
   case 1933: /* BitWithoutLength: BIT opt_varying  */
@@ -53132,7 +53084,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("bit"),(yyvsp[0].str));
 }
-#line 53136 "preproc.c"
+#line 53088 "preproc.c"
     break;
 
   case 1934: /* Character: CharacterWithLength  */
@@ -53140,7 +53092,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53144 "preproc.c"
+#line 53096 "preproc.c"
     break;
 
   case 1935: /* Character: CharacterWithoutLength  */
@@ -53148,7 +53100,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53152 "preproc.c"
+#line 53104 "preproc.c"
     break;
 
   case 1936: /* ConstCharacter: CharacterWithLength  */
@@ -53156,7 +53108,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53160 "preproc.c"
+#line 53112 "preproc.c"
     break;
 
   case 1937: /* ConstCharacter: CharacterWithoutLength  */
@@ -53164,7 +53116,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53168 "preproc.c"
+#line 53120 "preproc.c"
     break;
 
   case 1938: /* CharacterWithLength: character '(' Iconst ')'  */
@@ -53172,7 +53124,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 53176 "preproc.c"
+#line 53128 "preproc.c"
     break;
 
   case 1939: /* CharacterWithoutLength: character  */
@@ -53180,7 +53132,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53184 "preproc.c"
+#line 53136 "preproc.c"
     break;
 
   case 1940: /* character: CHARACTER opt_varying  */
@@ -53188,7 +53140,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("character"),(yyvsp[0].str));
 }
-#line 53192 "preproc.c"
+#line 53144 "preproc.c"
     break;
 
   case 1941: /* character: CHAR_P opt_varying  */
@@ -53196,7 +53148,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("char"),(yyvsp[0].str));
 }
-#line 53200 "preproc.c"
+#line 53152 "preproc.c"
     break;
 
   case 1942: /* character: VARCHAR  */
@@ -53204,7 +53156,7 @@
  { 
  (yyval.str) = mm_strdup("varchar");
 }
-#line 53208 "preproc.c"
+#line 53160 "preproc.c"
     break;
 
   case 1943: /* character: NATIONAL CHARACTER opt_varying  */
@@ -53212,7 +53164,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("national character"),(yyvsp[0].str));
 }
-#line 53216 "preproc.c"
+#line 53168 "preproc.c"
     break;
 
   case 1944: /* character: NATIONAL CHAR_P opt_varying  */
@@ -53220,7 +53172,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("national char"),(yyvsp[0].str));
 }
-#line 53224 "preproc.c"
+#line 53176 "preproc.c"
     break;
 
   case 1945: /* character: NCHAR opt_varying  */
@@ -53228,7 +53180,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("nchar"),(yyvsp[0].str));
 }
-#line 53232 "preproc.c"
+#line 53184 "preproc.c"
     break;
 
   case 1946: /* opt_varying: VARYING  */
@@ -53236,14 +53188,14 @@
  { 
  (yyval.str) = mm_strdup("varying");
 }
-#line 53240 "preproc.c"
+#line 53192 "preproc.c"
     break;
 
   case 1947: /* opt_varying: %empty  */
 #line 11856 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 53247 "preproc.c"
+#line 53199 "preproc.c"
     break;
 
   case 1948: /* ConstDatetime: TIMESTAMP '(' Iconst ')' opt_timezone  */
@@ -53251,7 +53203,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("timestamp ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 53255 "preproc.c"
+#line 53207 "preproc.c"
     break;
 
   case 1949: /* ConstDatetime: TIMESTAMP opt_timezone  */
@@ -53259,7 +53211,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("timestamp"),(yyvsp[0].str));
 }
-#line 53263 "preproc.c"
+#line 53215 "preproc.c"
     break;
 
   case 1950: /* ConstDatetime: TIME '(' Iconst ')' opt_timezone  */
@@ -53267,7 +53219,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("time ("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 53271 "preproc.c"
+#line 53223 "preproc.c"
     break;
 
   case 1951: /* ConstDatetime: TIME opt_timezone  */
@@ -53275,7 +53227,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("time"),(yyvsp[0].str));
 }
-#line 53279 "preproc.c"
+#line 53231 "preproc.c"
     break;
 
   case 1952: /* ConstInterval: INTERVAL  */
@@ -53283,7 +53235,7 @@
  { 
  (yyval.str) = mm_strdup("interval");
 }
-#line 53287 "preproc.c"
+#line 53239 "preproc.c"
     break;
 
   case 1953: /* opt_timezone: WITH_LA TIME ZONE  */
@@ -53291,7 +53243,7 @@
  { 
  (yyval.str) = mm_strdup("with time zone");
 }
-#line 53295 "preproc.c"
+#line 53247 "preproc.c"
     break;
 
   case 1954: /* opt_timezone: WITHOUT_LA TIME ZONE  */
@@ -53299,14 +53251,14 @@
  { 
  (yyval.str) = mm_strdup("without time zone");
 }
-#line 53303 "preproc.c"
+#line 53255 "preproc.c"
     break;
 
   case 1955: /* opt_timezone: %empty  */
 #line 11899 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 53310 "preproc.c"
+#line 53262 "preproc.c"
     break;
 
   case 1956: /* opt_interval: YEAR_P  */
@@ -53314,7 +53266,7 @@
  { 
  (yyval.str) = mm_strdup("year");
 }
-#line 53318 "preproc.c"
+#line 53270 "preproc.c"
     break;
 
   case 1957: /* opt_interval: MONTH_P  */
@@ -53322,7 +53274,7 @@
  { 
  (yyval.str) = mm_strdup("month");
 }
-#line 53326 "preproc.c"
+#line 53278 "preproc.c"
     break;
 
   case 1958: /* opt_interval: DAY_P  */
@@ -53330,7 +53282,7 @@
  { 
  (yyval.str) = mm_strdup("day");
 }
-#line 53334 "preproc.c"
+#line 53286 "preproc.c"
     break;
 
   case 1959: /* opt_interval: HOUR_P  */
@@ -53338,7 +53290,7 @@
  { 
  (yyval.str) = mm_strdup("hour");
 }
-#line 53342 "preproc.c"
+#line 53294 "preproc.c"
     break;
 
   case 1960: /* opt_interval: MINUTE_P  */
@@ -53346,7 +53298,7 @@
  { 
  (yyval.str) = mm_strdup("minute");
 }
-#line 53350 "preproc.c"
+#line 53302 "preproc.c"
     break;
 
   case 1961: /* opt_interval: interval_second  */
@@ -53354,7 +53306,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53358 "preproc.c"
+#line 53310 "preproc.c"
     break;
 
   case 1962: /* opt_interval: YEAR_P TO MONTH_P  */
@@ -53362,7 +53314,7 @@
  { 
  (yyval.str) = mm_strdup("year to month");
 }
-#line 53366 "preproc.c"
+#line 53318 "preproc.c"
     break;
 
   case 1963: /* opt_interval: DAY_P TO HOUR_P  */
@@ -53370,7 +53322,7 @@
  { 
  (yyval.str) = mm_strdup("day to hour");
 }
-#line 53374 "preproc.c"
+#line 53326 "preproc.c"
     break;
 
   case 1964: /* opt_interval: DAY_P TO MINUTE_P  */
@@ -53378,7 +53330,7 @@
  { 
  (yyval.str) = mm_strdup("day to minute");
 }
-#line 53382 "preproc.c"
+#line 53334 "preproc.c"
     break;
 
   case 1965: /* opt_interval: DAY_P TO interval_second  */
@@ -53386,7 +53338,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("day to"),(yyvsp[0].str));
 }
-#line 53390 "preproc.c"
+#line 53342 "preproc.c"
     break;
 
   case 1966: /* opt_interval: HOUR_P TO MINUTE_P  */
@@ -53394,7 +53346,7 @@
  { 
  (yyval.str) = mm_strdup("hour to minute");
 }
-#line 53398 "preproc.c"
+#line 53350 "preproc.c"
     break;
 
   case 1967: /* opt_interval: HOUR_P TO interval_second  */
@@ -53402,7 +53354,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("hour to"),(yyvsp[0].str));
 }
-#line 53406 "preproc.c"
+#line 53358 "preproc.c"
     break;
 
   case 1968: /* opt_interval: MINUTE_P TO interval_second  */
@@ -53410,14 +53362,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("minute to"),(yyvsp[0].str));
 }
-#line 53414 "preproc.c"
+#line 53366 "preproc.c"
     break;
 
   case 1969: /* opt_interval: %empty  */
 #line 11958 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 53421 "preproc.c"
+#line 53373 "preproc.c"
     break;
 
   case 1970: /* interval_second: SECOND_P  */
@@ -53425,7 +53377,7 @@
  { 
  (yyval.str) = mm_strdup("second");
 }
-#line 53429 "preproc.c"
+#line 53381 "preproc.c"
     break;
 
   case 1971: /* interval_second: SECOND_P '(' Iconst ')'  */
@@ -53433,7 +53385,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("second ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 53437 "preproc.c"
+#line 53389 "preproc.c"
     break;
 
   case 1972: /* a_expr: c_expr  */
@@ -53441,7 +53393,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53445 "preproc.c"
+#line 53397 "preproc.c"
     break;
 
   case 1973: /* a_expr: a_expr TYPECAST Typename  */
@@ -53449,7 +53401,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("::"),(yyvsp[0].str));
 }
-#line 53453 "preproc.c"
+#line 53405 "preproc.c"
     break;
 
   case 1974: /* a_expr: a_expr COLLATE any_name  */
@@ -53457,7 +53409,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("collate"),(yyvsp[0].str));
 }
-#line 53461 "preproc.c"
+#line 53413 "preproc.c"
     break;
 
   case 1975: /* a_expr: a_expr AT TIME ZONE a_expr  */
@@ -53465,7 +53417,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-4].str),mm_strdup("at time zone"),(yyvsp[0].str));
 }
-#line 53469 "preproc.c"
+#line 53421 "preproc.c"
     break;
 
   case 1976: /* a_expr: '+' a_expr  */
@@ -53473,7 +53425,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[0].str));
 }
-#line 53477 "preproc.c"
+#line 53429 "preproc.c"
     break;
 
   case 1977: /* a_expr: '-' a_expr  */
@@ -53481,7 +53433,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[0].str));
 }
-#line 53485 "preproc.c"
+#line 53437 "preproc.c"
     break;
 
   case 1978: /* a_expr: a_expr '+' a_expr  */
@@ -53489,7 +53441,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("+"),(yyvsp[0].str));
 }
-#line 53493 "preproc.c"
+#line 53445 "preproc.c"
     break;
 
   case 1979: /* a_expr: a_expr '-' a_expr  */
@@ -53497,7 +53449,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("-"),(yyvsp[0].str));
 }
-#line 53501 "preproc.c"
+#line 53453 "preproc.c"
     break;
 
   case 1980: /* a_expr: a_expr '*' a_expr  */
@@ -53505,7 +53457,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("*"),(yyvsp[0].str));
 }
-#line 53509 "preproc.c"
+#line 53461 "preproc.c"
     break;
 
   case 1981: /* a_expr: a_expr '/' a_expr  */
@@ -53513,7 +53465,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("/"),(yyvsp[0].str));
 }
-#line 53517 "preproc.c"
+#line 53469 "preproc.c"
     break;
 
   case 1982: /* a_expr: a_expr '%' a_expr  */
@@ -53521,7 +53473,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("%"),(yyvsp[0].str));
 }
-#line 53525 "preproc.c"
+#line 53477 "preproc.c"
     break;
 
   case 1983: /* a_expr: a_expr '^' a_expr  */
@@ -53529,7 +53481,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("^"),(yyvsp[0].str));
 }
-#line 53533 "preproc.c"
+#line 53485 "preproc.c"
     break;
 
   case 1984: /* a_expr: a_expr '<' a_expr  */
@@ -53537,7 +53489,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<"),(yyvsp[0].str));
 }
-#line 53541 "preproc.c"
+#line 53493 "preproc.c"
     break;
 
   case 1985: /* a_expr: a_expr '>' a_expr  */
@@ -53545,7 +53497,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(">"),(yyvsp[0].str));
 }
-#line 53549 "preproc.c"
+#line 53501 "preproc.c"
     break;
 
   case 1986: /* a_expr: a_expr '=' a_expr  */
@@ -53553,7 +53505,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 53557 "preproc.c"
+#line 53509 "preproc.c"
     break;
 
   case 1987: /* a_expr: a_expr LESS_EQUALS a_expr  */
@@ -53561,7 +53513,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<="),(yyvsp[0].str));
 }
-#line 53565 "preproc.c"
+#line 53517 "preproc.c"
     break;
 
   case 1988: /* a_expr: a_expr GREATER_EQUALS a_expr  */
@@ -53569,7 +53521,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(">="),(yyvsp[0].str));
 }
-#line 53573 "preproc.c"
+#line 53525 "preproc.c"
     break;
 
   case 1989: /* a_expr: a_expr NOT_EQUALS a_expr  */
@@ -53577,7 +53529,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<>"),(yyvsp[0].str));
 }
-#line 53581 "preproc.c"
+#line 53533 "preproc.c"
     break;
 
   case 1990: /* a_expr: a_expr qual_Op a_expr  */
@@ -53585,7 +53537,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53589 "preproc.c"
+#line 53541 "preproc.c"
     break;
 
   case 1991: /* a_expr: qual_Op a_expr  */
@@ -53593,7 +53545,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53597 "preproc.c"
+#line 53549 "preproc.c"
     break;
 
   case 1992: /* a_expr: a_expr AND a_expr  */
@@ -53601,7 +53553,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 53605 "preproc.c"
+#line 53557 "preproc.c"
     break;
 
   case 1993: /* a_expr: a_expr OR a_expr  */
@@ -53609,7 +53561,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("or"),(yyvsp[0].str));
 }
-#line 53613 "preproc.c"
+#line 53565 "preproc.c"
     break;
 
   case 1994: /* a_expr: NOT a_expr  */
@@ -53617,7 +53569,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("not"),(yyvsp[0].str));
 }
-#line 53621 "preproc.c"
+#line 53573 "preproc.c"
     break;
 
   case 1995: /* a_expr: NOT_LA a_expr  */
@@ -53625,7 +53577,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("not"),(yyvsp[0].str));
 }
-#line 53629 "preproc.c"
+#line 53581 "preproc.c"
     break;
 
   case 1996: /* a_expr: a_expr LIKE a_expr  */
@@ -53633,7 +53585,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("like"),(yyvsp[0].str));
 }
-#line 53637 "preproc.c"
+#line 53589 "preproc.c"
     break;
 
   case 1997: /* a_expr: a_expr LIKE a_expr ESCAPE a_expr  */
@@ -53641,7 +53593,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("like"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53645 "preproc.c"
+#line 53597 "preproc.c"
     break;
 
   case 1998: /* a_expr: a_expr NOT_LA LIKE a_expr  */
@@ -53649,7 +53601,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("not like"),(yyvsp[0].str));
 }
-#line 53653 "preproc.c"
+#line 53605 "preproc.c"
     break;
 
   case 1999: /* a_expr: a_expr NOT_LA LIKE a_expr ESCAPE a_expr  */
@@ -53657,7 +53609,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("not like"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53661 "preproc.c"
+#line 53613 "preproc.c"
     break;
 
   case 2000: /* a_expr: a_expr ILIKE a_expr  */
@@ -53665,7 +53617,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("ilike"),(yyvsp[0].str));
 }
-#line 53669 "preproc.c"
+#line 53621 "preproc.c"
     break;
 
   case 2001: /* a_expr: a_expr ILIKE a_expr ESCAPE a_expr  */
@@ -53673,7 +53625,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("ilike"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53677 "preproc.c"
+#line 53629 "preproc.c"
     break;
 
   case 2002: /* a_expr: a_expr NOT_LA ILIKE a_expr  */
@@ -53681,7 +53633,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("not ilike"),(yyvsp[0].str));
 }
-#line 53685 "preproc.c"
+#line 53637 "preproc.c"
     break;
 
   case 2003: /* a_expr: a_expr NOT_LA ILIKE a_expr ESCAPE a_expr  */
@@ -53689,7 +53641,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("not ilike"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53693 "preproc.c"
+#line 53645 "preproc.c"
     break;
 
   case 2004: /* a_expr: a_expr SIMILAR TO a_expr  */
@@ -53697,7 +53649,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("similar to"),(yyvsp[0].str));
 }
-#line 53701 "preproc.c"
+#line 53653 "preproc.c"
     break;
 
   case 2005: /* a_expr: a_expr SIMILAR TO a_expr ESCAPE a_expr  */
@@ -53705,7 +53657,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("similar to"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53709 "preproc.c"
+#line 53661 "preproc.c"
     break;
 
   case 2006: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr  */
@@ -53713,7 +53665,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-4].str),mm_strdup("not similar to"),(yyvsp[0].str));
 }
-#line 53717 "preproc.c"
+#line 53669 "preproc.c"
     break;
 
   case 2007: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr ESCAPE a_expr  */
@@ -53721,7 +53673,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-6].str),mm_strdup("not similar to"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 53725 "preproc.c"
+#line 53677 "preproc.c"
     break;
 
   case 2008: /* a_expr: a_expr IS NULL_P  */
@@ -53729,7 +53681,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is null"));
 }
-#line 53733 "preproc.c"
+#line 53685 "preproc.c"
     break;
 
   case 2009: /* a_expr: a_expr ISNULL  */
@@ -53737,7 +53689,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("isnull"));
 }
-#line 53741 "preproc.c"
+#line 53693 "preproc.c"
     break;
 
   case 2010: /* a_expr: a_expr IS NOT NULL_P  */
@@ -53745,7 +53697,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not null"));
 }
-#line 53749 "preproc.c"
+#line 53701 "preproc.c"
     break;
 
   case 2011: /* a_expr: a_expr NOTNULL  */
@@ -53753,7 +53705,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("notnull"));
 }
-#line 53757 "preproc.c"
+#line 53709 "preproc.c"
     break;
 
   case 2012: /* a_expr: row OVERLAPS row  */
@@ -53761,7 +53713,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("overlaps"),(yyvsp[0].str));
 }
-#line 53765 "preproc.c"
+#line 53717 "preproc.c"
     break;
 
   case 2013: /* a_expr: a_expr IS TRUE_P  */
@@ -53769,7 +53721,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is true"));
 }
-#line 53773 "preproc.c"
+#line 53725 "preproc.c"
     break;
 
   case 2014: /* a_expr: a_expr IS NOT TRUE_P  */
@@ -53777,7 +53729,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not true"));
 }
-#line 53781 "preproc.c"
+#line 53733 "preproc.c"
     break;
 
   case 2015: /* a_expr: a_expr IS FALSE_P  */
@@ -53785,7 +53737,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is false"));
 }
-#line 53789 "preproc.c"
+#line 53741 "preproc.c"
     break;
 
   case 2016: /* a_expr: a_expr IS NOT FALSE_P  */
@@ -53793,7 +53745,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not false"));
 }
-#line 53797 "preproc.c"
+#line 53749 "preproc.c"
     break;
 
   case 2017: /* a_expr: a_expr IS UNKNOWN  */
@@ -53801,7 +53753,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is unknown"));
 }
-#line 53805 "preproc.c"
+#line 53757 "preproc.c"
     break;
 
   case 2018: /* a_expr: a_expr IS NOT UNKNOWN  */
@@ -53809,7 +53761,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not unknown"));
 }
-#line 53813 "preproc.c"
+#line 53765 "preproc.c"
     break;
 
   case 2019: /* a_expr: a_expr IS DISTINCT FROM a_expr  */
@@ -53817,7 +53769,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-4].str),mm_strdup("is distinct from"),(yyvsp[0].str));
 }
-#line 53821 "preproc.c"
+#line 53773 "preproc.c"
     break;
 
   case 2020: /* a_expr: a_expr IS NOT DISTINCT FROM a_expr  */
@@ -53825,7 +53777,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-5].str),mm_strdup("is not distinct from"),(yyvsp[0].str));
 }
-#line 53829 "preproc.c"
+#line 53781 "preproc.c"
     break;
 
   case 2021: /* a_expr: a_expr BETWEEN opt_asymmetric b_expr AND a_expr  */
@@ -53833,7 +53785,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-5].str),mm_strdup("between"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 53837 "preproc.c"
+#line 53789 "preproc.c"
     break;
 
   case 2022: /* a_expr: a_expr NOT_LA BETWEEN opt_asymmetric b_expr AND a_expr  */
@@ -53841,7 +53793,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-6].str),mm_strdup("not between"),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 53845 "preproc.c"
+#line 53797 "preproc.c"
     break;
 
   case 2023: /* a_expr: a_expr BETWEEN SYMMETRIC b_expr AND a_expr  */
@@ -53849,7 +53801,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("between symmetric"),(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 53853 "preproc.c"
+#line 53805 "preproc.c"
     break;
 
   case 2024: /* a_expr: a_expr NOT_LA BETWEEN SYMMETRIC b_expr AND a_expr  */
@@ -53857,7 +53809,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-6].str),mm_strdup("not between symmetric"),(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 53861 "preproc.c"
+#line 53813 "preproc.c"
     break;
 
   case 2025: /* a_expr: a_expr IN_P in_expr  */
@@ -53865,7 +53817,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("in"),(yyvsp[0].str));
 }
-#line 53869 "preproc.c"
+#line 53821 "preproc.c"
     break;
 
   case 2026: /* a_expr: a_expr NOT_LA IN_P in_expr  */
@@ -53873,7 +53825,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-3].str),mm_strdup("not in"),(yyvsp[0].str));
 }
-#line 53877 "preproc.c"
+#line 53829 "preproc.c"
     break;
 
   case 2027: /* a_expr: a_expr subquery_Op sub_type select_with_parens  */
@@ -53881,7 +53833,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53885 "preproc.c"
+#line 53837 "preproc.c"
     break;
 
   case 2028: /* a_expr: a_expr subquery_Op sub_type '(' a_expr ')'  */
@@ -53889,7 +53841,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-5].str),(yyvsp[-4].str),(yyvsp[-3].str),mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 53893 "preproc.c"
+#line 53845 "preproc.c"
     break;
 
   case 2029: /* a_expr: UNIQUE opt_unique_null_treatment select_with_parens  */
@@ -53898,7 +53850,7 @@
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53902 "preproc.c"
+#line 53854 "preproc.c"
     break;
 
   case 2030: /* a_expr: a_expr IS DOCUMENT_P  */
@@ -53906,7 +53858,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is document"));
 }
-#line 53910 "preproc.c"
+#line 53862 "preproc.c"
     break;
 
   case 2031: /* a_expr: a_expr IS NOT DOCUMENT_P  */
@@ -53914,7 +53866,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not document"));
 }
-#line 53918 "preproc.c"
+#line 53870 "preproc.c"
     break;
 
   case 2032: /* a_expr: a_expr IS NORMALIZED  */
@@ -53922,7 +53874,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is normalized"));
 }
-#line 53926 "preproc.c"
+#line 53878 "preproc.c"
     break;
 
   case 2033: /* a_expr: a_expr IS unicode_normal_form NORMALIZED  */
@@ -53930,7 +53882,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("is"),(yyvsp[-1].str),mm_strdup("normalized"));
 }
-#line 53934 "preproc.c"
+#line 53886 "preproc.c"
     break;
 
   case 2034: /* a_expr: a_expr IS NOT NORMALIZED  */
@@ -53938,7 +53890,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not normalized"));
 }
-#line 53942 "preproc.c"
+#line 53894 "preproc.c"
     break;
 
   case 2035: /* a_expr: a_expr IS NOT unicode_normal_form NORMALIZED  */
@@ -53946,7 +53898,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-4].str),mm_strdup("is not"),(yyvsp[-1].str),mm_strdup("normalized"));
 }
-#line 53950 "preproc.c"
+#line 53902 "preproc.c"
     break;
 
   case 2036: /* a_expr: a_expr IS json_predicate_type_constraint json_key_uniqueness_constraint_opt  */
@@ -53954,7 +53906,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),mm_strdup("is"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53958 "preproc.c"
+#line 53910 "preproc.c"
     break;
 
   case 2037: /* a_expr: a_expr IS NOT json_predicate_type_constraint json_key_uniqueness_constraint_opt  */
@@ -53962,7 +53914,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-4].str),mm_strdup("is not"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 53966 "preproc.c"
+#line 53918 "preproc.c"
     break;
 
   case 2038: /* a_expr: DEFAULT  */
@@ -53970,7 +53922,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 53974 "preproc.c"
+#line 53926 "preproc.c"
     break;
 
   case 2039: /* b_expr: c_expr  */
@@ -53978,7 +53930,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 53982 "preproc.c"
+#line 53934 "preproc.c"
     break;
 
   case 2040: /* b_expr: b_expr TYPECAST Typename  */
@@ -53986,7 +53938,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("::"),(yyvsp[0].str));
 }
-#line 53990 "preproc.c"
+#line 53942 "preproc.c"
     break;
 
   case 2041: /* b_expr: '+' b_expr  */
@@ -53994,7 +53946,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[0].str));
 }
-#line 53998 "preproc.c"
+#line 53950 "preproc.c"
     break;
 
   case 2042: /* b_expr: '-' b_expr  */
@@ -54002,7 +53954,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[0].str));
 }
-#line 54006 "preproc.c"
+#line 53958 "preproc.c"
     break;
 
   case 2043: /* b_expr: b_expr '+' b_expr  */
@@ -54010,7 +53962,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("+"),(yyvsp[0].str));
 }
-#line 54014 "preproc.c"
+#line 53966 "preproc.c"
     break;
 
   case 2044: /* b_expr: b_expr '-' b_expr  */
@@ -54018,7 +53970,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("-"),(yyvsp[0].str));
 }
-#line 54022 "preproc.c"
+#line 53974 "preproc.c"
     break;
 
   case 2045: /* b_expr: b_expr '*' b_expr  */
@@ -54026,7 +53978,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("*"),(yyvsp[0].str));
 }
-#line 54030 "preproc.c"
+#line 53982 "preproc.c"
     break;
 
   case 2046: /* b_expr: b_expr '/' b_expr  */
@@ -54034,7 +53986,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("/"),(yyvsp[0].str));
 }
-#line 54038 "preproc.c"
+#line 53990 "preproc.c"
     break;
 
   case 2047: /* b_expr: b_expr '%' b_expr  */
@@ -54042,7 +53994,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("%"),(yyvsp[0].str));
 }
-#line 54046 "preproc.c"
+#line 53998 "preproc.c"
     break;
 
   case 2048: /* b_expr: b_expr '^' b_expr  */
@@ -54050,7 +54002,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("^"),(yyvsp[0].str));
 }
-#line 54054 "preproc.c"
+#line 54006 "preproc.c"
     break;
 
   case 2049: /* b_expr: b_expr '<' b_expr  */
@@ -54058,7 +54010,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<"),(yyvsp[0].str));
 }
-#line 54062 "preproc.c"
+#line 54014 "preproc.c"
     break;
 
   case 2050: /* b_expr: b_expr '>' b_expr  */
@@ -54066,7 +54018,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(">"),(yyvsp[0].str));
 }
-#line 54070 "preproc.c"
+#line 54022 "preproc.c"
     break;
 
   case 2051: /* b_expr: b_expr '=' b_expr  */
@@ -54074,7 +54026,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("="),(yyvsp[0].str));
 }
-#line 54078 "preproc.c"
+#line 54030 "preproc.c"
     break;
 
   case 2052: /* b_expr: b_expr LESS_EQUALS b_expr  */
@@ -54082,7 +54034,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<="),(yyvsp[0].str));
 }
-#line 54086 "preproc.c"
+#line 54038 "preproc.c"
     break;
 
   case 2053: /* b_expr: b_expr GREATER_EQUALS b_expr  */
@@ -54090,7 +54042,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(">="),(yyvsp[0].str));
 }
-#line 54094 "preproc.c"
+#line 54046 "preproc.c"
     break;
 
   case 2054: /* b_expr: b_expr NOT_EQUALS b_expr  */
@@ -54098,7 +54050,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("<>"),(yyvsp[0].str));
 }
-#line 54102 "preproc.c"
+#line 54054 "preproc.c"
     break;
 
   case 2055: /* b_expr: b_expr qual_Op b_expr  */
@@ -54106,7 +54058,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54110 "preproc.c"
+#line 54062 "preproc.c"
     break;
 
   case 2056: /* b_expr: qual_Op b_expr  */
@@ -54114,7 +54066,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54118 "preproc.c"
+#line 54070 "preproc.c"
     break;
 
   case 2057: /* b_expr: b_expr IS DISTINCT FROM b_expr  */
@@ -54122,7 +54074,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-4].str),mm_strdup("is distinct from"),(yyvsp[0].str));
 }
-#line 54126 "preproc.c"
+#line 54078 "preproc.c"
     break;
 
   case 2058: /* b_expr: b_expr IS NOT DISTINCT FROM b_expr  */
@@ -54130,7 +54082,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-5].str),mm_strdup("is not distinct from"),(yyvsp[0].str));
 }
-#line 54134 "preproc.c"
+#line 54086 "preproc.c"
     break;
 
   case 2059: /* b_expr: b_expr IS DOCUMENT_P  */
@@ -54138,7 +54090,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("is document"));
 }
-#line 54142 "preproc.c"
+#line 54094 "preproc.c"
     break;
 
   case 2060: /* b_expr: b_expr IS NOT DOCUMENT_P  */
@@ -54146,7 +54098,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("is not document"));
 }
-#line 54150 "preproc.c"
+#line 54102 "preproc.c"
     break;
 
   case 2061: /* c_expr: columnref  */
@@ -54154,7 +54106,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54158 "preproc.c"
+#line 54110 "preproc.c"
     break;
 
   case 2062: /* c_expr: AexprConst  */
@@ -54162,7 +54114,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54166 "preproc.c"
+#line 54118 "preproc.c"
     break;
 
   case 2063: /* c_expr: ecpg_param opt_indirection  */
@@ -54170,7 +54122,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54174 "preproc.c"
+#line 54126 "preproc.c"
     break;
 
   case 2064: /* c_expr: '(' a_expr ')' opt_indirection  */
@@ -54178,7 +54130,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 54182 "preproc.c"
+#line 54134 "preproc.c"
     break;
 
   case 2065: /* c_expr: case_expr  */
@@ -54186,7 +54138,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54190 "preproc.c"
+#line 54142 "preproc.c"
     break;
 
   case 2066: /* c_expr: func_expr  */
@@ -54194,7 +54146,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54198 "preproc.c"
+#line 54150 "preproc.c"
     break;
 
   case 2067: /* c_expr: select_with_parens  */
@@ -54202,7 +54154,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54206 "preproc.c"
+#line 54158 "preproc.c"
     break;
 
   case 2068: /* c_expr: select_with_parens indirection  */
@@ -54210,7 +54162,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54214 "preproc.c"
+#line 54166 "preproc.c"
     break;
 
   case 2069: /* c_expr: EXISTS select_with_parens  */
@@ -54218,7 +54170,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("exists"),(yyvsp[0].str));
 }
-#line 54222 "preproc.c"
+#line 54174 "preproc.c"
     break;
 
   case 2070: /* c_expr: ARRAY select_with_parens  */
@@ -54226,7 +54178,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[0].str));
 }
-#line 54230 "preproc.c"
+#line 54182 "preproc.c"
     break;
 
   case 2071: /* c_expr: ARRAY array_expr  */
@@ -54234,7 +54186,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[0].str));
 }
-#line 54238 "preproc.c"
+#line 54190 "preproc.c"
     break;
 
   case 2072: /* c_expr: explicit_row  */
@@ -54242,7 +54194,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54246 "preproc.c"
+#line 54198 "preproc.c"
     break;
 
   case 2073: /* c_expr: implicit_row  */
@@ -54250,7 +54202,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54254 "preproc.c"
+#line 54206 "preproc.c"
     break;
 
   case 2074: /* c_expr: GROUPING '(' expr_list ')'  */
@@ -54258,7 +54210,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("grouping ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54262 "preproc.c"
+#line 54214 "preproc.c"
     break;
 
   case 2075: /* func_application: func_name '(' ')'  */
@@ -54266,7 +54218,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-2].str),mm_strdup("( )"));
 }
-#line 54270 "preproc.c"
+#line 54222 "preproc.c"
     break;
 
   case 2076: /* func_application: func_name '(' func_arg_list opt_sort_clause ')'  */
@@ -54274,7 +54226,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54278 "preproc.c"
+#line 54230 "preproc.c"
     break;
 
   case 2077: /* func_application: func_name '(' VARIADIC func_arg_expr opt_sort_clause ')'  */
@@ -54282,7 +54234,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("( variadic"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54286 "preproc.c"
+#line 54238 "preproc.c"
     break;
 
   case 2078: /* func_application: func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause ')'  */
@@ -54290,7 +54242,7 @@
  { 
  (yyval.str) = cat_str(7,(yyvsp[-7].str),mm_strdup("("),(yyvsp[-5].str),mm_strdup(", variadic"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54294 "preproc.c"
+#line 54246 "preproc.c"
     break;
 
   case 2079: /* func_application: func_name '(' ALL func_arg_list opt_sort_clause ')'  */
@@ -54298,7 +54250,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("( all"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54302 "preproc.c"
+#line 54254 "preproc.c"
     break;
 
   case 2080: /* func_application: func_name '(' DISTINCT func_arg_list opt_sort_clause ')'  */
@@ -54306,7 +54258,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-5].str),mm_strdup("( distinct"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54310 "preproc.c"
+#line 54262 "preproc.c"
     break;
 
   case 2081: /* func_application: func_name '(' '*' ')'  */
@@ -54314,7 +54266,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-3].str),mm_strdup("( * )"));
 }
-#line 54318 "preproc.c"
+#line 54270 "preproc.c"
     break;
 
   case 2082: /* func_expr: func_application within_group_clause filter_clause over_clause  */
@@ -54322,7 +54274,7 @@
  { 
  (yyval.str) = cat_str(4,(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54326 "preproc.c"
+#line 54278 "preproc.c"
     break;
 
   case 2083: /* func_expr: json_aggregate_func filter_clause over_clause  */
@@ -54330,7 +54282,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54334 "preproc.c"
+#line 54286 "preproc.c"
     break;
 
   case 2084: /* func_expr: func_expr_common_subexpr  */
@@ -54338,7 +54290,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54342 "preproc.c"
+#line 54294 "preproc.c"
     break;
 
   case 2085: /* func_expr_windowless: func_application  */
@@ -54346,7 +54298,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54350 "preproc.c"
+#line 54302 "preproc.c"
     break;
 
   case 2086: /* func_expr_windowless: func_expr_common_subexpr  */
@@ -54354,7 +54306,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54358 "preproc.c"
+#line 54310 "preproc.c"
     break;
 
   case 2087: /* func_expr_windowless: json_aggregate_func  */
@@ -54362,7 +54314,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54366 "preproc.c"
+#line 54318 "preproc.c"
     break;
 
   case 2088: /* func_expr_common_subexpr: COLLATION FOR '(' a_expr ')'  */
@@ -54370,7 +54322,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("collation for ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54374 "preproc.c"
+#line 54326 "preproc.c"
     break;
 
   case 2089: /* func_expr_common_subexpr: CURRENT_DATE  */
@@ -54378,7 +54330,7 @@
  { 
  (yyval.str) = mm_strdup("current_date");
 }
-#line 54382 "preproc.c"
+#line 54334 "preproc.c"
     break;
 
   case 2090: /* func_expr_common_subexpr: CURRENT_TIME  */
@@ -54386,7 +54338,7 @@
  { 
  (yyval.str) = mm_strdup("current_time");
 }
-#line 54390 "preproc.c"
+#line 54342 "preproc.c"
     break;
 
   case 2091: /* func_expr_common_subexpr: CURRENT_TIME '(' Iconst ')'  */
@@ -54394,7 +54346,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("current_time ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54398 "preproc.c"
+#line 54350 "preproc.c"
     break;
 
   case 2092: /* func_expr_common_subexpr: CURRENT_TIMESTAMP  */
@@ -54402,7 +54354,7 @@
  { 
  (yyval.str) = mm_strdup("current_timestamp");
 }
-#line 54406 "preproc.c"
+#line 54358 "preproc.c"
     break;
 
   case 2093: /* func_expr_common_subexpr: CURRENT_TIMESTAMP '(' Iconst ')'  */
@@ -54410,7 +54362,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("current_timestamp ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54414 "preproc.c"
+#line 54366 "preproc.c"
     break;
 
   case 2094: /* func_expr_common_subexpr: LOCALTIME  */
@@ -54418,7 +54370,7 @@
  { 
  (yyval.str) = mm_strdup("localtime");
 }
-#line 54422 "preproc.c"
+#line 54374 "preproc.c"
     break;
 
   case 2095: /* func_expr_common_subexpr: LOCALTIME '(' Iconst ')'  */
@@ -54426,7 +54378,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("localtime ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54430 "preproc.c"
+#line 54382 "preproc.c"
     break;
 
   case 2096: /* func_expr_common_subexpr: LOCALTIMESTAMP  */
@@ -54434,7 +54386,7 @@
  { 
  (yyval.str) = mm_strdup("localtimestamp");
 }
-#line 54438 "preproc.c"
+#line 54390 "preproc.c"
     break;
 
   case 2097: /* func_expr_common_subexpr: LOCALTIMESTAMP '(' Iconst ')'  */
@@ -54442,7 +54394,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("localtimestamp ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54446 "preproc.c"
+#line 54398 "preproc.c"
     break;
 
   case 2098: /* func_expr_common_subexpr: CURRENT_ROLE  */
@@ -54450,7 +54402,7 @@
  { 
  (yyval.str) = mm_strdup("current_role");
 }
-#line 54454 "preproc.c"
+#line 54406 "preproc.c"
     break;
 
   case 2099: /* func_expr_common_subexpr: CURRENT_USER  */
@@ -54458,7 +54410,7 @@
  { 
  (yyval.str) = mm_strdup("current_user");
 }
-#line 54462 "preproc.c"
+#line 54414 "preproc.c"
     break;
 
   case 2100: /* func_expr_common_subexpr: SESSION_USER  */
@@ -54466,7 +54418,7 @@
  { 
  (yyval.str) = mm_strdup("session_user");
 }
-#line 54470 "preproc.c"
+#line 54422 "preproc.c"
     break;
 
   case 2101: /* func_expr_common_subexpr: SYSTEM_USER  */
@@ -54474,7 +54426,7 @@
  { 
  (yyval.str) = mm_strdup("system_user");
 }
-#line 54478 "preproc.c"
+#line 54430 "preproc.c"
     break;
 
   case 2102: /* func_expr_common_subexpr: USER  */
@@ -54482,7 +54434,7 @@
  { 
  (yyval.str) = mm_strdup("user");
 }
-#line 54486 "preproc.c"
+#line 54438 "preproc.c"
     break;
 
   case 2103: /* func_expr_common_subexpr: CURRENT_CATALOG  */
@@ -54490,7 +54442,7 @@
  { 
  (yyval.str) = mm_strdup("current_catalog");
 }
-#line 54494 "preproc.c"
+#line 54446 "preproc.c"
     break;
 
   case 2104: /* func_expr_common_subexpr: CURRENT_SCHEMA  */
@@ -54498,7 +54450,7 @@
  { 
  (yyval.str) = mm_strdup("current_schema");
 }
-#line 54502 "preproc.c"
+#line 54454 "preproc.c"
     break;
 
   case 2105: /* func_expr_common_subexpr: CAST '(' a_expr AS Typename ')'  */
@@ -54506,7 +54458,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("cast ("),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54510 "preproc.c"
+#line 54462 "preproc.c"
     break;
 
   case 2106: /* func_expr_common_subexpr: EXTRACT '(' extract_list ')'  */
@@ -54514,7 +54466,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("extract ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54518 "preproc.c"
+#line 54470 "preproc.c"
     break;
 
   case 2107: /* func_expr_common_subexpr: NORMALIZE '(' a_expr ')'  */
@@ -54522,7 +54474,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("normalize ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54526 "preproc.c"
+#line 54478 "preproc.c"
     break;
 
   case 2108: /* func_expr_common_subexpr: NORMALIZE '(' a_expr ',' unicode_normal_form ')'  */
@@ -54530,7 +54482,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("normalize ("),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54534 "preproc.c"
+#line 54486 "preproc.c"
     break;
 
   case 2109: /* func_expr_common_subexpr: OVERLAY '(' overlay_list ')'  */
@@ -54538,7 +54490,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("overlay ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54542 "preproc.c"
+#line 54494 "preproc.c"
     break;
 
   case 2110: /* func_expr_common_subexpr: OVERLAY '(' func_arg_list_opt ')'  */
@@ -54546,7 +54498,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("overlay ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54550 "preproc.c"
+#line 54502 "preproc.c"
     break;
 
   case 2111: /* func_expr_common_subexpr: POSITION '(' position_list ')'  */
@@ -54554,7 +54506,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("position ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54558 "preproc.c"
+#line 54510 "preproc.c"
     break;
 
   case 2112: /* func_expr_common_subexpr: SUBSTRING '(' substr_list ')'  */
@@ -54562,7 +54514,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("substring ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54566 "preproc.c"
+#line 54518 "preproc.c"
     break;
 
   case 2113: /* func_expr_common_subexpr: SUBSTRING '(' func_arg_list_opt ')'  */
@@ -54570,7 +54522,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("substring ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54574 "preproc.c"
+#line 54526 "preproc.c"
     break;
 
   case 2114: /* func_expr_common_subexpr: TREAT '(' a_expr AS Typename ')'  */
@@ -54578,7 +54530,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("treat ("),(yyvsp[-3].str),mm_strdup("as"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54582 "preproc.c"
+#line 54534 "preproc.c"
     break;
 
   case 2115: /* func_expr_common_subexpr: TRIM '(' BOTH trim_list ')'  */
@@ -54586,7 +54538,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( both"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54590 "preproc.c"
+#line 54542 "preproc.c"
     break;
 
   case 2116: /* func_expr_common_subexpr: TRIM '(' LEADING trim_list ')'  */
@@ -54594,7 +54546,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( leading"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54598 "preproc.c"
+#line 54550 "preproc.c"
     break;
 
   case 2117: /* func_expr_common_subexpr: TRIM '(' TRAILING trim_list ')'  */
@@ -54602,7 +54554,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( trailing"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54606 "preproc.c"
+#line 54558 "preproc.c"
     break;
 
   case 2118: /* func_expr_common_subexpr: TRIM '(' trim_list ')'  */
@@ -54610,7 +54562,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("trim ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54614 "preproc.c"
+#line 54566 "preproc.c"
     break;
 
   case 2119: /* func_expr_common_subexpr: NULLIF '(' a_expr ',' a_expr ')'  */
@@ -54618,7 +54570,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("nullif ("),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54622 "preproc.c"
+#line 54574 "preproc.c"
     break;
 
   case 2120: /* func_expr_common_subexpr: COALESCE '(' expr_list ')'  */
@@ -54626,7 +54578,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("coalesce ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54630 "preproc.c"
+#line 54582 "preproc.c"
     break;
 
   case 2121: /* func_expr_common_subexpr: GREATEST '(' expr_list ')'  */
@@ -54634,7 +54586,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("greatest ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54638 "preproc.c"
+#line 54590 "preproc.c"
     break;
 
   case 2122: /* func_expr_common_subexpr: LEAST '(' expr_list ')'  */
@@ -54642,7 +54594,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("least ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54646 "preproc.c"
+#line 54598 "preproc.c"
     break;
 
   case 2123: /* func_expr_common_subexpr: XMLCONCAT '(' expr_list ')'  */
@@ -54650,7 +54602,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("xmlconcat ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54654 "preproc.c"
+#line 54606 "preproc.c"
     break;
 
   case 2124: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ')'  */
@@ -54658,7 +54610,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("xmlelement ( name"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54662 "preproc.c"
+#line 54614 "preproc.c"
     break;
 
   case 2125: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ')'  */
@@ -54666,7 +54618,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54670 "preproc.c"
+#line 54622 "preproc.c"
     break;
 
   case 2126: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' expr_list ')'  */
@@ -54674,7 +54626,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54678 "preproc.c"
+#line 54630 "preproc.c"
     break;
 
   case 2127: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ',' expr_list ')'  */
@@ -54682,7 +54634,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("xmlelement ( name"),(yyvsp[-5].str),mm_strdup(","),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54686 "preproc.c"
+#line 54638 "preproc.c"
     break;
 
   case 2128: /* func_expr_common_subexpr: XMLEXISTS '(' c_expr xmlexists_argument ')'  */
@@ -54690,7 +54642,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("xmlexists ("),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54694 "preproc.c"
+#line 54646 "preproc.c"
     break;
 
   case 2129: /* func_expr_common_subexpr: XMLFOREST '(' xml_attribute_list ')'  */
@@ -54698,7 +54650,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("xmlforest ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54702 "preproc.c"
+#line 54654 "preproc.c"
     break;
 
   case 2130: /* func_expr_common_subexpr: XMLPARSE '(' document_or_content a_expr xml_whitespace_option ')'  */
@@ -54706,7 +54658,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("xmlparse ("),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54710 "preproc.c"
+#line 54662 "preproc.c"
     break;
 
   case 2131: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ')'  */
@@ -54714,7 +54666,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("xmlpi ( name"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54718 "preproc.c"
+#line 54670 "preproc.c"
     break;
 
   case 2132: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ',' a_expr ')'  */
@@ -54722,7 +54674,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("xmlpi ( name"),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54726 "preproc.c"
+#line 54678 "preproc.c"
     break;
 
   case 2133: /* func_expr_common_subexpr: XMLROOT '(' a_expr ',' xml_root_version opt_xml_root_standalone ')'  */
@@ -54730,7 +54682,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("xmlroot ("),(yyvsp[-4].str),mm_strdup(","),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54734 "preproc.c"
+#line 54686 "preproc.c"
     break;
 
   case 2134: /* func_expr_common_subexpr: XMLSERIALIZE '(' document_or_content a_expr AS SimpleTypename xml_indent_option ')'  */
@@ -54738,7 +54690,7 @@
  { 
  (yyval.str) = cat_str(7,mm_strdup("xmlserialize ("),(yyvsp[-5].str),(yyvsp[-4].str),mm_strdup("as"),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54742 "preproc.c"
+#line 54694 "preproc.c"
     break;
 
   case 2135: /* func_expr_common_subexpr: JSON_OBJECT '(' func_arg_list ')'  */
@@ -54746,7 +54698,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("json_object ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54750 "preproc.c"
+#line 54702 "preproc.c"
     break;
 
   case 2136: /* func_expr_common_subexpr: JSON_OBJECT '(' json_name_and_value_list json_object_constructor_null_clause_opt json_key_uniqueness_constraint_opt json_output_clause_opt ')'  */
@@ -54754,7 +54706,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("json_object ("),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54758 "preproc.c"
+#line 54710 "preproc.c"
     break;
 
   case 2137: /* func_expr_common_subexpr: JSON_OBJECT '(' json_output_clause_opt ')'  */
@@ -54762,7 +54714,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("json_object ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54766 "preproc.c"
+#line 54718 "preproc.c"
     break;
 
   case 2138: /* func_expr_common_subexpr: JSON_ARRAY '(' json_value_expr_list json_array_constructor_null_clause_opt json_output_clause_opt ')'  */
@@ -54770,7 +54722,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("json_array ("),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54774 "preproc.c"
+#line 54726 "preproc.c"
     break;
 
   case 2139: /* func_expr_common_subexpr: JSON_ARRAY '(' select_no_parens json_format_clause_opt json_output_clause_opt ')'  */
@@ -54778,7 +54730,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("json_array ("),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54782 "preproc.c"
+#line 54734 "preproc.c"
     break;
 
   case 2140: /* func_expr_common_subexpr: JSON_ARRAY '(' json_output_clause_opt ')'  */
@@ -54786,7 +54738,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("json_array ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54790 "preproc.c"
+#line 54742 "preproc.c"
     break;
 
   case 2141: /* xml_root_version: VERSION_P a_expr  */
@@ -54794,7 +54746,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[0].str));
 }
-#line 54798 "preproc.c"
+#line 54750 "preproc.c"
     break;
 
   case 2142: /* xml_root_version: VERSION_P NO VALUE_P  */
@@ -54802,7 +54754,7 @@
  { 
  (yyval.str) = mm_strdup("version no value");
 }
-#line 54806 "preproc.c"
+#line 54758 "preproc.c"
     break;
 
   case 2143: /* opt_xml_root_standalone: ',' STANDALONE_P YES_P  */
@@ -54810,7 +54762,7 @@
  { 
  (yyval.str) = mm_strdup(", standalone yes");
 }
-#line 54814 "preproc.c"
+#line 54766 "preproc.c"
     break;
 
   case 2144: /* opt_xml_root_standalone: ',' STANDALONE_P NO  */
@@ -54818,7 +54770,7 @@
  { 
  (yyval.str) = mm_strdup(", standalone no");
 }
-#line 54822 "preproc.c"
+#line 54774 "preproc.c"
     break;
 
   case 2145: /* opt_xml_root_standalone: ',' STANDALONE_P NO VALUE_P  */
@@ -54826,14 +54778,14 @@
  { 
  (yyval.str) = mm_strdup(", standalone no value");
 }
-#line 54830 "preproc.c"
+#line 54782 "preproc.c"
     break;
 
   case 2146: /* opt_xml_root_standalone: %empty  */
 #line 12706 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 54837 "preproc.c"
+#line 54789 "preproc.c"
     break;
 
   case 2147: /* xml_attributes: XMLATTRIBUTES '(' xml_attribute_list ')'  */
@@ -54841,7 +54793,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("xmlattributes ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54845 "preproc.c"
+#line 54797 "preproc.c"
     break;
 
   case 2148: /* xml_attribute_list: xml_attribute_el  */
@@ -54849,7 +54801,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54853 "preproc.c"
+#line 54805 "preproc.c"
     break;
 
   case 2149: /* xml_attribute_list: xml_attribute_list ',' xml_attribute_el  */
@@ -54857,7 +54809,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 54861 "preproc.c"
+#line 54813 "preproc.c"
     break;
 
   case 2150: /* xml_attribute_el: a_expr AS ColLabel  */
@@ -54865,7 +54817,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 54869 "preproc.c"
+#line 54821 "preproc.c"
     break;
 
   case 2151: /* xml_attribute_el: a_expr  */
@@ -54873,7 +54825,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 54877 "preproc.c"
+#line 54829 "preproc.c"
     break;
 
   case 2152: /* document_or_content: DOCUMENT_P  */
@@ -54881,7 +54833,7 @@
  { 
  (yyval.str) = mm_strdup("document");
 }
-#line 54885 "preproc.c"
+#line 54837 "preproc.c"
     break;
 
   case 2153: /* document_or_content: CONTENT_P  */
@@ -54889,7 +54841,7 @@
  { 
  (yyval.str) = mm_strdup("content");
 }
-#line 54893 "preproc.c"
+#line 54845 "preproc.c"
     break;
 
   case 2154: /* xml_indent_option: INDENT  */
@@ -54897,7 +54849,7 @@
  { 
  (yyval.str) = mm_strdup("indent");
 }
-#line 54901 "preproc.c"
+#line 54853 "preproc.c"
     break;
 
   case 2155: /* xml_indent_option: NO INDENT  */
@@ -54905,14 +54857,14 @@
  { 
  (yyval.str) = mm_strdup("no indent");
 }
-#line 54909 "preproc.c"
+#line 54861 "preproc.c"
     break;
 
   case 2156: /* xml_indent_option: %empty  */
 #line 12765 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 54916 "preproc.c"
+#line 54868 "preproc.c"
     break;
 
   case 2157: /* xml_whitespace_option: PRESERVE WHITESPACE_P  */
@@ -54920,7 +54872,7 @@
  { 
  (yyval.str) = mm_strdup("preserve whitespace");
 }
-#line 54924 "preproc.c"
+#line 54876 "preproc.c"
     break;
 
   case 2158: /* xml_whitespace_option: STRIP_P WHITESPACE_P  */
@@ -54928,14 +54880,14 @@
  { 
  (yyval.str) = mm_strdup("strip whitespace");
 }
-#line 54932 "preproc.c"
+#line 54884 "preproc.c"
     break;
 
   case 2159: /* xml_whitespace_option: %empty  */
 #line 12780 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 54939 "preproc.c"
+#line 54891 "preproc.c"
     break;
 
   case 2160: /* xmlexists_argument: PASSING c_expr  */
@@ -54943,7 +54895,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("passing"),(yyvsp[0].str));
 }
-#line 54947 "preproc.c"
+#line 54899 "preproc.c"
     break;
 
   case 2161: /* xmlexists_argument: PASSING c_expr xml_passing_mech  */
@@ -54951,7 +54903,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("passing"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54955 "preproc.c"
+#line 54907 "preproc.c"
     break;
 
   case 2162: /* xmlexists_argument: PASSING xml_passing_mech c_expr  */
@@ -54959,7 +54911,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("passing"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54963 "preproc.c"
+#line 54915 "preproc.c"
     break;
 
   case 2163: /* xmlexists_argument: PASSING xml_passing_mech c_expr xml_passing_mech  */
@@ -54967,7 +54919,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("passing"),(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 54971 "preproc.c"
+#line 54923 "preproc.c"
     break;
 
   case 2164: /* xml_passing_mech: BY REF_P  */
@@ -54975,7 +54927,7 @@
  { 
  (yyval.str) = mm_strdup("by ref");
 }
-#line 54979 "preproc.c"
+#line 54931 "preproc.c"
     break;
 
   case 2165: /* xml_passing_mech: BY VALUE_P  */
@@ -54983,7 +54935,7 @@
  { 
  (yyval.str) = mm_strdup("by value");
 }
-#line 54987 "preproc.c"
+#line 54939 "preproc.c"
     break;
 
   case 2166: /* within_group_clause: WITHIN GROUP_P '(' sort_clause ')'  */
@@ -54991,14 +54943,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("within group ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 54995 "preproc.c"
+#line 54947 "preproc.c"
     break;
 
   case 2167: /* within_group_clause: %empty  */
 #line 12823 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55002 "preproc.c"
+#line 54954 "preproc.c"
     break;
 
   case 2168: /* filter_clause: FILTER '(' WHERE a_expr ')'  */
@@ -55006,14 +54958,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("filter ( where"),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55010 "preproc.c"
+#line 54962 "preproc.c"
     break;
 
   case 2169: /* filter_clause: %empty  */
 #line 12834 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55017 "preproc.c"
+#line 54969 "preproc.c"
     break;
 
   case 2170: /* window_clause: WINDOW window_definition_list  */
@@ -55021,14 +54973,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("window"),(yyvsp[0].str));
 }
-#line 55025 "preproc.c"
+#line 54977 "preproc.c"
     break;
 
   case 2171: /* window_clause: %empty  */
 #line 12845 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55032 "preproc.c"
+#line 54984 "preproc.c"
     break;
 
   case 2172: /* window_definition_list: window_definition  */
@@ -55036,7 +54988,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55040 "preproc.c"
+#line 54992 "preproc.c"
     break;
 
   case 2173: /* window_definition_list: window_definition_list ',' window_definition  */
@@ -55044,7 +54996,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 55048 "preproc.c"
+#line 55000 "preproc.c"
     break;
 
   case 2174: /* window_definition: ColId AS window_specification  */
@@ -55052,7 +55004,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 55056 "preproc.c"
+#line 55008 "preproc.c"
     break;
 
   case 2175: /* over_clause: OVER window_specification  */
@@ -55060,7 +55012,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[0].str));
 }
-#line 55064 "preproc.c"
+#line 55016 "preproc.c"
     break;
 
   case 2176: /* over_clause: OVER ColId  */
@@ -55068,14 +55020,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[0].str));
 }
-#line 55072 "preproc.c"
+#line 55024 "preproc.c"
     break;
 
   case 2177: /* over_clause: %empty  */
 #line 12880 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55079 "preproc.c"
+#line 55031 "preproc.c"
     break;
 
   case 2178: /* window_specification: '(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')'  */
@@ -55083,7 +55035,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("("),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55087 "preproc.c"
+#line 55039 "preproc.c"
     break;
 
   case 2179: /* opt_existing_window_name: ColId  */
@@ -55091,14 +55043,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55095 "preproc.c"
+#line 55047 "preproc.c"
     break;
 
   case 2180: /* opt_existing_window_name: %empty  */
 #line 12899 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55102 "preproc.c"
+#line 55054 "preproc.c"
     break;
 
   case 2181: /* opt_partition_clause: PARTITION BY expr_list  */
@@ -55106,14 +55058,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("partition by"),(yyvsp[0].str));
 }
-#line 55110 "preproc.c"
+#line 55062 "preproc.c"
     break;
 
   case 2182: /* opt_partition_clause: %empty  */
 #line 12910 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55117 "preproc.c"
+#line 55069 "preproc.c"
     break;
 
   case 2183: /* opt_frame_clause: RANGE frame_extent opt_window_exclusion_clause  */
@@ -55121,7 +55073,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("range"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55125 "preproc.c"
+#line 55077 "preproc.c"
     break;
 
   case 2184: /* opt_frame_clause: ROWS frame_extent opt_window_exclusion_clause  */
@@ -55129,7 +55081,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("rows"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55133 "preproc.c"
+#line 55085 "preproc.c"
     break;
 
   case 2185: /* opt_frame_clause: GROUPS frame_extent opt_window_exclusion_clause  */
@@ -55137,14 +55089,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("groups"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55141 "preproc.c"
+#line 55093 "preproc.c"
     break;
 
   case 2186: /* opt_frame_clause: %empty  */
 #line 12929 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55148 "preproc.c"
+#line 55100 "preproc.c"
     break;
 
   case 2187: /* frame_extent: frame_bound  */
@@ -55152,7 +55104,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55156 "preproc.c"
+#line 55108 "preproc.c"
     break;
 
   case 2188: /* frame_extent: BETWEEN frame_bound AND frame_bound  */
@@ -55160,7 +55112,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("between"),(yyvsp[-2].str),mm_strdup("and"),(yyvsp[0].str));
 }
-#line 55164 "preproc.c"
+#line 55116 "preproc.c"
     break;
 
   case 2189: /* frame_bound: UNBOUNDED PRECEDING  */
@@ -55168,7 +55120,7 @@
  { 
  (yyval.str) = mm_strdup("unbounded preceding");
 }
-#line 55172 "preproc.c"
+#line 55124 "preproc.c"
     break;
 
   case 2190: /* frame_bound: UNBOUNDED FOLLOWING  */
@@ -55176,7 +55128,7 @@
  { 
  (yyval.str) = mm_strdup("unbounded following");
 }
-#line 55180 "preproc.c"
+#line 55132 "preproc.c"
     break;
 
   case 2191: /* frame_bound: CURRENT_P ROW  */
@@ -55184,7 +55136,7 @@
  { 
  (yyval.str) = mm_strdup("current row");
 }
-#line 55188 "preproc.c"
+#line 55140 "preproc.c"
     break;
 
   case 2192: /* frame_bound: a_expr PRECEDING  */
@@ -55192,7 +55144,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("preceding"));
 }
-#line 55196 "preproc.c"
+#line 55148 "preproc.c"
     break;
 
   case 2193: /* frame_bound: a_expr FOLLOWING  */
@@ -55200,7 +55152,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),mm_strdup("following"));
 }
-#line 55204 "preproc.c"
+#line 55156 "preproc.c"
     break;
 
   case 2194: /* opt_window_exclusion_clause: EXCLUDE CURRENT_P ROW  */
@@ -55208,7 +55160,7 @@
  { 
  (yyval.str) = mm_strdup("exclude current row");
 }
-#line 55212 "preproc.c"
+#line 55164 "preproc.c"
     break;
 
   case 2195: /* opt_window_exclusion_clause: EXCLUDE GROUP_P  */
@@ -55216,7 +55168,7 @@
  { 
  (yyval.str) = mm_strdup("exclude group");
 }
-#line 55220 "preproc.c"
+#line 55172 "preproc.c"
     break;
 
   case 2196: /* opt_window_exclusion_clause: EXCLUDE TIES  */
@@ -55224,7 +55176,7 @@
  { 
  (yyval.str) = mm_strdup("exclude ties");
 }
-#line 55228 "preproc.c"
+#line 55180 "preproc.c"
     break;
 
   case 2197: /* opt_window_exclusion_clause: EXCLUDE NO OTHERS  */
@@ -55232,14 +55184,14 @@
  { 
  (yyval.str) = mm_strdup("exclude no others");
 }
-#line 55236 "preproc.c"
+#line 55188 "preproc.c"
     break;
 
   case 2198: /* opt_window_exclusion_clause: %empty  */
 #line 12988 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55243 "preproc.c"
+#line 55195 "preproc.c"
     break;
 
   case 2199: /* row: ROW '(' expr_list ')'  */
@@ -55247,7 +55199,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("row ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55251 "preproc.c"
+#line 55203 "preproc.c"
     break;
 
   case 2200: /* row: ROW '(' ')'  */
@@ -55255,7 +55207,7 @@
  { 
  (yyval.str) = mm_strdup("row ( )");
 }
-#line 55259 "preproc.c"
+#line 55211 "preproc.c"
     break;
 
   case 2201: /* row: '(' expr_list ',' a_expr ')'  */
@@ -55263,7 +55215,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55267 "preproc.c"
+#line 55219 "preproc.c"
     break;
 
   case 2202: /* explicit_row: ROW '(' expr_list ')'  */
@@ -55271,7 +55223,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("row ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55275 "preproc.c"
+#line 55227 "preproc.c"
     break;
 
   case 2203: /* explicit_row: ROW '(' ')'  */
@@ -55279,7 +55231,7 @@
  { 
  (yyval.str) = mm_strdup("row ( )");
 }
-#line 55283 "preproc.c"
+#line 55235 "preproc.c"
     break;
 
   case 2204: /* implicit_row: '(' expr_list ',' a_expr ')'  */
@@ -55287,7 +55239,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[-3].str),mm_strdup(","),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55291 "preproc.c"
+#line 55243 "preproc.c"
     break;
 
   case 2205: /* sub_type: ANY  */
@@ -55295,7 +55247,7 @@
  { 
  (yyval.str) = mm_strdup("any");
 }
-#line 55299 "preproc.c"
+#line 55251 "preproc.c"
     break;
 
   case 2206: /* sub_type: SOME  */
@@ -55303,7 +55255,7 @@
  { 
  (yyval.str) = mm_strdup("some");
 }
-#line 55307 "preproc.c"
+#line 55259 "preproc.c"
     break;
 
   case 2207: /* sub_type: ALL  */
@@ -55311,7 +55263,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 55315 "preproc.c"
+#line 55267 "preproc.c"
     break;
 
   case 2208: /* all_Op: Op  */
@@ -55319,7 +55271,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55323 "preproc.c"
+#line 55275 "preproc.c"
     break;
 
   case 2209: /* all_Op: MathOp  */
@@ -55327,7 +55279,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55331 "preproc.c"
+#line 55283 "preproc.c"
     break;
 
   case 2210: /* MathOp: '+'  */
@@ -55335,7 +55287,7 @@
  { 
  (yyval.str) = mm_strdup("+");
 }
-#line 55339 "preproc.c"
+#line 55291 "preproc.c"
     break;
 
   case 2211: /* MathOp: '-'  */
@@ -55343,7 +55295,7 @@
  { 
  (yyval.str) = mm_strdup("-");
 }
-#line 55347 "preproc.c"
+#line 55299 "preproc.c"
     break;
 
   case 2212: /* MathOp: '*'  */
@@ -55351,7 +55303,7 @@
  { 
  (yyval.str) = mm_strdup("*");
 }
-#line 55355 "preproc.c"
+#line 55307 "preproc.c"
     break;
 
   case 2213: /* MathOp: '/'  */
@@ -55359,7 +55311,7 @@
  { 
  (yyval.str) = mm_strdup("/");
 }
-#line 55363 "preproc.c"
+#line 55315 "preproc.c"
     break;
 
   case 2214: /* MathOp: '%'  */
@@ -55367,7 +55319,7 @@
  { 
  (yyval.str) = mm_strdup("%");
 }
-#line 55371 "preproc.c"
+#line 55323 "preproc.c"
     break;
 
   case 2215: /* MathOp: '^'  */
@@ -55375,7 +55327,7 @@
  { 
  (yyval.str) = mm_strdup("^");
 }
-#line 55379 "preproc.c"
+#line 55331 "preproc.c"
     break;
 
   case 2216: /* MathOp: '<'  */
@@ -55383,7 +55335,7 @@
  { 
  (yyval.str) = mm_strdup("<");
 }
-#line 55387 "preproc.c"
+#line 55339 "preproc.c"
     break;
 
   case 2217: /* MathOp: '>'  */
@@ -55391,7 +55343,7 @@
  { 
  (yyval.str) = mm_strdup(">");
 }
-#line 55395 "preproc.c"
+#line 55347 "preproc.c"
     break;
 
   case 2218: /* MathOp: '='  */
@@ -55399,7 +55351,7 @@
  { 
  (yyval.str) = mm_strdup("=");
 }
-#line 55403 "preproc.c"
+#line 55355 "preproc.c"
     break;
 
   case 2219: /* MathOp: LESS_EQUALS  */
@@ -55407,7 +55359,7 @@
  { 
  (yyval.str) = mm_strdup("<=");
 }
-#line 55411 "preproc.c"
+#line 55363 "preproc.c"
     break;
 
   case 2220: /* MathOp: GREATER_EQUALS  */
@@ -55415,7 +55367,7 @@
  { 
  (yyval.str) = mm_strdup(">=");
 }
-#line 55419 "preproc.c"
+#line 55371 "preproc.c"
     break;
 
   case 2221: /* MathOp: NOT_EQUALS  */
@@ -55423,7 +55375,7 @@
  { 
  (yyval.str) = mm_strdup("<>");
 }
-#line 55427 "preproc.c"
+#line 55379 "preproc.c"
     break;
 
   case 2222: /* qual_Op: Op  */
@@ -55431,7 +55383,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55435 "preproc.c"
+#line 55387 "preproc.c"
     break;
 
   case 2223: /* qual_Op: OPERATOR '(' any_operator ')'  */
@@ -55439,7 +55391,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55443 "preproc.c"
+#line 55395 "preproc.c"
     break;
 
   case 2224: /* qual_all_Op: all_Op  */
@@ -55447,7 +55399,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55451 "preproc.c"
+#line 55403 "preproc.c"
     break;
 
   case 2225: /* qual_all_Op: OPERATOR '(' any_operator ')'  */
@@ -55455,7 +55407,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55459 "preproc.c"
+#line 55411 "preproc.c"
     break;
 
   case 2226: /* subquery_Op: all_Op  */
@@ -55463,7 +55415,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55467 "preproc.c"
+#line 55419 "preproc.c"
     break;
 
   case 2227: /* subquery_Op: OPERATOR '(' any_operator ')'  */
@@ -55471,7 +55423,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55475 "preproc.c"
+#line 55427 "preproc.c"
     break;
 
   case 2228: /* subquery_Op: LIKE  */
@@ -55479,7 +55431,7 @@
  { 
  (yyval.str) = mm_strdup("like");
 }
-#line 55483 "preproc.c"
+#line 55435 "preproc.c"
     break;
 
   case 2229: /* subquery_Op: NOT_LA LIKE  */
@@ -55487,7 +55439,7 @@
  { 
  (yyval.str) = mm_strdup("not like");
 }
-#line 55491 "preproc.c"
+#line 55443 "preproc.c"
     break;
 
   case 2230: /* subquery_Op: ILIKE  */
@@ -55495,7 +55447,7 @@
  { 
  (yyval.str) = mm_strdup("ilike");
 }
-#line 55499 "preproc.c"
+#line 55451 "preproc.c"
     break;
 
   case 2231: /* subquery_Op: NOT_LA ILIKE  */
@@ -55503,7 +55455,7 @@
  { 
  (yyval.str) = mm_strdup("not ilike");
 }
-#line 55507 "preproc.c"
+#line 55459 "preproc.c"
     break;
 
   case 2232: /* expr_list: a_expr  */
@@ -55511,7 +55463,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55515 "preproc.c"
+#line 55467 "preproc.c"
     break;
 
   case 2233: /* expr_list: expr_list ',' a_expr  */
@@ -55519,7 +55471,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 55523 "preproc.c"
+#line 55475 "preproc.c"
     break;
 
   case 2234: /* func_arg_list: func_arg_expr  */
@@ -55527,7 +55479,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55531 "preproc.c"
+#line 55483 "preproc.c"
     break;
 
   case 2235: /* func_arg_list: func_arg_list ',' func_arg_expr  */
@@ -55535,7 +55487,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 55539 "preproc.c"
+#line 55491 "preproc.c"
     break;
 
   case 2236: /* func_arg_expr: a_expr  */
@@ -55543,7 +55495,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55547 "preproc.c"
+#line 55499 "preproc.c"
     break;
 
   case 2237: /* func_arg_expr: param_name COLON_EQUALS a_expr  */
@@ -55551,7 +55503,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(":="),(yyvsp[0].str));
 }
-#line 55555 "preproc.c"
+#line 55507 "preproc.c"
     break;
 
   case 2238: /* func_arg_expr: param_name EQUALS_GREATER a_expr  */
@@ -55559,7 +55511,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("=>"),(yyvsp[0].str));
 }
-#line 55563 "preproc.c"
+#line 55515 "preproc.c"
     break;
 
   case 2239: /* func_arg_list_opt: func_arg_list  */
@@ -55567,14 +55519,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55571 "preproc.c"
+#line 55523 "preproc.c"
     break;
 
   case 2240: /* func_arg_list_opt: %empty  */
 #line 13207 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55578 "preproc.c"
+#line 55530 "preproc.c"
     break;
 
   case 2241: /* type_list: Typename  */
@@ -55582,7 +55534,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55586 "preproc.c"
+#line 55538 "preproc.c"
     break;
 
   case 2242: /* type_list: type_list ',' Typename  */
@@ -55590,7 +55542,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 55594 "preproc.c"
+#line 55546 "preproc.c"
     break;
 
   case 2243: /* array_expr: '[' expr_list ']'  */
@@ -55598,7 +55550,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 55602 "preproc.c"
+#line 55554 "preproc.c"
     break;
 
   case 2244: /* array_expr: '[' array_expr_list ']'  */
@@ -55606,7 +55558,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 55610 "preproc.c"
+#line 55562 "preproc.c"
     break;
 
   case 2245: /* array_expr: '[' ']'  */
@@ -55614,7 +55566,7 @@
  { 
  (yyval.str) = mm_strdup("[ ]");
 }
-#line 55618 "preproc.c"
+#line 55570 "preproc.c"
     break;
 
   case 2246: /* array_expr_list: array_expr  */
@@ -55622,7 +55574,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55626 "preproc.c"
+#line 55578 "preproc.c"
     break;
 
   case 2247: /* array_expr_list: array_expr_list ',' array_expr  */
@@ -55630,7 +55582,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 55634 "preproc.c"
+#line 55586 "preproc.c"
     break;
 
   case 2248: /* extract_list: extract_arg FROM a_expr  */
@@ -55638,7 +55590,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55642 "preproc.c"
+#line 55594 "preproc.c"
     break;
 
   case 2249: /* extract_arg: ecpg_ident  */
@@ -55646,7 +55598,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55650 "preproc.c"
+#line 55602 "preproc.c"
     break;
 
   case 2250: /* extract_arg: YEAR_P  */
@@ -55654,7 +55606,7 @@
  { 
  (yyval.str) = mm_strdup("year");
 }
-#line 55658 "preproc.c"
+#line 55610 "preproc.c"
     break;
 
   case 2251: /* extract_arg: MONTH_P  */
@@ -55662,7 +55614,7 @@
  { 
  (yyval.str) = mm_strdup("month");
 }
-#line 55666 "preproc.c"
+#line 55618 "preproc.c"
     break;
 
   case 2252: /* extract_arg: DAY_P  */
@@ -55670,7 +55622,7 @@
  { 
  (yyval.str) = mm_strdup("day");
 }
-#line 55674 "preproc.c"
+#line 55626 "preproc.c"
     break;
 
   case 2253: /* extract_arg: HOUR_P  */
@@ -55678,7 +55630,7 @@
  { 
  (yyval.str) = mm_strdup("hour");
 }
-#line 55682 "preproc.c"
+#line 55634 "preproc.c"
     break;
 
   case 2254: /* extract_arg: MINUTE_P  */
@@ -55686,7 +55638,7 @@
  { 
  (yyval.str) = mm_strdup("minute");
 }
-#line 55690 "preproc.c"
+#line 55642 "preproc.c"
     break;
 
   case 2255: /* extract_arg: SECOND_P  */
@@ -55694,7 +55646,7 @@
  { 
  (yyval.str) = mm_strdup("second");
 }
-#line 55698 "preproc.c"
+#line 55650 "preproc.c"
     break;
 
   case 2256: /* extract_arg: ecpg_sconst  */
@@ -55702,7 +55654,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55706 "preproc.c"
+#line 55658 "preproc.c"
     break;
 
   case 2257: /* unicode_normal_form: NFC  */
@@ -55710,7 +55662,7 @@
  { 
  (yyval.str) = mm_strdup("nfc");
 }
-#line 55714 "preproc.c"
+#line 55666 "preproc.c"
     break;
 
   case 2258: /* unicode_normal_form: NFD  */
@@ -55718,7 +55670,7 @@
  { 
  (yyval.str) = mm_strdup("nfd");
 }
-#line 55722 "preproc.c"
+#line 55674 "preproc.c"
     break;
 
   case 2259: /* unicode_normal_form: NFKC  */
@@ -55726,7 +55678,7 @@
  { 
  (yyval.str) = mm_strdup("nfkc");
 }
-#line 55730 "preproc.c"
+#line 55682 "preproc.c"
     break;
 
   case 2260: /* unicode_normal_form: NFKD  */
@@ -55734,7 +55686,7 @@
  { 
  (yyval.str) = mm_strdup("nfkd");
 }
-#line 55738 "preproc.c"
+#line 55690 "preproc.c"
     break;
 
   case 2261: /* overlay_list: a_expr PLACING a_expr FROM a_expr FOR a_expr  */
@@ -55742,7 +55694,7 @@
  { 
  (yyval.str) = cat_str(7,(yyvsp[-6].str),mm_strdup("placing"),(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),mm_strdup("for"),(yyvsp[0].str));
 }
-#line 55746 "preproc.c"
+#line 55698 "preproc.c"
     break;
 
   case 2262: /* overlay_list: a_expr PLACING a_expr FROM a_expr  */
@@ -55750,7 +55702,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("placing"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55754 "preproc.c"
+#line 55706 "preproc.c"
     break;
 
   case 2263: /* position_list: b_expr IN_P b_expr  */
@@ -55758,7 +55710,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("in"),(yyvsp[0].str));
 }
-#line 55762 "preproc.c"
+#line 55714 "preproc.c"
     break;
 
   case 2264: /* substr_list: a_expr FROM a_expr FOR a_expr  */
@@ -55766,7 +55718,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("from"),(yyvsp[-2].str),mm_strdup("for"),(yyvsp[0].str));
 }
-#line 55770 "preproc.c"
+#line 55722 "preproc.c"
     break;
 
   case 2265: /* substr_list: a_expr FOR a_expr FROM a_expr  */
@@ -55774,7 +55726,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("for"),(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55778 "preproc.c"
+#line 55730 "preproc.c"
     break;
 
   case 2266: /* substr_list: a_expr FROM a_expr  */
@@ -55782,7 +55734,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55786 "preproc.c"
+#line 55738 "preproc.c"
     break;
 
   case 2267: /* substr_list: a_expr FOR a_expr  */
@@ -55790,7 +55742,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("for"),(yyvsp[0].str));
 }
-#line 55794 "preproc.c"
+#line 55746 "preproc.c"
     break;
 
   case 2268: /* substr_list: a_expr SIMILAR a_expr ESCAPE a_expr  */
@@ -55798,7 +55750,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("similar"),(yyvsp[-2].str),mm_strdup("escape"),(yyvsp[0].str));
 }
-#line 55802 "preproc.c"
+#line 55754 "preproc.c"
     break;
 
   case 2269: /* trim_list: a_expr FROM expr_list  */
@@ -55806,7 +55758,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55810 "preproc.c"
+#line 55762 "preproc.c"
     break;
 
   case 2270: /* trim_list: FROM expr_list  */
@@ -55814,7 +55766,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[0].str));
 }
-#line 55818 "preproc.c"
+#line 55770 "preproc.c"
     break;
 
   case 2271: /* trim_list: expr_list  */
@@ -55822,7 +55774,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55826 "preproc.c"
+#line 55778 "preproc.c"
     break;
 
   case 2272: /* in_expr: select_with_parens  */
@@ -55830,7 +55782,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55834 "preproc.c"
+#line 55786 "preproc.c"
     break;
 
   case 2273: /* in_expr: '(' expr_list ')'  */
@@ -55838,7 +55790,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 55842 "preproc.c"
+#line 55794 "preproc.c"
     break;
 
   case 2274: /* case_expr: CASE case_arg when_clause_list case_default END_P  */
@@ -55846,7 +55798,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("case"),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup("end"));
 }
-#line 55850 "preproc.c"
+#line 55802 "preproc.c"
     break;
 
   case 2275: /* when_clause_list: when_clause  */
@@ -55854,7 +55806,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55858 "preproc.c"
+#line 55810 "preproc.c"
     break;
 
   case 2276: /* when_clause_list: when_clause_list when_clause  */
@@ -55862,7 +55814,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55866 "preproc.c"
+#line 55818 "preproc.c"
     break;
 
   case 2277: /* when_clause: WHEN a_expr THEN a_expr  */
@@ -55870,7 +55822,7 @@
  { 
  (yyval.str) = cat_str(4,mm_strdup("when"),(yyvsp[-2].str),mm_strdup("then"),(yyvsp[0].str));
 }
-#line 55874 "preproc.c"
+#line 55826 "preproc.c"
     break;
 
   case 2278: /* case_default: ELSE a_expr  */
@@ -55878,14 +55830,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("else"),(yyvsp[0].str));
 }
-#line 55882 "preproc.c"
+#line 55834 "preproc.c"
     break;
 
   case 2279: /* case_default: %empty  */
 #line 13422 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55889 "preproc.c"
+#line 55841 "preproc.c"
     break;
 
   case 2280: /* case_arg: a_expr  */
@@ -55893,14 +55845,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55897 "preproc.c"
+#line 55849 "preproc.c"
     break;
 
   case 2281: /* case_arg: %empty  */
 #line 13433 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55904 "preproc.c"
+#line 55856 "preproc.c"
     break;
 
   case 2282: /* columnref: ColId  */
@@ -55908,7 +55860,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55912 "preproc.c"
+#line 55864 "preproc.c"
     break;
 
   case 2283: /* columnref: ColId indirection  */
@@ -55916,7 +55868,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55920 "preproc.c"
+#line 55872 "preproc.c"
     break;
 
   case 2284: /* indirection_el: '.' attr_name  */
@@ -55924,7 +55876,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[0].str));
 }
-#line 55928 "preproc.c"
+#line 55880 "preproc.c"
     break;
 
   case 2285: /* indirection_el: '.' '*'  */
@@ -55932,7 +55884,7 @@
  { 
  (yyval.str) = mm_strdup(". *");
 }
-#line 55936 "preproc.c"
+#line 55888 "preproc.c"
     break;
 
   case 2286: /* indirection_el: '[' a_expr ']'  */
@@ -55940,7 +55892,7 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 55944 "preproc.c"
+#line 55896 "preproc.c"
     break;
 
   case 2287: /* indirection_el: '[' opt_slice_bound ':' opt_slice_bound ']'  */
@@ -55948,7 +55900,7 @@
  { 
  (yyval.str) = cat_str(5,mm_strdup("["),(yyvsp[-3].str),mm_strdup(":"),(yyvsp[-1].str),mm_strdup("]"));
 }
-#line 55952 "preproc.c"
+#line 55904 "preproc.c"
     break;
 
   case 2288: /* opt_slice_bound: a_expr  */
@@ -55956,14 +55908,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55960 "preproc.c"
+#line 55912 "preproc.c"
     break;
 
   case 2289: /* opt_slice_bound: %empty  */
 #line 13476 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55967 "preproc.c"
+#line 55919 "preproc.c"
     break;
 
   case 2290: /* indirection: indirection_el  */
@@ -55971,7 +55923,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 55975 "preproc.c"
+#line 55927 "preproc.c"
     break;
 
   case 2291: /* indirection: indirection indirection_el  */
@@ -55979,14 +55931,14 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55983 "preproc.c"
+#line 55935 "preproc.c"
     break;
 
   case 2292: /* opt_indirection: %empty  */
 #line 13495 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 55990 "preproc.c"
+#line 55942 "preproc.c"
     break;
 
   case 2293: /* opt_indirection: opt_indirection indirection_el  */
@@ -55994,7 +55946,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 55998 "preproc.c"
+#line 55950 "preproc.c"
     break;
 
   case 2294: /* opt_asymmetric: ASYMMETRIC  */
@@ -56002,14 +55954,14 @@
  { 
  (yyval.str) = mm_strdup("asymmetric");
 }
-#line 56006 "preproc.c"
+#line 55958 "preproc.c"
     break;
 
   case 2295: /* opt_asymmetric: %empty  */
 #line 13510 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56013 "preproc.c"
+#line 55965 "preproc.c"
     break;
 
   case 2296: /* json_value_expr: a_expr json_format_clause_opt  */
@@ -56017,7 +55969,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56021 "preproc.c"
+#line 55973 "preproc.c"
     break;
 
   case 2297: /* json_format_clause_opt: FORMAT_LA JSON json_encoding_clause_opt  */
@@ -56025,14 +55977,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("format json"),(yyvsp[0].str));
 }
-#line 56029 "preproc.c"
+#line 55981 "preproc.c"
     break;
 
   case 2298: /* json_format_clause_opt: %empty  */
 #line 13529 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56036 "preproc.c"
+#line 55988 "preproc.c"
     break;
 
   case 2299: /* json_encoding_clause_opt: ENCODING name  */
@@ -56040,14 +55992,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("encoding"),(yyvsp[0].str));
 }
-#line 56044 "preproc.c"
+#line 55996 "preproc.c"
     break;
 
   case 2300: /* json_encoding_clause_opt: %empty  */
 #line 13540 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56051 "preproc.c"
+#line 56003 "preproc.c"
     break;
 
   case 2301: /* json_output_clause_opt: RETURNING Typename json_format_clause_opt  */
@@ -56055,14 +56007,14 @@
  { 
  (yyval.str) = cat_str(3,mm_strdup("returning"),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56059 "preproc.c"
+#line 56011 "preproc.c"
     break;
 
   case 2302: /* json_output_clause_opt: %empty  */
 #line 13551 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56066 "preproc.c"
+#line 56018 "preproc.c"
     break;
 
   case 2303: /* json_predicate_type_constraint: JSON  */
@@ -56070,7 +56022,7 @@
  { 
  (yyval.str) = mm_strdup("json");
 }
-#line 56074 "preproc.c"
+#line 56026 "preproc.c"
     break;
 
   case 2304: /* json_predicate_type_constraint: JSON VALUE_P  */
@@ -56078,7 +56030,7 @@
  { 
  (yyval.str) = mm_strdup("json value");
 }
-#line 56082 "preproc.c"
+#line 56034 "preproc.c"
     break;
 
   case 2305: /* json_predicate_type_constraint: JSON ARRAY  */
@@ -56086,7 +56038,7 @@
  { 
  (yyval.str) = mm_strdup("json array");
 }
-#line 56090 "preproc.c"
+#line 56042 "preproc.c"
     break;
 
   case 2306: /* json_predicate_type_constraint: JSON OBJECT_P  */
@@ -56094,7 +56046,7 @@
  { 
  (yyval.str) = mm_strdup("json object");
 }
-#line 56098 "preproc.c"
+#line 56050 "preproc.c"
     break;
 
   case 2307: /* json_predicate_type_constraint: JSON SCALAR  */
@@ -56102,7 +56054,7 @@
  { 
  (yyval.str) = mm_strdup("json scalar");
 }
-#line 56106 "preproc.c"
+#line 56058 "preproc.c"
     break;
 
   case 2308: /* json_key_uniqueness_constraint_opt: WITH UNIQUE KEYS  */
@@ -56110,7 +56062,7 @@
  { 
  (yyval.str) = mm_strdup("with unique keys");
 }
-#line 56114 "preproc.c"
+#line 56066 "preproc.c"
     break;
 
   case 2309: /* json_key_uniqueness_constraint_opt: WITH UNIQUE  */
@@ -56118,7 +56070,7 @@
  { 
  (yyval.str) = mm_strdup("with unique");
 }
-#line 56122 "preproc.c"
+#line 56074 "preproc.c"
     break;
 
   case 2310: /* json_key_uniqueness_constraint_opt: WITHOUT UNIQUE KEYS  */
@@ -56126,7 +56078,7 @@
  { 
  (yyval.str) = mm_strdup("without unique keys");
 }
-#line 56130 "preproc.c"
+#line 56082 "preproc.c"
     break;
 
   case 2311: /* json_key_uniqueness_constraint_opt: WITHOUT UNIQUE  */
@@ -56134,14 +56086,14 @@
  { 
  (yyval.str) = mm_strdup("without unique");
 }
-#line 56138 "preproc.c"
+#line 56090 "preproc.c"
     break;
 
   case 2312: /* json_key_uniqueness_constraint_opt: %empty  */
 #line 13598 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56145 "preproc.c"
+#line 56097 "preproc.c"
     break;
 
   case 2313: /* json_name_and_value_list: json_name_and_value  */
@@ -56149,7 +56101,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56153 "preproc.c"
+#line 56105 "preproc.c"
     break;
 
   case 2314: /* json_name_and_value_list: json_name_and_value_list ',' json_name_and_value  */
@@ -56157,7 +56109,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56161 "preproc.c"
+#line 56113 "preproc.c"
     break;
 
   case 2315: /* json_name_and_value: c_expr VALUE_P json_value_expr  */
@@ -56165,7 +56117,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("value"),(yyvsp[0].str));
 }
-#line 56169 "preproc.c"
+#line 56121 "preproc.c"
     break;
 
   case 2316: /* json_name_and_value: a_expr ':' json_value_expr  */
@@ -56173,7 +56125,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(":"),(yyvsp[0].str));
 }
-#line 56177 "preproc.c"
+#line 56129 "preproc.c"
     break;
 
   case 2317: /* json_object_constructor_null_clause_opt: NULL_P ON NULL_P  */
@@ -56181,7 +56133,7 @@
  { 
  (yyval.str) = mm_strdup("null on null");
 }
-#line 56185 "preproc.c"
+#line 56137 "preproc.c"
     break;
 
   case 2318: /* json_object_constructor_null_clause_opt: ABSENT ON NULL_P  */
@@ -56189,14 +56141,14 @@
  { 
  (yyval.str) = mm_strdup("absent on null");
 }
-#line 56193 "preproc.c"
+#line 56145 "preproc.c"
     break;
 
   case 2319: /* json_object_constructor_null_clause_opt: %empty  */
 #line 13637 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56200 "preproc.c"
+#line 56152 "preproc.c"
     break;
 
   case 2320: /* json_array_constructor_null_clause_opt: NULL_P ON NULL_P  */
@@ -56204,7 +56156,7 @@
  { 
  (yyval.str) = mm_strdup("null on null");
 }
-#line 56208 "preproc.c"
+#line 56160 "preproc.c"
     break;
 
   case 2321: /* json_array_constructor_null_clause_opt: ABSENT ON NULL_P  */
@@ -56212,14 +56164,14 @@
  { 
  (yyval.str) = mm_strdup("absent on null");
 }
-#line 56216 "preproc.c"
+#line 56168 "preproc.c"
     break;
 
   case 2322: /* json_array_constructor_null_clause_opt: %empty  */
 #line 13652 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56223 "preproc.c"
+#line 56175 "preproc.c"
     break;
 
   case 2323: /* json_value_expr_list: json_value_expr  */
@@ -56227,7 +56179,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56231 "preproc.c"
+#line 56183 "preproc.c"
     break;
 
   case 2324: /* json_value_expr_list: json_value_expr_list ',' json_value_expr  */
@@ -56235,7 +56187,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56239 "preproc.c"
+#line 56191 "preproc.c"
     break;
 
   case 2325: /* json_aggregate_func: JSON_OBJECTAGG '(' json_name_and_value json_object_constructor_null_clause_opt json_key_uniqueness_constraint_opt json_output_clause_opt ')'  */
@@ -56243,7 +56195,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("json_objectagg ("),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 56247 "preproc.c"
+#line 56199 "preproc.c"
     break;
 
   case 2326: /* json_aggregate_func: JSON_ARRAYAGG '(' json_value_expr json_array_aggregate_order_by_clause_opt json_array_constructor_null_clause_opt json_output_clause_opt ')'  */
@@ -56251,7 +56203,7 @@
  { 
  (yyval.str) = cat_str(6,mm_strdup("json_arrayagg ("),(yyvsp[-4].str),(yyvsp[-3].str),(yyvsp[-2].str),(yyvsp[-1].str),mm_strdup(")"));
 }
-#line 56255 "preproc.c"
+#line 56207 "preproc.c"
     break;
 
   case 2327: /* json_array_aggregate_order_by_clause_opt: ORDER BY sortby_list  */
@@ -56259,14 +56211,14 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("order by"),(yyvsp[0].str));
 }
-#line 56263 "preproc.c"
+#line 56215 "preproc.c"
     break;
 
   case 2328: /* json_array_aggregate_order_by_clause_opt: %empty  */
 #line 13687 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56270 "preproc.c"
+#line 56222 "preproc.c"
     break;
 
   case 2329: /* opt_target_list: target_list  */
@@ -56274,14 +56226,14 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56278 "preproc.c"
+#line 56230 "preproc.c"
     break;
 
   case 2330: /* opt_target_list: %empty  */
 #line 13698 "preproc.y"
  { 
  (yyval.str)=EMPTY; }
-#line 56285 "preproc.c"
+#line 56237 "preproc.c"
     break;
 
   case 2331: /* target_list: target_el  */
@@ -56289,7 +56241,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56293 "preproc.c"
+#line 56245 "preproc.c"
     break;
 
   case 2332: /* target_list: target_list ',' target_el  */
@@ -56297,7 +56249,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56301 "preproc.c"
+#line 56253 "preproc.c"
     break;
 
   case 2333: /* target_el: a_expr AS ColLabel  */
@@ -56305,7 +56257,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup("as"),(yyvsp[0].str));
 }
-#line 56309 "preproc.c"
+#line 56261 "preproc.c"
     break;
 
   case 2334: /* target_el: a_expr BareColLabel  */
@@ -56313,7 +56265,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56317 "preproc.c"
+#line 56269 "preproc.c"
     break;
 
   case 2335: /* target_el: a_expr  */
@@ -56321,7 +56273,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56325 "preproc.c"
+#line 56277 "preproc.c"
     break;
 
   case 2336: /* target_el: '*'  */
@@ -56329,7 +56281,7 @@
  { 
  (yyval.str) = mm_strdup("*");
 }
-#line 56333 "preproc.c"
+#line 56285 "preproc.c"
     break;
 
   case 2337: /* qualified_name_list: qualified_name  */
@@ -56337,7 +56289,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56341 "preproc.c"
+#line 56293 "preproc.c"
     break;
 
   case 2338: /* qualified_name_list: qualified_name_list ',' qualified_name  */
@@ -56345,7 +56297,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56349 "preproc.c"
+#line 56301 "preproc.c"
     break;
 
   case 2339: /* qualified_name: ColId  */
@@ -56353,7 +56305,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56357 "preproc.c"
+#line 56309 "preproc.c"
     break;
 
   case 2340: /* qualified_name: ColId indirection  */
@@ -56361,7 +56313,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56365 "preproc.c"
+#line 56317 "preproc.c"
     break;
 
   case 2341: /* name_list: name  */
@@ -56369,7 +56321,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56373 "preproc.c"
+#line 56325 "preproc.c"
     break;
 
   case 2342: /* name_list: name_list ',' name  */
@@ -56377,7 +56329,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56381 "preproc.c"
+#line 56333 "preproc.c"
     break;
 
   case 2343: /* name: ColId  */
@@ -56385,7 +56337,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56389 "preproc.c"
+#line 56341 "preproc.c"
     break;
 
   case 2344: /* attr_name: ColLabel  */
@@ -56393,7 +56345,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56397 "preproc.c"
+#line 56349 "preproc.c"
     break;
 
   case 2345: /* file_name: ecpg_sconst  */
@@ -56401,7 +56353,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56405 "preproc.c"
+#line 56357 "preproc.c"
     break;
 
   case 2346: /* func_name: type_function_name  */
@@ -56409,7 +56361,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56413 "preproc.c"
+#line 56365 "preproc.c"
     break;
 
   case 2347: /* func_name: ColId indirection  */
@@ -56417,7 +56369,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56421 "preproc.c"
+#line 56373 "preproc.c"
     break;
 
   case 2348: /* AexprConst: Iconst  */
@@ -56425,7 +56377,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56429 "preproc.c"
+#line 56381 "preproc.c"
     break;
 
   case 2349: /* AexprConst: ecpg_fconst  */
@@ -56433,7 +56385,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56437 "preproc.c"
+#line 56389 "preproc.c"
     break;
 
   case 2350: /* AexprConst: ecpg_sconst  */
@@ -56441,7 +56393,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56445 "preproc.c"
+#line 56397 "preproc.c"
     break;
 
   case 2351: /* AexprConst: ecpg_bconst  */
@@ -56449,7 +56401,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56453 "preproc.c"
+#line 56405 "preproc.c"
     break;
 
   case 2352: /* AexprConst: ecpg_xconst  */
@@ -56457,7 +56409,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56461 "preproc.c"
+#line 56413 "preproc.c"
     break;
 
   case 2353: /* AexprConst: func_name ecpg_sconst  */
@@ -56465,7 +56417,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56469 "preproc.c"
+#line 56421 "preproc.c"
     break;
 
   case 2354: /* AexprConst: func_name '(' func_arg_list opt_sort_clause ')' ecpg_sconst  */
@@ -56473,7 +56425,7 @@
  { 
  (yyval.str) = cat_str(6,(yyvsp[-5].str),mm_strdup("("),(yyvsp[-3].str),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 56477 "preproc.c"
+#line 56429 "preproc.c"
     break;
 
   case 2355: /* AexprConst: ConstTypename ecpg_sconst  */
@@ -56481,7 +56433,7 @@
  { 
  (yyval.str) = cat_str(2,(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56485 "preproc.c"
+#line 56437 "preproc.c"
     break;
 
   case 2356: /* AexprConst: ConstInterval ecpg_sconst opt_interval  */
@@ -56489,7 +56441,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),(yyvsp[-1].str),(yyvsp[0].str));
 }
-#line 56493 "preproc.c"
+#line 56445 "preproc.c"
     break;
 
   case 2357: /* AexprConst: ConstInterval '(' Iconst ')' ecpg_sconst  */
@@ -56497,7 +56449,7 @@
  { 
  (yyval.str) = cat_str(5,(yyvsp[-4].str),mm_strdup("("),(yyvsp[-2].str),mm_strdup(")"),(yyvsp[0].str));
 }
-#line 56501 "preproc.c"
+#line 56453 "preproc.c"
     break;
 
   case 2358: /* AexprConst: TRUE_P  */
@@ -56505,7 +56457,7 @@
  { 
  (yyval.str) = mm_strdup("true");
 }
-#line 56509 "preproc.c"
+#line 56461 "preproc.c"
     break;
 
   case 2359: /* AexprConst: FALSE_P  */
@@ -56513,7 +56465,7 @@
  { 
  (yyval.str) = mm_strdup("false");
 }
-#line 56517 "preproc.c"
+#line 56469 "preproc.c"
     break;
 
   case 2360: /* AexprConst: NULL_P  */
@@ -56521,25 +56473,25 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 56525 "preproc.c"
+#line 56477 "preproc.c"
     break;
 
   case 2361: /* AexprConst: civar  */
 #line 13860 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 56531 "preproc.c"
+#line 56483 "preproc.c"
     break;
 
   case 2362: /* AexprConst: civarind  */
 #line 13861 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 56537 "preproc.c"
+#line 56489 "preproc.c"
     break;
 
   case 2363: /* Iconst: ICONST  */
 #line 13867 "preproc.y"
         { (yyval.str) = make_name(); }
-#line 56543 "preproc.c"
+#line 56495 "preproc.c"
     break;
 
   case 2364: /* SignedIconst: Iconst  */
@@ -56547,13 +56499,13 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56551 "preproc.c"
+#line 56503 "preproc.c"
     break;
 
   case 2365: /* SignedIconst: civar  */
 #line 13876 "preproc.y"
                 { (yyval.str) = (yyvsp[0].str); }
-#line 56557 "preproc.c"
+#line 56509 "preproc.c"
     break;
 
   case 2366: /* SignedIconst: '+' Iconst  */
@@ -56561,7 +56513,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[0].str));
 }
-#line 56565 "preproc.c"
+#line 56517 "preproc.c"
     break;
 
   case 2367: /* SignedIconst: '-' Iconst  */
@@ -56569,7 +56521,7 @@
  { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[0].str));
 }
-#line 56573 "preproc.c"
+#line 56525 "preproc.c"
     break;
 
   case 2368: /* RoleId: RoleSpec  */
@@ -56577,7 +56529,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56581 "preproc.c"
+#line 56533 "preproc.c"
     break;
 
   case 2369: /* RoleSpec: NonReservedWord  */
@@ -56585,7 +56537,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56589 "preproc.c"
+#line 56541 "preproc.c"
     break;
 
   case 2370: /* RoleSpec: CURRENT_ROLE  */
@@ -56593,7 +56545,7 @@
  { 
  (yyval.str) = mm_strdup("current_role");
 }
-#line 56597 "preproc.c"
+#line 56549 "preproc.c"
     break;
 
   case 2371: /* RoleSpec: CURRENT_USER  */
@@ -56601,7 +56553,7 @@
  { 
  (yyval.str) = mm_strdup("current_user");
 }
-#line 56605 "preproc.c"
+#line 56557 "preproc.c"
     break;
 
   case 2372: /* RoleSpec: SESSION_USER  */
@@ -56609,7 +56561,7 @@
  { 
  (yyval.str) = mm_strdup("session_user");
 }
-#line 56613 "preproc.c"
+#line 56565 "preproc.c"
     break;
 
   case 2373: /* role_list: RoleSpec  */
@@ -56617,7 +56569,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56621 "preproc.c"
+#line 56573 "preproc.c"
     break;
 
   case 2374: /* role_list: role_list ',' RoleSpec  */
@@ -56625,7 +56577,7 @@
  { 
  (yyval.str) = cat_str(3,(yyvsp[-2].str),mm_strdup(","),(yyvsp[0].str));
 }
-#line 56629 "preproc.c"
+#line 56581 "preproc.c"
     break;
 
   case 2375: /* NonReservedWord: ecpg_ident  */
@@ -56633,7 +56585,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56637 "preproc.c"
+#line 56589 "preproc.c"
     break;
 
   case 2376: /* NonReservedWord: unreserved_keyword  */
@@ -56641,7 +56593,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56645 "preproc.c"
+#line 56597 "preproc.c"
     break;
 
   case 2377: /* NonReservedWord: col_name_keyword  */
@@ -56649,7 +56601,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56653 "preproc.c"
+#line 56605 "preproc.c"
     break;
 
   case 2378: /* NonReservedWord: type_func_name_keyword  */
@@ -56657,7 +56609,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56661 "preproc.c"
+#line 56613 "preproc.c"
     break;
 
   case 2379: /* BareColLabel: ecpg_ident  */
@@ -56665,7 +56617,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56669 "preproc.c"
+#line 56621 "preproc.c"
     break;
 
   case 2380: /* BareColLabel: bare_label_keyword  */
@@ -56673,7 +56625,7 @@
  { 
  (yyval.str) = (yyvsp[0].str);
 }
-#line 56677 "preproc.c"
+#line 56629 "preproc.c"
     break;
 
   case 2381: /* unreserved_keyword: ABORT_P  */
@@ -56681,7 +56633,7 @@
  { 
  (yyval.str) = mm_strdup("abort");
 }
-#line 56685 "preproc.c"
+#line 56637 "preproc.c"
     break;
 
   case 2382: /* unreserved_keyword: ABSENT  */
@@ -56689,7 +56641,7 @@
  { 
  (yyval.str) = mm_strdup("absent");
 }
-#line 56693 "preproc.c"
+#line 56645 "preproc.c"
     break;
 
   case 2383: /* unreserved_keyword: ABSOLUTE_P  */
@@ -56697,7 +56649,7 @@
  { 
  (yyval.str) = mm_strdup("absolute");
 }
-#line 56701 "preproc.c"
+#line 56653 "preproc.c"
     break;
 
   case 2384: /* unreserved_keyword: ACCESS  */
@@ -56705,7 +56657,7 @@
  { 
  (yyval.str) = mm_strdup("access");
 }
-#line 56709 "preproc.c"
+#line 56661 "preproc.c"
     break;
 
   case 2385: /* unreserved_keyword: ACTION  */
@@ -56713,7 +56665,7 @@
  { 
  (yyval.str) = mm_strdup("action");
 }
-#line 56717 "preproc.c"
+#line 56669 "preproc.c"
     break;
 
   case 2386: /* unreserved_keyword: ADD_P  */
@@ -56721,7 +56673,7 @@
  { 
  (yyval.str) = mm_strdup("add");
 }
-#line 56725 "preproc.c"
+#line 56677 "preproc.c"
     break;
 
   case 2387: /* unreserved_keyword: ADMIN  */
@@ -56729,7 +56681,7 @@
  { 
  (yyval.str) = mm_strdup("admin");
 }
-#line 56733 "preproc.c"
+#line 56685 "preproc.c"
     break;
 
   case 2388: /* unreserved_keyword: AFTER  */
@@ -56737,7 +56689,7 @@
  { 
  (yyval.str) = mm_strdup("after");
 }
-#line 56741 "preproc.c"
+#line 56693 "preproc.c"
     break;
 
   case 2389: /* unreserved_keyword: AGGREGATE  */
@@ -56745,7 +56697,7 @@
  { 
  (yyval.str) = mm_strdup("aggregate");
 }
-#line 56749 "preproc.c"
+#line 56701 "preproc.c"
     break;
 
   case 2390: /* unreserved_keyword: ALSO  */
@@ -56753,7 +56705,7 @@
  { 
  (yyval.str) = mm_strdup("also");
 }
-#line 56757 "preproc.c"
+#line 56709 "preproc.c"
     break;
 
   case 2391: /* unreserved_keyword: ALTER  */
@@ -56761,7 +56713,7 @@
  { 
  (yyval.str) = mm_strdup("alter");
 }
-#line 56765 "preproc.c"
+#line 56717 "preproc.c"
     break;
 
   case 2392: /* unreserved_keyword: ALWAYS  */
@@ -56769,7 +56721,7 @@
  { 
  (yyval.str) = mm_strdup("always");
 }
-#line 56773 "preproc.c"
+#line 56725 "preproc.c"
     break;
 
   case 2393: /* unreserved_keyword: ASENSITIVE  */
@@ -56777,7 +56729,7 @@
  { 
  (yyval.str) = mm_strdup("asensitive");
 }
-#line 56781 "preproc.c"
+#line 56733 "preproc.c"
     break;
 
   case 2394: /* unreserved_keyword: ASSERTION  */
@@ -56785,7 +56737,7 @@
  { 
  (yyval.str) = mm_strdup("assertion");
 }
-#line 56789 "preproc.c"
+#line 56741 "preproc.c"
     break;
 
   case 2395: /* unreserved_keyword: ASSIGNMENT  */
@@ -56793,7 +56745,7 @@
  { 
  (yyval.str) = mm_strdup("assignment");
 }
-#line 56797 "preproc.c"
+#line 56749 "preproc.c"
     break;
 
   case 2396: /* unreserved_keyword: AT  */
@@ -56801,7 +56753,7 @@
  { 
  (yyval.str) = mm_strdup("at");
 }
-#line 56805 "preproc.c"
+#line 56757 "preproc.c"
     break;
 
   case 2397: /* unreserved_keyword: ATOMIC  */
@@ -56809,7 +56761,7 @@
  { 
  (yyval.str) = mm_strdup("atomic");
 }
-#line 56813 "preproc.c"
+#line 56765 "preproc.c"
     break;
 
   case 2398: /* unreserved_keyword: ATTACH  */
@@ -56817,7 +56769,7 @@
  { 
  (yyval.str) = mm_strdup("attach");
 }
-#line 56821 "preproc.c"
+#line 56773 "preproc.c"
     break;
 
   case 2399: /* unreserved_keyword: ATTRIBUTE  */
@@ -56825,7 +56777,7 @@
  { 
  (yyval.str) = mm_strdup("attribute");
 }
-#line 56829 "preproc.c"
+#line 56781 "preproc.c"
     break;
 
   case 2400: /* unreserved_keyword: BACKWARD  */
@@ -56833,7 +56785,7 @@
  { 
  (yyval.str) = mm_strdup("backward");
 }
-#line 56837 "preproc.c"
+#line 56789 "preproc.c"
     break;
 
   case 2401: /* unreserved_keyword: BEFORE  */
@@ -56841,7 +56793,7 @@
  { 
  (yyval.str) = mm_strdup("before");
 }
-#line 56845 "preproc.c"
+#line 56797 "preproc.c"
     break;
 
   case 2402: /* unreserved_keyword: BEGIN_P  */
@@ -56849,7 +56801,7 @@
  { 
  (yyval.str) = mm_strdup("begin");
 }
-#line 56853 "preproc.c"
+#line 56805 "preproc.c"
     break;
 
   case 2403: /* unreserved_keyword: BREADTH  */
@@ -56857,7 +56809,7 @@
  { 
  (yyval.str) = mm_strdup("breadth");
 }
-#line 56861 "preproc.c"
+#line 56813 "preproc.c"
     break;
 
   case 2404: /* unreserved_keyword: BY  */
@@ -56865,7 +56817,7 @@
  { 
  (yyval.str) = mm_strdup("by");
 }
-#line 56869 "preproc.c"
+#line 56821 "preproc.c"
     break;
 
   case 2405: /* unreserved_keyword: CACHE  */
@@ -56873,7 +56825,7 @@
  { 
  (yyval.str) = mm_strdup("cache");
 }
-#line 56877 "preproc.c"
+#line 56829 "preproc.c"
     break;
 
   case 2406: /* unreserved_keyword: CALL  */
@@ -56881,7 +56833,7 @@
  { 
  (yyval.str) = mm_strdup("call");
 }
-#line 56885 "preproc.c"
+#line 56837 "preproc.c"
     break;
 
   case 2407: /* unreserved_keyword: CALLED  */
@@ -56889,7 +56841,7 @@
  { 
  (yyval.str) = mm_strdup("called");
 }
-#line 56893 "preproc.c"
+#line 56845 "preproc.c"
     break;
 
   case 2408: /* unreserved_keyword: CASCADE  */
@@ -56897,7 +56849,7 @@
  { 
  (yyval.str) = mm_strdup("cascade");
 }
-#line 56901 "preproc.c"
+#line 56853 "preproc.c"
     break;
 
   case 2409: /* unreserved_keyword: CASCADED  */
@@ -56905,7 +56857,7 @@
  { 
  (yyval.str) = mm_strdup("cascaded");
 }
-#line 56909 "preproc.c"
+#line 56861 "preproc.c"
     break;
 
   case 2410: /* unreserved_keyword: CATALOG_P  */
@@ -56913,7 +56865,7 @@
  { 
  (yyval.str) = mm_strdup("catalog");
 }
-#line 56917 "preproc.c"
+#line 56869 "preproc.c"
     break;
 
   case 2411: /* unreserved_keyword: CHAIN  */
@@ -56921,7 +56873,7 @@
  { 
  (yyval.str) = mm_strdup("chain");
 }
-#line 56925 "preproc.c"
+#line 56877 "preproc.c"
     break;
 
   case 2412: /* unreserved_keyword: CHARACTERISTICS  */
@@ -56929,7 +56881,7 @@
  { 
  (yyval.str) = mm_strdup("characteristics");
 }
-#line 56933 "preproc.c"
+#line 56885 "preproc.c"
     break;
 
   case 2413: /* unreserved_keyword: CHECKPOINT  */
@@ -56937,7 +56889,7 @@
  { 
  (yyval.str) = mm_strdup("checkpoint");
 }
-#line 56941 "preproc.c"
+#line 56893 "preproc.c"
     break;
 
   case 2414: /* unreserved_keyword: CLASS  */
@@ -56945,7 +56897,7 @@
  { 
  (yyval.str) = mm_strdup("class");
 }
-#line 56949 "preproc.c"
+#line 56901 "preproc.c"
     break;
 
   case 2415: /* unreserved_keyword: CLOSE  */
@@ -56953,7 +56905,7 @@
  { 
  (yyval.str) = mm_strdup("close");
 }
-#line 56957 "preproc.c"
+#line 56909 "preproc.c"
     break;
 
   case 2416: /* unreserved_keyword: CLUSTER  */
@@ -56961,7 +56913,7 @@
  { 
  (yyval.str) = mm_strdup("cluster");
 }
-#line 56965 "preproc.c"
+#line 56917 "preproc.c"
     break;
 
   case 2417: /* unreserved_keyword: COLUMNS  */
@@ -56969,7 +56921,7 @@
  { 
  (yyval.str) = mm_strdup("columns");
 }
-#line 56973 "preproc.c"
+#line 56925 "preproc.c"
     break;
 
   case 2418: /* unreserved_keyword: COMMENT  */
@@ -56977,7 +56929,7 @@
  { 
  (yyval.str) = mm_strdup("comment");
 }
-#line 56981 "preproc.c"
+#line 56933 "preproc.c"
     break;
 
   case 2419: /* unreserved_keyword: COMMENTS  */
@@ -56985,7 +56937,7 @@
  { 
  (yyval.str) = mm_strdup("comments");
 }
-#line 56989 "preproc.c"
+#line 56941 "preproc.c"
     break;
 
   case 2420: /* unreserved_keyword: COMMIT  */
@@ -56993,7 +56945,7 @@
  { 
  (yyval.str) = mm_strdup("commit");
 }
-#line 56997 "preproc.c"
+#line 56949 "preproc.c"
     break;
 
   case 2421: /* unreserved_keyword: COMMITTED  */
@@ -57001,7 +56953,7 @@
  { 
  (yyval.str) = mm_strdup("committed");
 }
-#line 57005 "preproc.c"
+#line 56957 "preproc.c"
     break;
 
   case 2422: /* unreserved_keyword: COMPRESSION  */
@@ -57009,7 +56961,7 @@
  { 
  (yyval.str) = mm_strdup("compression");
 }
-#line 57013 "preproc.c"
+#line 56965 "preproc.c"
     break;
 
   case 2423: /* unreserved_keyword: CONFIGURATION  */
@@ -57017,7 +56969,7 @@
  { 
  (yyval.str) = mm_strdup("configuration");
 }
-#line 57021 "preproc.c"
+#line 56973 "preproc.c"
     break;
 
   case 2424: /* unreserved_keyword: CONFLICT  */
@@ -57025,7 +56977,7 @@
  { 
  (yyval.str) = mm_strdup("conflict");
 }
-#line 57029 "preproc.c"
+#line 56981 "preproc.c"
     break;
 
   case 2425: /* unreserved_keyword: CONSTRAINTS  */
@@ -57033,7 +56985,7 @@
  { 
  (yyval.str) = mm_strdup("constraints");
 }
-#line 57037 "preproc.c"
+#line 56989 "preproc.c"
     break;
 
   case 2426: /* unreserved_keyword: CONTENT_P  */
@@ -57041,7 +56993,7 @@
  { 
  (yyval.str) = mm_strdup("content");
 }
-#line 57045 "preproc.c"
+#line 56997 "preproc.c"
     break;
 
   case 2427: /* unreserved_keyword: CONTINUE_P  */
@@ -57049,7 +57001,7 @@
  { 
  (yyval.str) = mm_strdup("continue");
 }
-#line 57053 "preproc.c"
+#line 57005 "preproc.c"
     break;
 
   case 2428: /* unreserved_keyword: CONVERSION_P  */
@@ -57057,7 +57009,7 @@
  { 
  (yyval.str) = mm_strdup("conversion");
 }
-#line 57061 "preproc.c"
+#line 57013 "preproc.c"
     break;
 
   case 2429: /* unreserved_keyword: COPY  */
@@ -57065,7 +57017,7 @@
  { 
  (yyval.str) = mm_strdup("copy");
 }
-#line 57069 "preproc.c"
+#line 57021 "preproc.c"
     break;
 
   case 2430: /* unreserved_keyword: COST  */
@@ -57073,7 +57025,7 @@
  { 
  (yyval.str) = mm_strdup("cost");
 }
-#line 57077 "preproc.c"
+#line 57029 "preproc.c"
     break;
 
   case 2431: /* unreserved_keyword: CSV  */
@@ -57081,7 +57033,7 @@
  { 
  (yyval.str) = mm_strdup("csv");
 }
-#line 57085 "preproc.c"
+#line 57037 "preproc.c"
     break;
 
   case 2432: /* unreserved_keyword: CUBE  */
@@ -57089,7 +57041,7 @@
  { 
  (yyval.str) = mm_strdup("cube");
 }
-#line 57093 "preproc.c"
+#line 57045 "preproc.c"
     break;
 
   case 2433: /* unreserved_keyword: CURSOR  */
@@ -57097,7 +57049,7 @@
  { 
  (yyval.str) = mm_strdup("cursor");
 }
-#line 57101 "preproc.c"
+#line 57053 "preproc.c"
     break;
 
   case 2434: /* unreserved_keyword: CYCLE  */
@@ -57105,7 +57057,7 @@
  { 
  (yyval.str) = mm_strdup("cycle");
 }
-#line 57109 "preproc.c"
+#line 57061 "preproc.c"
     break;
 
   case 2435: /* unreserved_keyword: DATA_P  */
@@ -57113,7 +57065,7 @@
  { 
  (yyval.str) = mm_strdup("data");
 }
-#line 57117 "preproc.c"
+#line 57069 "preproc.c"
     break;
 
   case 2436: /* unreserved_keyword: DATABASE  */
@@ -57121,7 +57073,7 @@
  { 
  (yyval.str) = mm_strdup("database");
 }
-#line 57125 "preproc.c"
+#line 57077 "preproc.c"
     break;
 
   case 2437: /* unreserved_keyword: DEALLOCATE  */
@@ -57129,7 +57081,7 @@
  { 
  (yyval.str) = mm_strdup("deallocate");
 }
-#line 57133 "preproc.c"
+#line 57085 "preproc.c"
     break;
 
   case 2438: /* unreserved_keyword: DECLARE  */
@@ -57137,7 +57089,7 @@
  { 
  (yyval.str) = mm_strdup("declare");
 }
-#line 57141 "preproc.c"
+#line 57093 "preproc.c"
     break;
 
   case 2439: /* unreserved_keyword: DEFAULTS  */
@@ -57145,7 +57097,7 @@
  { 
  (yyval.str) = mm_strdup("defaults");
 }
-#line 57149 "preproc.c"
+#line 57101 "preproc.c"
     break;
 
   case 2440: /* unreserved_keyword: DEFERRED  */
@@ -57153,7 +57105,7 @@
  { 
  (yyval.str) = mm_strdup("deferred");
 }
-#line 57157 "preproc.c"
+#line 57109 "preproc.c"
     break;
 
   case 2441: /* unreserved_keyword: DEFINER  */
@@ -57161,7 +57113,7 @@
  { 
  (yyval.str) = mm_strdup("definer");
 }
-#line 57165 "preproc.c"
+#line 57117 "preproc.c"
     break;
 
   case 2442: /* unreserved_keyword: DELETE_P  */
@@ -57169,7 +57121,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 57173 "preproc.c"
+#line 57125 "preproc.c"
     break;
 
   case 2443: /* unreserved_keyword: DELIMITER  */
@@ -57177,7 +57129,7 @@
  { 
  (yyval.str) = mm_strdup("delimiter");
 }
-#line 57181 "preproc.c"
+#line 57133 "preproc.c"
     break;
 
   case 2444: /* unreserved_keyword: DELIMITERS  */
@@ -57185,7 +57137,7 @@
  { 
  (yyval.str) = mm_strdup("delimiters");
 }
-#line 57189 "preproc.c"
+#line 57141 "preproc.c"
     break;
 
   case 2445: /* unreserved_keyword: DEPENDS  */
@@ -57193,7 +57145,7 @@
  { 
  (yyval.str) = mm_strdup("depends");
 }
-#line 57197 "preproc.c"
+#line 57149 "preproc.c"
     break;
 
   case 2446: /* unreserved_keyword: DEPTH  */
@@ -57201,7 +57153,7 @@
  { 
  (yyval.str) = mm_strdup("depth");
 }
-#line 57205 "preproc.c"
+#line 57157 "preproc.c"
     break;
 
   case 2447: /* unreserved_keyword: DETACH  */
@@ -57209,7 +57161,7 @@
  { 
  (yyval.str) = mm_strdup("detach");
 }
-#line 57213 "preproc.c"
+#line 57165 "preproc.c"
     break;
 
   case 2448: /* unreserved_keyword: DICTIONARY  */
@@ -57217,7 +57169,7 @@
  { 
  (yyval.str) = mm_strdup("dictionary");
 }
-#line 57221 "preproc.c"
+#line 57173 "preproc.c"
     break;
 
   case 2449: /* unreserved_keyword: DISABLE_P  */
@@ -57225,7 +57177,7 @@
  { 
  (yyval.str) = mm_strdup("disable");
 }
-#line 57229 "preproc.c"
+#line 57181 "preproc.c"
     break;
 
   case 2450: /* unreserved_keyword: DISCARD  */
@@ -57233,7 +57185,7 @@
  { 
  (yyval.str) = mm_strdup("discard");
 }
-#line 57237 "preproc.c"
+#line 57189 "preproc.c"
     break;
 
   case 2451: /* unreserved_keyword: DOCUMENT_P  */
@@ -57241,7 +57193,7 @@
  { 
  (yyval.str) = mm_strdup("document");
 }
-#line 57245 "preproc.c"
+#line 57197 "preproc.c"
     break;
 
   case 2452: /* unreserved_keyword: DOMAIN_P  */
@@ -57249,7 +57201,7 @@
  { 
  (yyval.str) = mm_strdup("domain");
 }
-#line 57253 "preproc.c"
+#line 57205 "preproc.c"
     break;
 
   case 2453: /* unreserved_keyword: DOUBLE_P  */
@@ -57257,7 +57209,7 @@
  { 
  (yyval.str) = mm_strdup("double");
 }
-#line 57261 "preproc.c"
+#line 57213 "preproc.c"
     break;
 
   case 2454: /* unreserved_keyword: DROP  */
@@ -57265,7 +57217,7 @@
  { 
  (yyval.str) = mm_strdup("drop");
 }
-#line 57269 "preproc.c"
+#line 57221 "preproc.c"
     break;
 
   case 2455: /* unreserved_keyword: EACH  */
@@ -57273,7 +57225,7 @@
  { 
  (yyval.str) = mm_strdup("each");
 }
-#line 57277 "preproc.c"
+#line 57229 "preproc.c"
     break;
 
   case 2456: /* unreserved_keyword: ENABLE_P  */
@@ -57281,7 +57233,7 @@
  { 
  (yyval.str) = mm_strdup("enable");
 }
-#line 57285 "preproc.c"
+#line 57237 "preproc.c"
     break;
 
   case 2457: /* unreserved_keyword: ENCODING  */
@@ -57289,7 +57241,7 @@
  { 
  (yyval.str) = mm_strdup("encoding");
 }
-#line 57293 "preproc.c"
+#line 57245 "preproc.c"
     break;
 
   case 2458: /* unreserved_keyword: ENCRYPTED  */
@@ -57297,7 +57249,7 @@
  { 
  (yyval.str) = mm_strdup("encrypted");
 }
-#line 57301 "preproc.c"
+#line 57253 "preproc.c"
     break;
 
   case 2459: /* unreserved_keyword: ENUM_P  */
@@ -57305,7 +57257,7 @@
  { 
  (yyval.str) = mm_strdup("enum");
 }
-#line 57309 "preproc.c"
+#line 57261 "preproc.c"
     break;
 
   case 2460: /* unreserved_keyword: ESCAPE  */
@@ -57313,7 +57265,7 @@
  { 
  (yyval.str) = mm_strdup("escape");
 }
-#line 57317 "preproc.c"
+#line 57269 "preproc.c"
     break;
 
   case 2461: /* unreserved_keyword: EVENT  */
@@ -57321,7 +57273,7 @@
  { 
  (yyval.str) = mm_strdup("event");
 }
-#line 57325 "preproc.c"
+#line 57277 "preproc.c"
     break;
 
   case 2462: /* unreserved_keyword: EXCLUDE  */
@@ -57329,7 +57281,7 @@
  { 
  (yyval.str) = mm_strdup("exclude");
 }
-#line 57333 "preproc.c"
+#line 57285 "preproc.c"
     break;
 
   case 2463: /* unreserved_keyword: EXCLUDING  */
@@ -57337,7 +57289,7 @@
  { 
  (yyval.str) = mm_strdup("excluding");
 }
-#line 57341 "preproc.c"
+#line 57293 "preproc.c"
     break;
 
   case 2464: /* unreserved_keyword: EXCLUSIVE  */
@@ -57345,7 +57297,7 @@
  { 
  (yyval.str) = mm_strdup("exclusive");
 }
-#line 57349 "preproc.c"
+#line 57301 "preproc.c"
     break;
 
   case 2465: /* unreserved_keyword: EXECUTE  */
@@ -57353,7 +57305,7 @@
  { 
  (yyval.str) = mm_strdup("execute");
 }
-#line 57357 "preproc.c"
+#line 57309 "preproc.c"
     break;
 
   case 2466: /* unreserved_keyword: EXPLAIN  */
@@ -57361,7 +57313,7 @@
  { 
  (yyval.str) = mm_strdup("explain");
 }
-#line 57365 "preproc.c"
+#line 57317 "preproc.c"
     break;
 
   case 2467: /* unreserved_keyword: EXPRESSION  */
@@ -57369,7 +57321,7 @@
  { 
  (yyval.str) = mm_strdup("expression");
 }
-#line 57373 "preproc.c"
+#line 57325 "preproc.c"
     break;
 
   case 2468: /* unreserved_keyword: EXTENSION  */
@@ -57377,7 +57329,7 @@
  { 
  (yyval.str) = mm_strdup("extension");
 }
-#line 57381 "preproc.c"
+#line 57333 "preproc.c"
     break;
 
   case 2469: /* unreserved_keyword: EXTERNAL  */
@@ -57385,7 +57337,7 @@
  { 
  (yyval.str) = mm_strdup("external");
 }
-#line 57389 "preproc.c"
+#line 57341 "preproc.c"
     break;
 
   case 2470: /* unreserved_keyword: FAMILY  */
@@ -57393,7 +57345,7 @@
  { 
  (yyval.str) = mm_strdup("family");
 }
-#line 57397 "preproc.c"
+#line 57349 "preproc.c"
     break;
 
   case 2471: /* unreserved_keyword: FILTER  */
@@ -57401,7 +57353,7 @@
  { 
  (yyval.str) = mm_strdup("filter");
 }
-#line 57405 "preproc.c"
+#line 57357 "preproc.c"
     break;
 
   case 2472: /* unreserved_keyword: FINALIZE  */
@@ -57409,7 +57361,7 @@
  { 
  (yyval.str) = mm_strdup("finalize");
 }
-#line 57413 "preproc.c"
+#line 57365 "preproc.c"
     break;
 
   case 2473: /* unreserved_keyword: FIRST_P  */
@@ -57417,7 +57369,7 @@
  { 
  (yyval.str) = mm_strdup("first");
 }
-#line 57421 "preproc.c"
+#line 57373 "preproc.c"
     break;
 
   case 2474: /* unreserved_keyword: FOLLOWING  */
@@ -57425,7 +57377,7 @@
  { 
  (yyval.str) = mm_strdup("following");
 }
-#line 57429 "preproc.c"
+#line 57381 "preproc.c"
     break;
 
   case 2475: /* unreserved_keyword: FORCE  */
@@ -57433,7 +57385,7 @@
  { 
  (yyval.str) = mm_strdup("force");
 }
-#line 57437 "preproc.c"
+#line 57389 "preproc.c"
     break;
 
   case 2476: /* unreserved_keyword: FORMAT  */
@@ -57441,7 +57393,7 @@
  { 
  (yyval.str) = mm_strdup("format");
 }
-#line 57445 "preproc.c"
+#line 57397 "preproc.c"
     break;
 
   case 2477: /* unreserved_keyword: FORWARD  */
@@ -57449,7 +57401,7 @@
  { 
  (yyval.str) = mm_strdup("forward");
 }
-#line 57453 "preproc.c"
+#line 57405 "preproc.c"
     break;
 
   case 2478: /* unreserved_keyword: FUNCTION  */
@@ -57457,7 +57409,7 @@
  { 
  (yyval.str) = mm_strdup("function");
 }
-#line 57461 "preproc.c"
+#line 57413 "preproc.c"
     break;
 
   case 2479: /* unreserved_keyword: FUNCTIONS  */
@@ -57465,7 +57417,7 @@
  { 
  (yyval.str) = mm_strdup("functions");
 }
-#line 57469 "preproc.c"
+#line 57421 "preproc.c"
     break;
 
   case 2480: /* unreserved_keyword: GENERATED  */
@@ -57473,7 +57425,7 @@
  { 
  (yyval.str) = mm_strdup("generated");
 }
-#line 57477 "preproc.c"
+#line 57429 "preproc.c"
     break;
 
   case 2481: /* unreserved_keyword: GLOBAL  */
@@ -57481,7 +57433,7 @@
  { 
  (yyval.str) = mm_strdup("global");
 }
-#line 57485 "preproc.c"
+#line 57437 "preproc.c"
     break;
 
   case 2482: /* unreserved_keyword: GRANTED  */
@@ -57489,7 +57441,7 @@
  { 
  (yyval.str) = mm_strdup("granted");
 }
-#line 57493 "preproc.c"
+#line 57445 "preproc.c"
     break;
 
   case 2483: /* unreserved_keyword: GROUPS  */
@@ -57497,7 +57449,7 @@
  { 
  (yyval.str) = mm_strdup("groups");
 }
-#line 57501 "preproc.c"
+#line 57453 "preproc.c"
     break;
 
   case 2484: /* unreserved_keyword: HANDLER  */
@@ -57505,7 +57457,7 @@
  { 
  (yyval.str) = mm_strdup("handler");
 }
-#line 57509 "preproc.c"
+#line 57461 "preproc.c"
     break;
 
   case 2485: /* unreserved_keyword: HEADER_P  */
@@ -57513,7 +57465,7 @@
  { 
  (yyval.str) = mm_strdup("header");
 }
-#line 57517 "preproc.c"
+#line 57469 "preproc.c"
     break;
 
   case 2486: /* unreserved_keyword: HOLD  */
@@ -57521,7 +57473,7 @@
  { 
  (yyval.str) = mm_strdup("hold");
 }
-#line 57525 "preproc.c"
+#line 57477 "preproc.c"
     break;
 
   case 2487: /* unreserved_keyword: IDENTITY_P  */
@@ -57529,7 +57481,7 @@
  { 
  (yyval.str) = mm_strdup("identity");
 }
-#line 57533 "preproc.c"
+#line 57485 "preproc.c"
     break;
 
   case 2488: /* unreserved_keyword: IF_P  */
@@ -57537,7 +57489,7 @@
  { 
  (yyval.str) = mm_strdup("if");
 }
-#line 57541 "preproc.c"
+#line 57493 "preproc.c"
     break;
 
   case 2489: /* unreserved_keyword: IMMEDIATE  */
@@ -57545,7 +57497,7 @@
  { 
  (yyval.str) = mm_strdup("immediate");
 }
-#line 57549 "preproc.c"
+#line 57501 "preproc.c"
     break;
 
   case 2490: /* unreserved_keyword: IMMUTABLE  */
@@ -57553,7 +57505,7 @@
  { 
  (yyval.str) = mm_strdup("immutable");
 }
-#line 57557 "preproc.c"
+#line 57509 "preproc.c"
     break;
 
   case 2491: /* unreserved_keyword: IMPLICIT_P  */
@@ -57561,7 +57513,7 @@
  { 
  (yyval.str) = mm_strdup("implicit");
 }
-#line 57565 "preproc.c"
+#line 57517 "preproc.c"
     break;
 
   case 2492: /* unreserved_keyword: IMPORT_P  */
@@ -57569,7 +57521,7 @@
  { 
  (yyval.str) = mm_strdup("import");
 }
-#line 57573 "preproc.c"
+#line 57525 "preproc.c"
     break;
 
   case 2493: /* unreserved_keyword: INCLUDE  */
@@ -57577,7 +57529,7 @@
  { 
  (yyval.str) = mm_strdup("include");
 }
-#line 57581 "preproc.c"
+#line 57533 "preproc.c"
     break;
 
   case 2494: /* unreserved_keyword: INCLUDING  */
@@ -57585,7 +57537,7 @@
  { 
  (yyval.str) = mm_strdup("including");
 }
-#line 57589 "preproc.c"
+#line 57541 "preproc.c"
     break;
 
   case 2495: /* unreserved_keyword: INCREMENT  */
@@ -57593,7 +57545,7 @@
  { 
  (yyval.str) = mm_strdup("increment");
 }
-#line 57597 "preproc.c"
+#line 57549 "preproc.c"
     break;
 
   case 2496: /* unreserved_keyword: INDENT  */
@@ -57601,7 +57553,7 @@
  { 
  (yyval.str) = mm_strdup("indent");
 }
-#line 57605 "preproc.c"
+#line 57557 "preproc.c"
     break;
 
   case 2497: /* unreserved_keyword: INDEX  */
@@ -57609,7 +57561,7 @@
  { 
  (yyval.str) = mm_strdup("index");
 }
-#line 57613 "preproc.c"
+#line 57565 "preproc.c"
     break;
 
   case 2498: /* unreserved_keyword: INDEXES  */
@@ -57617,7 +57569,7 @@
  { 
  (yyval.str) = mm_strdup("indexes");
 }
-#line 57621 "preproc.c"
+#line 57573 "preproc.c"
     break;
 
   case 2499: /* unreserved_keyword: INHERIT  */
@@ -57625,7 +57577,7 @@
  { 
  (yyval.str) = mm_strdup("inherit");
 }
-#line 57629 "preproc.c"
+#line 57581 "preproc.c"
     break;
 
   case 2500: /* unreserved_keyword: INHERITS  */
@@ -57633,7 +57585,7 @@
  { 
  (yyval.str) = mm_strdup("inherits");
 }
-#line 57637 "preproc.c"
+#line 57589 "preproc.c"
     break;
 
   case 2501: /* unreserved_keyword: INLINE_P  */
@@ -57641,7 +57593,7 @@
  { 
  (yyval.str) = mm_strdup("inline");
 }
-#line 57645 "preproc.c"
+#line 57597 "preproc.c"
     break;
 
   case 2502: /* unreserved_keyword: INSENSITIVE  */
@@ -57649,7 +57601,7 @@
  { 
  (yyval.str) = mm_strdup("insensitive");
 }
-#line 57653 "preproc.c"
+#line 57605 "preproc.c"
     break;
 
   case 2503: /* unreserved_keyword: INSERT  */
@@ -57657,7 +57609,7 @@
  { 
  (yyval.str) = mm_strdup("insert");
 }
-#line 57661 "preproc.c"
+#line 57613 "preproc.c"
     break;
 
   case 2504: /* unreserved_keyword: INSTEAD  */
@@ -57665,7 +57617,7 @@
  { 
  (yyval.str) = mm_strdup("instead");
 }
-#line 57669 "preproc.c"
+#line 57621 "preproc.c"
     break;
 
   case 2505: /* unreserved_keyword: INVOKER  */
@@ -57673,7 +57625,7 @@
  { 
  (yyval.str) = mm_strdup("invoker");
 }
-#line 57677 "preproc.c"
+#line 57629 "preproc.c"
     break;
 
   case 2506: /* unreserved_keyword: ISOLATION  */
@@ -57681,7 +57633,7 @@
  { 
  (yyval.str) = mm_strdup("isolation");
 }
-#line 57685 "preproc.c"
+#line 57637 "preproc.c"
     break;
 
   case 2507: /* unreserved_keyword: JSON  */
@@ -57689,7 +57641,7 @@
  { 
  (yyval.str) = mm_strdup("json");
 }
-#line 57693 "preproc.c"
+#line 57645 "preproc.c"
     break;
 
   case 2508: /* unreserved_keyword: KEY  */
@@ -57697,7 +57649,7 @@
  { 
  (yyval.str) = mm_strdup("key");
 }
-#line 57701 "preproc.c"
+#line 57653 "preproc.c"
     break;
 
   case 2509: /* unreserved_keyword: KEYS  */
@@ -57705,7 +57657,7 @@
  { 
  (yyval.str) = mm_strdup("keys");
 }
-#line 57709 "preproc.c"
+#line 57661 "preproc.c"
     break;
 
   case 2510: /* unreserved_keyword: LABEL  */
@@ -57713,7 +57665,7 @@
  { 
  (yyval.str) = mm_strdup("label");
 }
-#line 57717 "preproc.c"
+#line 57669 "preproc.c"
     break;
 
   case 2511: /* unreserved_keyword: LANGUAGE  */
@@ -57721,7 +57673,7 @@
  { 
  (yyval.str) = mm_strdup("language");
 }
-#line 57725 "preproc.c"
+#line 57677 "preproc.c"
     break;
 
   case 2512: /* unreserved_keyword: LARGE_P  */
@@ -57729,7 +57681,7 @@
  { 
  (yyval.str) = mm_strdup("large");
 }
-#line 57733 "preproc.c"
+#line 57685 "preproc.c"
     break;
 
   case 2513: /* unreserved_keyword: LAST_P  */
@@ -57737,7 +57689,7 @@
  { 
  (yyval.str) = mm_strdup("last");
 }
-#line 57741 "preproc.c"
+#line 57693 "preproc.c"
     break;
 
   case 2514: /* unreserved_keyword: LEAKPROOF  */
@@ -57745,7 +57697,7 @@
  { 
  (yyval.str) = mm_strdup("leakproof");
 }
-#line 57749 "preproc.c"
+#line 57701 "preproc.c"
     break;
 
   case 2515: /* unreserved_keyword: LEVEL  */
@@ -57753,7 +57705,7 @@
  { 
  (yyval.str) = mm_strdup("level");
 }
-#line 57757 "preproc.c"
+#line 57709 "preproc.c"
     break;
 
   case 2516: /* unreserved_keyword: LISTEN  */
@@ -57761,7 +57713,7 @@
  { 
  (yyval.str) = mm_strdup("listen");
 }
-#line 57765 "preproc.c"
+#line 57717 "preproc.c"
     break;
 
   case 2517: /* unreserved_keyword: LOAD  */
@@ -57769,7 +57721,7 @@
  { 
  (yyval.str) = mm_strdup("load");
 }
-#line 57773 "preproc.c"
+#line 57725 "preproc.c"
     break;
 
   case 2518: /* unreserved_keyword: LOCAL  */
@@ -57777,7 +57729,7 @@
  { 
  (yyval.str) = mm_strdup("local");
 }
-#line 57781 "preproc.c"
+#line 57733 "preproc.c"
     break;
 
   case 2519: /* unreserved_keyword: LOCATION  */
@@ -57785,7 +57737,7 @@
  { 
  (yyval.str) = mm_strdup("location");
 }
-#line 57789 "preproc.c"
+#line 57741 "preproc.c"
     break;
 
   case 2520: /* unreserved_keyword: LOCK_P  */
@@ -57793,7 +57745,7 @@
  { 
  (yyval.str) = mm_strdup("lock");
 }
-#line 57797 "preproc.c"
+#line 57749 "preproc.c"
     break;
 
   case 2521: /* unreserved_keyword: LOCKED  */
@@ -57801,7 +57753,7 @@
  { 
  (yyval.str) = mm_strdup("locked");
 }
-#line 57805 "preproc.c"
+#line 57757 "preproc.c"
     break;
 
   case 2522: /* unreserved_keyword: LOGGED  */
@@ -57809,7 +57761,7 @@
  { 
  (yyval.str) = mm_strdup("logged");
 }
-#line 57813 "preproc.c"
+#line 57765 "preproc.c"
     break;
 
   case 2523: /* unreserved_keyword: MAPPING  */
@@ -57817,7 +57769,7 @@
  { 
  (yyval.str) = mm_strdup("mapping");
 }
-#line 57821 "preproc.c"
+#line 57773 "preproc.c"
     break;
 
   case 2524: /* unreserved_keyword: MATCH  */
@@ -57825,7 +57777,7 @@
  { 
  (yyval.str) = mm_strdup("match");
 }
-#line 57829 "preproc.c"
+#line 57781 "preproc.c"
     break;
 
   case 2525: /* unreserved_keyword: MATCHED  */
@@ -57833,7 +57785,7 @@
  { 
  (yyval.str) = mm_strdup("matched");
 }
-#line 57837 "preproc.c"
+#line 57789 "preproc.c"
     break;
 
   case 2526: /* unreserved_keyword: MATERIALIZED  */
@@ -57841,7 +57793,7 @@
  { 
  (yyval.str) = mm_strdup("materialized");
 }
-#line 57845 "preproc.c"
+#line 57797 "preproc.c"
     break;
 
   case 2527: /* unreserved_keyword: MAXVALUE  */
@@ -57849,7 +57801,7 @@
  { 
  (yyval.str) = mm_strdup("maxvalue");
 }
-#line 57853 "preproc.c"
+#line 57805 "preproc.c"
     break;
 
   case 2528: /* unreserved_keyword: MERGE  */
@@ -57857,7 +57809,7 @@
  { 
  (yyval.str) = mm_strdup("merge");
 }
-#line 57861 "preproc.c"
+#line 57813 "preproc.c"
     break;
 
   case 2529: /* unreserved_keyword: METHOD  */
@@ -57865,7 +57817,7 @@
  { 
  (yyval.str) = mm_strdup("method");
 }
-#line 57869 "preproc.c"
+#line 57821 "preproc.c"
     break;
 
   case 2530: /* unreserved_keyword: MINVALUE  */
@@ -57873,7 +57825,7 @@
  { 
  (yyval.str) = mm_strdup("minvalue");
 }
-#line 57877 "preproc.c"
+#line 57829 "preproc.c"
     break;
 
   case 2531: /* unreserved_keyword: MODE  */
@@ -57881,7 +57833,7 @@
  { 
  (yyval.str) = mm_strdup("mode");
 }
-#line 57885 "preproc.c"
+#line 57837 "preproc.c"
     break;
 
   case 2532: /* unreserved_keyword: MOVE  */
@@ -57889,7 +57841,7 @@
  { 
  (yyval.str) = mm_strdup("move");
 }
-#line 57893 "preproc.c"
+#line 57845 "preproc.c"
     break;
 
   case 2533: /* unreserved_keyword: NAME_P  */
@@ -57897,7 +57849,7 @@
  { 
  (yyval.str) = mm_strdup("name");
 }
-#line 57901 "preproc.c"
+#line 57853 "preproc.c"
     break;
 
   case 2534: /* unreserved_keyword: NAMES  */
@@ -57905,7 +57857,7 @@
  { 
  (yyval.str) = mm_strdup("names");
 }
-#line 57909 "preproc.c"
+#line 57861 "preproc.c"
     break;
 
   case 2535: /* unreserved_keyword: NEW  */
@@ -57913,7 +57865,7 @@
  { 
  (yyval.str) = mm_strdup("new");
 }
-#line 57917 "preproc.c"
+#line 57869 "preproc.c"
     break;
 
   case 2536: /* unreserved_keyword: NEXT  */
@@ -57921,7 +57873,7 @@
  { 
  (yyval.str) = mm_strdup("next");
 }
-#line 57925 "preproc.c"
+#line 57877 "preproc.c"
     break;
 
   case 2537: /* unreserved_keyword: NFC  */
@@ -57929,7 +57881,7 @@
  { 
  (yyval.str) = mm_strdup("nfc");
 }
-#line 57933 "preproc.c"
+#line 57885 "preproc.c"
     break;
 
   case 2538: /* unreserved_keyword: NFD  */
@@ -57937,7 +57889,7 @@
  { 
  (yyval.str) = mm_strdup("nfd");
 }
-#line 57941 "preproc.c"
+#line 57893 "preproc.c"
     break;
 
   case 2539: /* unreserved_keyword: NFKC  */
@@ -57945,7 +57897,7 @@
  { 
  (yyval.str) = mm_strdup("nfkc");
 }
-#line 57949 "preproc.c"
+#line 57901 "preproc.c"
     break;
 
   case 2540: /* unreserved_keyword: NFKD  */
@@ -57953,7 +57905,7 @@
  { 
  (yyval.str) = mm_strdup("nfkd");
 }
-#line 57957 "preproc.c"
+#line 57909 "preproc.c"
     break;
 
   case 2541: /* unreserved_keyword: NO  */
@@ -57961,7 +57913,7 @@
  { 
  (yyval.str) = mm_strdup("no");
 }
-#line 57965 "preproc.c"
+#line 57917 "preproc.c"
     break;
 
   case 2542: /* unreserved_keyword: NORMALIZED  */
@@ -57969,7 +57921,7 @@
  { 
  (yyval.str) = mm_strdup("normalized");
 }
-#line 57973 "preproc.c"
+#line 57925 "preproc.c"
     break;
 
   case 2543: /* unreserved_keyword: NOTHING  */
@@ -57977,7 +57929,7 @@
  { 
  (yyval.str) = mm_strdup("nothing");
 }
-#line 57981 "preproc.c"
+#line 57933 "preproc.c"
     break;
 
   case 2544: /* unreserved_keyword: NOTIFY  */
@@ -57985,7 +57937,7 @@
  { 
  (yyval.str) = mm_strdup("notify");
 }
-#line 57989 "preproc.c"
+#line 57941 "preproc.c"
     break;
 
   case 2545: /* unreserved_keyword: NOWAIT  */
@@ -57993,7 +57945,7 @@
  { 
  (yyval.str) = mm_strdup("nowait");
 }
-#line 57997 "preproc.c"
+#line 57949 "preproc.c"
     break;
 
   case 2546: /* unreserved_keyword: NULLS_P  */
@@ -58001,7 +57953,7 @@
  { 
  (yyval.str) = mm_strdup("nulls");
 }
-#line 58005 "preproc.c"
+#line 57957 "preproc.c"
     break;
 
   case 2547: /* unreserved_keyword: OBJECT_P  */
@@ -58009,7 +57961,7 @@
  { 
  (yyval.str) = mm_strdup("object");
 }
-#line 58013 "preproc.c"
+#line 57965 "preproc.c"
     break;
 
   case 2548: /* unreserved_keyword: OF  */
@@ -58017,7 +57969,7 @@
  { 
  (yyval.str) = mm_strdup("of");
 }
-#line 58021 "preproc.c"
+#line 57973 "preproc.c"
     break;
 
   case 2549: /* unreserved_keyword: OFF  */
@@ -58025,7 +57977,7 @@
  { 
  (yyval.str) = mm_strdup("off");
 }
-#line 58029 "preproc.c"
+#line 57981 "preproc.c"
     break;
 
   case 2550: /* unreserved_keyword: OIDS  */
@@ -58033,7 +57985,7 @@
  { 
  (yyval.str) = mm_strdup("oids");
 }
-#line 58037 "preproc.c"
+#line 57989 "preproc.c"
     break;
 
   case 2551: /* unreserved_keyword: OLD  */
@@ -58041,7 +57993,7 @@
  { 
  (yyval.str) = mm_strdup("old");
 }
-#line 58045 "preproc.c"
+#line 57997 "preproc.c"
     break;
 
   case 2552: /* unreserved_keyword: OPERATOR  */
@@ -58049,7 +58001,7 @@
  { 
  (yyval.str) = mm_strdup("operator");
 }
-#line 58053 "preproc.c"
+#line 58005 "preproc.c"
     break;
 
   case 2553: /* unreserved_keyword: OPTION  */
@@ -58057,7 +58009,7 @@
  { 
  (yyval.str) = mm_strdup("option");
 }
-#line 58061 "preproc.c"
+#line 58013 "preproc.c"
     break;
 
   case 2554: /* unreserved_keyword: OPTIONS  */
@@ -58065,7 +58017,7 @@
  { 
  (yyval.str) = mm_strdup("options");
 }
-#line 58069 "preproc.c"
+#line 58021 "preproc.c"
     break;
 
   case 2555: /* unreserved_keyword: ORDINALITY  */
@@ -58073,7 +58025,7 @@
  { 
  (yyval.str) = mm_strdup("ordinality");
 }
-#line 58077 "preproc.c"
+#line 58029 "preproc.c"
     break;
 
   case 2556: /* unreserved_keyword: OTHERS  */
@@ -58081,7 +58033,7 @@
  { 
  (yyval.str) = mm_strdup("others");
 }
-#line 58085 "preproc.c"
+#line 58037 "preproc.c"
     break;
 
   case 2557: /* unreserved_keyword: OVER  */
@@ -58089,7 +58041,7 @@
  { 
  (yyval.str) = mm_strdup("over");
 }
-#line 58093 "preproc.c"
+#line 58045 "preproc.c"
     break;
 
   case 2558: /* unreserved_keyword: OVERRIDING  */
@@ -58097,7 +58049,7 @@
  { 
  (yyval.str) = mm_strdup("overriding");
 }
-#line 58101 "preproc.c"
+#line 58053 "preproc.c"
     break;
 
   case 2559: /* unreserved_keyword: OWNED  */
@@ -58105,7 +58057,7 @@
  { 
  (yyval.str) = mm_strdup("owned");
 }
-#line 58109 "preproc.c"
+#line 58061 "preproc.c"
     break;
 
   case 2560: /* unreserved_keyword: OWNER  */
@@ -58113,7 +58065,7 @@
  { 
  (yyval.str) = mm_strdup("owner");
 }
-#line 58117 "preproc.c"
+#line 58069 "preproc.c"
     break;
 
   case 2561: /* unreserved_keyword: PARALLEL  */
@@ -58121,7 +58073,7 @@
  { 
  (yyval.str) = mm_strdup("parallel");
 }
-#line 58125 "preproc.c"
+#line 58077 "preproc.c"
     break;
 
   case 2562: /* unreserved_keyword: PARAMETER  */
@@ -58129,7 +58081,7 @@
  { 
  (yyval.str) = mm_strdup("parameter");
 }
-#line 58133 "preproc.c"
+#line 58085 "preproc.c"
     break;
 
   case 2563: /* unreserved_keyword: PARSER  */
@@ -58137,7 +58089,7 @@
  { 
  (yyval.str) = mm_strdup("parser");
 }
-#line 58141 "preproc.c"
+#line 58093 "preproc.c"
     break;
 
   case 2564: /* unreserved_keyword: PARTIAL  */
@@ -58145,7 +58097,7 @@
  { 
  (yyval.str) = mm_strdup("partial");
 }
-#line 58149 "preproc.c"
+#line 58101 "preproc.c"
     break;
 
   case 2565: /* unreserved_keyword: PARTITION  */
@@ -58153,7 +58105,7 @@
  { 
  (yyval.str) = mm_strdup("partition");
 }
-#line 58157 "preproc.c"
+#line 58109 "preproc.c"
     break;
 
   case 2566: /* unreserved_keyword: PASSING  */
@@ -58161,7 +58113,7 @@
  { 
  (yyval.str) = mm_strdup("passing");
 }
-#line 58165 "preproc.c"
+#line 58117 "preproc.c"
     break;
 
   case 2567: /* unreserved_keyword: PASSWORD  */
@@ -58169,7 +58121,7 @@
  { 
  (yyval.str) = mm_strdup("password");
 }
-#line 58173 "preproc.c"
+#line 58125 "preproc.c"
     break;
 
   case 2568: /* unreserved_keyword: PLANS  */
@@ -58177,7 +58129,7 @@
  { 
  (yyval.str) = mm_strdup("plans");
 }
-#line 58181 "preproc.c"
+#line 58133 "preproc.c"
     break;
 
   case 2569: /* unreserved_keyword: POLICY  */
@@ -58185,7 +58137,7 @@
  { 
  (yyval.str) = mm_strdup("policy");
 }
-#line 58189 "preproc.c"
+#line 58141 "preproc.c"
     break;
 
   case 2570: /* unreserved_keyword: PRECEDING  */
@@ -58193,7 +58145,7 @@
  { 
  (yyval.str) = mm_strdup("preceding");
 }
-#line 58197 "preproc.c"
+#line 58149 "preproc.c"
     break;
 
   case 2571: /* unreserved_keyword: PREPARE  */
@@ -58201,7 +58153,7 @@
  { 
  (yyval.str) = mm_strdup("prepare");
 }
-#line 58205 "preproc.c"
+#line 58157 "preproc.c"
     break;
 
   case 2572: /* unreserved_keyword: PREPARED  */
@@ -58209,7 +58161,7 @@
  { 
  (yyval.str) = mm_strdup("prepared");
 }
-#line 58213 "preproc.c"
+#line 58165 "preproc.c"
     break;
 
   case 2573: /* unreserved_keyword: PRESERVE  */
@@ -58217,7 +58169,7 @@
  { 
  (yyval.str) = mm_strdup("preserve");
 }
-#line 58221 "preproc.c"
+#line 58173 "preproc.c"
     break;
 
   case 2574: /* unreserved_keyword: PRIOR  */
@@ -58225,7 +58177,7 @@
  { 
  (yyval.str) = mm_strdup("prior");
 }
-#line 58229 "preproc.c"
+#line 58181 "preproc.c"
     break;
 
   case 2575: /* unreserved_keyword: PRIVILEGES  */
@@ -58233,7 +58185,7 @@
  { 
  (yyval.str) = mm_strdup("privileges");
 }
-#line 58237 "preproc.c"
+#line 58189 "preproc.c"
     break;
 
   case 2576: /* unreserved_keyword: PROCEDURAL  */
@@ -58241,7 +58193,7 @@
  { 
  (yyval.str) = mm_strdup("procedural");
 }
-#line 58245 "preproc.c"
+#line 58197 "preproc.c"
     break;
 
   case 2577: /* unreserved_keyword: PROCEDURE  */
@@ -58249,7 +58201,7 @@
  { 
  (yyval.str) = mm_strdup("procedure");
 }
-#line 58253 "preproc.c"
+#line 58205 "preproc.c"
     break;
 
   case 2578: /* unreserved_keyword: PROCEDURES  */
@@ -58257,7 +58209,7 @@
  { 
  (yyval.str) = mm_strdup("procedures");
 }
-#line 58261 "preproc.c"
+#line 58213 "preproc.c"
     break;
 
   case 2579: /* unreserved_keyword: PROGRAM  */
@@ -58265,7 +58217,7 @@
  { 
  (yyval.str) = mm_strdup("program");
 }
-#line 58269 "preproc.c"
+#line 58221 "preproc.c"
     break;
 
   case 2580: /* unreserved_keyword: PUBLICATION  */
@@ -58273,7 +58225,7 @@
  { 
  (yyval.str) = mm_strdup("publication");
 }
-#line 58277 "preproc.c"
+#line 58229 "preproc.c"
     break;
 
   case 2581: /* unreserved_keyword: QUOTE  */
@@ -58281,7 +58233,7 @@
  { 
  (yyval.str) = mm_strdup("quote");
 }
-#line 58285 "preproc.c"
+#line 58237 "preproc.c"
     break;
 
   case 2582: /* unreserved_keyword: RANGE  */
@@ -58289,7 +58241,7 @@
  { 
  (yyval.str) = mm_strdup("range");
 }
-#line 58293 "preproc.c"
+#line 58245 "preproc.c"
     break;
 
   case 2583: /* unreserved_keyword: READ  */
@@ -58297,7 +58249,7 @@
  { 
  (yyval.str) = mm_strdup("read");
 }
-#line 58301 "preproc.c"
+#line 58253 "preproc.c"
     break;
 
   case 2584: /* unreserved_keyword: REASSIGN  */
@@ -58305,7 +58257,7 @@
  { 
  (yyval.str) = mm_strdup("reassign");
 }
-#line 58309 "preproc.c"
+#line 58261 "preproc.c"
     break;
 
   case 2585: /* unreserved_keyword: RECHECK  */
@@ -58313,7 +58265,7 @@
  { 
  (yyval.str) = mm_strdup("recheck");
 }
-#line 58317 "preproc.c"
+#line 58269 "preproc.c"
     break;
 
   case 2586: /* unreserved_keyword: RECURSIVE  */
@@ -58321,7 +58273,7 @@
  { 
  (yyval.str) = mm_strdup("recursive");
 }
-#line 58325 "preproc.c"
+#line 58277 "preproc.c"
     break;
 
   case 2587: /* unreserved_keyword: REF_P  */
@@ -58329,7 +58281,7 @@
  { 
  (yyval.str) = mm_strdup("ref");
 }
-#line 58333 "preproc.c"
+#line 58285 "preproc.c"
     break;
 
   case 2588: /* unreserved_keyword: REFERENCING  */
@@ -58337,7 +58289,7 @@
  { 
  (yyval.str) = mm_strdup("referencing");
 }
-#line 58341 "preproc.c"
+#line 58293 "preproc.c"
     break;
 
   case 2589: /* unreserved_keyword: REFRESH  */
@@ -58345,7 +58297,7 @@
  { 
  (yyval.str) = mm_strdup("refresh");
 }
-#line 58349 "preproc.c"
+#line 58301 "preproc.c"
     break;
 
   case 2590: /* unreserved_keyword: REINDEX  */
@@ -58353,7 +58305,7 @@
  { 
  (yyval.str) = mm_strdup("reindex");
 }
-#line 58357 "preproc.c"
+#line 58309 "preproc.c"
     break;
 
   case 2591: /* unreserved_keyword: RELATIVE_P  */
@@ -58361,7 +58313,7 @@
  { 
  (yyval.str) = mm_strdup("relative");
 }
-#line 58365 "preproc.c"
+#line 58317 "preproc.c"
     break;
 
   case 2592: /* unreserved_keyword: RELEASE  */
@@ -58369,7 +58321,7 @@
  { 
  (yyval.str) = mm_strdup("release");
 }
-#line 58373 "preproc.c"
+#line 58325 "preproc.c"
     break;
 
   case 2593: /* unreserved_keyword: RENAME  */
@@ -58377,7 +58329,7 @@
  { 
  (yyval.str) = mm_strdup("rename");
 }
-#line 58381 "preproc.c"
+#line 58333 "preproc.c"
     break;
 
   case 2594: /* unreserved_keyword: REPEATABLE  */
@@ -58385,7 +58337,7 @@
  { 
  (yyval.str) = mm_strdup("repeatable");
 }
-#line 58389 "preproc.c"
+#line 58341 "preproc.c"
     break;
 
   case 2595: /* unreserved_keyword: REPLACE  */
@@ -58393,7 +58345,7 @@
  { 
  (yyval.str) = mm_strdup("replace");
 }
-#line 58397 "preproc.c"
+#line 58349 "preproc.c"
     break;
 
   case 2596: /* unreserved_keyword: REPLICA  */
@@ -58401,7 +58353,7 @@
  { 
  (yyval.str) = mm_strdup("replica");
 }
-#line 58405 "preproc.c"
+#line 58357 "preproc.c"
     break;
 
   case 2597: /* unreserved_keyword: RESET  */
@@ -58409,7 +58361,7 @@
  { 
  (yyval.str) = mm_strdup("reset");
 }
-#line 58413 "preproc.c"
+#line 58365 "preproc.c"
     break;
 
   case 2598: /* unreserved_keyword: RESTART  */
@@ -58417,7 +58369,7 @@
  { 
  (yyval.str) = mm_strdup("restart");
 }
-#line 58421 "preproc.c"
+#line 58373 "preproc.c"
     break;
 
   case 2599: /* unreserved_keyword: RESTRICT  */
@@ -58425,7 +58377,7 @@
  { 
  (yyval.str) = mm_strdup("restrict");
 }
-#line 58429 "preproc.c"
+#line 58381 "preproc.c"
     break;
 
   case 2600: /* unreserved_keyword: RETURN  */
@@ -58433,7 +58385,7 @@
  { 
  (yyval.str) = mm_strdup("return");
 }
-#line 58437 "preproc.c"
+#line 58389 "preproc.c"
     break;
 
   case 2601: /* unreserved_keyword: RETURNS  */
@@ -58441,7 +58393,7 @@
  { 
  (yyval.str) = mm_strdup("returns");
 }
-#line 58445 "preproc.c"
+#line 58397 "preproc.c"
     break;
 
   case 2602: /* unreserved_keyword: REVOKE  */
@@ -58449,7 +58401,7 @@
  { 
  (yyval.str) = mm_strdup("revoke");
 }
-#line 58453 "preproc.c"
+#line 58405 "preproc.c"
     break;
 
   case 2603: /* unreserved_keyword: ROLE  */
@@ -58457,7 +58409,7 @@
  { 
  (yyval.str) = mm_strdup("role");
 }
-#line 58461 "preproc.c"
+#line 58413 "preproc.c"
     break;
 
   case 2604: /* unreserved_keyword: ROLLBACK  */
@@ -58465,7 +58417,7 @@
  { 
  (yyval.str) = mm_strdup("rollback");
 }
-#line 58469 "preproc.c"
+#line 58421 "preproc.c"
     break;
 
   case 2605: /* unreserved_keyword: ROLLUP  */
@@ -58473,7 +58425,7 @@
  { 
  (yyval.str) = mm_strdup("rollup");
 }
-#line 58477 "preproc.c"
+#line 58429 "preproc.c"
     break;
 
   case 2606: /* unreserved_keyword: ROUTINE  */
@@ -58481,7 +58433,7 @@
  { 
  (yyval.str) = mm_strdup("routine");
 }
-#line 58485 "preproc.c"
+#line 58437 "preproc.c"
     break;
 
   case 2607: /* unreserved_keyword: ROUTINES  */
@@ -58489,7 +58441,7 @@
  { 
  (yyval.str) = mm_strdup("routines");
 }
-#line 58493 "preproc.c"
+#line 58445 "preproc.c"
     break;
 
   case 2608: /* unreserved_keyword: ROWS  */
@@ -58497,7 +58449,7 @@
  { 
  (yyval.str) = mm_strdup("rows");
 }
-#line 58501 "preproc.c"
+#line 58453 "preproc.c"
     break;
 
   case 2609: /* unreserved_keyword: RULE  */
@@ -58505,7 +58457,7 @@
  { 
  (yyval.str) = mm_strdup("rule");
 }
-#line 58509 "preproc.c"
+#line 58461 "preproc.c"
     break;
 
   case 2610: /* unreserved_keyword: SAVEPOINT  */
@@ -58513,7 +58465,7 @@
  { 
  (yyval.str) = mm_strdup("savepoint");
 }
-#line 58517 "preproc.c"
+#line 58469 "preproc.c"
     break;
 
   case 2611: /* unreserved_keyword: SCALAR  */
@@ -58521,7 +58473,7 @@
  { 
  (yyval.str) = mm_strdup("scalar");
 }
-#line 58525 "preproc.c"
+#line 58477 "preproc.c"
     break;
 
   case 2612: /* unreserved_keyword: SCHEMA  */
@@ -58529,7 +58481,7 @@
  { 
  (yyval.str) = mm_strdup("schema");
 }
-#line 58533 "preproc.c"
+#line 58485 "preproc.c"
     break;
 
   case 2613: /* unreserved_keyword: SCHEMAS  */
@@ -58537,7 +58489,7 @@
  { 
  (yyval.str) = mm_strdup("schemas");
 }
-#line 58541 "preproc.c"
+#line 58493 "preproc.c"
     break;
 
   case 2614: /* unreserved_keyword: SCROLL  */
@@ -58545,7 +58497,7 @@
  { 
  (yyval.str) = mm_strdup("scroll");
 }
-#line 58549 "preproc.c"
+#line 58501 "preproc.c"
     break;
 
   case 2615: /* unreserved_keyword: SEARCH  */
@@ -58553,7 +58505,7 @@
  { 
  (yyval.str) = mm_strdup("search");
 }
-#line 58557 "preproc.c"
+#line 58509 "preproc.c"
     break;
 
   case 2616: /* unreserved_keyword: SECURITY  */
@@ -58561,7 +58513,7 @@
  { 
  (yyval.str) = mm_strdup("security");
 }
-#line 58565 "preproc.c"
+#line 58517 "preproc.c"
     break;
 
   case 2617: /* unreserved_keyword: SEQUENCE  */
@@ -58569,7 +58521,7 @@
  { 
  (yyval.str) = mm_strdup("sequence");
 }
-#line 58573 "preproc.c"
+#line 58525 "preproc.c"
     break;
 
   case 2618: /* unreserved_keyword: SEQUENCES  */
@@ -58577,7 +58529,7 @@
  { 
  (yyval.str) = mm_strdup("sequences");
 }
-#line 58581 "preproc.c"
+#line 58533 "preproc.c"
     break;
 
   case 2619: /* unreserved_keyword: SERIALIZABLE  */
@@ -58585,7 +58537,7 @@
  { 
  (yyval.str) = mm_strdup("serializable");
 }
-#line 58589 "preproc.c"
+#line 58541 "preproc.c"
     break;
 
   case 2620: /* unreserved_keyword: SERVER  */
@@ -58593,7 +58545,7 @@
  { 
  (yyval.str) = mm_strdup("server");
 }
-#line 58597 "preproc.c"
+#line 58549 "preproc.c"
     break;
 
   case 2621: /* unreserved_keyword: SESSION  */
@@ -58601,7 +58553,7 @@
  { 
  (yyval.str) = mm_strdup("session");
 }
-#line 58605 "preproc.c"
+#line 58557 "preproc.c"
     break;
 
   case 2622: /* unreserved_keyword: SET  */
@@ -58609,7 +58561,7 @@
  { 
  (yyval.str) = mm_strdup("set");
 }
-#line 58613 "preproc.c"
+#line 58565 "preproc.c"
     break;
 
   case 2623: /* unreserved_keyword: SETS  */
@@ -58617,7 +58569,7 @@
  { 
  (yyval.str) = mm_strdup("sets");
 }
-#line 58621 "preproc.c"
+#line 58573 "preproc.c"
     break;
 
   case 2624: /* unreserved_keyword: SHARE  */
@@ -58625,7 +58577,7 @@
  { 
  (yyval.str) = mm_strdup("share");
 }
-#line 58629 "preproc.c"
+#line 58581 "preproc.c"
     break;
 
   case 2625: /* unreserved_keyword: SHOW  */
@@ -58633,7 +58585,7 @@
  { 
  (yyval.str) = mm_strdup("show");
 }
-#line 58637 "preproc.c"
+#line 58589 "preproc.c"
     break;
 
   case 2626: /* unreserved_keyword: SIMPLE  */
@@ -58641,7 +58593,7 @@
  { 
  (yyval.str) = mm_strdup("simple");
 }
-#line 58645 "preproc.c"
+#line 58597 "preproc.c"
     break;
 
   case 2627: /* unreserved_keyword: SKIP  */
@@ -58649,7 +58601,7 @@
  { 
  (yyval.str) = mm_strdup("skip");
 }
-#line 58653 "preproc.c"
+#line 58605 "preproc.c"
     break;
 
   case 2628: /* unreserved_keyword: SNAPSHOT  */
@@ -58657,7 +58609,7 @@
  { 
  (yyval.str) = mm_strdup("snapshot");
 }
-#line 58661 "preproc.c"
+#line 58613 "preproc.c"
     break;
 
   case 2629: /* unreserved_keyword: SQL_P  */
@@ -58665,7 +58617,7 @@
  { 
  (yyval.str) = mm_strdup("sql");
 }
-#line 58669 "preproc.c"
+#line 58621 "preproc.c"
     break;
 
   case 2630: /* unreserved_keyword: STABLE  */
@@ -58673,7 +58625,7 @@
  { 
  (yyval.str) = mm_strdup("stable");
 }
-#line 58677 "preproc.c"
+#line 58629 "preproc.c"
     break;
 
   case 2631: /* unreserved_keyword: STANDALONE_P  */
@@ -58681,7 +58633,7 @@
  { 
  (yyval.str) = mm_strdup("standalone");
 }
-#line 58685 "preproc.c"
+#line 58637 "preproc.c"
     break;
 
   case 2632: /* unreserved_keyword: START  */
@@ -58689,7 +58641,7 @@
  { 
  (yyval.str) = mm_strdup("start");
 }
-#line 58693 "preproc.c"
+#line 58645 "preproc.c"
     break;
 
   case 2633: /* unreserved_keyword: STATEMENT  */
@@ -58697,7 +58649,7 @@
  { 
  (yyval.str) = mm_strdup("statement");
 }
-#line 58701 "preproc.c"
+#line 58653 "preproc.c"
     break;
 
   case 2634: /* unreserved_keyword: STATISTICS  */
@@ -58705,7 +58657,7 @@
  { 
  (yyval.str) = mm_strdup("statistics");
 }
-#line 58709 "preproc.c"
+#line 58661 "preproc.c"
     break;
 
   case 2635: /* unreserved_keyword: STDIN  */
@@ -58713,7 +58665,7 @@
  { 
  (yyval.str) = mm_strdup("stdin");
 }
-#line 58717 "preproc.c"
+#line 58669 "preproc.c"
     break;
 
   case 2636: /* unreserved_keyword: STDOUT  */
@@ -58721,7 +58673,7 @@
  { 
  (yyval.str) = mm_strdup("stdout");
 }
-#line 58725 "preproc.c"
+#line 58677 "preproc.c"
     break;
 
   case 2637: /* unreserved_keyword: STORAGE  */
@@ -58729,7 +58681,7 @@
  { 
  (yyval.str) = mm_strdup("storage");
 }
-#line 58733 "preproc.c"
+#line 58685 "preproc.c"
     break;
 
   case 2638: /* unreserved_keyword: STORED  */
@@ -58737,7 +58689,7 @@
  { 
  (yyval.str) = mm_strdup("stored");
 }
-#line 58741 "preproc.c"
+#line 58693 "preproc.c"
     break;
 
   case 2639: /* unreserved_keyword: STRICT_P  */
@@ -58745,7 +58697,7 @@
  { 
  (yyval.str) = mm_strdup("strict");
 }
-#line 58749 "preproc.c"
+#line 58701 "preproc.c"
     break;
 
   case 2640: /* unreserved_keyword: STRIP_P  */
@@ -58753,7 +58705,7 @@
  { 
  (yyval.str) = mm_strdup("strip");
 }
-#line 58757 "preproc.c"
+#line 58709 "preproc.c"
     break;
 
   case 2641: /* unreserved_keyword: SUBSCRIPTION  */
@@ -58761,7 +58713,7 @@
  { 
  (yyval.str) = mm_strdup("subscription");
 }
-#line 58765 "preproc.c"
+#line 58717 "preproc.c"
     break;
 
   case 2642: /* unreserved_keyword: SUPPORT  */
@@ -58769,7 +58721,7 @@
  { 
  (yyval.str) = mm_strdup("support");
 }
-#line 58773 "preproc.c"
+#line 58725 "preproc.c"
     break;
 
   case 2643: /* unreserved_keyword: SYSID  */
@@ -58777,7 +58729,7 @@
  { 
  (yyval.str) = mm_strdup("sysid");
 }
-#line 58781 "preproc.c"
+#line 58733 "preproc.c"
     break;
 
   case 2644: /* unreserved_keyword: SYSTEM_P  */
@@ -58785,7 +58737,7 @@
  { 
  (yyval.str) = mm_strdup("system");
 }
-#line 58789 "preproc.c"
+#line 58741 "preproc.c"
     break;
 
   case 2645: /* unreserved_keyword: TABLES  */
@@ -58793,7 +58745,7 @@
  { 
  (yyval.str) = mm_strdup("tables");
 }
-#line 58797 "preproc.c"
+#line 58749 "preproc.c"
     break;
 
   case 2646: /* unreserved_keyword: TABLESPACE  */
@@ -58801,7 +58753,7 @@
  { 
  (yyval.str) = mm_strdup("tablespace");
 }
-#line 58805 "preproc.c"
+#line 58757 "preproc.c"
     break;
 
   case 2647: /* unreserved_keyword: TEMP  */
@@ -58809,7 +58761,7 @@
  { 
  (yyval.str) = mm_strdup("temp");
 }
-#line 58813 "preproc.c"
+#line 58765 "preproc.c"
     break;
 
   case 2648: /* unreserved_keyword: TEMPLATE  */
@@ -58817,7 +58769,7 @@
  { 
  (yyval.str) = mm_strdup("template");
 }
-#line 58821 "preproc.c"
+#line 58773 "preproc.c"
     break;
 
   case 2649: /* unreserved_keyword: TEMPORARY  */
@@ -58825,7 +58777,7 @@
  { 
  (yyval.str) = mm_strdup("temporary");
 }
-#line 58829 "preproc.c"
+#line 58781 "preproc.c"
     break;
 
   case 2650: /* unreserved_keyword: TEXT_P  */
@@ -58833,7 +58785,7 @@
  { 
  (yyval.str) = mm_strdup("text");
 }
-#line 58837 "preproc.c"
+#line 58789 "preproc.c"
     break;
 
   case 2651: /* unreserved_keyword: TIES  */
@@ -58841,7 +58793,7 @@
  { 
  (yyval.str) = mm_strdup("ties");
 }
-#line 58845 "preproc.c"
+#line 58797 "preproc.c"
     break;
 
   case 2652: /* unreserved_keyword: TRANSACTION  */
@@ -58849,7 +58801,7 @@
  { 
  (yyval.str) = mm_strdup("transaction");
 }
-#line 58853 "preproc.c"
+#line 58805 "preproc.c"
     break;
 
   case 2653: /* unreserved_keyword: TRANSFORM  */
@@ -58857,7 +58809,7 @@
  { 
  (yyval.str) = mm_strdup("transform");
 }
-#line 58861 "preproc.c"
+#line 58813 "preproc.c"
     break;
 
   case 2654: /* unreserved_keyword: TRIGGER  */
@@ -58865,7 +58817,7 @@
  { 
  (yyval.str) = mm_strdup("trigger");
 }
-#line 58869 "preproc.c"
+#line 58821 "preproc.c"
     break;
 
   case 2655: /* unreserved_keyword: TRUNCATE  */
@@ -58873,7 +58825,7 @@
  { 
  (yyval.str) = mm_strdup("truncate");
 }
-#line 58877 "preproc.c"
+#line 58829 "preproc.c"
     break;
 
   case 2656: /* unreserved_keyword: TRUSTED  */
@@ -58881,7 +58833,7 @@
  { 
  (yyval.str) = mm_strdup("trusted");
 }
-#line 58885 "preproc.c"
+#line 58837 "preproc.c"
     break;
 
   case 2657: /* unreserved_keyword: TYPE_P  */
@@ -58889,7 +58841,7 @@
  { 
  (yyval.str) = mm_strdup("type");
 }
-#line 58893 "preproc.c"
+#line 58845 "preproc.c"
     break;
 
   case 2658: /* unreserved_keyword: TYPES_P  */
@@ -58897,7 +58849,7 @@
  { 
  (yyval.str) = mm_strdup("types");
 }
-#line 58901 "preproc.c"
+#line 58853 "preproc.c"
     break;
 
   case 2659: /* unreserved_keyword: UESCAPE  */
@@ -58905,7 +58857,7 @@
  { 
  (yyval.str) = mm_strdup("uescape");
 }
-#line 58909 "preproc.c"
+#line 58861 "preproc.c"
     break;
 
   case 2660: /* unreserved_keyword: UNBOUNDED  */
@@ -58913,7 +58865,7 @@
  { 
  (yyval.str) = mm_strdup("unbounded");
 }
-#line 58917 "preproc.c"
+#line 58869 "preproc.c"
     break;
 
   case 2661: /* unreserved_keyword: UNCOMMITTED  */
@@ -58921,7 +58873,7 @@
  { 
  (yyval.str) = mm_strdup("uncommitted");
 }
-#line 58925 "preproc.c"
+#line 58877 "preproc.c"
     break;
 
   case 2662: /* unreserved_keyword: UNENCRYPTED  */
@@ -58929,7 +58881,7 @@
  { 
  (yyval.str) = mm_strdup("unencrypted");
 }
-#line 58933 "preproc.c"
+#line 58885 "preproc.c"
     break;
 
   case 2663: /* unreserved_keyword: UNKNOWN  */
@@ -58937,7 +58889,7 @@
  { 
  (yyval.str) = mm_strdup("unknown");
 }
-#line 58941 "preproc.c"
+#line 58893 "preproc.c"
     break;
 
   case 2664: /* unreserved_keyword: UNLISTEN  */
@@ -58945,7 +58897,7 @@
  { 
  (yyval.str) = mm_strdup("unlisten");
 }
-#line 58949 "preproc.c"
+#line 58901 "preproc.c"
     break;
 
   case 2665: /* unreserved_keyword: UNLOGGED  */
@@ -58953,7 +58905,7 @@
  { 
  (yyval.str) = mm_strdup("unlogged");
 }
-#line 58957 "preproc.c"
+#line 58909 "preproc.c"
     break;
 
   case 2666: /* unreserved_keyword: UNTIL  */
@@ -58961,7 +58913,7 @@
  { 
  (yyval.str) = mm_strdup("until");
 }
-#line 58965 "preproc.c"
+#line 58917 "preproc.c"
     break;
 
   case 2667: /* unreserved_keyword: UPDATE  */
@@ -58969,7 +58921,7 @@
  { 
  (yyval.str) = mm_strdup("update");
 }
-#line 58973 "preproc.c"
+#line 58925 "preproc.c"
     break;
 
   case 2668: /* unreserved_keyword: VACUUM  */
@@ -58977,7 +58929,7 @@
  { 
  (yyval.str) = mm_strdup("vacuum");
 }
-#line 58981 "preproc.c"
+#line 58933 "preproc.c"
     break;
 
   case 2669: /* unreserved_keyword: VALID  */
@@ -58985,7 +58937,7 @@
  { 
  (yyval.str) = mm_strdup("valid");
 }
-#line 58989 "preproc.c"
+#line 58941 "preproc.c"
     break;
 
   case 2670: /* unreserved_keyword: VALIDATE  */
@@ -58993,7 +58945,7 @@
  { 
  (yyval.str) = mm_strdup("validate");
 }
-#line 58997 "preproc.c"
+#line 58949 "preproc.c"
     break;
 
   case 2671: /* unreserved_keyword: VALIDATOR  */
@@ -59001,7 +58953,7 @@
  { 
  (yyval.str) = mm_strdup("validator");
 }
-#line 59005 "preproc.c"
+#line 58957 "preproc.c"
     break;
 
   case 2672: /* unreserved_keyword: VALUE_P  */
@@ -59009,7 +58961,7 @@
  { 
  (yyval.str) = mm_strdup("value");
 }
-#line 59013 "preproc.c"
+#line 58965 "preproc.c"
     break;
 
   case 2673: /* unreserved_keyword: VARYING  */
@@ -59017,7 +58969,7 @@
  { 
  (yyval.str) = mm_strdup("varying");
 }
-#line 59021 "preproc.c"
+#line 58973 "preproc.c"
     break;
 
   case 2674: /* unreserved_keyword: VERSION_P  */
@@ -59025,7 +58977,7 @@
  { 
  (yyval.str) = mm_strdup("version");
 }
-#line 59029 "preproc.c"
+#line 58981 "preproc.c"
     break;
 
   case 2675: /* unreserved_keyword: VIEW  */
@@ -59033,7 +58985,7 @@
  { 
  (yyval.str) = mm_strdup("view");
 }
-#line 59037 "preproc.c"
+#line 58989 "preproc.c"
     break;
 
   case 2676: /* unreserved_keyword: VIEWS  */
@@ -59041,7 +58993,7 @@
  { 
  (yyval.str) = mm_strdup("views");
 }
-#line 59045 "preproc.c"
+#line 58997 "preproc.c"
     break;
 
   case 2677: /* unreserved_keyword: VOLATILE  */
@@ -59049,7 +59001,7 @@
  { 
  (yyval.str) = mm_strdup("volatile");
 }
-#line 59053 "preproc.c"
+#line 59005 "preproc.c"
     break;
 
   case 2678: /* unreserved_keyword: WHITESPACE_P  */
@@ -59057,7 +59009,7 @@
  { 
  (yyval.str) = mm_strdup("whitespace");
 }
-#line 59061 "preproc.c"
+#line 59013 "preproc.c"
     break;
 
   case 2679: /* unreserved_keyword: WITHIN  */
@@ -59065,7 +59017,7 @@
  { 
  (yyval.str) = mm_strdup("within");
 }
-#line 59069 "preproc.c"
+#line 59021 "preproc.c"
     break;
 
   case 2680: /* unreserved_keyword: WITHOUT  */
@@ -59073,7 +59025,7 @@
  { 
  (yyval.str) = mm_strdup("without");
 }
-#line 59077 "preproc.c"
+#line 59029 "preproc.c"
     break;
 
   case 2681: /* unreserved_keyword: WORK  */
@@ -59081,7 +59033,7 @@
  { 
  (yyval.str) = mm_strdup("work");
 }
-#line 59085 "preproc.c"
+#line 59037 "preproc.c"
     break;
 
   case 2682: /* unreserved_keyword: WRAPPER  */
@@ -59089,7 +59041,7 @@
  { 
  (yyval.str) = mm_strdup("wrapper");
 }
-#line 59093 "preproc.c"
+#line 59045 "preproc.c"
     break;
 
   case 2683: /* unreserved_keyword: WRITE  */
@@ -59097,7 +59049,7 @@
  { 
  (yyval.str) = mm_strdup("write");
 }
-#line 59101 "preproc.c"
+#line 59053 "preproc.c"
     break;
 
   case 2684: /* unreserved_keyword: XML_P  */
@@ -59105,7 +59057,7 @@
  { 
  (yyval.str) = mm_strdup("xml");
 }
-#line 59109 "preproc.c"
+#line 59061 "preproc.c"
     break;
 
   case 2685: /* unreserved_keyword: YES_P  */
@@ -59113,7 +59065,7 @@
  { 
  (yyval.str) = mm_strdup("yes");
 }
-#line 59117 "preproc.c"
+#line 59069 "preproc.c"
     break;
 
   case 2686: /* unreserved_keyword: ZONE  */
@@ -59121,7 +59073,7 @@
  { 
  (yyval.str) = mm_strdup("zone");
 }
-#line 59125 "preproc.c"
+#line 59077 "preproc.c"
     break;
 
   case 2687: /* col_name_keyword: BETWEEN  */
@@ -59129,7 +59081,7 @@
  { 
  (yyval.str) = mm_strdup("between");
 }
-#line 59133 "preproc.c"
+#line 59085 "preproc.c"
     break;
 
   case 2688: /* col_name_keyword: BIGINT  */
@@ -59137,7 +59089,7 @@
  { 
  (yyval.str) = mm_strdup("bigint");
 }
-#line 59141 "preproc.c"
+#line 59093 "preproc.c"
     break;
 
   case 2689: /* col_name_keyword: BIT  */
@@ -59145,7 +59097,7 @@
  { 
  (yyval.str) = mm_strdup("bit");
 }
-#line 59149 "preproc.c"
+#line 59101 "preproc.c"
     break;
 
   case 2690: /* col_name_keyword: BOOLEAN_P  */
@@ -59153,7 +59105,7 @@
  { 
  (yyval.str) = mm_strdup("boolean");
 }
-#line 59157 "preproc.c"
+#line 59109 "preproc.c"
     break;
 
   case 2691: /* col_name_keyword: CHARACTER  */
@@ -59161,7 +59113,7 @@
  { 
  (yyval.str) = mm_strdup("character");
 }
-#line 59165 "preproc.c"
+#line 59117 "preproc.c"
     break;
 
   case 2692: /* col_name_keyword: COALESCE  */
@@ -59169,7 +59121,7 @@
  { 
  (yyval.str) = mm_strdup("coalesce");
 }
-#line 59173 "preproc.c"
+#line 59125 "preproc.c"
     break;
 
   case 2693: /* col_name_keyword: DEC  */
@@ -59177,7 +59129,7 @@
  { 
  (yyval.str) = mm_strdup("dec");
 }
-#line 59181 "preproc.c"
+#line 59133 "preproc.c"
     break;
 
   case 2694: /* col_name_keyword: DECIMAL_P  */
@@ -59185,7 +59137,7 @@
  { 
  (yyval.str) = mm_strdup("decimal");
 }
-#line 59189 "preproc.c"
+#line 59141 "preproc.c"
     break;
 
   case 2695: /* col_name_keyword: EXISTS  */
@@ -59193,7 +59145,7 @@
  { 
  (yyval.str) = mm_strdup("exists");
 }
-#line 59197 "preproc.c"
+#line 59149 "preproc.c"
     break;
 
   case 2696: /* col_name_keyword: EXTRACT  */
@@ -59201,7 +59153,7 @@
  { 
  (yyval.str) = mm_strdup("extract");
 }
-#line 59205 "preproc.c"
+#line 59157 "preproc.c"
     break;
 
   case 2697: /* col_name_keyword: FLOAT_P  */
@@ -59209,7 +59161,7 @@
  { 
  (yyval.str) = mm_strdup("float");
 }
-#line 59213 "preproc.c"
+#line 59165 "preproc.c"
     break;
 
   case 2698: /* col_name_keyword: GREATEST  */
@@ -59217,7 +59169,7 @@
  { 
  (yyval.str) = mm_strdup("greatest");
 }
-#line 59221 "preproc.c"
+#line 59173 "preproc.c"
     break;
 
   case 2699: /* col_name_keyword: GROUPING  */
@@ -59225,7 +59177,7 @@
  { 
  (yyval.str) = mm_strdup("grouping");
 }
-#line 59229 "preproc.c"
+#line 59181 "preproc.c"
     break;
 
   case 2700: /* col_name_keyword: INOUT  */
@@ -59233,7 +59185,7 @@
  { 
  (yyval.str) = mm_strdup("inout");
 }
-#line 59237 "preproc.c"
+#line 59189 "preproc.c"
     break;
 
   case 2701: /* col_name_keyword: INTEGER  */
@@ -59241,7 +59193,7 @@
  { 
  (yyval.str) = mm_strdup("integer");
 }
-#line 59245 "preproc.c"
+#line 59197 "preproc.c"
     break;
 
   case 2702: /* col_name_keyword: INTERVAL  */
@@ -59249,7 +59201,7 @@
  { 
  (yyval.str) = mm_strdup("interval");
 }
-#line 59253 "preproc.c"
+#line 59205 "preproc.c"
     break;
 
   case 2703: /* col_name_keyword: JSON_ARRAY  */
@@ -59257,7 +59209,7 @@
  { 
  (yyval.str) = mm_strdup("json_array");
 }
-#line 59261 "preproc.c"
+#line 59213 "preproc.c"
     break;
 
   case 2704: /* col_name_keyword: JSON_ARRAYAGG  */
@@ -59265,7 +59217,7 @@
  { 
  (yyval.str) = mm_strdup("json_arrayagg");
 }
-#line 59269 "preproc.c"
+#line 59221 "preproc.c"
     break;
 
   case 2705: /* col_name_keyword: JSON_OBJECT  */
@@ -59273,7 +59225,7 @@
  { 
  (yyval.str) = mm_strdup("json_object");
 }
-#line 59277 "preproc.c"
+#line 59229 "preproc.c"
     break;
 
   case 2706: /* col_name_keyword: JSON_OBJECTAGG  */
@@ -59281,7 +59233,7 @@
  { 
  (yyval.str) = mm_strdup("json_objectagg");
 }
-#line 59285 "preproc.c"
+#line 59237 "preproc.c"
     break;
 
   case 2707: /* col_name_keyword: LEAST  */
@@ -59289,7 +59241,7 @@
  { 
  (yyval.str) = mm_strdup("least");
 }
-#line 59293 "preproc.c"
+#line 59245 "preproc.c"
     break;
 
   case 2708: /* col_name_keyword: NATIONAL  */
@@ -59297,7 +59249,7 @@
  { 
  (yyval.str) = mm_strdup("national");
 }
-#line 59301 "preproc.c"
+#line 59253 "preproc.c"
     break;
 
   case 2709: /* col_name_keyword: NCHAR  */
@@ -59305,7 +59257,7 @@
  { 
  (yyval.str) = mm_strdup("nchar");
 }
-#line 59309 "preproc.c"
+#line 59261 "preproc.c"
     break;
 
   case 2710: /* col_name_keyword: NONE  */
@@ -59313,7 +59265,7 @@
  { 
  (yyval.str) = mm_strdup("none");
 }
-#line 59317 "preproc.c"
+#line 59269 "preproc.c"
     break;
 
   case 2711: /* col_name_keyword: NORMALIZE  */
@@ -59321,7 +59273,7 @@
  { 
  (yyval.str) = mm_strdup("normalize");
 }
-#line 59325 "preproc.c"
+#line 59277 "preproc.c"
     break;
 
   case 2712: /* col_name_keyword: NULLIF  */
@@ -59329,7 +59281,7 @@
  { 
  (yyval.str) = mm_strdup("nullif");
 }
-#line 59333 "preproc.c"
+#line 59285 "preproc.c"
     break;
 
   case 2713: /* col_name_keyword: NUMERIC  */
@@ -59337,7 +59289,7 @@
  { 
  (yyval.str) = mm_strdup("numeric");
 }
-#line 59341 "preproc.c"
+#line 59293 "preproc.c"
     break;
 
   case 2714: /* col_name_keyword: OUT_P  */
@@ -59345,7 +59297,7 @@
  { 
  (yyval.str) = mm_strdup("out");
 }
-#line 59349 "preproc.c"
+#line 59301 "preproc.c"
     break;
 
   case 2715: /* col_name_keyword: OVERLAY  */
@@ -59353,7 +59305,7 @@
  { 
  (yyval.str) = mm_strdup("overlay");
 }
-#line 59357 "preproc.c"
+#line 59309 "preproc.c"
     break;
 
   case 2716: /* col_name_keyword: POSITION  */
@@ -59361,7 +59313,7 @@
  { 
  (yyval.str) = mm_strdup("position");
 }
-#line 59365 "preproc.c"
+#line 59317 "preproc.c"
     break;
 
   case 2717: /* col_name_keyword: PRECISION  */
@@ -59369,7 +59321,7 @@
  { 
  (yyval.str) = mm_strdup("precision");
 }
-#line 59373 "preproc.c"
+#line 59325 "preproc.c"
     break;
 
   case 2718: /* col_name_keyword: REAL  */
@@ -59377,7 +59329,7 @@
  { 
  (yyval.str) = mm_strdup("real");
 }
-#line 59381 "preproc.c"
+#line 59333 "preproc.c"
     break;
 
   case 2719: /* col_name_keyword: ROW  */
@@ -59385,7 +59337,7 @@
  { 
  (yyval.str) = mm_strdup("row");
 }
-#line 59389 "preproc.c"
+#line 59341 "preproc.c"
     break;
 
   case 2720: /* col_name_keyword: SETOF  */
@@ -59393,7 +59345,7 @@
  { 
  (yyval.str) = mm_strdup("setof");
 }
-#line 59397 "preproc.c"
+#line 59349 "preproc.c"
     break;
 
   case 2721: /* col_name_keyword: SMALLINT  */
@@ -59401,7 +59353,7 @@
  { 
  (yyval.str) = mm_strdup("smallint");
 }
-#line 59405 "preproc.c"
+#line 59357 "preproc.c"
     break;
 
   case 2722: /* col_name_keyword: SUBSTRING  */
@@ -59409,7 +59361,7 @@
  { 
  (yyval.str) = mm_strdup("substring");
 }
-#line 59413 "preproc.c"
+#line 59365 "preproc.c"
     break;
 
   case 2723: /* col_name_keyword: TIME  */
@@ -59417,7 +59369,7 @@
  { 
  (yyval.str) = mm_strdup("time");
 }
-#line 59421 "preproc.c"
+#line 59373 "preproc.c"
     break;
 
   case 2724: /* col_name_keyword: TIMESTAMP  */
@@ -59425,7 +59377,7 @@
  { 
  (yyval.str) = mm_strdup("timestamp");
 }
-#line 59429 "preproc.c"
+#line 59381 "preproc.c"
     break;
 
   case 2725: /* col_name_keyword: TREAT  */
@@ -59433,7 +59385,7 @@
  { 
  (yyval.str) = mm_strdup("treat");
 }
-#line 59437 "preproc.c"
+#line 59389 "preproc.c"
     break;
 
   case 2726: /* col_name_keyword: TRIM  */
@@ -59441,7 +59393,7 @@
  { 
  (yyval.str) = mm_strdup("trim");
 }
-#line 59445 "preproc.c"
+#line 59397 "preproc.c"
     break;
 
   case 2727: /* col_name_keyword: VARCHAR  */
@@ -59449,7 +59401,7 @@
  { 
  (yyval.str) = mm_strdup("varchar");
 }
-#line 59453 "preproc.c"
+#line 59405 "preproc.c"
     break;
 
   case 2728: /* col_name_keyword: XMLATTRIBUTES  */
@@ -59457,7 +59409,7 @@
  { 
  (yyval.str) = mm_strdup("xmlattributes");
 }
-#line 59461 "preproc.c"
+#line 59413 "preproc.c"
     break;
 
   case 2729: /* col_name_keyword: XMLCONCAT  */
@@ -59465,7 +59417,7 @@
  { 
  (yyval.str) = mm_strdup("xmlconcat");
 }
-#line 59469 "preproc.c"
+#line 59421 "preproc.c"
     break;
 
   case 2730: /* col_name_keyword: XMLELEMENT  */
@@ -59473,7 +59425,7 @@
  { 
  (yyval.str) = mm_strdup("xmlelement");
 }
-#line 59477 "preproc.c"
+#line 59429 "preproc.c"
     break;
 
   case 2731: /* col_name_keyword: XMLEXISTS  */
@@ -59481,7 +59433,7 @@
  { 
  (yyval.str) = mm_strdup("xmlexists");
 }
-#line 59485 "preproc.c"
+#line 59437 "preproc.c"
     break;
 
   case 2732: /* col_name_keyword: XMLFOREST  */
@@ -59489,7 +59441,7 @@
  { 
  (yyval.str) = mm_strdup("xmlforest");
 }
-#line 59493 "preproc.c"
+#line 59445 "preproc.c"
     break;
 
   case 2733: /* col_name_keyword: XMLNAMESPACES  */
@@ -59497,7 +59449,7 @@
  { 
  (yyval.str) = mm_strdup("xmlnamespaces");
 }
-#line 59501 "preproc.c"
+#line 59453 "preproc.c"
     break;
 
   case 2734: /* col_name_keyword: XMLPARSE  */
@@ -59505,7 +59457,7 @@
  { 
  (yyval.str) = mm_strdup("xmlparse");
 }
-#line 59509 "preproc.c"
+#line 59461 "preproc.c"
     break;
 
   case 2735: /* col_name_keyword: XMLPI  */
@@ -59513,7 +59465,7 @@
  { 
  (yyval.str) = mm_strdup("xmlpi");
 }
-#line 59517 "preproc.c"
+#line 59469 "preproc.c"
     break;
 
   case 2736: /* col_name_keyword: XMLROOT  */
@@ -59521,7 +59473,7 @@
  { 
  (yyval.str) = mm_strdup("xmlroot");
 }
-#line 59525 "preproc.c"
+#line 59477 "preproc.c"
     break;
 
   case 2737: /* col_name_keyword: XMLSERIALIZE  */
@@ -59529,7 +59481,7 @@
  { 
  (yyval.str) = mm_strdup("xmlserialize");
 }
-#line 59533 "preproc.c"
+#line 59485 "preproc.c"
     break;
 
   case 2738: /* col_name_keyword: XMLTABLE  */
@@ -59537,7 +59489,7 @@
  { 
  (yyval.str) = mm_strdup("xmltable");
 }
-#line 59541 "preproc.c"
+#line 59493 "preproc.c"
     break;
 
   case 2739: /* type_func_name_keyword: AUTHORIZATION  */
@@ -59545,7 +59497,7 @@
  { 
  (yyval.str) = mm_strdup("authorization");
 }
-#line 59549 "preproc.c"
+#line 59501 "preproc.c"
     break;
 
   case 2740: /* type_func_name_keyword: BINARY  */
@@ -59553,7 +59505,7 @@
  { 
  (yyval.str) = mm_strdup("binary");
 }
-#line 59557 "preproc.c"
+#line 59509 "preproc.c"
     break;
 
   case 2741: /* type_func_name_keyword: COLLATION  */
@@ -59561,7 +59513,7 @@
  { 
  (yyval.str) = mm_strdup("collation");
 }
-#line 59565 "preproc.c"
+#line 59517 "preproc.c"
     break;
 
   case 2742: /* type_func_name_keyword: CONCURRENTLY  */
@@ -59569,7 +59521,7 @@
  { 
  (yyval.str) = mm_strdup("concurrently");
 }
-#line 59573 "preproc.c"
+#line 59525 "preproc.c"
     break;
 
   case 2743: /* type_func_name_keyword: CROSS  */
@@ -59577,7 +59529,7 @@
  { 
  (yyval.str) = mm_strdup("cross");
 }
-#line 59581 "preproc.c"
+#line 59533 "preproc.c"
     break;
 
   case 2744: /* type_func_name_keyword: CURRENT_SCHEMA  */
@@ -59585,7 +59537,7 @@
  { 
  (yyval.str) = mm_strdup("current_schema");
 }
-#line 59589 "preproc.c"
+#line 59541 "preproc.c"
     break;
 
   case 2745: /* type_func_name_keyword: FREEZE  */
@@ -59593,7 +59545,7 @@
  { 
  (yyval.str) = mm_strdup("freeze");
 }
-#line 59597 "preproc.c"
+#line 59549 "preproc.c"
     break;
 
   case 2746: /* type_func_name_keyword: FULL  */
@@ -59601,7 +59553,7 @@
  { 
  (yyval.str) = mm_strdup("full");
 }
-#line 59605 "preproc.c"
+#line 59557 "preproc.c"
     break;
 
   case 2747: /* type_func_name_keyword: ILIKE  */
@@ -59609,7 +59561,7 @@
  { 
  (yyval.str) = mm_strdup("ilike");
 }
-#line 59613 "preproc.c"
+#line 59565 "preproc.c"
     break;
 
   case 2748: /* type_func_name_keyword: INNER_P  */
@@ -59617,7 +59569,7 @@
  { 
  (yyval.str) = mm_strdup("inner");
 }
-#line 59621 "preproc.c"
+#line 59573 "preproc.c"
     break;
 
   case 2749: /* type_func_name_keyword: IS  */
@@ -59625,7 +59577,7 @@
  { 
  (yyval.str) = mm_strdup("is");
 }
-#line 59629 "preproc.c"
+#line 59581 "preproc.c"
     break;
 
   case 2750: /* type_func_name_keyword: ISNULL  */
@@ -59633,7 +59585,7 @@
  { 
  (yyval.str) = mm_strdup("isnull");
 }
-#line 59637 "preproc.c"
+#line 59589 "preproc.c"
     break;
 
   case 2751: /* type_func_name_keyword: JOIN  */
@@ -59641,7 +59593,7 @@
  { 
  (yyval.str) = mm_strdup("join");
 }
-#line 59645 "preproc.c"
+#line 59597 "preproc.c"
     break;
 
   case 2752: /* type_func_name_keyword: LEFT  */
@@ -59649,7 +59601,7 @@
  { 
  (yyval.str) = mm_strdup("left");
 }
-#line 59653 "preproc.c"
+#line 59605 "preproc.c"
     break;
 
   case 2753: /* type_func_name_keyword: LIKE  */
@@ -59657,7 +59609,7 @@
  { 
  (yyval.str) = mm_strdup("like");
 }
-#line 59661 "preproc.c"
+#line 59613 "preproc.c"
     break;
 
   case 2754: /* type_func_name_keyword: NATURAL  */
@@ -59665,7 +59617,7 @@
  { 
  (yyval.str) = mm_strdup("natural");
 }
-#line 59669 "preproc.c"
+#line 59621 "preproc.c"
     break;
 
   case 2755: /* type_func_name_keyword: NOTNULL  */
@@ -59673,7 +59625,7 @@
  { 
  (yyval.str) = mm_strdup("notnull");
 }
-#line 59677 "preproc.c"
+#line 59629 "preproc.c"
     break;
 
   case 2756: /* type_func_name_keyword: OUTER_P  */
@@ -59681,7 +59633,7 @@
  { 
  (yyval.str) = mm_strdup("outer");
 }
-#line 59685 "preproc.c"
+#line 59637 "preproc.c"
     break;
 
   case 2757: /* type_func_name_keyword: OVERLAPS  */
@@ -59689,7 +59641,7 @@
  { 
  (yyval.str) = mm_strdup("overlaps");
 }
-#line 59693 "preproc.c"
+#line 59645 "preproc.c"
     break;
 
   case 2758: /* type_func_name_keyword: RIGHT  */
@@ -59697,7 +59649,7 @@
  { 
  (yyval.str) = mm_strdup("right");
 }
-#line 59701 "preproc.c"
+#line 59653 "preproc.c"
     break;
 
   case 2759: /* type_func_name_keyword: SIMILAR  */
@@ -59705,7 +59657,7 @@
  { 
  (yyval.str) = mm_strdup("similar");
 }
-#line 59709 "preproc.c"
+#line 59661 "preproc.c"
     break;
 
   case 2760: /* type_func_name_keyword: TABLESAMPLE  */
@@ -59713,7 +59665,7 @@
  { 
  (yyval.str) = mm_strdup("tablesample");
 }
-#line 59717 "preproc.c"
+#line 59669 "preproc.c"
     break;
 
   case 2761: /* type_func_name_keyword: VERBOSE  */
@@ -59721,7 +59673,7 @@
  { 
  (yyval.str) = mm_strdup("verbose");
 }
-#line 59725 "preproc.c"
+#line 59677 "preproc.c"
     break;
 
   case 2762: /* reserved_keyword: ALL  */
@@ -59729,7 +59681,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 59733 "preproc.c"
+#line 59685 "preproc.c"
     break;
 
   case 2763: /* reserved_keyword: ANALYSE  */
@@ -59737,7 +59689,7 @@
  { 
  (yyval.str) = mm_strdup("analyse");
 }
-#line 59741 "preproc.c"
+#line 59693 "preproc.c"
     break;
 
   case 2764: /* reserved_keyword: ANALYZE  */
@@ -59745,7 +59697,7 @@
  { 
  (yyval.str) = mm_strdup("analyze");
 }
-#line 59749 "preproc.c"
+#line 59701 "preproc.c"
     break;
 
   case 2765: /* reserved_keyword: AND  */
@@ -59753,7 +59705,7 @@
  { 
  (yyval.str) = mm_strdup("and");
 }
-#line 59757 "preproc.c"
+#line 59709 "preproc.c"
     break;
 
   case 2766: /* reserved_keyword: ANY  */
@@ -59761,7 +59713,7 @@
  { 
  (yyval.str) = mm_strdup("any");
 }
-#line 59765 "preproc.c"
+#line 59717 "preproc.c"
     break;
 
   case 2767: /* reserved_keyword: ARRAY  */
@@ -59769,7 +59721,7 @@
  { 
  (yyval.str) = mm_strdup("array");
 }
-#line 59773 "preproc.c"
+#line 59725 "preproc.c"
     break;
 
   case 2768: /* reserved_keyword: AS  */
@@ -59777,7 +59729,7 @@
  { 
  (yyval.str) = mm_strdup("as");
 }
-#line 59781 "preproc.c"
+#line 59733 "preproc.c"
     break;
 
   case 2769: /* reserved_keyword: ASC  */
@@ -59785,7 +59737,7 @@
  { 
  (yyval.str) = mm_strdup("asc");
 }
-#line 59789 "preproc.c"
+#line 59741 "preproc.c"
     break;
 
   case 2770: /* reserved_keyword: ASYMMETRIC  */
@@ -59793,7 +59745,7 @@
  { 
  (yyval.str) = mm_strdup("asymmetric");
 }
-#line 59797 "preproc.c"
+#line 59749 "preproc.c"
     break;
 
   case 2771: /* reserved_keyword: BOTH  */
@@ -59801,7 +59753,7 @@
  { 
  (yyval.str) = mm_strdup("both");
 }
-#line 59805 "preproc.c"
+#line 59757 "preproc.c"
     break;
 
   case 2772: /* reserved_keyword: CASE  */
@@ -59809,7 +59761,7 @@
  { 
  (yyval.str) = mm_strdup("case");
 }
-#line 59813 "preproc.c"
+#line 59765 "preproc.c"
     break;
 
   case 2773: /* reserved_keyword: CAST  */
@@ -59817,7 +59769,7 @@
  { 
  (yyval.str) = mm_strdup("cast");
 }
-#line 59821 "preproc.c"
+#line 59773 "preproc.c"
     break;
 
   case 2774: /* reserved_keyword: CHECK  */
@@ -59825,7 +59777,7 @@
  { 
  (yyval.str) = mm_strdup("check");
 }
-#line 59829 "preproc.c"
+#line 59781 "preproc.c"
     break;
 
   case 2775: /* reserved_keyword: COLLATE  */
@@ -59833,7 +59785,7 @@
  { 
  (yyval.str) = mm_strdup("collate");
 }
-#line 59837 "preproc.c"
+#line 59789 "preproc.c"
     break;
 
   case 2776: /* reserved_keyword: COLUMN  */
@@ -59841,7 +59793,7 @@
  { 
  (yyval.str) = mm_strdup("column");
 }
-#line 59845 "preproc.c"
+#line 59797 "preproc.c"
     break;
 
   case 2777: /* reserved_keyword: CONSTRAINT  */
@@ -59849,7 +59801,7 @@
  { 
  (yyval.str) = mm_strdup("constraint");
 }
-#line 59853 "preproc.c"
+#line 59805 "preproc.c"
     break;
 
   case 2778: /* reserved_keyword: CREATE  */
@@ -59857,7 +59809,7 @@
  { 
  (yyval.str) = mm_strdup("create");
 }
-#line 59861 "preproc.c"
+#line 59813 "preproc.c"
     break;
 
   case 2779: /* reserved_keyword: CURRENT_CATALOG  */
@@ -59865,7 +59817,7 @@
  { 
  (yyval.str) = mm_strdup("current_catalog");
 }
-#line 59869 "preproc.c"
+#line 59821 "preproc.c"
     break;
 
   case 2780: /* reserved_keyword: CURRENT_DATE  */
@@ -59873,7 +59825,7 @@
  { 
  (yyval.str) = mm_strdup("current_date");
 }
-#line 59877 "preproc.c"
+#line 59829 "preproc.c"
     break;
 
   case 2781: /* reserved_keyword: CURRENT_ROLE  */
@@ -59881,7 +59833,7 @@
  { 
  (yyval.str) = mm_strdup("current_role");
 }
-#line 59885 "preproc.c"
+#line 59837 "preproc.c"
     break;
 
   case 2782: /* reserved_keyword: CURRENT_TIME  */
@@ -59889,7 +59841,7 @@
  { 
  (yyval.str) = mm_strdup("current_time");
 }
-#line 59893 "preproc.c"
+#line 59845 "preproc.c"
     break;
 
   case 2783: /* reserved_keyword: CURRENT_TIMESTAMP  */
@@ -59897,7 +59849,7 @@
  { 
  (yyval.str) = mm_strdup("current_timestamp");
 }
-#line 59901 "preproc.c"
+#line 59853 "preproc.c"
     break;
 
   case 2784: /* reserved_keyword: CURRENT_USER  */
@@ -59905,7 +59857,7 @@
  { 
  (yyval.str) = mm_strdup("current_user");
 }
-#line 59909 "preproc.c"
+#line 59861 "preproc.c"
     break;
 
   case 2785: /* reserved_keyword: DEFAULT  */
@@ -59913,7 +59865,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 59917 "preproc.c"
+#line 59869 "preproc.c"
     break;
 
   case 2786: /* reserved_keyword: DEFERRABLE  */
@@ -59921,7 +59873,7 @@
  { 
  (yyval.str) = mm_strdup("deferrable");
 }
-#line 59925 "preproc.c"
+#line 59877 "preproc.c"
     break;
 
   case 2787: /* reserved_keyword: DESC  */
@@ -59929,7 +59881,7 @@
  { 
  (yyval.str) = mm_strdup("desc");
 }
-#line 59933 "preproc.c"
+#line 59885 "preproc.c"
     break;
 
   case 2788: /* reserved_keyword: DISTINCT  */
@@ -59937,7 +59889,7 @@
  { 
  (yyval.str) = mm_strdup("distinct");
 }
-#line 59941 "preproc.c"
+#line 59893 "preproc.c"
     break;
 
   case 2789: /* reserved_keyword: DO  */
@@ -59945,7 +59897,7 @@
  { 
  (yyval.str) = mm_strdup("do");
 }
-#line 59949 "preproc.c"
+#line 59901 "preproc.c"
     break;
 
   case 2790: /* reserved_keyword: ELSE  */
@@ -59953,7 +59905,7 @@
  { 
  (yyval.str) = mm_strdup("else");
 }
-#line 59957 "preproc.c"
+#line 59909 "preproc.c"
     break;
 
   case 2791: /* reserved_keyword: END_P  */
@@ -59961,7 +59913,7 @@
  { 
  (yyval.str) = mm_strdup("end");
 }
-#line 59965 "preproc.c"
+#line 59917 "preproc.c"
     break;
 
   case 2792: /* reserved_keyword: EXCEPT  */
@@ -59969,7 +59921,7 @@
  { 
  (yyval.str) = mm_strdup("except");
 }
-#line 59973 "preproc.c"
+#line 59925 "preproc.c"
     break;
 
   case 2793: /* reserved_keyword: FALSE_P  */
@@ -59977,7 +59929,7 @@
  { 
  (yyval.str) = mm_strdup("false");
 }
-#line 59981 "preproc.c"
+#line 59933 "preproc.c"
     break;
 
   case 2794: /* reserved_keyword: FETCH  */
@@ -59985,7 +59937,7 @@
  { 
  (yyval.str) = mm_strdup("fetch");
 }
-#line 59989 "preproc.c"
+#line 59941 "preproc.c"
     break;
 
   case 2795: /* reserved_keyword: FOR  */
@@ -59993,7 +59945,7 @@
  { 
  (yyval.str) = mm_strdup("for");
 }
-#line 59997 "preproc.c"
+#line 59949 "preproc.c"
     break;
 
   case 2796: /* reserved_keyword: FOREIGN  */
@@ -60001,7 +59953,7 @@
  { 
  (yyval.str) = mm_strdup("foreign");
 }
-#line 60005 "preproc.c"
+#line 59957 "preproc.c"
     break;
 
   case 2797: /* reserved_keyword: FROM  */
@@ -60009,7 +59961,7 @@
  { 
  (yyval.str) = mm_strdup("from");
 }
-#line 60013 "preproc.c"
+#line 59965 "preproc.c"
     break;
 
   case 2798: /* reserved_keyword: GRANT  */
@@ -60017,7 +59969,7 @@
  { 
  (yyval.str) = mm_strdup("grant");
 }
-#line 60021 "preproc.c"
+#line 59973 "preproc.c"
     break;
 
   case 2799: /* reserved_keyword: GROUP_P  */
@@ -60025,7 +59977,7 @@
  { 
  (yyval.str) = mm_strdup("group");
 }
-#line 60029 "preproc.c"
+#line 59981 "preproc.c"
     break;
 
   case 2800: /* reserved_keyword: HAVING  */
@@ -60033,7 +59985,7 @@
  { 
  (yyval.str) = mm_strdup("having");
 }
-#line 60037 "preproc.c"
+#line 59989 "preproc.c"
     break;
 
   case 2801: /* reserved_keyword: IN_P  */
@@ -60041,7 +59993,7 @@
  { 
  (yyval.str) = mm_strdup("in");
 }
-#line 60045 "preproc.c"
+#line 59997 "preproc.c"
     break;
 
   case 2802: /* reserved_keyword: INITIALLY  */
@@ -60049,7 +60001,7 @@
  { 
  (yyval.str) = mm_strdup("initially");
 }
-#line 60053 "preproc.c"
+#line 60005 "preproc.c"
     break;
 
   case 2803: /* reserved_keyword: INTERSECT  */
@@ -60057,7 +60009,7 @@
  { 
  (yyval.str) = mm_strdup("intersect");
 }
-#line 60061 "preproc.c"
+#line 60013 "preproc.c"
     break;
 
   case 2804: /* reserved_keyword: INTO  */
@@ -60065,7 +60017,7 @@
  { 
  (yyval.str) = mm_strdup("into");
 }
-#line 60069 "preproc.c"
+#line 60021 "preproc.c"
     break;
 
   case 2805: /* reserved_keyword: LATERAL_P  */
@@ -60073,7 +60025,7 @@
  { 
  (yyval.str) = mm_strdup("lateral");
 }
-#line 60077 "preproc.c"
+#line 60029 "preproc.c"
     break;
 
   case 2806: /* reserved_keyword: LEADING  */
@@ -60081,7 +60033,7 @@
  { 
  (yyval.str) = mm_strdup("leading");
 }
-#line 60085 "preproc.c"
+#line 60037 "preproc.c"
     break;
 
   case 2807: /* reserved_keyword: LIMIT  */
@@ -60089,7 +60041,7 @@
  { 
  (yyval.str) = mm_strdup("limit");
 }
-#line 60093 "preproc.c"
+#line 60045 "preproc.c"
     break;
 
   case 2808: /* reserved_keyword: LOCALTIME  */
@@ -60097,7 +60049,7 @@
  { 
  (yyval.str) = mm_strdup("localtime");
 }
-#line 60101 "preproc.c"
+#line 60053 "preproc.c"
     break;
 
   case 2809: /* reserved_keyword: LOCALTIMESTAMP  */
@@ -60105,7 +60057,7 @@
  { 
  (yyval.str) = mm_strdup("localtimestamp");
 }
-#line 60109 "preproc.c"
+#line 60061 "preproc.c"
     break;
 
   case 2810: /* reserved_keyword: NOT  */
@@ -60113,7 +60065,7 @@
  { 
  (yyval.str) = mm_strdup("not");
 }
-#line 60117 "preproc.c"
+#line 60069 "preproc.c"
     break;
 
   case 2811: /* reserved_keyword: NULL_P  */
@@ -60121,7 +60073,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 60125 "preproc.c"
+#line 60077 "preproc.c"
     break;
 
   case 2812: /* reserved_keyword: OFFSET  */
@@ -60129,7 +60081,7 @@
  { 
  (yyval.str) = mm_strdup("offset");
 }
-#line 60133 "preproc.c"
+#line 60085 "preproc.c"
     break;
 
   case 2813: /* reserved_keyword: ON  */
@@ -60137,7 +60089,7 @@
  { 
  (yyval.str) = mm_strdup("on");
 }
-#line 60141 "preproc.c"
+#line 60093 "preproc.c"
     break;
 
   case 2814: /* reserved_keyword: ONLY  */
@@ -60145,7 +60097,7 @@
  { 
  (yyval.str) = mm_strdup("only");
 }
-#line 60149 "preproc.c"
+#line 60101 "preproc.c"
     break;
 
   case 2815: /* reserved_keyword: OR  */
@@ -60153,7 +60105,7 @@
  { 
  (yyval.str) = mm_strdup("or");
 }
-#line 60157 "preproc.c"
+#line 60109 "preproc.c"
     break;
 
   case 2816: /* reserved_keyword: ORDER  */
@@ -60161,7 +60113,7 @@
  { 
  (yyval.str) = mm_strdup("order");
 }
-#line 60165 "preproc.c"
+#line 60117 "preproc.c"
     break;
 
   case 2817: /* reserved_keyword: PLACING  */
@@ -60169,7 +60121,7 @@
  { 
  (yyval.str) = mm_strdup("placing");
 }
-#line 60173 "preproc.c"
+#line 60125 "preproc.c"
     break;
 
   case 2818: /* reserved_keyword: PRIMARY  */
@@ -60177,7 +60129,7 @@
  { 
  (yyval.str) = mm_strdup("primary");
 }
-#line 60181 "preproc.c"
+#line 60133 "preproc.c"
     break;
 
   case 2819: /* reserved_keyword: REFERENCES  */
@@ -60185,7 +60137,7 @@
  { 
  (yyval.str) = mm_strdup("references");
 }
-#line 60189 "preproc.c"
+#line 60141 "preproc.c"
     break;
 
   case 2820: /* reserved_keyword: RETURNING  */
@@ -60193,7 +60145,7 @@
  { 
  (yyval.str) = mm_strdup("returning");
 }
-#line 60197 "preproc.c"
+#line 60149 "preproc.c"
     break;
 
   case 2821: /* reserved_keyword: SELECT  */
@@ -60201,7 +60153,7 @@
  { 
  (yyval.str) = mm_strdup("select");
 }
-#line 60205 "preproc.c"
+#line 60157 "preproc.c"
     break;
 
   case 2822: /* reserved_keyword: SESSION_USER  */
@@ -60209,7 +60161,7 @@
  { 
  (yyval.str) = mm_strdup("session_user");
 }
-#line 60213 "preproc.c"
+#line 60165 "preproc.c"
     break;
 
   case 2823: /* reserved_keyword: SOME  */
@@ -60217,7 +60169,7 @@
  { 
  (yyval.str) = mm_strdup("some");
 }
-#line 60221 "preproc.c"
+#line 60173 "preproc.c"
     break;
 
   case 2824: /* reserved_keyword: SYMMETRIC  */
@@ -60225,7 +60177,7 @@
  { 
  (yyval.str) = mm_strdup("symmetric");
 }
-#line 60229 "preproc.c"
+#line 60181 "preproc.c"
     break;
 
   case 2825: /* reserved_keyword: SYSTEM_USER  */
@@ -60233,7 +60185,7 @@
  { 
  (yyval.str) = mm_strdup("system_user");
 }
-#line 60237 "preproc.c"
+#line 60189 "preproc.c"
     break;
 
   case 2826: /* reserved_keyword: TABLE  */
@@ -60241,7 +60193,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 60245 "preproc.c"
+#line 60197 "preproc.c"
     break;
 
   case 2827: /* reserved_keyword: THEN  */
@@ -60249,7 +60201,7 @@
  { 
  (yyval.str) = mm_strdup("then");
 }
-#line 60253 "preproc.c"
+#line 60205 "preproc.c"
     break;
 
   case 2828: /* reserved_keyword: TRAILING  */
@@ -60257,7 +60209,7 @@
  { 
  (yyval.str) = mm_strdup("trailing");
 }
-#line 60261 "preproc.c"
+#line 60213 "preproc.c"
     break;
 
   case 2829: /* reserved_keyword: TRUE_P  */
@@ -60265,7 +60217,7 @@
  { 
  (yyval.str) = mm_strdup("true");
 }
-#line 60269 "preproc.c"
+#line 60221 "preproc.c"
     break;
 
   case 2830: /* reserved_keyword: UNIQUE  */
@@ -60273,7 +60225,7 @@
  { 
  (yyval.str) = mm_strdup("unique");
 }
-#line 60277 "preproc.c"
+#line 60229 "preproc.c"
     break;
 
   case 2831: /* reserved_keyword: USER  */
@@ -60281,7 +60233,7 @@
  { 
  (yyval.str) = mm_strdup("user");
 }
-#line 60285 "preproc.c"
+#line 60237 "preproc.c"
     break;
 
   case 2832: /* reserved_keyword: USING  */
@@ -60289,7 +60241,7 @@
  { 
  (yyval.str) = mm_strdup("using");
 }
-#line 60293 "preproc.c"
+#line 60245 "preproc.c"
     break;
 
   case 2833: /* reserved_keyword: VARIADIC  */
@@ -60297,7 +60249,7 @@
  { 
  (yyval.str) = mm_strdup("variadic");
 }
-#line 60301 "preproc.c"
+#line 60253 "preproc.c"
     break;
 
   case 2834: /* reserved_keyword: WHEN  */
@@ -60305,7 +60257,7 @@
  { 
  (yyval.str) = mm_strdup("when");
 }
-#line 60309 "preproc.c"
+#line 60261 "preproc.c"
     break;
 
   case 2835: /* reserved_keyword: WHERE  */
@@ -60313,7 +60265,7 @@
  { 
  (yyval.str) = mm_strdup("where");
 }
-#line 60317 "preproc.c"
+#line 60269 "preproc.c"
     break;
 
   case 2836: /* reserved_keyword: WINDOW  */
@@ -60321,7 +60273,7 @@
  { 
  (yyval.str) = mm_strdup("window");
 }
-#line 60325 "preproc.c"
+#line 60277 "preproc.c"
     break;
 
   case 2837: /* reserved_keyword: WITH  */
@@ -60329,7 +60281,7 @@
  { 
  (yyval.str) = mm_strdup("with");
 }
-#line 60333 "preproc.c"
+#line 60285 "preproc.c"
     break;
 
   case 2838: /* bare_label_keyword: ABORT_P  */
@@ -60337,7 +60289,7 @@
  { 
  (yyval.str) = mm_strdup("abort");
 }
-#line 60341 "preproc.c"
+#line 60293 "preproc.c"
     break;
 
   case 2839: /* bare_label_keyword: ABSENT  */
@@ -60345,7 +60297,7 @@
  { 
  (yyval.str) = mm_strdup("absent");
 }
-#line 60349 "preproc.c"
+#line 60301 "preproc.c"
     break;
 
   case 2840: /* bare_label_keyword: ABSOLUTE_P  */
@@ -60353,7 +60305,7 @@
  { 
  (yyval.str) = mm_strdup("absolute");
 }
-#line 60357 "preproc.c"
+#line 60309 "preproc.c"
     break;
 
   case 2841: /* bare_label_keyword: ACCESS  */
@@ -60361,7 +60313,7 @@
  { 
  (yyval.str) = mm_strdup("access");
 }
-#line 60365 "preproc.c"
+#line 60317 "preproc.c"
     break;
 
   case 2842: /* bare_label_keyword: ACTION  */
@@ -60369,7 +60321,7 @@
  { 
  (yyval.str) = mm_strdup("action");
 }
-#line 60373 "preproc.c"
+#line 60325 "preproc.c"
     break;
 
   case 2843: /* bare_label_keyword: ADD_P  */
@@ -60377,7 +60329,7 @@
  { 
  (yyval.str) = mm_strdup("add");
 }
-#line 60381 "preproc.c"
+#line 60333 "preproc.c"
     break;
 
   case 2844: /* bare_label_keyword: ADMIN  */
@@ -60385,7 +60337,7 @@
  { 
  (yyval.str) = mm_strdup("admin");
 }
-#line 60389 "preproc.c"
+#line 60341 "preproc.c"
     break;
 
   case 2845: /* bare_label_keyword: AFTER  */
@@ -60393,7 +60345,7 @@
  { 
  (yyval.str) = mm_strdup("after");
 }
-#line 60397 "preproc.c"
+#line 60349 "preproc.c"
     break;
 
   case 2846: /* bare_label_keyword: AGGREGATE  */
@@ -60401,7 +60353,7 @@
  { 
  (yyval.str) = mm_strdup("aggregate");
 }
-#line 60405 "preproc.c"
+#line 60357 "preproc.c"
     break;
 
   case 2847: /* bare_label_keyword: ALL  */
@@ -60409,7 +60361,7 @@
  { 
  (yyval.str) = mm_strdup("all");
 }
-#line 60413 "preproc.c"
+#line 60365 "preproc.c"
     break;
 
   case 2848: /* bare_label_keyword: ALSO  */
@@ -60417,7 +60369,7 @@
  { 
  (yyval.str) = mm_strdup("also");
 }
-#line 60421 "preproc.c"
+#line 60373 "preproc.c"
     break;
 
   case 2849: /* bare_label_keyword: ALTER  */
@@ -60425,7 +60377,7 @@
  { 
  (yyval.str) = mm_strdup("alter");
 }
-#line 60429 "preproc.c"
+#line 60381 "preproc.c"
     break;
 
   case 2850: /* bare_label_keyword: ALWAYS  */
@@ -60433,7 +60385,7 @@
  { 
  (yyval.str) = mm_strdup("always");
 }
-#line 60437 "preproc.c"
+#line 60389 "preproc.c"
     break;
 
   case 2851: /* bare_label_keyword: ANALYSE  */
@@ -60441,7 +60393,7 @@
  { 
  (yyval.str) = mm_strdup("analyse");
 }
-#line 60445 "preproc.c"
+#line 60397 "preproc.c"
     break;
 
   case 2852: /* bare_label_keyword: ANALYZE  */
@@ -60449,7 +60401,7 @@
  { 
  (yyval.str) = mm_strdup("analyze");
 }
-#line 60453 "preproc.c"
+#line 60405 "preproc.c"
     break;
 
   case 2853: /* bare_label_keyword: AND  */
@@ -60457,7 +60409,7 @@
  { 
  (yyval.str) = mm_strdup("and");
 }
-#line 60461 "preproc.c"
+#line 60413 "preproc.c"
     break;
 
   case 2854: /* bare_label_keyword: ANY  */
@@ -60465,7 +60417,7 @@
  { 
  (yyval.str) = mm_strdup("any");
 }
-#line 60469 "preproc.c"
+#line 60421 "preproc.c"
     break;
 
   case 2855: /* bare_label_keyword: ASC  */
@@ -60473,7 +60425,7 @@
  { 
  (yyval.str) = mm_strdup("asc");
 }
-#line 60477 "preproc.c"
+#line 60429 "preproc.c"
     break;
 
   case 2856: /* bare_label_keyword: ASENSITIVE  */
@@ -60481,7 +60433,7 @@
  { 
  (yyval.str) = mm_strdup("asensitive");
 }
-#line 60485 "preproc.c"
+#line 60437 "preproc.c"
     break;
 
   case 2857: /* bare_label_keyword: ASSERTION  */
@@ -60489,7 +60441,7 @@
  { 
  (yyval.str) = mm_strdup("assertion");
 }
-#line 60493 "preproc.c"
+#line 60445 "preproc.c"
     break;
 
   case 2858: /* bare_label_keyword: ASSIGNMENT  */
@@ -60497,7 +60449,7 @@
  { 
  (yyval.str) = mm_strdup("assignment");
 }
-#line 60501 "preproc.c"
+#line 60453 "preproc.c"
     break;
 
   case 2859: /* bare_label_keyword: ASYMMETRIC  */
@@ -60505,7 +60457,7 @@
  { 
  (yyval.str) = mm_strdup("asymmetric");
 }
-#line 60509 "preproc.c"
+#line 60461 "preproc.c"
     break;
 
   case 2860: /* bare_label_keyword: AT  */
@@ -60513,7 +60465,7 @@
  { 
  (yyval.str) = mm_strdup("at");
 }
-#line 60517 "preproc.c"
+#line 60469 "preproc.c"
     break;
 
   case 2861: /* bare_label_keyword: ATOMIC  */
@@ -60521,7 +60473,7 @@
  { 
  (yyval.str) = mm_strdup("atomic");
 }
-#line 60525 "preproc.c"
+#line 60477 "preproc.c"
     break;
 
   case 2862: /* bare_label_keyword: ATTACH  */
@@ -60529,7 +60481,7 @@
  { 
  (yyval.str) = mm_strdup("attach");
 }
-#line 60533 "preproc.c"
+#line 60485 "preproc.c"
     break;
 
   case 2863: /* bare_label_keyword: ATTRIBUTE  */
@@ -60537,7 +60489,7 @@
  { 
  (yyval.str) = mm_strdup("attribute");
 }
-#line 60541 "preproc.c"
+#line 60493 "preproc.c"
     break;
 
   case 2864: /* bare_label_keyword: AUTHORIZATION  */
@@ -60545,7 +60497,7 @@
  { 
  (yyval.str) = mm_strdup("authorization");
 }
-#line 60549 "preproc.c"
+#line 60501 "preproc.c"
     break;
 
   case 2865: /* bare_label_keyword: BACKWARD  */
@@ -60553,7 +60505,7 @@
  { 
  (yyval.str) = mm_strdup("backward");
 }
-#line 60557 "preproc.c"
+#line 60509 "preproc.c"
     break;
 
   case 2866: /* bare_label_keyword: BEFORE  */
@@ -60561,7 +60513,7 @@
  { 
  (yyval.str) = mm_strdup("before");
 }
-#line 60565 "preproc.c"
+#line 60517 "preproc.c"
     break;
 
   case 2867: /* bare_label_keyword: BEGIN_P  */
@@ -60569,7 +60521,7 @@
  { 
  (yyval.str) = mm_strdup("begin");
 }
-#line 60573 "preproc.c"
+#line 60525 "preproc.c"
     break;
 
   case 2868: /* bare_label_keyword: BETWEEN  */
@@ -60577,7 +60529,7 @@
  { 
  (yyval.str) = mm_strdup("between");
 }
-#line 60581 "preproc.c"
+#line 60533 "preproc.c"
     break;
 
   case 2869: /* bare_label_keyword: BIGINT  */
@@ -60585,7 +60537,7 @@
  { 
  (yyval.str) = mm_strdup("bigint");
 }
-#line 60589 "preproc.c"
+#line 60541 "preproc.c"
     break;
 
   case 2870: /* bare_label_keyword: BINARY  */
@@ -60593,7 +60545,7 @@
  { 
  (yyval.str) = mm_strdup("binary");
 }
-#line 60597 "preproc.c"
+#line 60549 "preproc.c"
     break;
 
   case 2871: /* bare_label_keyword: BIT  */
@@ -60601,7 +60553,7 @@
  { 
  (yyval.str) = mm_strdup("bit");
 }
-#line 60605 "preproc.c"
+#line 60557 "preproc.c"
     break;
 
   case 2872: /* bare_label_keyword: BOOLEAN_P  */
@@ -60609,7 +60561,7 @@
  { 
  (yyval.str) = mm_strdup("boolean");
 }
-#line 60613 "preproc.c"
+#line 60565 "preproc.c"
     break;
 
   case 2873: /* bare_label_keyword: BOTH  */
@@ -60617,7 +60569,7 @@
  { 
  (yyval.str) = mm_strdup("both");
 }
-#line 60621 "preproc.c"
+#line 60573 "preproc.c"
     break;
 
   case 2874: /* bare_label_keyword: BREADTH  */
@@ -60625,7 +60577,7 @@
  { 
  (yyval.str) = mm_strdup("breadth");
 }
-#line 60629 "preproc.c"
+#line 60581 "preproc.c"
     break;
 
   case 2875: /* bare_label_keyword: BY  */
@@ -60633,7 +60585,7 @@
  { 
  (yyval.str) = mm_strdup("by");
 }
-#line 60637 "preproc.c"
+#line 60589 "preproc.c"
     break;
 
   case 2876: /* bare_label_keyword: CACHE  */
@@ -60641,7 +60593,7 @@
  { 
  (yyval.str) = mm_strdup("cache");
 }
-#line 60645 "preproc.c"
+#line 60597 "preproc.c"
     break;
 
   case 2877: /* bare_label_keyword: CALL  */
@@ -60649,7 +60601,7 @@
  { 
  (yyval.str) = mm_strdup("call");
 }
-#line 60653 "preproc.c"
+#line 60605 "preproc.c"
     break;
 
   case 2878: /* bare_label_keyword: CALLED  */
@@ -60657,7 +60609,7 @@
  { 
  (yyval.str) = mm_strdup("called");
 }
-#line 60661 "preproc.c"
+#line 60613 "preproc.c"
     break;
 
   case 2879: /* bare_label_keyword: CASCADE  */
@@ -60665,7 +60617,7 @@
  { 
  (yyval.str) = mm_strdup("cascade");
 }
-#line 60669 "preproc.c"
+#line 60621 "preproc.c"
     break;
 
   case 2880: /* bare_label_keyword: CASCADED  */
@@ -60673,7 +60625,7 @@
  { 
  (yyval.str) = mm_strdup("cascaded");
 }
-#line 60677 "preproc.c"
+#line 60629 "preproc.c"
     break;
 
   case 2881: /* bare_label_keyword: CASE  */
@@ -60681,7 +60633,7 @@
  { 
  (yyval.str) = mm_strdup("case");
 }
-#line 60685 "preproc.c"
+#line 60637 "preproc.c"
     break;
 
   case 2882: /* bare_label_keyword: CAST  */
@@ -60689,7 +60641,7 @@
  { 
  (yyval.str) = mm_strdup("cast");
 }
-#line 60693 "preproc.c"
+#line 60645 "preproc.c"
     break;
 
   case 2883: /* bare_label_keyword: CATALOG_P  */
@@ -60697,7 +60649,7 @@
  { 
  (yyval.str) = mm_strdup("catalog");
 }
-#line 60701 "preproc.c"
+#line 60653 "preproc.c"
     break;
 
   case 2884: /* bare_label_keyword: CHAIN  */
@@ -60705,7 +60657,7 @@
  { 
  (yyval.str) = mm_strdup("chain");
 }
-#line 60709 "preproc.c"
+#line 60661 "preproc.c"
     break;
 
   case 2885: /* bare_label_keyword: CHARACTERISTICS  */
@@ -60713,7 +60665,7 @@
  { 
  (yyval.str) = mm_strdup("characteristics");
 }
-#line 60717 "preproc.c"
+#line 60669 "preproc.c"
     break;
 
   case 2886: /* bare_label_keyword: CHECK  */
@@ -60721,7 +60673,7 @@
  { 
  (yyval.str) = mm_strdup("check");
 }
-#line 60725 "preproc.c"
+#line 60677 "preproc.c"
     break;
 
   case 2887: /* bare_label_keyword: CHECKPOINT  */
@@ -60729,7 +60681,7 @@
  { 
  (yyval.str) = mm_strdup("checkpoint");
 }
-#line 60733 "preproc.c"
+#line 60685 "preproc.c"
     break;
 
   case 2888: /* bare_label_keyword: CLASS  */
@@ -60737,7 +60689,7 @@
  { 
  (yyval.str) = mm_strdup("class");
 }
-#line 60741 "preproc.c"
+#line 60693 "preproc.c"
     break;
 
   case 2889: /* bare_label_keyword: CLOSE  */
@@ -60745,7 +60697,7 @@
  { 
  (yyval.str) = mm_strdup("close");
 }
-#line 60749 "preproc.c"
+#line 60701 "preproc.c"
     break;
 
   case 2890: /* bare_label_keyword: CLUSTER  */
@@ -60753,7 +60705,7 @@
  { 
  (yyval.str) = mm_strdup("cluster");
 }
-#line 60757 "preproc.c"
+#line 60709 "preproc.c"
     break;
 
   case 2891: /* bare_label_keyword: COALESCE  */
@@ -60761,7 +60713,7 @@
  { 
  (yyval.str) = mm_strdup("coalesce");
 }
-#line 60765 "preproc.c"
+#line 60717 "preproc.c"
     break;
 
   case 2892: /* bare_label_keyword: COLLATE  */
@@ -60769,7 +60721,7 @@
  { 
  (yyval.str) = mm_strdup("collate");
 }
-#line 60773 "preproc.c"
+#line 60725 "preproc.c"
     break;
 
   case 2893: /* bare_label_keyword: COLLATION  */
@@ -60777,7 +60729,7 @@
  { 
  (yyval.str) = mm_strdup("collation");
 }
-#line 60781 "preproc.c"
+#line 60733 "preproc.c"
     break;
 
   case 2894: /* bare_label_keyword: COLUMN  */
@@ -60785,7 +60737,7 @@
  { 
  (yyval.str) = mm_strdup("column");
 }
-#line 60789 "preproc.c"
+#line 60741 "preproc.c"
     break;
 
   case 2895: /* bare_label_keyword: COLUMNS  */
@@ -60793,7 +60745,7 @@
  { 
  (yyval.str) = mm_strdup("columns");
 }
-#line 60797 "preproc.c"
+#line 60749 "preproc.c"
     break;
 
   case 2896: /* bare_label_keyword: COMMENT  */
@@ -60801,7 +60753,7 @@
  { 
  (yyval.str) = mm_strdup("comment");
 }
-#line 60805 "preproc.c"
+#line 60757 "preproc.c"
     break;
 
   case 2897: /* bare_label_keyword: COMMENTS  */
@@ -60809,7 +60761,7 @@
  { 
  (yyval.str) = mm_strdup("comments");
 }
-#line 60813 "preproc.c"
+#line 60765 "preproc.c"
     break;
 
   case 2898: /* bare_label_keyword: COMMIT  */
@@ -60817,7 +60769,7 @@
  { 
  (yyval.str) = mm_strdup("commit");
 }
-#line 60821 "preproc.c"
+#line 60773 "preproc.c"
     break;
 
   case 2899: /* bare_label_keyword: COMMITTED  */
@@ -60825,7 +60777,7 @@
  { 
  (yyval.str) = mm_strdup("committed");
 }
-#line 60829 "preproc.c"
+#line 60781 "preproc.c"
     break;
 
   case 2900: /* bare_label_keyword: COMPRESSION  */
@@ -60833,7 +60785,7 @@
  { 
  (yyval.str) = mm_strdup("compression");
 }
-#line 60837 "preproc.c"
+#line 60789 "preproc.c"
     break;
 
   case 2901: /* bare_label_keyword: CONCURRENTLY  */
@@ -60841,7 +60793,7 @@
  { 
  (yyval.str) = mm_strdup("concurrently");
 }
-#line 60845 "preproc.c"
+#line 60797 "preproc.c"
     break;
 
   case 2902: /* bare_label_keyword: CONFIGURATION  */
@@ -60849,7 +60801,7 @@
  { 
  (yyval.str) = mm_strdup("configuration");
 }
-#line 60853 "preproc.c"
+#line 60805 "preproc.c"
     break;
 
   case 2903: /* bare_label_keyword: CONFLICT  */
@@ -60857,7 +60809,7 @@
  { 
  (yyval.str) = mm_strdup("conflict");
 }
-#line 60861 "preproc.c"
+#line 60813 "preproc.c"
     break;
 
   case 2904: /* bare_label_keyword: CONNECTION  */
@@ -60865,7 +60817,7 @@
  { 
  (yyval.str) = mm_strdup("connection");
 }
-#line 60869 "preproc.c"
+#line 60821 "preproc.c"
     break;
 
   case 2905: /* bare_label_keyword: CONSTRAINT  */
@@ -60873,7 +60825,7 @@
  { 
  (yyval.str) = mm_strdup("constraint");
 }
-#line 60877 "preproc.c"
+#line 60829 "preproc.c"
     break;
 
   case 2906: /* bare_label_keyword: CONSTRAINTS  */
@@ -60881,7 +60833,7 @@
  { 
  (yyval.str) = mm_strdup("constraints");
 }
-#line 60885 "preproc.c"
+#line 60837 "preproc.c"
     break;
 
   case 2907: /* bare_label_keyword: CONTENT_P  */
@@ -60889,7 +60841,7 @@
  { 
  (yyval.str) = mm_strdup("content");
 }
-#line 60893 "preproc.c"
+#line 60845 "preproc.c"
     break;
 
   case 2908: /* bare_label_keyword: CONTINUE_P  */
@@ -60897,7 +60849,7 @@
  { 
  (yyval.str) = mm_strdup("continue");
 }
-#line 60901 "preproc.c"
+#line 60853 "preproc.c"
     break;
 
   case 2909: /* bare_label_keyword: CONVERSION_P  */
@@ -60905,7 +60857,7 @@
  { 
  (yyval.str) = mm_strdup("conversion");
 }
-#line 60909 "preproc.c"
+#line 60861 "preproc.c"
     break;
 
   case 2910: /* bare_label_keyword: COPY  */
@@ -60913,7 +60865,7 @@
  { 
  (yyval.str) = mm_strdup("copy");
 }
-#line 60917 "preproc.c"
+#line 60869 "preproc.c"
     break;
 
   case 2911: /* bare_label_keyword: COST  */
@@ -60921,7 +60873,7 @@
  { 
  (yyval.str) = mm_strdup("cost");
 }
-#line 60925 "preproc.c"
+#line 60877 "preproc.c"
     break;
 
   case 2912: /* bare_label_keyword: CROSS  */
@@ -60929,7 +60881,7 @@
  { 
  (yyval.str) = mm_strdup("cross");
 }
-#line 60933 "preproc.c"
+#line 60885 "preproc.c"
     break;
 
   case 2913: /* bare_label_keyword: CSV  */
@@ -60937,7 +60889,7 @@
  { 
  (yyval.str) = mm_strdup("csv");
 }
-#line 60941 "preproc.c"
+#line 60893 "preproc.c"
     break;
 
   case 2914: /* bare_label_keyword: CUBE  */
@@ -60945,7 +60897,7 @@
  { 
  (yyval.str) = mm_strdup("cube");
 }
-#line 60949 "preproc.c"
+#line 60901 "preproc.c"
     break;
 
   case 2915: /* bare_label_keyword: CURRENT_P  */
@@ -60953,7 +60905,7 @@
  { 
  (yyval.str) = mm_strdup("current");
 }
-#line 60957 "preproc.c"
+#line 60909 "preproc.c"
     break;
 
   case 2916: /* bare_label_keyword: CURRENT_CATALOG  */
@@ -60961,7 +60913,7 @@
  { 
  (yyval.str) = mm_strdup("current_catalog");
 }
-#line 60965 "preproc.c"
+#line 60917 "preproc.c"
     break;
 
   case 2917: /* bare_label_keyword: CURRENT_DATE  */
@@ -60969,7 +60921,7 @@
  { 
  (yyval.str) = mm_strdup("current_date");
 }
-#line 60973 "preproc.c"
+#line 60925 "preproc.c"
     break;
 
   case 2918: /* bare_label_keyword: CURRENT_ROLE  */
@@ -60977,7 +60929,7 @@
  { 
  (yyval.str) = mm_strdup("current_role");
 }
-#line 60981 "preproc.c"
+#line 60933 "preproc.c"
     break;
 
   case 2919: /* bare_label_keyword: CURRENT_SCHEMA  */
@@ -60985,7 +60937,7 @@
  { 
  (yyval.str) = mm_strdup("current_schema");
 }
-#line 60989 "preproc.c"
+#line 60941 "preproc.c"
     break;
 
   case 2920: /* bare_label_keyword: CURRENT_TIME  */
@@ -60993,7 +60945,7 @@
  { 
  (yyval.str) = mm_strdup("current_time");
 }
-#line 60997 "preproc.c"
+#line 60949 "preproc.c"
     break;
 
   case 2921: /* bare_label_keyword: CURRENT_TIMESTAMP  */
@@ -61001,7 +60953,7 @@
  { 
  (yyval.str) = mm_strdup("current_timestamp");
 }
-#line 61005 "preproc.c"
+#line 60957 "preproc.c"
     break;
 
   case 2922: /* bare_label_keyword: CURRENT_USER  */
@@ -61009,7 +60961,7 @@
  { 
  (yyval.str) = mm_strdup("current_user");
 }
-#line 61013 "preproc.c"
+#line 60965 "preproc.c"
     break;
 
   case 2923: /* bare_label_keyword: CURSOR  */
@@ -61017,7 +60969,7 @@
  { 
  (yyval.str) = mm_strdup("cursor");
 }
-#line 61021 "preproc.c"
+#line 60973 "preproc.c"
     break;
 
   case 2924: /* bare_label_keyword: CYCLE  */
@@ -61025,7 +60977,7 @@
  { 
  (yyval.str) = mm_strdup("cycle");
 }
-#line 61029 "preproc.c"
+#line 60981 "preproc.c"
     break;
 
   case 2925: /* bare_label_keyword: DATA_P  */
@@ -61033,7 +60985,7 @@
  { 
  (yyval.str) = mm_strdup("data");
 }
-#line 61037 "preproc.c"
+#line 60989 "preproc.c"
     break;
 
   case 2926: /* bare_label_keyword: DATABASE  */
@@ -61041,7 +60993,7 @@
  { 
  (yyval.str) = mm_strdup("database");
 }
-#line 61045 "preproc.c"
+#line 60997 "preproc.c"
     break;
 
   case 2927: /* bare_label_keyword: DEALLOCATE  */
@@ -61049,7 +61001,7 @@
  { 
  (yyval.str) = mm_strdup("deallocate");
 }
-#line 61053 "preproc.c"
+#line 61005 "preproc.c"
     break;
 
   case 2928: /* bare_label_keyword: DEC  */
@@ -61057,7 +61009,7 @@
  { 
  (yyval.str) = mm_strdup("dec");
 }
-#line 61061 "preproc.c"
+#line 61013 "preproc.c"
     break;
 
   case 2929: /* bare_label_keyword: DECIMAL_P  */
@@ -61065,7 +61017,7 @@
  { 
  (yyval.str) = mm_strdup("decimal");
 }
-#line 61069 "preproc.c"
+#line 61021 "preproc.c"
     break;
 
   case 2930: /* bare_label_keyword: DECLARE  */
@@ -61073,7 +61025,7 @@
  { 
  (yyval.str) = mm_strdup("declare");
 }
-#line 61077 "preproc.c"
+#line 61029 "preproc.c"
     break;
 
   case 2931: /* bare_label_keyword: DEFAULT  */
@@ -61081,7 +61033,7 @@
  { 
  (yyval.str) = mm_strdup("default");
 }
-#line 61085 "preproc.c"
+#line 61037 "preproc.c"
     break;
 
   case 2932: /* bare_label_keyword: DEFAULTS  */
@@ -61089,7 +61041,7 @@
  { 
  (yyval.str) = mm_strdup("defaults");
 }
-#line 61093 "preproc.c"
+#line 61045 "preproc.c"
     break;
 
   case 2933: /* bare_label_keyword: DEFERRABLE  */
@@ -61097,7 +61049,7 @@
  { 
  (yyval.str) = mm_strdup("deferrable");
 }
-#line 61101 "preproc.c"
+#line 61053 "preproc.c"
     break;
 
   case 2934: /* bare_label_keyword: DEFERRED  */
@@ -61105,7 +61057,7 @@
  { 
  (yyval.str) = mm_strdup("deferred");
 }
-#line 61109 "preproc.c"
+#line 61061 "preproc.c"
     break;
 
   case 2935: /* bare_label_keyword: DEFINER  */
@@ -61113,7 +61065,7 @@
  { 
  (yyval.str) = mm_strdup("definer");
 }
-#line 61117 "preproc.c"
+#line 61069 "preproc.c"
     break;
 
   case 2936: /* bare_label_keyword: DELETE_P  */
@@ -61121,7 +61073,7 @@
  { 
  (yyval.str) = mm_strdup("delete");
 }
-#line 61125 "preproc.c"
+#line 61077 "preproc.c"
     break;
 
   case 2937: /* bare_label_keyword: DELIMITER  */
@@ -61129,7 +61081,7 @@
  { 
  (yyval.str) = mm_strdup("delimiter");
 }
-#line 61133 "preproc.c"
+#line 61085 "preproc.c"
     break;
 
   case 2938: /* bare_label_keyword: DELIMITERS  */
@@ -61137,7 +61089,7 @@
  { 
  (yyval.str) = mm_strdup("delimiters");
 }
-#line 61141 "preproc.c"
+#line 61093 "preproc.c"
     break;
 
   case 2939: /* bare_label_keyword: DEPENDS  */
@@ -61145,7 +61097,7 @@
  { 
  (yyval.str) = mm_strdup("depends");
 }
-#line 61149 "preproc.c"
+#line 61101 "preproc.c"
     break;
 
   case 2940: /* bare_label_keyword: DEPTH  */
@@ -61153,7 +61105,7 @@
  { 
  (yyval.str) = mm_strdup("depth");
 }
-#line 61157 "preproc.c"
+#line 61109 "preproc.c"
     break;
 
   case 2941: /* bare_label_keyword: DESC  */
@@ -61161,7 +61113,7 @@
  { 
  (yyval.str) = mm_strdup("desc");
 }
-#line 61165 "preproc.c"
+#line 61117 "preproc.c"
     break;
 
   case 2942: /* bare_label_keyword: DETACH  */
@@ -61169,7 +61121,7 @@
  { 
  (yyval.str) = mm_strdup("detach");
 }
-#line 61173 "preproc.c"
+#line 61125 "preproc.c"
     break;
 
   case 2943: /* bare_label_keyword: DICTIONARY  */
@@ -61177,7 +61129,7 @@
  { 
  (yyval.str) = mm_strdup("dictionary");
 }
-#line 61181 "preproc.c"
+#line 61133 "preproc.c"
     break;
 
   case 2944: /* bare_label_keyword: DISABLE_P  */
@@ -61185,7 +61137,7 @@
  { 
  (yyval.str) = mm_strdup("disable");
 }
-#line 61189 "preproc.c"
+#line 61141 "preproc.c"
     break;
 
   case 2945: /* bare_label_keyword: DISCARD  */
@@ -61193,7 +61145,7 @@
  { 
  (yyval.str) = mm_strdup("discard");
 }
-#line 61197 "preproc.c"
+#line 61149 "preproc.c"
     break;
 
   case 2946: /* bare_label_keyword: DISTINCT  */
@@ -61201,7 +61153,7 @@
  { 
  (yyval.str) = mm_strdup("distinct");
 }
-#line 61205 "preproc.c"
+#line 61157 "preproc.c"
     break;
 
   case 2947: /* bare_label_keyword: DO  */
@@ -61209,7 +61161,7 @@
  { 
  (yyval.str) = mm_strdup("do");
 }
-#line 61213 "preproc.c"
+#line 61165 "preproc.c"
     break;
 
   case 2948: /* bare_label_keyword: DOCUMENT_P  */
@@ -61217,7 +61169,7 @@
  { 
  (yyval.str) = mm_strdup("document");
 }
-#line 61221 "preproc.c"
+#line 61173 "preproc.c"
     break;
 
   case 2949: /* bare_label_keyword: DOMAIN_P  */
@@ -61225,7 +61177,7 @@
  { 
  (yyval.str) = mm_strdup("domain");
 }
-#line 61229 "preproc.c"
+#line 61181 "preproc.c"
     break;
 
   case 2950: /* bare_label_keyword: DOUBLE_P  */
@@ -61233,7 +61185,7 @@
  { 
  (yyval.str) = mm_strdup("double");
 }
-#line 61237 "preproc.c"
+#line 61189 "preproc.c"
     break;
 
   case 2951: /* bare_label_keyword: DROP  */
@@ -61241,7 +61193,7 @@
  { 
  (yyval.str) = mm_strdup("drop");
 }
-#line 61245 "preproc.c"
+#line 61197 "preproc.c"
     break;
 
   case 2952: /* bare_label_keyword: EACH  */
@@ -61249,7 +61201,7 @@
  { 
  (yyval.str) = mm_strdup("each");
 }
-#line 61253 "preproc.c"
+#line 61205 "preproc.c"
     break;
 
   case 2953: /* bare_label_keyword: ELSE  */
@@ -61257,7 +61209,7 @@
  { 
  (yyval.str) = mm_strdup("else");
 }
-#line 61261 "preproc.c"
+#line 61213 "preproc.c"
     break;
 
   case 2954: /* bare_label_keyword: ENABLE_P  */
@@ -61265,7 +61217,7 @@
  { 
  (yyval.str) = mm_strdup("enable");
 }
-#line 61269 "preproc.c"
+#line 61221 "preproc.c"
     break;
 
   case 2955: /* bare_label_keyword: ENCODING  */
@@ -61273,7 +61225,7 @@
  { 
  (yyval.str) = mm_strdup("encoding");
 }
-#line 61277 "preproc.c"
+#line 61229 "preproc.c"
     break;
 
   case 2956: /* bare_label_keyword: ENCRYPTED  */
@@ -61281,7 +61233,7 @@
  { 
  (yyval.str) = mm_strdup("encrypted");
 }
-#line 61285 "preproc.c"
+#line 61237 "preproc.c"
     break;
 
   case 2957: /* bare_label_keyword: END_P  */
@@ -61289,7 +61241,7 @@
  { 
  (yyval.str) = mm_strdup("end");
 }
-#line 61293 "preproc.c"
+#line 61245 "preproc.c"
     break;
 
   case 2958: /* bare_label_keyword: ENUM_P  */
@@ -61297,7 +61249,7 @@
  { 
  (yyval.str) = mm_strdup("enum");
 }
-#line 61301 "preproc.c"
+#line 61253 "preproc.c"
     break;
 
   case 2959: /* bare_label_keyword: ESCAPE  */
@@ -61305,7 +61257,7 @@
  { 
  (yyval.str) = mm_strdup("escape");
 }
-#line 61309 "preproc.c"
+#line 61261 "preproc.c"
     break;
 
   case 2960: /* bare_label_keyword: EVENT  */
@@ -61313,7 +61265,7 @@
  { 
  (yyval.str) = mm_strdup("event");
 }
-#line 61317 "preproc.c"
+#line 61269 "preproc.c"
     break;
 
   case 2961: /* bare_label_keyword: EXCLUDE  */
@@ -61321,7 +61273,7 @@
  { 
  (yyval.str) = mm_strdup("exclude");
 }
-#line 61325 "preproc.c"
+#line 61277 "preproc.c"
     break;
 
   case 2962: /* bare_label_keyword: EXCLUDING  */
@@ -61329,7 +61281,7 @@
  { 
  (yyval.str) = mm_strdup("excluding");
 }
-#line 61333 "preproc.c"
+#line 61285 "preproc.c"
     break;
 
   case 2963: /* bare_label_keyword: EXCLUSIVE  */
@@ -61337,7 +61289,7 @@
  { 
  (yyval.str) = mm_strdup("exclusive");
 }
-#line 61341 "preproc.c"
+#line 61293 "preproc.c"
     break;
 
   case 2964: /* bare_label_keyword: EXECUTE  */
@@ -61345,7 +61297,7 @@
  { 
  (yyval.str) = mm_strdup("execute");
 }
-#line 61349 "preproc.c"
+#line 61301 "preproc.c"
     break;
 
   case 2965: /* bare_label_keyword: EXISTS  */
@@ -61353,7 +61305,7 @@
  { 
  (yyval.str) = mm_strdup("exists");
 }
-#line 61357 "preproc.c"
+#line 61309 "preproc.c"
     break;
 
   case 2966: /* bare_label_keyword: EXPLAIN  */
@@ -61361,7 +61313,7 @@
  { 
  (yyval.str) = mm_strdup("explain");
 }
-#line 61365 "preproc.c"
+#line 61317 "preproc.c"
     break;
 
   case 2967: /* bare_label_keyword: EXPRESSION  */
@@ -61369,7 +61321,7 @@
  { 
  (yyval.str) = mm_strdup("expression");
 }
-#line 61373 "preproc.c"
+#line 61325 "preproc.c"
     break;
 
   case 2968: /* bare_label_keyword: EXTENSION  */
@@ -61377,7 +61329,7 @@
  { 
  (yyval.str) = mm_strdup("extension");
 }
-#line 61381 "preproc.c"
+#line 61333 "preproc.c"
     break;
 
   case 2969: /* bare_label_keyword: EXTERNAL  */
@@ -61385,7 +61337,7 @@
  { 
  (yyval.str) = mm_strdup("external");
 }
-#line 61389 "preproc.c"
+#line 61341 "preproc.c"
     break;
 
   case 2970: /* bare_label_keyword: EXTRACT  */
@@ -61393,7 +61345,7 @@
  { 
  (yyval.str) = mm_strdup("extract");
 }
-#line 61397 "preproc.c"
+#line 61349 "preproc.c"
     break;
 
   case 2971: /* bare_label_keyword: FALSE_P  */
@@ -61401,7 +61353,7 @@
  { 
  (yyval.str) = mm_strdup("false");
 }
-#line 61405 "preproc.c"
+#line 61357 "preproc.c"
     break;
 
   case 2972: /* bare_label_keyword: FAMILY  */
@@ -61409,7 +61361,7 @@
  { 
  (yyval.str) = mm_strdup("family");
 }
-#line 61413 "preproc.c"
+#line 61365 "preproc.c"
     break;
 
   case 2973: /* bare_label_keyword: FINALIZE  */
@@ -61417,7 +61369,7 @@
  { 
  (yyval.str) = mm_strdup("finalize");
 }
-#line 61421 "preproc.c"
+#line 61373 "preproc.c"
     break;
 
   case 2974: /* bare_label_keyword: FIRST_P  */
@@ -61425,7 +61377,7 @@
  { 
  (yyval.str) = mm_strdup("first");
 }
-#line 61429 "preproc.c"
+#line 61381 "preproc.c"
     break;
 
   case 2975: /* bare_label_keyword: FLOAT_P  */
@@ -61433,7 +61385,7 @@
  { 
  (yyval.str) = mm_strdup("float");
 }
-#line 61437 "preproc.c"
+#line 61389 "preproc.c"
     break;
 
   case 2976: /* bare_label_keyword: FOLLOWING  */
@@ -61441,7 +61393,7 @@
  { 
  (yyval.str) = mm_strdup("following");
 }
-#line 61445 "preproc.c"
+#line 61397 "preproc.c"
     break;
 
   case 2977: /* bare_label_keyword: FORCE  */
@@ -61449,7 +61401,7 @@
  { 
  (yyval.str) = mm_strdup("force");
 }
-#line 61453 "preproc.c"
+#line 61405 "preproc.c"
     break;
 
   case 2978: /* bare_label_keyword: FOREIGN  */
@@ -61457,7 +61409,7 @@
  { 
  (yyval.str) = mm_strdup("foreign");
 }
-#line 61461 "preproc.c"
+#line 61413 "preproc.c"
     break;
 
   case 2979: /* bare_label_keyword: FORMAT  */
@@ -61465,7 +61417,7 @@
  { 
  (yyval.str) = mm_strdup("format");
 }
-#line 61469 "preproc.c"
+#line 61421 "preproc.c"
     break;
 
   case 2980: /* bare_label_keyword: FORWARD  */
@@ -61473,7 +61425,7 @@
  { 
  (yyval.str) = mm_strdup("forward");
 }
-#line 61477 "preproc.c"
+#line 61429 "preproc.c"
     break;
 
   case 2981: /* bare_label_keyword: FREEZE  */
@@ -61481,7 +61433,7 @@
  { 
  (yyval.str) = mm_strdup("freeze");
 }
-#line 61485 "preproc.c"
+#line 61437 "preproc.c"
     break;
 
   case 2982: /* bare_label_keyword: FULL  */
@@ -61489,7 +61441,7 @@
  { 
  (yyval.str) = mm_strdup("full");
 }
-#line 61493 "preproc.c"
+#line 61445 "preproc.c"
     break;
 
   case 2983: /* bare_label_keyword: FUNCTION  */
@@ -61497,7 +61449,7 @@
  { 
  (yyval.str) = mm_strdup("function");
 }
-#line 61501 "preproc.c"
+#line 61453 "preproc.c"
     break;
 
   case 2984: /* bare_label_keyword: FUNCTIONS  */
@@ -61505,7 +61457,7 @@
  { 
  (yyval.str) = mm_strdup("functions");
 }
-#line 61509 "preproc.c"
+#line 61461 "preproc.c"
     break;
 
   case 2985: /* bare_label_keyword: GENERATED  */
@@ -61513,7 +61465,7 @@
  { 
  (yyval.str) = mm_strdup("generated");
 }
-#line 61517 "preproc.c"
+#line 61469 "preproc.c"
     break;
 
   case 2986: /* bare_label_keyword: GLOBAL  */
@@ -61521,7 +61473,7 @@
  { 
  (yyval.str) = mm_strdup("global");
 }
-#line 61525 "preproc.c"
+#line 61477 "preproc.c"
     break;
 
   case 2987: /* bare_label_keyword: GRANTED  */
@@ -61529,7 +61481,7 @@
  { 
  (yyval.str) = mm_strdup("granted");
 }
-#line 61533 "preproc.c"
+#line 61485 "preproc.c"
     break;
 
   case 2988: /* bare_label_keyword: GREATEST  */
@@ -61537,7 +61489,7 @@
  { 
  (yyval.str) = mm_strdup("greatest");
 }
-#line 61541 "preproc.c"
+#line 61493 "preproc.c"
     break;
 
   case 2989: /* bare_label_keyword: GROUPING  */
@@ -61545,7 +61497,7 @@
  { 
  (yyval.str) = mm_strdup("grouping");
 }
-#line 61549 "preproc.c"
+#line 61501 "preproc.c"
     break;
 
   case 2990: /* bare_label_keyword: GROUPS  */
@@ -61553,7 +61505,7 @@
  { 
  (yyval.str) = mm_strdup("groups");
 }
-#line 61557 "preproc.c"
+#line 61509 "preproc.c"
     break;
 
   case 2991: /* bare_label_keyword: HANDLER  */
@@ -61561,7 +61513,7 @@
  { 
  (yyval.str) = mm_strdup("handler");
 }
-#line 61565 "preproc.c"
+#line 61517 "preproc.c"
     break;
 
   case 2992: /* bare_label_keyword: HEADER_P  */
@@ -61569,7 +61521,7 @@
  { 
  (yyval.str) = mm_strdup("header");
 }
-#line 61573 "preproc.c"
+#line 61525 "preproc.c"
     break;
 
   case 2993: /* bare_label_keyword: HOLD  */
@@ -61577,7 +61529,7 @@
  { 
  (yyval.str) = mm_strdup("hold");
 }
-#line 61581 "preproc.c"
+#line 61533 "preproc.c"
     break;
 
   case 2994: /* bare_label_keyword: IDENTITY_P  */
@@ -61585,7 +61537,7 @@
  { 
  (yyval.str) = mm_strdup("identity");
 }
-#line 61589 "preproc.c"
+#line 61541 "preproc.c"
     break;
 
   case 2995: /* bare_label_keyword: IF_P  */
@@ -61593,7 +61545,7 @@
  { 
  (yyval.str) = mm_strdup("if");
 }
-#line 61597 "preproc.c"
+#line 61549 "preproc.c"
     break;
 
   case 2996: /* bare_label_keyword: ILIKE  */
@@ -61601,7 +61553,7 @@
  { 
  (yyval.str) = mm_strdup("ilike");
 }
-#line 61605 "preproc.c"
+#line 61557 "preproc.c"
     break;
 
   case 2997: /* bare_label_keyword: IMMEDIATE  */
@@ -61609,7 +61561,7 @@
  { 
  (yyval.str) = mm_strdup("immediate");
 }
-#line 61613 "preproc.c"
+#line 61565 "preproc.c"
     break;
 
   case 2998: /* bare_label_keyword: IMMUTABLE  */
@@ -61617,7 +61569,7 @@
  { 
  (yyval.str) = mm_strdup("immutable");
 }
-#line 61621 "preproc.c"
+#line 61573 "preproc.c"
     break;
 
   case 2999: /* bare_label_keyword: IMPLICIT_P  */
@@ -61625,7 +61577,7 @@
  { 
  (yyval.str) = mm_strdup("implicit");
 }
-#line 61629 "preproc.c"
+#line 61581 "preproc.c"
     break;
 
   case 3000: /* bare_label_keyword: IMPORT_P  */
@@ -61633,7 +61585,7 @@
  { 
  (yyval.str) = mm_strdup("import");
 }
-#line 61637 "preproc.c"
+#line 61589 "preproc.c"
     break;
 
   case 3001: /* bare_label_keyword: IN_P  */
@@ -61641,7 +61593,7 @@
  { 
  (yyval.str) = mm_strdup("in");
 }
-#line 61645 "preproc.c"
+#line 61597 "preproc.c"
     break;
 
   case 3002: /* bare_label_keyword: INCLUDE  */
@@ -61649,7 +61601,7 @@
  { 
  (yyval.str) = mm_strdup("include");
 }
-#line 61653 "preproc.c"
+#line 61605 "preproc.c"
     break;
 
   case 3003: /* bare_label_keyword: INCLUDING  */
@@ -61657,7 +61609,7 @@
  { 
  (yyval.str) = mm_strdup("including");
 }
-#line 61661 "preproc.c"
+#line 61613 "preproc.c"
     break;
 
   case 3004: /* bare_label_keyword: INCREMENT  */
@@ -61665,7 +61617,7 @@
  { 
  (yyval.str) = mm_strdup("increment");
 }
-#line 61669 "preproc.c"
+#line 61621 "preproc.c"
     break;
 
   case 3005: /* bare_label_keyword: INDENT  */
@@ -61673,7 +61625,7 @@
  { 
  (yyval.str) = mm_strdup("indent");
 }
-#line 61677 "preproc.c"
+#line 61629 "preproc.c"
     break;
 
   case 3006: /* bare_label_keyword: INDEX  */
@@ -61681,7 +61633,7 @@
  { 
  (yyval.str) = mm_strdup("index");
 }
-#line 61685 "preproc.c"
+#line 61637 "preproc.c"
     break;
 
   case 3007: /* bare_label_keyword: INDEXES  */
@@ -61689,7 +61641,7 @@
  { 
  (yyval.str) = mm_strdup("indexes");
 }
-#line 61693 "preproc.c"
+#line 61645 "preproc.c"
     break;
 
   case 3008: /* bare_label_keyword: INHERIT  */
@@ -61697,7 +61649,7 @@
  { 
  (yyval.str) = mm_strdup("inherit");
 }
-#line 61701 "preproc.c"
+#line 61653 "preproc.c"
     break;
 
   case 3009: /* bare_label_keyword: INHERITS  */
@@ -61705,7 +61657,7 @@
  { 
  (yyval.str) = mm_strdup("inherits");
 }
-#line 61709 "preproc.c"
+#line 61661 "preproc.c"
     break;
 
   case 3010: /* bare_label_keyword: INITIALLY  */
@@ -61713,7 +61665,7 @@
  { 
  (yyval.str) = mm_strdup("initially");
 }
-#line 61717 "preproc.c"
+#line 61669 "preproc.c"
     break;
 
   case 3011: /* bare_label_keyword: INLINE_P  */
@@ -61721,7 +61673,7 @@
  { 
  (yyval.str) = mm_strdup("inline");
 }
-#line 61725 "preproc.c"
+#line 61677 "preproc.c"
     break;
 
   case 3012: /* bare_label_keyword: INNER_P  */
@@ -61729,7 +61681,7 @@
  { 
  (yyval.str) = mm_strdup("inner");
 }
-#line 61733 "preproc.c"
+#line 61685 "preproc.c"
     break;
 
   case 3013: /* bare_label_keyword: INOUT  */
@@ -61737,7 +61689,7 @@
  { 
  (yyval.str) = mm_strdup("inout");
 }
-#line 61741 "preproc.c"
+#line 61693 "preproc.c"
     break;
 
   case 3014: /* bare_label_keyword: INPUT_P  */
@@ -61745,7 +61697,7 @@
  { 
  (yyval.str) = mm_strdup("input");
 }
-#line 61749 "preproc.c"
+#line 61701 "preproc.c"
     break;
 
   case 3015: /* bare_label_keyword: INSENSITIVE  */
@@ -61753,7 +61705,7 @@
  { 
  (yyval.str) = mm_strdup("insensitive");
 }
-#line 61757 "preproc.c"
+#line 61709 "preproc.c"
     break;
 
   case 3016: /* bare_label_keyword: INSERT  */
@@ -61761,7 +61713,7 @@
  { 
  (yyval.str) = mm_strdup("insert");
 }
-#line 61765 "preproc.c"
+#line 61717 "preproc.c"
     break;
 
   case 3017: /* bare_label_keyword: INSTEAD  */
@@ -61769,7 +61721,7 @@
  { 
  (yyval.str) = mm_strdup("instead");
 }
-#line 61773 "preproc.c"
+#line 61725 "preproc.c"
     break;
 
   case 3018: /* bare_label_keyword: INT_P  */
@@ -61777,7 +61729,7 @@
  { 
  (yyval.str) = mm_strdup("int");
 }
-#line 61781 "preproc.c"
+#line 61733 "preproc.c"
     break;
 
   case 3019: /* bare_label_keyword: INTEGER  */
@@ -61785,7 +61737,7 @@
  { 
  (yyval.str) = mm_strdup("integer");
 }
-#line 61789 "preproc.c"
+#line 61741 "preproc.c"
     break;
 
   case 3020: /* bare_label_keyword: INTERVAL  */
@@ -61793,7 +61745,7 @@
  { 
  (yyval.str) = mm_strdup("interval");
 }
-#line 61797 "preproc.c"
+#line 61749 "preproc.c"
     break;
 
   case 3021: /* bare_label_keyword: INVOKER  */
@@ -61801,7 +61753,7 @@
  { 
  (yyval.str) = mm_strdup("invoker");
 }
-#line 61805 "preproc.c"
+#line 61757 "preproc.c"
     break;
 
   case 3022: /* bare_label_keyword: IS  */
@@ -61809,7 +61761,7 @@
  { 
  (yyval.str) = mm_strdup("is");
 }
-#line 61813 "preproc.c"
+#line 61765 "preproc.c"
     break;
 
   case 3023: /* bare_label_keyword: ISOLATION  */
@@ -61817,7 +61769,7 @@
  { 
  (yyval.str) = mm_strdup("isolation");
 }
-#line 61821 "preproc.c"
+#line 61773 "preproc.c"
     break;
 
   case 3024: /* bare_label_keyword: JOIN  */
@@ -61825,7 +61777,7 @@
  { 
  (yyval.str) = mm_strdup("join");
 }
-#line 61829 "preproc.c"
+#line 61781 "preproc.c"
     break;
 
   case 3025: /* bare_label_keyword: JSON  */
@@ -61833,7 +61785,7 @@
  { 
  (yyval.str) = mm_strdup("json");
 }
-#line 61837 "preproc.c"
+#line 61789 "preproc.c"
     break;
 
   case 3026: /* bare_label_keyword: JSON_ARRAY  */
@@ -61841,7 +61793,7 @@
  { 
  (yyval.str) = mm_strdup("json_array");
 }
-#line 61845 "preproc.c"
+#line 61797 "preproc.c"
     break;
 
   case 3027: /* bare_label_keyword: JSON_ARRAYAGG  */
@@ -61849,7 +61801,7 @@
  { 
  (yyval.str) = mm_strdup("json_arrayagg");
 }
-#line 61853 "preproc.c"
+#line 61805 "preproc.c"
     break;
 
   case 3028: /* bare_label_keyword: JSON_OBJECT  */
@@ -61857,7 +61809,7 @@
  { 
  (yyval.str) = mm_strdup("json_object");
 }
-#line 61861 "preproc.c"
+#line 61813 "preproc.c"
     break;
 
   case 3029: /* bare_label_keyword: JSON_OBJECTAGG  */
@@ -61865,7 +61817,7 @@
  { 
  (yyval.str) = mm_strdup("json_objectagg");
 }
-#line 61869 "preproc.c"
+#line 61821 "preproc.c"
     break;
 
   case 3030: /* bare_label_keyword: KEY  */
@@ -61873,7 +61825,7 @@
  { 
  (yyval.str) = mm_strdup("key");
 }
-#line 61877 "preproc.c"
+#line 61829 "preproc.c"
     break;
 
   case 3031: /* bare_label_keyword: KEYS  */
@@ -61881,7 +61833,7 @@
  { 
  (yyval.str) = mm_strdup("keys");
 }
-#line 61885 "preproc.c"
+#line 61837 "preproc.c"
     break;
 
   case 3032: /* bare_label_keyword: LABEL  */
@@ -61889,7 +61841,7 @@
  { 
  (yyval.str) = mm_strdup("label");
 }
-#line 61893 "preproc.c"
+#line 61845 "preproc.c"
     break;
 
   case 3033: /* bare_label_keyword: LANGUAGE  */
@@ -61897,7 +61849,7 @@
  { 
  (yyval.str) = mm_strdup("language");
 }
-#line 61901 "preproc.c"
+#line 61853 "preproc.c"
     break;
 
   case 3034: /* bare_label_keyword: LARGE_P  */
@@ -61905,7 +61857,7 @@
  { 
  (yyval.str) = mm_strdup("large");
 }
-#line 61909 "preproc.c"
+#line 61861 "preproc.c"
     break;
 
   case 3035: /* bare_label_keyword: LAST_P  */
@@ -61913,7 +61865,7 @@
  { 
  (yyval.str) = mm_strdup("last");
 }
-#line 61917 "preproc.c"
+#line 61869 "preproc.c"
     break;
 
   case 3036: /* bare_label_keyword: LATERAL_P  */
@@ -61921,7 +61873,7 @@
  { 
  (yyval.str) = mm_strdup("lateral");
 }
-#line 61925 "preproc.c"
+#line 61877 "preproc.c"
     break;
 
   case 3037: /* bare_label_keyword: LEADING  */
@@ -61929,7 +61881,7 @@
  { 
  (yyval.str) = mm_strdup("leading");
 }
-#line 61933 "preproc.c"
+#line 61885 "preproc.c"
     break;
 
   case 3038: /* bare_label_keyword: LEAKPROOF  */
@@ -61937,7 +61889,7 @@
  { 
  (yyval.str) = mm_strdup("leakproof");
 }
-#line 61941 "preproc.c"
+#line 61893 "preproc.c"
     break;
 
   case 3039: /* bare_label_keyword: LEAST  */
@@ -61945,7 +61897,7 @@
  { 
  (yyval.str) = mm_strdup("least");
 }
-#line 61949 "preproc.c"
+#line 61901 "preproc.c"
     break;
 
   case 3040: /* bare_label_keyword: LEFT  */
@@ -61953,7 +61905,7 @@
  { 
  (yyval.str) = mm_strdup("left");
 }
-#line 61957 "preproc.c"
+#line 61909 "preproc.c"
     break;
 
   case 3041: /* bare_label_keyword: LEVEL  */
@@ -61961,7 +61913,7 @@
  { 
  (yyval.str) = mm_strdup("level");
 }
-#line 61965 "preproc.c"
+#line 61917 "preproc.c"
     break;
 
   case 3042: /* bare_label_keyword: LIKE  */
@@ -61969,7 +61921,7 @@
  { 
  (yyval.str) = mm_strdup("like");
 }
-#line 61973 "preproc.c"
+#line 61925 "preproc.c"
     break;
 
   case 3043: /* bare_label_keyword: LISTEN  */
@@ -61977,7 +61929,7 @@
  { 
  (yyval.str) = mm_strdup("listen");
 }
-#line 61981 "preproc.c"
+#line 61933 "preproc.c"
     break;
 
   case 3044: /* bare_label_keyword: LOAD  */
@@ -61985,7 +61937,7 @@
  { 
  (yyval.str) = mm_strdup("load");
 }
-#line 61989 "preproc.c"
+#line 61941 "preproc.c"
     break;
 
   case 3045: /* bare_label_keyword: LOCAL  */
@@ -61993,7 +61945,7 @@
  { 
  (yyval.str) = mm_strdup("local");
 }
-#line 61997 "preproc.c"
+#line 61949 "preproc.c"
     break;
 
   case 3046: /* bare_label_keyword: LOCALTIME  */
@@ -62001,7 +61953,7 @@
  { 
  (yyval.str) = mm_strdup("localtime");
 }
-#line 62005 "preproc.c"
+#line 61957 "preproc.c"
     break;
 
   case 3047: /* bare_label_keyword: LOCALTIMESTAMP  */
@@ -62009,7 +61961,7 @@
  { 
  (yyval.str) = mm_strdup("localtimestamp");
 }
-#line 62013 "preproc.c"
+#line 61965 "preproc.c"
     break;
 
   case 3048: /* bare_label_keyword: LOCATION  */
@@ -62017,7 +61969,7 @@
  { 
  (yyval.str) = mm_strdup("location");
 }
-#line 62021 "preproc.c"
+#line 61973 "preproc.c"
     break;
 
   case 3049: /* bare_label_keyword: LOCK_P  */
@@ -62025,7 +61977,7 @@
  { 
  (yyval.str) = mm_strdup("lock");
 }
-#line 62029 "preproc.c"
+#line 61981 "preproc.c"
     break;
 
   case 3050: /* bare_label_keyword: LOCKED  */
@@ -62033,7 +61985,7 @@
  { 
  (yyval.str) = mm_strdup("locked");
 }
-#line 62037 "preproc.c"
+#line 61989 "preproc.c"
     break;
 
   case 3051: /* bare_label_keyword: LOGGED  */
@@ -62041,7 +61993,7 @@
  { 
  (yyval.str) = mm_strdup("logged");
 }
-#line 62045 "preproc.c"
+#line 61997 "preproc.c"
     break;
 
   case 3052: /* bare_label_keyword: MAPPING  */
@@ -62049,7 +62001,7 @@
  { 
  (yyval.str) = mm_strdup("mapping");
 }
-#line 62053 "preproc.c"
+#line 62005 "preproc.c"
     break;
 
   case 3053: /* bare_label_keyword: MATCH  */
@@ -62057,7 +62009,7 @@
  { 
  (yyval.str) = mm_strdup("match");
 }
-#line 62061 "preproc.c"
+#line 62013 "preproc.c"
     break;
 
   case 3054: /* bare_label_keyword: MATCHED  */
@@ -62065,7 +62017,7 @@
  { 
  (yyval.str) = mm_strdup("matched");
 }
-#line 62069 "preproc.c"
+#line 62021 "preproc.c"
     break;
 
   case 3055: /* bare_label_keyword: MATERIALIZED  */
@@ -62073,7 +62025,7 @@
  { 
  (yyval.str) = mm_strdup("materialized");
 }
-#line 62077 "preproc.c"
+#line 62029 "preproc.c"
     break;
 
   case 3056: /* bare_label_keyword: MAXVALUE  */
@@ -62081,7 +62033,7 @@
  { 
  (yyval.str) = mm_strdup("maxvalue");
 }
-#line 62085 "preproc.c"
+#line 62037 "preproc.c"
     break;
 
   case 3057: /* bare_label_keyword: MERGE  */
@@ -62089,7 +62041,7 @@
  { 
  (yyval.str) = mm_strdup("merge");
 }
-#line 62093 "preproc.c"
+#line 62045 "preproc.c"
     break;
 
   case 3058: /* bare_label_keyword: METHOD  */
@@ -62097,7 +62049,7 @@
  { 
  (yyval.str) = mm_strdup("method");
 }
-#line 62101 "preproc.c"
+#line 62053 "preproc.c"
     break;
 
   case 3059: /* bare_label_keyword: MINVALUE  */
@@ -62105,7 +62057,7 @@
  { 
  (yyval.str) = mm_strdup("minvalue");
 }
-#line 62109 "preproc.c"
+#line 62061 "preproc.c"
     break;
 
   case 3060: /* bare_label_keyword: MODE  */
@@ -62113,7 +62065,7 @@
  { 
  (yyval.str) = mm_strdup("mode");
 }
-#line 62117 "preproc.c"
+#line 62069 "preproc.c"
     break;
 
   case 3061: /* bare_label_keyword: MOVE  */
@@ -62121,7 +62073,7 @@
  { 
  (yyval.str) = mm_strdup("move");
 }
-#line 62125 "preproc.c"
+#line 62077 "preproc.c"
     break;
 
   case 3062: /* bare_label_keyword: NAME_P  */
@@ -62129,7 +62081,7 @@
  { 
  (yyval.str) = mm_strdup("name");
 }
-#line 62133 "preproc.c"
+#line 62085 "preproc.c"
     break;
 
   case 3063: /* bare_label_keyword: NAMES  */
@@ -62137,7 +62089,7 @@
  { 
  (yyval.str) = mm_strdup("names");
 }
-#line 62141 "preproc.c"
+#line 62093 "preproc.c"
     break;
 
   case 3064: /* bare_label_keyword: NATIONAL  */
@@ -62145,7 +62097,7 @@
  { 
  (yyval.str) = mm_strdup("national");
 }
-#line 62149 "preproc.c"
+#line 62101 "preproc.c"
     break;
 
   case 3065: /* bare_label_keyword: NATURAL  */
@@ -62153,7 +62105,7 @@
  { 
  (yyval.str) = mm_strdup("natural");
 }
-#line 62157 "preproc.c"
+#line 62109 "preproc.c"
     break;
 
   case 3066: /* bare_label_keyword: NCHAR  */
@@ -62161,7 +62113,7 @@
  { 
  (yyval.str) = mm_strdup("nchar");
 }
-#line 62165 "preproc.c"
+#line 62117 "preproc.c"
     break;
 
   case 3067: /* bare_label_keyword: NEW  */
@@ -62169,7 +62121,7 @@
  { 
  (yyval.str) = mm_strdup("new");
 }
-#line 62173 "preproc.c"
+#line 62125 "preproc.c"
     break;
 
   case 3068: /* bare_label_keyword: NEXT  */
@@ -62177,7 +62129,7 @@
  { 
  (yyval.str) = mm_strdup("next");
 }
-#line 62181 "preproc.c"
+#line 62133 "preproc.c"
     break;
 
   case 3069: /* bare_label_keyword: NFC  */
@@ -62185,7 +62137,7 @@
  { 
  (yyval.str) = mm_strdup("nfc");
 }
-#line 62189 "preproc.c"
+#line 62141 "preproc.c"
     break;
 
   case 3070: /* bare_label_keyword: NFD  */
@@ -62193,7 +62145,7 @@
  { 
  (yyval.str) = mm_strdup("nfd");
 }
-#line 62197 "preproc.c"
+#line 62149 "preproc.c"
     break;
 
   case 3071: /* bare_label_keyword: NFKC  */
@@ -62201,7 +62153,7 @@
  { 
  (yyval.str) = mm_strdup("nfkc");
 }
-#line 62205 "preproc.c"
+#line 62157 "preproc.c"
     break;
 
   case 3072: /* bare_label_keyword: NFKD  */
@@ -62209,7 +62161,7 @@
  { 
  (yyval.str) = mm_strdup("nfkd");
 }
-#line 62213 "preproc.c"
+#line 62165 "preproc.c"
     break;
 
   case 3073: /* bare_label_keyword: NO  */
@@ -62217,7 +62169,7 @@
  { 
  (yyval.str) = mm_strdup("no");
 }
-#line 62221 "preproc.c"
+#line 62173 "preproc.c"
     break;
 
   case 3074: /* bare_label_keyword: NONE  */
@@ -62225,7 +62177,7 @@
  { 
  (yyval.str) = mm_strdup("none");
 }
-#line 62229 "preproc.c"
+#line 62181 "preproc.c"
     break;
 
   case 3075: /* bare_label_keyword: NORMALIZE  */
@@ -62233,7 +62185,7 @@
  { 
  (yyval.str) = mm_strdup("normalize");
 }
-#line 62237 "preproc.c"
+#line 62189 "preproc.c"
     break;
 
   case 3076: /* bare_label_keyword: NORMALIZED  */
@@ -62241,7 +62193,7 @@
  { 
  (yyval.str) = mm_strdup("normalized");
 }
-#line 62245 "preproc.c"
+#line 62197 "preproc.c"
     break;
 
   case 3077: /* bare_label_keyword: NOT  */
@@ -62249,7 +62201,7 @@
  { 
  (yyval.str) = mm_strdup("not");
 }
-#line 62253 "preproc.c"
+#line 62205 "preproc.c"
     break;
 
   case 3078: /* bare_label_keyword: NOTHING  */
@@ -62257,7 +62209,7 @@
  { 
  (yyval.str) = mm_strdup("nothing");
 }
-#line 62261 "preproc.c"
+#line 62213 "preproc.c"
     break;
 
   case 3079: /* bare_label_keyword: NOTIFY  */
@@ -62265,7 +62217,7 @@
  { 
  (yyval.str) = mm_strdup("notify");
 }
-#line 62269 "preproc.c"
+#line 62221 "preproc.c"
     break;
 
   case 3080: /* bare_label_keyword: NOWAIT  */
@@ -62273,7 +62225,7 @@
  { 
  (yyval.str) = mm_strdup("nowait");
 }
-#line 62277 "preproc.c"
+#line 62229 "preproc.c"
     break;
 
   case 3081: /* bare_label_keyword: NULL_P  */
@@ -62281,7 +62233,7 @@
  { 
  (yyval.str) = mm_strdup("null");
 }
-#line 62285 "preproc.c"
+#line 62237 "preproc.c"
     break;
 
   case 3082: /* bare_label_keyword: NULLIF  */
@@ -62289,7 +62241,7 @@
  { 
  (yyval.str) = mm_strdup("nullif");
 }
-#line 62293 "preproc.c"
+#line 62245 "preproc.c"
     break;
 
   case 3083: /* bare_label_keyword: NULLS_P  */
@@ -62297,7 +62249,7 @@
  { 
  (yyval.str) = mm_strdup("nulls");
 }
-#line 62301 "preproc.c"
+#line 62253 "preproc.c"
     break;
 
   case 3084: /* bare_label_keyword: NUMERIC  */
@@ -62305,7 +62257,7 @@
  { 
  (yyval.str) = mm_strdup("numeric");
 }
-#line 62309 "preproc.c"
+#line 62261 "preproc.c"
     break;
 
   case 3085: /* bare_label_keyword: OBJECT_P  */
@@ -62313,7 +62265,7 @@
  { 
  (yyval.str) = mm_strdup("object");
 }
-#line 62317 "preproc.c"
+#line 62269 "preproc.c"
     break;
 
   case 3086: /* bare_label_keyword: OF  */
@@ -62321,7 +62273,7 @@
  { 
  (yyval.str) = mm_strdup("of");
 }
-#line 62325 "preproc.c"
+#line 62277 "preproc.c"
     break;
 
   case 3087: /* bare_label_keyword: OFF  */
@@ -62329,7 +62281,7 @@
  { 
  (yyval.str) = mm_strdup("off");
 }
-#line 62333 "preproc.c"
+#line 62285 "preproc.c"
     break;
 
   case 3088: /* bare_label_keyword: OIDS  */
@@ -62337,7 +62289,7 @@
  { 
  (yyval.str) = mm_strdup("oids");
 }
-#line 62341 "preproc.c"
+#line 62293 "preproc.c"
     break;
 
   case 3089: /* bare_label_keyword: OLD  */
@@ -62345,7 +62297,7 @@
  { 
  (yyval.str) = mm_strdup("old");
 }
-#line 62349 "preproc.c"
+#line 62301 "preproc.c"
     break;
 
   case 3090: /* bare_label_keyword: ONLY  */
@@ -62353,7 +62305,7 @@
  { 
  (yyval.str) = mm_strdup("only");
 }
-#line 62357 "preproc.c"
+#line 62309 "preproc.c"
     break;
 
   case 3091: /* bare_label_keyword: OPERATOR  */
@@ -62361,7 +62313,7 @@
  { 
  (yyval.str) = mm_strdup("operator");
 }
-#line 62365 "preproc.c"
+#line 62317 "preproc.c"
     break;
 
   case 3092: /* bare_label_keyword: OPTION  */
@@ -62369,7 +62321,7 @@
  { 
  (yyval.str) = mm_strdup("option");
 }
-#line 62373 "preproc.c"
+#line 62325 "preproc.c"
     break;
 
   case 3093: /* bare_label_keyword: OPTIONS  */
@@ -62377,7 +62329,7 @@
  { 
  (yyval.str) = mm_strdup("options");
 }
-#line 62381 "preproc.c"
+#line 62333 "preproc.c"
     break;
 
   case 3094: /* bare_label_keyword: OR  */
@@ -62385,7 +62337,7 @@
  { 
  (yyval.str) = mm_strdup("or");
 }
-#line 62389 "preproc.c"
+#line 62341 "preproc.c"
     break;
 
   case 3095: /* bare_label_keyword: ORDINALITY  */
@@ -62393,7 +62345,7 @@
  { 
  (yyval.str) = mm_strdup("ordinality");
 }
-#line 62397 "preproc.c"
+#line 62349 "preproc.c"
     break;
 
   case 3096: /* bare_label_keyword: OTHERS  */
@@ -62401,7 +62353,7 @@
  { 
  (yyval.str) = mm_strdup("others");
 }
-#line 62405 "preproc.c"
+#line 62357 "preproc.c"
     break;
 
   case 3097: /* bare_label_keyword: OUT_P  */
@@ -62409,7 +62361,7 @@
  { 
  (yyval.str) = mm_strdup("out");
 }
-#line 62413 "preproc.c"
+#line 62365 "preproc.c"
     break;
 
   case 3098: /* bare_label_keyword: OUTER_P  */
@@ -62417,7 +62369,7 @@
  { 
  (yyval.str) = mm_strdup("outer");
 }
-#line 62421 "preproc.c"
+#line 62373 "preproc.c"
     break;
 
   case 3099: /* bare_label_keyword: OVERLAY  */
@@ -62425,7 +62377,7 @@
  { 
  (yyval.str) = mm_strdup("overlay");
 }
-#line 62429 "preproc.c"
+#line 62381 "preproc.c"
     break;
 
   case 3100: /* bare_label_keyword: OVERRIDING  */
@@ -62433,7 +62385,7 @@
  { 
  (yyval.str) = mm_strdup("overriding");
 }
-#line 62437 "preproc.c"
+#line 62389 "preproc.c"
     break;
 
   case 3101: /* bare_label_keyword: OWNED  */
@@ -62441,7 +62393,7 @@
  { 
  (yyval.str) = mm_strdup("owned");
 }
-#line 62445 "preproc.c"
+#line 62397 "preproc.c"
     break;
 
   case 3102: /* bare_label_keyword: OWNER  */
@@ -62449,7 +62401,7 @@
  { 
  (yyval.str) = mm_strdup("owner");
 }
-#line 62453 "preproc.c"
+#line 62405 "preproc.c"
     break;
 
   case 3103: /* bare_label_keyword: PARALLEL  */
@@ -62457,7 +62409,7 @@
  { 
  (yyval.str) = mm_strdup("parallel");
 }
-#line 62461 "preproc.c"
+#line 62413 "preproc.c"
     break;
 
   case 3104: /* bare_label_keyword: PARAMETER  */
@@ -62465,7 +62417,7 @@
  { 
  (yyval.str) = mm_strdup("parameter");
 }
-#line 62469 "preproc.c"
+#line 62421 "preproc.c"
     break;
 
   case 3105: /* bare_label_keyword: PARSER  */
@@ -62473,7 +62425,7 @@
  { 
  (yyval.str) = mm_strdup("parser");
 }
-#line 62477 "preproc.c"
+#line 62429 "preproc.c"
     break;
 
   case 3106: /* bare_label_keyword: PARTIAL  */
@@ -62481,7 +62433,7 @@
  { 
  (yyval.str) = mm_strdup("partial");
 }
-#line 62485 "preproc.c"
+#line 62437 "preproc.c"
     break;
 
   case 3107: /* bare_label_keyword: PARTITION  */
@@ -62489,7 +62441,7 @@
  { 
  (yyval.str) = mm_strdup("partition");
 }
-#line 62493 "preproc.c"
+#line 62445 "preproc.c"
     break;
 
   case 3108: /* bare_label_keyword: PASSING  */
@@ -62497,7 +62449,7 @@
  { 
  (yyval.str) = mm_strdup("passing");
 }
-#line 62501 "preproc.c"
+#line 62453 "preproc.c"
     break;
 
   case 3109: /* bare_label_keyword: PASSWORD  */
@@ -62505,7 +62457,7 @@
  { 
  (yyval.str) = mm_strdup("password");
 }
-#line 62509 "preproc.c"
+#line 62461 "preproc.c"
     break;
 
   case 3110: /* bare_label_keyword: PLACING  */
@@ -62513,7 +62465,7 @@
  { 
  (yyval.str) = mm_strdup("placing");
 }
-#line 62517 "preproc.c"
+#line 62469 "preproc.c"
     break;
 
   case 3111: /* bare_label_keyword: PLANS  */
@@ -62521,7 +62473,7 @@
  { 
  (yyval.str) = mm_strdup("plans");
 }
-#line 62525 "preproc.c"
+#line 62477 "preproc.c"
     break;
 
   case 3112: /* bare_label_keyword: POLICY  */
@@ -62529,7 +62481,7 @@
  { 
  (yyval.str) = mm_strdup("policy");
 }
-#line 62533 "preproc.c"
+#line 62485 "preproc.c"
     break;
 
   case 3113: /* bare_label_keyword: POSITION  */
@@ -62537,7 +62489,7 @@
  { 
  (yyval.str) = mm_strdup("position");
 }
-#line 62541 "preproc.c"
+#line 62493 "preproc.c"
     break;
 
   case 3114: /* bare_label_keyword: PRECEDING  */
@@ -62545,7 +62497,7 @@
  { 
  (yyval.str) = mm_strdup("preceding");
 }
-#line 62549 "preproc.c"
+#line 62501 "preproc.c"
     break;
 
   case 3115: /* bare_label_keyword: PREPARE  */
@@ -62553,7 +62505,7 @@
  { 
  (yyval.str) = mm_strdup("prepare");
 }
-#line 62557 "preproc.c"
+#line 62509 "preproc.c"
     break;
 
   case 3116: /* bare_label_keyword: PREPARED  */
@@ -62561,7 +62513,7 @@
  { 
  (yyval.str) = mm_strdup("prepared");
 }
-#line 62565 "preproc.c"
+#line 62517 "preproc.c"
     break;
 
   case 3117: /* bare_label_keyword: PRESERVE  */
@@ -62569,7 +62521,7 @@
  { 
  (yyval.str) = mm_strdup("preserve");
 }
-#line 62573 "preproc.c"
+#line 62525 "preproc.c"
     break;
 
   case 3118: /* bare_label_keyword: PRIMARY  */
@@ -62577,7 +62529,7 @@
  { 
  (yyval.str) = mm_strdup("primary");
 }
-#line 62581 "preproc.c"
+#line 62533 "preproc.c"
     break;
 
   case 3119: /* bare_label_keyword: PRIOR  */
@@ -62585,7 +62537,7 @@
  { 
  (yyval.str) = mm_strdup("prior");
 }
-#line 62589 "preproc.c"
+#line 62541 "preproc.c"
     break;
 
   case 3120: /* bare_label_keyword: PRIVILEGES  */
@@ -62593,7 +62545,7 @@
  { 
  (yyval.str) = mm_strdup("privileges");
 }
-#line 62597 "preproc.c"
+#line 62549 "preproc.c"
     break;
 
   case 3121: /* bare_label_keyword: PROCEDURAL  */
@@ -62601,7 +62553,7 @@
  { 
  (yyval.str) = mm_strdup("procedural");
 }
-#line 62605 "preproc.c"
+#line 62557 "preproc.c"
     break;
 
   case 3122: /* bare_label_keyword: PROCEDURE  */
@@ -62609,7 +62561,7 @@
  { 
  (yyval.str) = mm_strdup("procedure");
 }
-#line 62613 "preproc.c"
+#line 62565 "preproc.c"
     break;
 
   case 3123: /* bare_label_keyword: PROCEDURES  */
@@ -62617,7 +62569,7 @@
  { 
  (yyval.str) = mm_strdup("procedures");
 }
-#line 62621 "preproc.c"
+#line 62573 "preproc.c"
     break;
 
   case 3124: /* bare_label_keyword: PROGRAM  */
@@ -62625,7 +62577,7 @@
  { 
  (yyval.str) = mm_strdup("program");
 }
-#line 62629 "preproc.c"
+#line 62581 "preproc.c"
     break;
 
   case 3125: /* bare_label_keyword: PUBLICATION  */
@@ -62633,7 +62585,7 @@
  { 
  (yyval.str) = mm_strdup("publication");
 }
-#line 62637 "preproc.c"
+#line 62589 "preproc.c"
     break;
 
   case 3126: /* bare_label_keyword: QUOTE  */
@@ -62641,7 +62593,7 @@
  { 
  (yyval.str) = mm_strdup("quote");
 }
-#line 62645 "preproc.c"
+#line 62597 "preproc.c"
     break;
 
   case 3127: /* bare_label_keyword: RANGE  */
@@ -62649,7 +62601,7 @@
  { 
  (yyval.str) = mm_strdup("range");
 }
-#line 62653 "preproc.c"
+#line 62605 "preproc.c"
     break;
 
   case 3128: /* bare_label_keyword: READ  */
@@ -62657,7 +62609,7 @@
  { 
  (yyval.str) = mm_strdup("read");
 }
-#line 62661 "preproc.c"
+#line 62613 "preproc.c"
     break;
 
   case 3129: /* bare_label_keyword: REAL  */
@@ -62665,7 +62617,7 @@
  { 
  (yyval.str) = mm_strdup("real");
 }
-#line 62669 "preproc.c"
+#line 62621 "preproc.c"
     break;
 
   case 3130: /* bare_label_keyword: REASSIGN  */
@@ -62673,7 +62625,7 @@
  { 
  (yyval.str) = mm_strdup("reassign");
 }
-#line 62677 "preproc.c"
+#line 62629 "preproc.c"
     break;
 
   case 3131: /* bare_label_keyword: RECHECK  */
@@ -62681,7 +62633,7 @@
  { 
  (yyval.str) = mm_strdup("recheck");
 }
-#line 62685 "preproc.c"
+#line 62637 "preproc.c"
     break;
 
   case 3132: /* bare_label_keyword: RECURSIVE  */
@@ -62689,7 +62641,7 @@
  { 
  (yyval.str) = mm_strdup("recursive");
 }
-#line 62693 "preproc.c"
+#line 62645 "preproc.c"
     break;
 
   case 3133: /* bare_label_keyword: REF_P  */
@@ -62697,7 +62649,7 @@
  { 
  (yyval.str) = mm_strdup("ref");
 }
-#line 62701 "preproc.c"
+#line 62653 "preproc.c"
     break;
 
   case 3134: /* bare_label_keyword: REFERENCES  */
@@ -62705,7 +62657,7 @@
  { 
  (yyval.str) = mm_strdup("references");
 }
-#line 62709 "preproc.c"
+#line 62661 "preproc.c"
     break;
 
   case 3135: /* bare_label_keyword: REFERENCING  */
@@ -62713,7 +62665,7 @@
  { 
  (yyval.str) = mm_strdup("referencing");
 }
-#line 62717 "preproc.c"
+#line 62669 "preproc.c"
     break;
 
   case 3136: /* bare_label_keyword: REFRESH  */
@@ -62721,7 +62673,7 @@
  { 
  (yyval.str) = mm_strdup("refresh");
 }
-#line 62725 "preproc.c"
+#line 62677 "preproc.c"
     break;
 
   case 3137: /* bare_label_keyword: REINDEX  */
@@ -62729,7 +62681,7 @@
  { 
  (yyval.str) = mm_strdup("reindex");
 }
-#line 62733 "preproc.c"
+#line 62685 "preproc.c"
     break;
 
   case 3138: /* bare_label_keyword: RELATIVE_P  */
@@ -62737,7 +62689,7 @@
  { 
  (yyval.str) = mm_strdup("relative");
 }
-#line 62741 "preproc.c"
+#line 62693 "preproc.c"
     break;
 
   case 3139: /* bare_label_keyword: RELEASE  */
@@ -62745,7 +62697,7 @@
  { 
  (yyval.str) = mm_strdup("release");
 }
-#line 62749 "preproc.c"
+#line 62701 "preproc.c"
     break;
 
   case 3140: /* bare_label_keyword: RENAME  */
@@ -62753,7 +62705,7 @@
  { 
  (yyval.str) = mm_strdup("rename");
 }
-#line 62757 "preproc.c"
+#line 62709 "preproc.c"
     break;
 
   case 3141: /* bare_label_keyword: REPEATABLE  */
@@ -62761,7 +62713,7 @@
  { 
  (yyval.str) = mm_strdup("repeatable");
 }
-#line 62765 "preproc.c"
+#line 62717 "preproc.c"
     break;
 
   case 3142: /* bare_label_keyword: REPLACE  */
@@ -62769,7 +62721,7 @@
  { 
  (yyval.str) = mm_strdup("replace");
 }
-#line 62773 "preproc.c"
+#line 62725 "preproc.c"
     break;
 
   case 3143: /* bare_label_keyword: REPLICA  */
@@ -62777,7 +62729,7 @@
  { 
  (yyval.str) = mm_strdup("replica");
 }
-#line 62781 "preproc.c"
+#line 62733 "preproc.c"
     break;
 
   case 3144: /* bare_label_keyword: RESET  */
@@ -62785,7 +62737,7 @@
  { 
  (yyval.str) = mm_strdup("reset");
 }
-#line 62789 "preproc.c"
+#line 62741 "preproc.c"
     break;
 
   case 3145: /* bare_label_keyword: RESTART  */
@@ -62793,7 +62745,7 @@
  { 
  (yyval.str) = mm_strdup("restart");
 }
-#line 62797 "preproc.c"
+#line 62749 "preproc.c"
     break;
 
   case 3146: /* bare_label_keyword: RESTRICT  */
@@ -62801,7 +62753,7 @@
  { 
  (yyval.str) = mm_strdup("restrict");
 }
-#line 62805 "preproc.c"
+#line 62757 "preproc.c"
     break;
 
   case 3147: /* bare_label_keyword: RETURN  */
@@ -62809,7 +62761,7 @@
  { 
  (yyval.str) = mm_strdup("return");
 }
-#line 62813 "preproc.c"
+#line 62765 "preproc.c"
     break;
 
   case 3148: /* bare_label_keyword: RETURNS  */
@@ -62817,7 +62769,7 @@
  { 
  (yyval.str) = mm_strdup("returns");
 }
-#line 62821 "preproc.c"
+#line 62773 "preproc.c"
     break;
 
   case 3149: /* bare_label_keyword: REVOKE  */
@@ -62825,7 +62777,7 @@
  { 
  (yyval.str) = mm_strdup("revoke");
 }
-#line 62829 "preproc.c"
+#line 62781 "preproc.c"
     break;
 
   case 3150: /* bare_label_keyword: RIGHT  */
@@ -62833,7 +62785,7 @@
  { 
  (yyval.str) = mm_strdup("right");
 }
-#line 62837 "preproc.c"
+#line 62789 "preproc.c"
     break;
 
   case 3151: /* bare_label_keyword: ROLE  */
@@ -62841,7 +62793,7 @@
  { 
  (yyval.str) = mm_strdup("role");
 }
-#line 62845 "preproc.c"
+#line 62797 "preproc.c"
     break;
 
   case 3152: /* bare_label_keyword: ROLLBACK  */
@@ -62849,7 +62801,7 @@
  { 
  (yyval.str) = mm_strdup("rollback");
 }
-#line 62853 "preproc.c"
+#line 62805 "preproc.c"
     break;
 
   case 3153: /* bare_label_keyword: ROLLUP  */
@@ -62857,7 +62809,7 @@
  { 
  (yyval.str) = mm_strdup("rollup");
 }
-#line 62861 "preproc.c"
+#line 62813 "preproc.c"
     break;
 
   case 3154: /* bare_label_keyword: ROUTINE  */
@@ -62865,7 +62817,7 @@
  { 
  (yyval.str) = mm_strdup("routine");
 }
-#line 62869 "preproc.c"
+#line 62821 "preproc.c"
     break;
 
   case 3155: /* bare_label_keyword: ROUTINES  */
@@ -62873,7 +62825,7 @@
  { 
  (yyval.str) = mm_strdup("routines");
 }
-#line 62877 "preproc.c"
+#line 62829 "preproc.c"
     break;
 
   case 3156: /* bare_label_keyword: ROW  */
@@ -62881,7 +62833,7 @@
  { 
  (yyval.str) = mm_strdup("row");
 }
-#line 62885 "preproc.c"
+#line 62837 "preproc.c"
     break;
 
   case 3157: /* bare_label_keyword: ROWS  */
@@ -62889,7 +62841,7 @@
  { 
  (yyval.str) = mm_strdup("rows");
 }
-#line 62893 "preproc.c"
+#line 62845 "preproc.c"
     break;
 
   case 3158: /* bare_label_keyword: RULE  */
@@ -62897,7 +62849,7 @@
  { 
  (yyval.str) = mm_strdup("rule");
 }
-#line 62901 "preproc.c"
+#line 62853 "preproc.c"
     break;
 
   case 3159: /* bare_label_keyword: SAVEPOINT  */
@@ -62905,7 +62857,7 @@
  { 
  (yyval.str) = mm_strdup("savepoint");
 }
-#line 62909 "preproc.c"
+#line 62861 "preproc.c"
     break;
 
   case 3160: /* bare_label_keyword: SCALAR  */
@@ -62913,7 +62865,7 @@
  { 
  (yyval.str) = mm_strdup("scalar");
 }
-#line 62917 "preproc.c"
+#line 62869 "preproc.c"
     break;
 
   case 3161: /* bare_label_keyword: SCHEMA  */
@@ -62921,7 +62873,7 @@
  { 
  (yyval.str) = mm_strdup("schema");
 }
-#line 62925 "preproc.c"
+#line 62877 "preproc.c"
     break;
 
   case 3162: /* bare_label_keyword: SCHEMAS  */
@@ -62929,7 +62881,7 @@
  { 
  (yyval.str) = mm_strdup("schemas");
 }
-#line 62933 "preproc.c"
+#line 62885 "preproc.c"
     break;
 
   case 3163: /* bare_label_keyword: SCROLL  */
@@ -62937,7 +62889,7 @@
  { 
  (yyval.str) = mm_strdup("scroll");
 }
-#line 62941 "preproc.c"
+#line 62893 "preproc.c"
     break;
 
   case 3164: /* bare_label_keyword: SEARCH  */
@@ -62945,7 +62897,7 @@
  { 
  (yyval.str) = mm_strdup("search");
 }
-#line 62949 "preproc.c"
+#line 62901 "preproc.c"
     break;
 
   case 3165: /* bare_label_keyword: SECURITY  */
@@ -62953,7 +62905,7 @@
  { 
  (yyval.str) = mm_strdup("security");
 }
-#line 62957 "preproc.c"
+#line 62909 "preproc.c"
     break;
 
   case 3166: /* bare_label_keyword: SELECT  */
@@ -62961,7 +62913,7 @@
  { 
  (yyval.str) = mm_strdup("select");
 }
-#line 62965 "preproc.c"
+#line 62917 "preproc.c"
     break;
 
   case 3167: /* bare_label_keyword: SEQUENCE  */
@@ -62969,7 +62921,7 @@
  { 
  (yyval.str) = mm_strdup("sequence");
 }
-#line 62973 "preproc.c"
+#line 62925 "preproc.c"
     break;
 
   case 3168: /* bare_label_keyword: SEQUENCES  */
@@ -62977,7 +62929,7 @@
  { 
  (yyval.str) = mm_strdup("sequences");
 }
-#line 62981 "preproc.c"
+#line 62933 "preproc.c"
     break;
 
   case 3169: /* bare_label_keyword: SERIALIZABLE  */
@@ -62985,7 +62937,7 @@
  { 
  (yyval.str) = mm_strdup("serializable");
 }
-#line 62989 "preproc.c"
+#line 62941 "preproc.c"
     break;
 
   case 3170: /* bare_label_keyword: SERVER  */
@@ -62993,7 +62945,7 @@
  { 
  (yyval.str) = mm_strdup("server");
 }
-#line 62997 "preproc.c"
+#line 62949 "preproc.c"
     break;
 
   case 3171: /* bare_label_keyword: SESSION  */
@@ -63001,7 +62953,7 @@
  { 
  (yyval.str) = mm_strdup("session");
 }
-#line 63005 "preproc.c"
+#line 62957 "preproc.c"
     break;
 
   case 3172: /* bare_label_keyword: SESSION_USER  */
@@ -63009,7 +62961,7 @@
  { 
  (yyval.str) = mm_strdup("session_user");
 }
-#line 63013 "preproc.c"
+#line 62965 "preproc.c"
     break;
 
   case 3173: /* bare_label_keyword: SET  */
@@ -63017,7 +62969,7 @@
  { 
  (yyval.str) = mm_strdup("set");
 }
-#line 63021 "preproc.c"
+#line 62973 "preproc.c"
     break;
 
   case 3174: /* bare_label_keyword: SETOF  */
@@ -63025,7 +62977,7 @@
  { 
  (yyval.str) = mm_strdup("setof");
 }
-#line 63029 "preproc.c"
+#line 62981 "preproc.c"
     break;
 
   case 3175: /* bare_label_keyword: SETS  */
@@ -63033,7 +62985,7 @@
  { 
  (yyval.str) = mm_strdup("sets");
 }
-#line 63037 "preproc.c"
+#line 62989 "preproc.c"
     break;
 
   case 3176: /* bare_label_keyword: SHARE  */
@@ -63041,7 +62993,7 @@
  { 
  (yyval.str) = mm_strdup("share");
 }
-#line 63045 "preproc.c"
+#line 62997 "preproc.c"
     break;
 
   case 3177: /* bare_label_keyword: SHOW  */
@@ -63049,7 +63001,7 @@
  { 
  (yyval.str) = mm_strdup("show");
 }
-#line 63053 "preproc.c"
+#line 63005 "preproc.c"
     break;
 
   case 3178: /* bare_label_keyword: SIMILAR  */
@@ -63057,7 +63009,7 @@
  { 
  (yyval.str) = mm_strdup("similar");
 }
-#line 63061 "preproc.c"
+#line 63013 "preproc.c"
     break;
 
   case 3179: /* bare_label_keyword: SIMPLE  */
@@ -63065,7 +63017,7 @@
  { 
  (yyval.str) = mm_strdup("simple");
 }
-#line 63069 "preproc.c"
+#line 63021 "preproc.c"
     break;
 
   case 3180: /* bare_label_keyword: SKIP  */
@@ -63073,7 +63025,7 @@
  { 
  (yyval.str) = mm_strdup("skip");
 }
-#line 63077 "preproc.c"
+#line 63029 "preproc.c"
     break;
 
   case 3181: /* bare_label_keyword: SMALLINT  */
@@ -63081,7 +63033,7 @@
  { 
  (yyval.str) = mm_strdup("smallint");
 }
-#line 63085 "preproc.c"
+#line 63037 "preproc.c"
     break;
 
   case 3182: /* bare_label_keyword: SNAPSHOT  */
@@ -63089,7 +63041,7 @@
  { 
  (yyval.str) = mm_strdup("snapshot");
 }
-#line 63093 "preproc.c"
+#line 63045 "preproc.c"
     break;
 
   case 3183: /* bare_label_keyword: SOME  */
@@ -63097,7 +63049,7 @@
  { 
  (yyval.str) = mm_strdup("some");
 }
-#line 63101 "preproc.c"
+#line 63053 "preproc.c"
     break;
 
   case 3184: /* bare_label_keyword: SQL_P  */
@@ -63105,7 +63057,7 @@
  { 
  (yyval.str) = mm_strdup("sql");
 }
-#line 63109 "preproc.c"
+#line 63061 "preproc.c"
     break;
 
   case 3185: /* bare_label_keyword: STABLE  */
@@ -63113,7 +63065,7 @@
  { 
  (yyval.str) = mm_strdup("stable");
 }
-#line 63117 "preproc.c"
+#line 63069 "preproc.c"
     break;
 
   case 3186: /* bare_label_keyword: STANDALONE_P  */
@@ -63121,7 +63073,7 @@
  { 
  (yyval.str) = mm_strdup("standalone");
 }
-#line 63125 "preproc.c"
+#line 63077 "preproc.c"
     break;
 
   case 3187: /* bare_label_keyword: START  */
@@ -63129,7 +63081,7 @@
  { 
  (yyval.str) = mm_strdup("start");
 }
-#line 63133 "preproc.c"
+#line 63085 "preproc.c"
     break;
 
   case 3188: /* bare_label_keyword: STATEMENT  */
@@ -63137,7 +63089,7 @@
  { 
  (yyval.str) = mm_strdup("statement");
 }
-#line 63141 "preproc.c"
+#line 63093 "preproc.c"
     break;
 
   case 3189: /* bare_label_keyword: STATISTICS  */
@@ -63145,7 +63097,7 @@
  { 
  (yyval.str) = mm_strdup("statistics");
 }
-#line 63149 "preproc.c"
+#line 63101 "preproc.c"
     break;
 
   case 3190: /* bare_label_keyword: STDIN  */
@@ -63153,7 +63105,7 @@
  { 
  (yyval.str) = mm_strdup("stdin");
 }
-#line 63157 "preproc.c"
+#line 63109 "preproc.c"
     break;
 
   case 3191: /* bare_label_keyword: STDOUT  */
@@ -63161,7 +63113,7 @@
  { 
  (yyval.str) = mm_strdup("stdout");
 }
-#line 63165 "preproc.c"
+#line 63117 "preproc.c"
     break;
 
   case 3192: /* bare_label_keyword: STORAGE  */
@@ -63169,7 +63121,7 @@
  { 
  (yyval.str) = mm_strdup("storage");
 }
-#line 63173 "preproc.c"
+#line 63125 "preproc.c"
     break;
 
   case 3193: /* bare_label_keyword: STORED  */
@@ -63177,7 +63129,7 @@
  { 
  (yyval.str) = mm_strdup("stored");
 }
-#line 63181 "preproc.c"
+#line 63133 "preproc.c"
     break;
 
   case 3194: /* bare_label_keyword: STRICT_P  */
@@ -63185,7 +63137,7 @@
  { 
  (yyval.str) = mm_strdup("strict");
 }
-#line 63189 "preproc.c"
+#line 63141 "preproc.c"
     break;
 
   case 3195: /* bare_label_keyword: STRIP_P  */
@@ -63193,7 +63145,7 @@
  { 
  (yyval.str) = mm_strdup("strip");
 }
-#line 63197 "preproc.c"
+#line 63149 "preproc.c"
     break;
 
   case 3196: /* bare_label_keyword: SUBSCRIPTION  */
@@ -63201,7 +63153,7 @@
  { 
  (yyval.str) = mm_strdup("subscription");
 }
-#line 63205 "preproc.c"
+#line 63157 "preproc.c"
     break;
 
   case 3197: /* bare_label_keyword: SUBSTRING  */
@@ -63209,7 +63161,7 @@
  { 
  (yyval.str) = mm_strdup("substring");
 }
-#line 63213 "preproc.c"
+#line 63165 "preproc.c"
     break;
 
   case 3198: /* bare_label_keyword: SUPPORT  */
@@ -63217,7 +63169,7 @@
  { 
  (yyval.str) = mm_strdup("support");
 }
-#line 63221 "preproc.c"
+#line 63173 "preproc.c"
     break;
 
   case 3199: /* bare_label_keyword: SYMMETRIC  */
@@ -63225,7 +63177,7 @@
  { 
  (yyval.str) = mm_strdup("symmetric");
 }
-#line 63229 "preproc.c"
+#line 63181 "preproc.c"
     break;
 
   case 3200: /* bare_label_keyword: SYSID  */
@@ -63233,7 +63185,7 @@
  { 
  (yyval.str) = mm_strdup("sysid");
 }
-#line 63237 "preproc.c"
+#line 63189 "preproc.c"
     break;
 
   case 3201: /* bare_label_keyword: SYSTEM_P  */
@@ -63241,7 +63193,7 @@
  { 
  (yyval.str) = mm_strdup("system");
 }
-#line 63245 "preproc.c"
+#line 63197 "preproc.c"
     break;
 
   case 3202: /* bare_label_keyword: SYSTEM_USER  */
@@ -63249,7 +63201,7 @@
  { 
  (yyval.str) = mm_strdup("system_user");
 }
-#line 63253 "preproc.c"
+#line 63205 "preproc.c"
     break;
 
   case 3203: /* bare_label_keyword: TABLE  */
@@ -63257,7 +63209,7 @@
  { 
  (yyval.str) = mm_strdup("table");
 }
-#line 63261 "preproc.c"
+#line 63213 "preproc.c"
     break;
 
   case 3204: /* bare_label_keyword: TABLES  */
@@ -63265,7 +63217,7 @@
  { 
  (yyval.str) = mm_strdup("tables");
 }
-#line 63269 "preproc.c"
+#line 63221 "preproc.c"
     break;
 
   case 3205: /* bare_label_keyword: TABLESAMPLE  */
@@ -63273,7 +63225,7 @@
  { 
  (yyval.str) = mm_strdup("tablesample");
 }
-#line 63277 "preproc.c"
+#line 63229 "preproc.c"
     break;
 
   case 3206: /* bare_label_keyword: TABLESPACE  */
@@ -63281,7 +63233,7 @@
  { 
  (yyval.str) = mm_strdup("tablespace");
 }
-#line 63285 "preproc.c"
+#line 63237 "preproc.c"
     break;
 
   case 3207: /* bare_label_keyword: TEMP  */
@@ -63289,7 +63241,7 @@
  { 
  (yyval.str) = mm_strdup("temp");
 }
-#line 63293 "preproc.c"
+#line 63245 "preproc.c"
     break;
 
   case 3208: /* bare_label_keyword: TEMPLATE  */
@@ -63297,7 +63249,7 @@
  { 
  (yyval.str) = mm_strdup("template");
 }
-#line 63301 "preproc.c"
+#line 63253 "preproc.c"
     break;
 
   case 3209: /* bare_label_keyword: TEMPORARY  */
@@ -63305,7 +63257,7 @@
  { 
  (yyval.str) = mm_strdup("temporary");
 }
-#line 63309 "preproc.c"
+#line 63261 "preproc.c"
     break;
 
   case 3210: /* bare_label_keyword: TEXT_P  */
@@ -63313,7 +63265,7 @@
  { 
  (yyval.str) = mm_strdup("text");
 }
-#line 63317 "preproc.c"
+#line 63269 "preproc.c"
     break;
 
   case 3211: /* bare_label_keyword: THEN  */
@@ -63321,7 +63273,7 @@
  { 
  (yyval.str) = mm_strdup("then");
 }
-#line 63325 "preproc.c"
+#line 63277 "preproc.c"
     break;
 
   case 3212: /* bare_label_keyword: TIES  */
@@ -63329,7 +63281,7 @@
  { 
  (yyval.str) = mm_strdup("ties");
 }
-#line 63333 "preproc.c"
+#line 63285 "preproc.c"
     break;
 
   case 3213: /* bare_label_keyword: TIME  */
@@ -63337,7 +63289,7 @@
  { 
  (yyval.str) = mm_strdup("time");
 }
-#line 63341 "preproc.c"
+#line 63293 "preproc.c"
     break;
 
   case 3214: /* bare_label_keyword: TIMESTAMP  */
@@ -63345,7 +63297,7 @@
  { 
  (yyval.str) = mm_strdup("timestamp");
 }
-#line 63349 "preproc.c"
+#line 63301 "preproc.c"
     break;
 
   case 3215: /* bare_label_keyword: TRAILING  */
@@ -63353,7 +63305,7 @@
  { 
  (yyval.str) = mm_strdup("trailing");
 }
-#line 63357 "preproc.c"
+#line 63309 "preproc.c"
     break;
 
   case 3216: /* bare_label_keyword: TRANSACTION  */
@@ -63361,7 +63313,7 @@
  { 
  (yyval.str) = mm_strdup("transaction");
 }
-#line 63365 "preproc.c"
+#line 63317 "preproc.c"
     break;
 
   case 3217: /* bare_label_keyword: TRANSFORM  */
@@ -63369,7 +63321,7 @@
  { 
  (yyval.str) = mm_strdup("transform");
 }
-#line 63373 "preproc.c"
+#line 63325 "preproc.c"
     break;
 
   case 3218: /* bare_label_keyword: TREAT  */
@@ -63377,7 +63329,7 @@
  { 
  (yyval.str) = mm_strdup("treat");
 }
-#line 63381 "preproc.c"
+#line 63333 "preproc.c"
     break;
 
   case 3219: /* bare_label_keyword: TRIGGER  */
@@ -63385,7 +63337,7 @@
  { 
  (yyval.str) = mm_strdup("trigger");
 }
-#line 63389 "preproc.c"
+#line 63341 "preproc.c"
     break;
 
   case 3220: /* bare_label_keyword: TRIM  */
@@ -63393,7 +63345,7 @@
  { 
  (yyval.str) = mm_strdup("trim");
 }
-#line 63397 "preproc.c"
+#line 63349 "preproc.c"
     break;
 
   case 3221: /* bare_label_keyword: TRUE_P  */
@@ -63401,7 +63353,7 @@
  { 
  (yyval.str) = mm_strdup("true");
 }
-#line 63405 "preproc.c"
+#line 63357 "preproc.c"
     break;
 
   case 3222: /* bare_label_keyword: TRUNCATE  */
@@ -63409,7 +63361,7 @@
  { 
  (yyval.str) = mm_strdup("truncate");
 }
-#line 63413 "preproc.c"
+#line 63365 "preproc.c"
     break;
 
   case 3223: /* bare_label_keyword: TRUSTED  */
@@ -63417,7 +63369,7 @@
  { 
  (yyval.str) = mm_strdup("trusted");
 }
-#line 63421 "preproc.c"
+#line 63373 "preproc.c"
     break;
 
   case 3224: /* bare_label_keyword: TYPE_P  */
@@ -63425,7 +63377,7 @@
  { 
  (yyval.str) = mm_strdup("type");
 }
-#line 63429 "preproc.c"
+#line 63381 "preproc.c"
     break;
 
   case 3225: /* bare_label_keyword: TYPES_P  */
@@ -63433,7 +63385,7 @@
  { 
  (yyval.str) = mm_strdup("types");
 }
-#line 63437 "preproc.c"
+#line 63389 "preproc.c"
     break;
 
   case 3226: /* bare_label_keyword: UESCAPE  */
@@ -63441,7 +63393,7 @@
  { 
  (yyval.str) = mm_strdup("uescape");
 }
-#line 63445 "preproc.c"
+#line 63397 "preproc.c"
     break;
 
   case 3227: /* bare_label_keyword: UNBOUNDED  */
@@ -63449,7 +63401,7 @@
  { 
  (yyval.str) = mm_strdup("unbounded");
 }
-#line 63453 "preproc.c"
+#line 63405 "preproc.c"
     break;
 
   case 3228: /* bare_label_keyword: UNCOMMITTED  */
@@ -63457,7 +63409,7 @@
  { 
  (yyval.str) = mm_strdup("uncommitted");
 }
-#line 63461 "preproc.c"
+#line 63413 "preproc.c"
     break;
 
   case 3229: /* bare_label_keyword: UNENCRYPTED  */
@@ -63465,7 +63417,7 @@
  { 
  (yyval.str) = mm_strdup("unencrypted");
 }
-#line 63469 "preproc.c"
+#line 63421 "preproc.c"
     break;
 
   case 3230: /* bare_label_keyword: UNIQUE  */
@@ -63473,7 +63425,7 @@
  { 
  (yyval.str) = mm_strdup("unique");
 }
-#line 63477 "preproc.c"
+#line 63429 "preproc.c"
     break;
 
   case 3231: /* bare_label_keyword: UNKNOWN  */
@@ -63481,7 +63433,7 @@
  { 
  (yyval.str) = mm_strdup("unknown");
 }
-#line 63485 "preproc.c"
+#line 63437 "preproc.c"
     break;
 
   case 3232: /* bare_label_keyword: UNLISTEN  */
@@ -63489,7 +63441,7 @@
  { 
  (yyval.str) = mm_strdup("unlisten");
 }
-#line 63493 "preproc.c"
+#line 63445 "preproc.c"
     break;
 
   case 3233: /* bare_label_keyword: UNLOGGED  */
@@ -63497,7 +63449,7 @@
  { 
  (yyval.str) = mm_strdup("unlogged");
 }
-#line 63501 "preproc.c"
+#line 63453 "preproc.c"
     break;
 
   case 3234: /* bare_label_keyword: UNTIL  */
@@ -63505,7 +63457,7 @@
  { 
  (yyval.str) = mm_strdup("until");
 }
-#line 63509 "preproc.c"
+#line 63461 "preproc.c"
     break;
 
   case 3235: /* bare_label_keyword: UPDATE  */
@@ -63513,7 +63465,7 @@
  { 
  (yyval.str) = mm_strdup("update");
 }
-#line 63517 "preproc.c"
+#line 63469 "preproc.c"
     break;
 
   case 3236: /* bare_label_keyword: USER  */
@@ -63521,7 +63473,7 @@
  { 
  (yyval.str) = mm_strdup("user");
 }
-#line 63525 "preproc.c"
+#line 63477 "preproc.c"
     break;
 
   case 3237: /* bare_label_keyword: USING  */
@@ -63529,7 +63481,7 @@
  { 
  (yyval.str) = mm_strdup("using");
 }
-#line 63533 "preproc.c"
+#line 63485 "preproc.c"
     break;
 
   case 3238: /* bare_label_keyword: VACUUM  */
@@ -63537,7 +63489,7 @@
  { 
  (yyval.str) = mm_strdup("vacuum");
 }
-#line 63541 "preproc.c"
+#line 63493 "preproc.c"
     break;
 
   case 3239: /* bare_label_keyword: VALID  */
@@ -63545,7 +63497,7 @@
  { 
  (yyval.str) = mm_strdup("valid");
 }
-#line 63549 "preproc.c"
+#line 63501 "preproc.c"
     break;
 
   case 3240: /* bare_label_keyword: VALIDATE  */
@@ -63553,7 +63505,7 @@
  { 
  (yyval.str) = mm_strdup("validate");
 }
-#line 63557 "preproc.c"
+#line 63509 "preproc.c"
     break;
 
   case 3241: /* bare_label_keyword: VALIDATOR  */
@@ -63561,7 +63513,7 @@
  { 
  (yyval.str) = mm_strdup("validator");
 }
-#line 63565 "preproc.c"
+#line 63517 "preproc.c"
     break;
 
   case 3242: /* bare_label_keyword: VALUE_P  */
@@ -63569,7 +63521,7 @@
  { 
  (yyval.str) = mm_strdup("value");
 }
-#line 63573 "preproc.c"
+#line 63525 "preproc.c"
     break;
 
   case 3243: /* bare_label_keyword: VALUES  */
@@ -63577,7 +63529,7 @@
  { 
  (yyval.str) = mm_strdup("values");
 }
-#line 63581 "preproc.c"
+#line 63533 "preproc.c"
     break;
 
   case 3244: /* bare_label_keyword: VARCHAR  */
@@ -63585,7 +63537,7 @@
  { 
  (yyval.str) = mm_strdup("varchar");
 }
-#line 63589 "preproc.c"
+#line 63541 "preproc.c"
     break;
 
   case 3245: /* bare_label_keyword: VARIADIC  */
@@ -63593,7 +63545,7 @@
  { 
  (yyval.str) = mm_strdup("variadic");
 }
-#line 63597 "preproc.c"
+#line 63549 "preproc.c"
     break;
 
   case 3246: /* bare_label_keyword: VERBOSE  */
@@ -63601,7 +63553,7 @@
  { 
  (yyval.str) = mm_strdup("verbose");
 }
-#line 63605 "preproc.c"
+#line 63557 "preproc.c"
     break;
 
   case 3247: /* bare_label_keyword: VERSION_P  */
@@ -63609,7 +63561,7 @@
  { 
  (yyval.str) = mm_strdup("version");
 }
-#line 63613 "preproc.c"
+#line 63565 "preproc.c"
     break;
 
   case 3248: /* bare_label_keyword: VIEW  */
@@ -63617,7 +63569,7 @@
  { 
  (yyval.str) = mm_strdup("view");
 }
-#line 63621 "preproc.c"
+#line 63573 "preproc.c"
     break;
 
   case 3249: /* bare_label_keyword: VIEWS  */
@@ -63625,7 +63577,7 @@
  { 
  (yyval.str) = mm_strdup("views");
 }
-#line 63629 "preproc.c"
+#line 63581 "preproc.c"
     break;
 
   case 3250: /* bare_label_keyword: VOLATILE  */
@@ -63633,7 +63585,7 @@
  { 
  (yyval.str) = mm_strdup("volatile");
 }
-#line 63637 "preproc.c"
+#line 63589 "preproc.c"
     break;
 
   case 3251: /* bare_label_keyword: WHEN  */
@@ -63641,7 +63593,7 @@
  { 
  (yyval.str) = mm_strdup("when");
 }
-#line 63645 "preproc.c"
+#line 63597 "preproc.c"
     break;
 
   case 3252: /* bare_label_keyword: WHITESPACE_P  */
@@ -63649,7 +63601,7 @@
  { 
  (yyval.str) = mm_strdup("whitespace");
 }
-#line 63653 "preproc.c"
+#line 63605 "preproc.c"
     break;
 
   case 3253: /* bare_label_keyword: WORK  */
@@ -63657,7 +63609,7 @@
  { 
  (yyval.str) = mm_strdup("work");
 }
-#line 63661 "preproc.c"
+#line 63613 "preproc.c"
     break;
 
   case 3254: /* bare_label_keyword: WRAPPER  */
@@ -63665,7 +63617,7 @@
  { 
  (yyval.str) = mm_strdup("wrapper");
 }
-#line 63669 "preproc.c"
+#line 63621 "preproc.c"
     break;
 
   case 3255: /* bare_label_keyword: WRITE  */
@@ -63673,7 +63625,7 @@
  { 
  (yyval.str) = mm_strdup("write");
 }
-#line 63677 "preproc.c"
+#line 63629 "preproc.c"
     break;
 
   case 3256: /* bare_label_keyword: XML_P  */
@@ -63681,7 +63633,7 @@
  { 
  (yyval.str) = mm_strdup("xml");
 }
-#line 63685 "preproc.c"
+#line 63637 "preproc.c"
     break;
 
   case 3257: /* bare_label_keyword: XMLATTRIBUTES  */
@@ -63689,7 +63641,7 @@
  { 
  (yyval.str) = mm_strdup("xmlattributes");
 }
-#line 63693 "preproc.c"
+#line 63645 "preproc.c"
     break;
 
   case 3258: /* bare_label_keyword: XMLCONCAT  */
@@ -63697,7 +63649,7 @@
  { 
  (yyval.str) = mm_strdup("xmlconcat");
 }
-#line 63701 "preproc.c"
+#line 63653 "preproc.c"
     break;
 
   case 3259: /* bare_label_keyword: XMLELEMENT  */
@@ -63705,7 +63657,7 @@
  { 
  (yyval.str) = mm_strdup("xmlelement");
 }
-#line 63709 "preproc.c"
+#line 63661 "preproc.c"
     break;
 
   case 3260: /* bare_label_keyword: XMLEXISTS  */
@@ -63713,7 +63665,7 @@
  { 
  (yyval.str) = mm_strdup("xmlexists");
 }
-#line 63717 "preproc.c"
+#line 63669 "preproc.c"
     break;
 
   case 3261: /* bare_label_keyword: XMLFOREST  */
@@ -63721,7 +63673,7 @@
  { 
  (yyval.str) = mm_strdup("xmlforest");
 }
-#line 63725 "preproc.c"
+#line 63677 "preproc.c"
     break;
 
   case 3262: /* bare_label_keyword: XMLNAMESPACES  */
@@ -63729,7 +63681,7 @@
  { 
  (yyval.str) = mm_strdup("xmlnamespaces");
 }
-#line 63733 "preproc.c"
+#line 63685 "preproc.c"
     break;
 
   case 3263: /* bare_label_keyword: XMLPARSE  */
@@ -63737,7 +63689,7 @@
  { 
  (yyval.str) = mm_strdup("xmlparse");
 }
-#line 63741 "preproc.c"
+#line 63693 "preproc.c"
     break;
 
   case 3264: /* bare_label_keyword: XMLPI  */
@@ -63745,7 +63697,7 @@
  { 
  (yyval.str) = mm_strdup("xmlpi");
 }
-#line 63749 "preproc.c"
+#line 63701 "preproc.c"
     break;
 
   case 3265: /* bare_label_keyword: XMLROOT  */
@@ -63753,7 +63705,7 @@
  { 
  (yyval.str) = mm_strdup("xmlroot");
 }
-#line 63757 "preproc.c"
+#line 63709 "preproc.c"
     break;
 
   case 3266: /* bare_label_keyword: XMLSERIALIZE  */
@@ -63761,7 +63713,7 @@
  { 
  (yyval.str) = mm_strdup("xmlserialize");
 }
-#line 63765 "preproc.c"
+#line 63717 "preproc.c"
     break;
 
   case 3267: /* bare_label_keyword: XMLTABLE  */
@@ -63769,7 +63721,7 @@
  { 
  (yyval.str) = mm_strdup("xmltable");
 }
-#line 63773 "preproc.c"
+#line 63725 "preproc.c"
     break;
 
   case 3268: /* bare_label_keyword: YES_P  */
@@ -63777,7 +63729,7 @@
  { 
  (yyval.str) = mm_strdup("yes");
 }
-#line 63781 "preproc.c"
+#line 63733 "preproc.c"
     break;
 
   case 3269: /* bare_label_keyword: ZONE  */
@@ -63785,7 +63737,7 @@
  { 
  (yyval.str) = mm_strdup("zone");
 }
-#line 63789 "preproc.c"
+#line 63741 "preproc.c"
     break;
 
   case 3272: /* statement: ecpgstart at toplevel_stmt ';'  */
@@ -63795,7 +63747,7 @@
 						free(connection);
 					connection = NULL;
 				}
-#line 63799 "preproc.c"
+#line 63751 "preproc.c"
     break;
 
   case 3273: /* statement: ecpgstart toplevel_stmt ';'  */
@@ -63805,7 +63757,7 @@
 						free(connection);
 					connection = NULL;
 				}
-#line 63809 "preproc.c"
+#line 63761 "preproc.c"
     break;
 
   case 3274: /* statement: ecpgstart ECPGVarDeclaration  */
@@ -63815,25 +63767,25 @@
 					free((yyvsp[0].str));
 					output_line_number();
 				}
-#line 63819 "preproc.c"
+#line 63771 "preproc.c"
     break;
 
   case 3276: /* statement: c_thing  */
 #line 17562 "preproc.y"
                                                         { fprintf(base_yyout, "%s", (yyvsp[0].str)); free((yyvsp[0].str)); }
-#line 63825 "preproc.c"
+#line 63777 "preproc.c"
     break;
 
   case 3277: /* statement: CPP_LINE  */
 #line 17563 "preproc.y"
                                                         { fprintf(base_yyout, "%s", (yyvsp[0].str)); free((yyvsp[0].str)); }
-#line 63831 "preproc.c"
+#line 63783 "preproc.c"
     break;
 
   case 3278: /* statement: '{'  */
 #line 17564 "preproc.y"
                                                         { braces_open++; fputs("{", base_yyout); }
-#line 63837 "preproc.c"
+#line 63789 "preproc.c"
     break;
 
   case 3279: /* statement: '}'  */
@@ -63848,13 +63800,13 @@
 			}
 			fputs("}", base_yyout);
 		}
-#line 63852 "preproc.c"
+#line 63804 "preproc.c"
     break;
 
   case 3280: /* $@1: %empty  */
 #line 17578 "preproc.y"
                                                        {FoundInto = 0;}
-#line 63858 "preproc.c"
+#line 63810 "preproc.c"
     break;
 
   case 3281: /* CreateAsStmt: CREATE OptTemp TABLE create_as_target AS $@1 SelectStmt opt_with_data  */
@@ -63865,13 +63817,13 @@
 
 			(yyval.str) = cat_str(7, mm_strdup("create"), (yyvsp[-6].str), mm_strdup("table"), (yyvsp[-4].str), mm_strdup("as"), (yyvsp[-1].str), (yyvsp[0].str));
 		}
-#line 63869 "preproc.c"
+#line 63821 "preproc.c"
     break;
 
   case 3282: /* $@2: %empty  */
 #line 17585 "preproc.y"
                                                                             {FoundInto = 0;}
-#line 63875 "preproc.c"
+#line 63827 "preproc.c"
     break;
 
   case 3283: /* CreateAsStmt: CREATE OptTemp TABLE IF_P NOT EXISTS create_as_target AS $@2 SelectStmt opt_with_data  */
@@ -63882,7 +63834,7 @@
 
 			(yyval.str) = cat_str(7, mm_strdup("create"), (yyvsp[-9].str), mm_strdup("table if not exists"), (yyvsp[-4].str), mm_strdup("as"), (yyvsp[-1].str), (yyvsp[0].str));
 		}
-#line 63886 "preproc.c"
+#line 63838 "preproc.c"
     break;
 
   case 3284: /* at: AT connection_object  */
@@ -63896,31 +63848,31 @@
 			if (argsinsert != NULL)
 				argsinsert = NULL;
 		}
-#line 63900 "preproc.c"
+#line 63852 "preproc.c"
     break;
 
   case 3285: /* ECPGConnect: SQL_CONNECT TO connection_target opt_connection_name opt_user  */
 #line 17610 "preproc.y"
                         { (yyval.str) = cat_str(5, (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str), mm_strdup(","), (yyvsp[-1].str)); }
-#line 63906 "preproc.c"
+#line 63858 "preproc.c"
     break;
 
   case 3286: /* ECPGConnect: SQL_CONNECT TO DEFAULT  */
 #line 17612 "preproc.y"
                         { (yyval.str) = mm_strdup("NULL, NULL, NULL, \"DEFAULT\""); }
-#line 63912 "preproc.c"
+#line 63864 "preproc.c"
     break;
 
   case 3287: /* ECPGConnect: SQL_CONNECT ora_user  */
 #line 17615 "preproc.y"
                         { (yyval.str) = cat_str(3, mm_strdup("NULL,"), (yyvsp[0].str), mm_strdup(", NULL")); }
-#line 63918 "preproc.c"
+#line 63870 "preproc.c"
     break;
 
   case 3288: /* ECPGConnect: DATABASE connection_target  */
 #line 17617 "preproc.y"
                         { (yyval.str) = cat2_str((yyvsp[0].str), mm_strdup(", NULL, NULL, NULL")); }
-#line 63924 "preproc.c"
+#line 63876 "preproc.c"
     break;
 
   case 3289: /* connection_target: opt_database_name opt_server opt_port  */
@@ -63936,7 +63888,7 @@
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), make3_str((yyvsp[-2].str), (yyvsp[-1].str), (yyvsp[0].str)), mm_strdup("\""));
 		}
-#line 63940 "preproc.c"
+#line 63892 "preproc.c"
     break;
 
   case 3290: /* connection_target: db_prefix ':' server opt_port '/' opt_database_name opt_options  */
@@ -63956,7 +63908,7 @@
 
 			(yyval.str) = make3_str(make3_str(mm_strdup("\""), (yyvsp[-6].str), mm_strdup(":")), (yyvsp[-4].str), make3_str(make3_str((yyvsp[-3].str), mm_strdup("/"), (yyvsp[-1].str)), (yyvsp[0].str), mm_strdup("\"")));
 		}
-#line 63960 "preproc.c"
+#line 63912 "preproc.c"
     break;
 
   case 3291: /* connection_target: char_variable  */
@@ -63964,7 +63916,7 @@
                 {
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 63968 "preproc.c"
+#line 63920 "preproc.c"
     break;
 
   case 3292: /* connection_target: ecpg_sconst  */
@@ -63977,19 +63929,19 @@
 			(yyvsp[0].str)[strlen((yyvsp[0].str))-1] = '\"';
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 63981 "preproc.c"
+#line 63933 "preproc.c"
     break;
 
   case 3293: /* opt_database_name: name  */
 #line 17663 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 63987 "preproc.c"
+#line 63939 "preproc.c"
     break;
 
   case 3294: /* opt_database_name: %empty  */
 #line 17664 "preproc.y"
                                                 { (yyval.str) = EMPTY; }
-#line 63993 "preproc.c"
+#line 63945 "preproc.c"
     break;
 
   case 3295: /* db_prefix: ecpg_ident cvariable  */
@@ -64003,7 +63955,7 @@
 
 			(yyval.str) = make3_str((yyvsp[-1].str), mm_strdup(":"), (yyvsp[0].str));
 		}
-#line 64007 "preproc.c"
+#line 63959 "preproc.c"
     break;
 
   case 3296: /* server: Op server_name  */
@@ -64014,97 +63966,97 @@
 
 			(yyval.str) = make2_str((yyvsp[-1].str), (yyvsp[0].str));
 		}
-#line 64018 "preproc.c"
+#line 63970 "preproc.c"
     break;
 
   case 3297: /* opt_server: server  */
 #line 17688 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64024 "preproc.c"
+#line 63976 "preproc.c"
     break;
 
   case 3298: /* opt_server: %empty  */
 #line 17689 "preproc.y"
                                                 { (yyval.str) = EMPTY; }
-#line 64030 "preproc.c"
+#line 63982 "preproc.c"
     break;
 
   case 3299: /* server_name: ColId  */
 #line 17692 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64036 "preproc.c"
+#line 63988 "preproc.c"
     break;
 
   case 3300: /* server_name: ColId '.' server_name  */
 #line 17693 "preproc.y"
                                                 { (yyval.str) = make3_str((yyvsp[-2].str), mm_strdup("."), (yyvsp[0].str)); }
-#line 64042 "preproc.c"
+#line 63994 "preproc.c"
     break;
 
   case 3301: /* server_name: IP  */
 #line 17694 "preproc.y"
                                                                 { (yyval.str) = make_name(); }
-#line 64048 "preproc.c"
+#line 64000 "preproc.c"
     break;
 
   case 3302: /* opt_port: ':' Iconst  */
 #line 17697 "preproc.y"
                                 { (yyval.str) = make2_str(mm_strdup(":"), (yyvsp[0].str)); }
-#line 64054 "preproc.c"
+#line 64006 "preproc.c"
     break;
 
   case 3303: /* opt_port: %empty  */
 #line 17698 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 64060 "preproc.c"
+#line 64012 "preproc.c"
     break;
 
   case 3304: /* opt_connection_name: AS connection_object  */
 #line 17701 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64066 "preproc.c"
+#line 64018 "preproc.c"
     break;
 
   case 3305: /* opt_connection_name: %empty  */
 #line 17702 "preproc.y"
                                                 { (yyval.str) = mm_strdup("NULL"); }
-#line 64072 "preproc.c"
+#line 64024 "preproc.c"
     break;
 
   case 3306: /* opt_user: USER ora_user  */
 #line 17705 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64078 "preproc.c"
+#line 64030 "preproc.c"
     break;
 
   case 3307: /* opt_user: %empty  */
 #line 17706 "preproc.y"
                                                 { (yyval.str) = mm_strdup("NULL, NULL"); }
-#line 64084 "preproc.c"
+#line 64036 "preproc.c"
     break;
 
   case 3308: /* ora_user: user_name  */
 #line 17710 "preproc.y"
                         { (yyval.str) = cat2_str((yyvsp[0].str), mm_strdup(", NULL")); }
-#line 64090 "preproc.c"
+#line 64042 "preproc.c"
     break;
 
   case 3309: /* ora_user: user_name '/' user_name  */
 #line 17712 "preproc.y"
                         { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str)); }
-#line 64096 "preproc.c"
+#line 64048 "preproc.c"
     break;
 
   case 3310: /* ora_user: user_name SQL_IDENTIFIED BY user_name  */
 #line 17714 "preproc.y"
                         { (yyval.str) = cat_str(3, (yyvsp[-3].str), mm_strdup(","), (yyvsp[0].str)); }
-#line 64102 "preproc.c"
+#line 64054 "preproc.c"
     break;
 
   case 3311: /* ora_user: user_name USING user_name  */
 #line 17716 "preproc.y"
                         { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str)); }
-#line 64108 "preproc.c"
+#line 64060 "preproc.c"
     break;
 
   case 3312: /* user_name: RoleId  */
@@ -64115,7 +64067,7 @@
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\""));
 		}
-#line 64119 "preproc.c"
+#line 64071 "preproc.c"
     break;
 
   case 3313: /* user_name: ecpg_sconst  */
@@ -64126,7 +64078,7 @@
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\""));
 		}
-#line 64130 "preproc.c"
+#line 64082 "preproc.c"
     break;
 
   case 3314: /* user_name: civar  */
@@ -64144,7 +64096,7 @@
 			else
 				(yyval.str) = mm_strdup(argsinsert->variable->name);
 		}
-#line 64148 "preproc.c"
+#line 64100 "preproc.c"
     break;
 
   case 3315: /* char_variable: cvariable  */
@@ -64180,7 +64132,7 @@
 				}
 			}
 		}
-#line 64184 "preproc.c"
+#line 64136 "preproc.c"
     break;
 
   case 3316: /* opt_options: Op connect_options  */
@@ -64194,13 +64146,13 @@
 
 			(yyval.str) = make2_str(mm_strdup("?"), (yyvsp[0].str));
 		}
-#line 64198 "preproc.c"
+#line 64150 "preproc.c"
     break;
 
   case 3317: /* opt_options: %empty  */
 #line 17793 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 64204 "preproc.c"
+#line 64156 "preproc.c"
     break;
 
   case 3318: /* connect_options: ColId opt_opt_value  */
@@ -64208,7 +64160,7 @@
                         {
 				(yyval.str) = make2_str((yyvsp[-1].str), (yyvsp[0].str));
 			}
-#line 64212 "preproc.c"
+#line 64164 "preproc.c"
     break;
 
   case 3319: /* connect_options: ColId opt_opt_value Op connect_options  */
@@ -64222,31 +64174,31 @@
 
 				(yyval.str) = cat_str(3, make2_str((yyvsp[-3].str), (yyvsp[-2].str)), (yyvsp[-1].str), (yyvsp[0].str));
 			}
-#line 64226 "preproc.c"
+#line 64178 "preproc.c"
     break;
 
   case 3320: /* opt_opt_value: %empty  */
 #line 17813 "preproc.y"
                         { (yyval.str) = EMPTY; }
-#line 64232 "preproc.c"
+#line 64184 "preproc.c"
     break;
 
   case 3321: /* opt_opt_value: '=' Iconst  */
 #line 17815 "preproc.y"
                         { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[0].str)); }
-#line 64238 "preproc.c"
+#line 64190 "preproc.c"
     break;
 
   case 3322: /* opt_opt_value: '=' ecpg_ident  */
 #line 17817 "preproc.y"
                         { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[0].str)); }
-#line 64244 "preproc.c"
+#line 64196 "preproc.c"
     break;
 
   case 3323: /* opt_opt_value: '=' civar  */
 #line 17819 "preproc.y"
                         { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[0].str)); }
-#line 64250 "preproc.c"
+#line 64202 "preproc.c"
     break;
 
   case 3324: /* prepared_name: name  */
@@ -64264,13 +64216,13 @@
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\""));
 			}
 		}
-#line 64268 "preproc.c"
+#line 64220 "preproc.c"
     break;
 
   case 3325: /* prepared_name: char_variable  */
 #line 17836 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64274 "preproc.c"
+#line 64226 "preproc.c"
     break;
 
   case 3326: /* ECPGDeclareStmt: DECLARE prepared_name STATEMENT  */
@@ -64305,7 +64257,7 @@
 
 			(yyval.str) = cat_str(3 , mm_strdup("/* declare "), mm_strdup((yyvsp[-1].str)), mm_strdup(" as an SQL identifier */"));
 		}
-#line 64309 "preproc.c"
+#line 64261 "preproc.c"
     break;
 
   case 3327: /* ECPGCursorStmt: DECLARE cursor_name cursor_options CURSOR opt_hold FOR prepared_name  */
@@ -64369,7 +64321,7 @@
 			(yyval.str) = cat_str(2, adjust_outofscope_cursor_vars(this),
 					comment);
 		}
-#line 64373 "preproc.c"
+#line 64325 "preproc.c"
     break;
 
   case 3328: /* ECPGExecuteImmediateStmt: EXECUTE IMMEDIATE execstring  */
@@ -64379,73 +64331,73 @@
 			   * immediately execute it */
 			  (yyval.str) = (yyvsp[0].str);
 			}
-#line 64383 "preproc.c"
+#line 64335 "preproc.c"
     break;
 
   case 3330: /* single_vt_declaration: type_declaration  */
 #line 17952 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64389 "preproc.c"
+#line 64341 "preproc.c"
     break;
 
   case 3331: /* single_vt_declaration: var_declaration  */
 #line 17953 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64395 "preproc.c"
+#line 64347 "preproc.c"
     break;
 
   case 3332: /* precision: NumericOnly  */
 #line 17956 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64401 "preproc.c"
+#line 64353 "preproc.c"
     break;
 
   case 3333: /* opt_scale: ',' NumericOnly  */
 #line 17958 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64407 "preproc.c"
+#line 64359 "preproc.c"
     break;
 
   case 3334: /* opt_scale: %empty  */
 #line 17959 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 64413 "preproc.c"
+#line 64365 "preproc.c"
     break;
 
   case 3335: /* ecpg_interval: opt_interval  */
 #line 17962 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 64419 "preproc.c"
+#line 64371 "preproc.c"
     break;
 
   case 3336: /* ecpg_interval: YEAR_P TO MINUTE_P  */
 #line 17963 "preproc.y"
                                         { (yyval.str) = mm_strdup("year to minute"); }
-#line 64425 "preproc.c"
+#line 64377 "preproc.c"
     break;
 
   case 3337: /* ecpg_interval: YEAR_P TO SECOND_P  */
 #line 17964 "preproc.y"
                                         { (yyval.str) = mm_strdup("year to second"); }
-#line 64431 "preproc.c"
+#line 64383 "preproc.c"
     break;
 
   case 3338: /* ecpg_interval: DAY_P TO DAY_P  */
 #line 17965 "preproc.y"
                                                 { (yyval.str) = mm_strdup("day to day"); }
-#line 64437 "preproc.c"
+#line 64389 "preproc.c"
     break;
 
   case 3339: /* ecpg_interval: MONTH_P TO MONTH_P  */
 #line 17966 "preproc.y"
                                         { (yyval.str) = mm_strdup("month to month"); }
-#line 64443 "preproc.c"
+#line 64395 "preproc.c"
     break;
 
   case 3340: /* $@3: %empty  */
 #line 17973 "preproc.y"
                 { fputs("/* exec sql begin declare section */", base_yyout); }
-#line 64449 "preproc.c"
+#line 64401 "preproc.c"
     break;
 
   case 3341: /* ECPGDeclaration: sql_startdeclare $@3 var_type_declarations sql_enddeclare  */
@@ -64455,67 +64407,67 @@
 			free((yyvsp[-1].str));
 			output_line_number();
 		}
-#line 64459 "preproc.c"
+#line 64411 "preproc.c"
     break;
 
   case 3342: /* sql_startdeclare: ecpgstart BEGIN_P DECLARE SQL_SECTION ';'  */
 #line 17982 "preproc.y"
                                                             {}
-#line 64465 "preproc.c"
+#line 64417 "preproc.c"
     break;
 
   case 3343: /* sql_enddeclare: ecpgstart END_P DECLARE SQL_SECTION ';'  */
 #line 17984 "preproc.y"
                                                         {}
-#line 64471 "preproc.c"
+#line 64423 "preproc.c"
     break;
 
   case 3344: /* var_type_declarations: %empty  */
 #line 17986 "preproc.y"
                                                         { (yyval.str) = EMPTY; }
-#line 64477 "preproc.c"
+#line 64429 "preproc.c"
     break;
 
   case 3345: /* var_type_declarations: vt_declarations  */
 #line 17987 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64483 "preproc.c"
+#line 64435 "preproc.c"
     break;
 
   case 3346: /* vt_declarations: single_vt_declaration  */
 #line 17990 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64489 "preproc.c"
+#line 64441 "preproc.c"
     break;
 
   case 3347: /* vt_declarations: CPP_LINE  */
 #line 17991 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64495 "preproc.c"
+#line 64447 "preproc.c"
     break;
 
   case 3348: /* vt_declarations: vt_declarations single_vt_declaration  */
 #line 17992 "preproc.y"
                                                         { (yyval.str) = cat2_str((yyvsp[-1].str), (yyvsp[0].str)); }
-#line 64501 "preproc.c"
+#line 64453 "preproc.c"
     break;
 
   case 3349: /* vt_declarations: vt_declarations CPP_LINE  */
 #line 17993 "preproc.y"
                                                         { (yyval.str) = cat2_str((yyvsp[-1].str), (yyvsp[0].str)); }
-#line 64507 "preproc.c"
+#line 64459 "preproc.c"
     break;
 
   case 3350: /* variable_declarations: var_declaration  */
 #line 17996 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 64513 "preproc.c"
+#line 64465 "preproc.c"
     break;
 
   case 3351: /* variable_declarations: variable_declarations var_declaration  */
 #line 17997 "preproc.y"
                                                         { (yyval.str) = cat2_str((yyvsp[-1].str), (yyvsp[0].str)); }
-#line 64519 "preproc.c"
+#line 64471 "preproc.c"
     break;
 
   case 3352: /* $@4: %empty  */
@@ -64525,7 +64477,7 @@
 		/* an initializer specified */
 		initializer = 0;
 	}
-#line 64529 "preproc.c"
+#line 64481 "preproc.c"
     break;
 
   case 3353: /* type_declaration: S_TYPEDEF $@4 var_type opt_pointer ECPGColLabel opt_array_bounds ';'  */
@@ -64537,7 +64489,7 @@
 		output_line_number();
 		(yyval.str) = mm_strdup("");
 	}
-#line 64541 "preproc.c"
+#line 64493 "preproc.c"
     break;
 
   case 3354: /* $@5: %empty  */
@@ -64552,7 +64504,7 @@
 
 			actual_startline[struct_level] = hashline_number();
 		}
-#line 64556 "preproc.c"
+#line 64508 "preproc.c"
     break;
 
   case 3355: /* var_declaration: storage_declaration var_type $@5 variable_list ';'  */
@@ -64560,7 +64512,7 @@
                 {
 			(yyval.str) = cat_str(5, actual_startline[struct_level], (yyvsp[-4].str), (yyvsp[-3].type).type_str, (yyvsp[-1].str), mm_strdup(";\n"));
 		}
-#line 64564 "preproc.c"
+#line 64516 "preproc.c"
     break;
 
   case 3356: /* $@6: %empty  */
@@ -64575,7 +64527,7 @@
 
 			actual_startline[struct_level] = hashline_number();
 		}
-#line 64579 "preproc.c"
+#line 64531 "preproc.c"
     break;
 
   case 3357: /* var_declaration: var_type $@6 variable_list ';'  */
@@ -64583,7 +64535,7 @@
                 {
 			(yyval.str) = cat_str(4, actual_startline[struct_level], (yyvsp[-3].type).type_str, (yyvsp[-1].str), mm_strdup(";\n"));
 		}
-#line 64587 "preproc.c"
+#line 64539 "preproc.c"
     break;
 
   case 3358: /* var_declaration: struct_union_type_with_symbol ';'  */
@@ -64591,73 +64543,73 @@
                 {
 			(yyval.str) = cat2_str((yyvsp[-1].str), mm_strdup(";"));
 		}
-#line 64595 "preproc.c"
+#line 64547 "preproc.c"
     break;
 
   case 3359: /* opt_bit_field: ':' Iconst  */
 #line 18052 "preproc.y"
                                 { (yyval.str) =cat2_str(mm_strdup(":"), (yyvsp[0].str)); }
-#line 64601 "preproc.c"
+#line 64553 "preproc.c"
     break;
 
   case 3360: /* opt_bit_field: %empty  */
 #line 18053 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 64607 "preproc.c"
+#line 64559 "preproc.c"
     break;
 
   case 3361: /* storage_declaration: storage_clause storage_modifier  */
 #line 18057 "preproc.y"
                         {(yyval.str) = cat2_str ((yyvsp[-1].str), (yyvsp[0].str)); }
-#line 64613 "preproc.c"
+#line 64565 "preproc.c"
     break;
 
   case 3362: /* storage_declaration: storage_clause  */
 #line 18058 "preproc.y"
                                                 {(yyval.str) = (yyvsp[0].str); }
-#line 64619 "preproc.c"
+#line 64571 "preproc.c"
     break;
 
   case 3363: /* storage_declaration: storage_modifier  */
 #line 18059 "preproc.y"
                                                 {(yyval.str) = (yyvsp[0].str); }
-#line 64625 "preproc.c"
+#line 64577 "preproc.c"
     break;
 
   case 3364: /* storage_clause: S_EXTERN  */
 #line 18062 "preproc.y"
                                 { (yyval.str) = mm_strdup("extern"); }
-#line 64631 "preproc.c"
+#line 64583 "preproc.c"
     break;
 
   case 3365: /* storage_clause: S_STATIC  */
 #line 18063 "preproc.y"
                                                 { (yyval.str) = mm_strdup("static"); }
-#line 64637 "preproc.c"
+#line 64589 "preproc.c"
     break;
 
   case 3366: /* storage_clause: S_REGISTER  */
 #line 18064 "preproc.y"
                                         { (yyval.str) = mm_strdup("register"); }
-#line 64643 "preproc.c"
+#line 64595 "preproc.c"
     break;
 
   case 3367: /* storage_clause: S_AUTO  */
 #line 18065 "preproc.y"
                                                 { (yyval.str) = mm_strdup("auto"); }
-#line 64649 "preproc.c"
+#line 64601 "preproc.c"
     break;
 
   case 3368: /* storage_modifier: S_CONST  */
 #line 18068 "preproc.y"
                                 { (yyval.str) = mm_strdup("const"); }
-#line 64655 "preproc.c"
+#line 64607 "preproc.c"
     break;
 
   case 3369: /* storage_modifier: S_VOLATILE  */
 #line 18069 "preproc.y"
                                         { (yyval.str) = mm_strdup("volatile"); }
-#line 64661 "preproc.c"
+#line 64613 "preproc.c"
     break;
 
   case 3370: /* var_type: simple_type  */
@@ -64669,7 +64621,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64673 "preproc.c"
+#line 64625 "preproc.c"
     break;
 
   case 3371: /* var_type: struct_union_type  */
@@ -64690,7 +64642,7 @@
 				(yyval.type).type_sizeof = NULL;
 			}
 		}
-#line 64694 "preproc.c"
+#line 64646 "preproc.c"
     break;
 
   case 3372: /* var_type: enum_type  */
@@ -64702,7 +64654,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64706 "preproc.c"
+#line 64658 "preproc.c"
     break;
 
   case 3373: /* var_type: NUMERIC '(' precision opt_scale ')'  */
@@ -64714,7 +64666,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64718 "preproc.c"
+#line 64670 "preproc.c"
     break;
 
   case 3374: /* var_type: DECIMAL_P '(' precision opt_scale ')'  */
@@ -64726,7 +64678,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64730 "preproc.c"
+#line 64682 "preproc.c"
     break;
 
   case 3375: /* var_type: IDENT '(' precision opt_scale ')'  */
@@ -64758,7 +64710,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64762 "preproc.c"
+#line 64714 "preproc.c"
     break;
 
   case 3376: /* var_type: VARCHAR  */
@@ -64770,7 +64722,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64774 "preproc.c"
+#line 64726 "preproc.c"
     break;
 
   case 3377: /* var_type: FLOAT_P  */
@@ -64783,7 +64735,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64787 "preproc.c"
+#line 64739 "preproc.c"
     break;
 
   case 3378: /* var_type: NUMERIC  */
@@ -64795,7 +64747,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64799 "preproc.c"
+#line 64751 "preproc.c"
     break;
 
   case 3379: /* var_type: DECIMAL_P  */
@@ -64807,7 +64759,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64811 "preproc.c"
+#line 64763 "preproc.c"
     break;
 
   case 3380: /* var_type: TIMESTAMP  */
@@ -64819,7 +64771,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64823 "preproc.c"
+#line 64775 "preproc.c"
     break;
 
   case 3381: /* var_type: INTERVAL ecpg_interval  */
@@ -64831,7 +64783,7 @@
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
 		}
-#line 64835 "preproc.c"
+#line 64787 "preproc.c"
     break;
 
   case 3382: /* var_type: IDENT ecpg_interval  */
@@ -64955,7 +64907,7 @@
 				struct_member_list[struct_level] = ECPGstruct_member_dup(this->struct_member_list);
 			}
 		}
-#line 64959 "preproc.c"
+#line 64911 "preproc.c"
     break;
 
   case 3383: /* var_type: s_struct_union_symbol  */
@@ -64991,31 +64943,31 @@
 				struct_member_list[struct_level] = NULL;
 			}
 		}
-#line 64995 "preproc.c"
+#line 64947 "preproc.c"
     break;
 
   case 3384: /* enum_type: ENUM_P symbol enum_definition  */
 #line 18353 "preproc.y"
                         { (yyval.str) = cat_str(3, mm_strdup("enum"), (yyvsp[-1].str), (yyvsp[0].str)); }
-#line 65001 "preproc.c"
+#line 64953 "preproc.c"
     break;
 
   case 3385: /* enum_type: ENUM_P enum_definition  */
 #line 18355 "preproc.y"
                         { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[0].str)); }
-#line 65007 "preproc.c"
+#line 64959 "preproc.c"
     break;
 
   case 3386: /* enum_type: ENUM_P symbol  */
 #line 18357 "preproc.y"
                         { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[0].str)); }
-#line 65013 "preproc.c"
+#line 64965 "preproc.c"
     break;
 
   case 3387: /* enum_definition: '{' c_list '}'  */
 #line 18361 "preproc.y"
                         { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[-1].str), mm_strdup("}")); }
-#line 65019 "preproc.c"
+#line 64971 "preproc.c"
     break;
 
   case 3388: /* $@7: %empty  */
@@ -65026,7 +64978,7 @@
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
 			forward_name = mm_strdup((yyvsp[0].struct_union).symbol);
 		}
-#line 65030 "preproc.c"
+#line 64982 "preproc.c"
     break;
 
   case 3389: /* struct_union_type_with_symbol: s_struct_union_symbol $@7 '{' variable_declarations '}'  */
@@ -65072,13 +65024,13 @@
 			types = this;
 			(yyval.str) = cat_str(4, su_type.type_str, mm_strdup("{"), (yyvsp[-1].str), mm_strdup("}"));
 		}
-#line 65076 "preproc.c"
+#line 65028 "preproc.c"
     break;
 
   case 3390: /* struct_union_type: struct_union_type_with_symbol  */
 #line 18414 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65082 "preproc.c"
+#line 65034 "preproc.c"
     break;
 
   case 3391: /* $@8: %empty  */
@@ -65088,7 +65040,7 @@
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
 		}
-#line 65092 "preproc.c"
+#line 65044 "preproc.c"
     break;
 
   case 3392: /* struct_union_type: s_struct_union $@8 '{' variable_declarations '}'  */
@@ -65099,7 +65051,7 @@
 			struct_level--;
 			(yyval.str) = cat_str(4, (yyvsp[-4].str), mm_strdup("{"), (yyvsp[-1].str), mm_strdup("}"));
 		}
-#line 65103 "preproc.c"
+#line 65055 "preproc.c"
     break;
 
   case 3393: /* s_struct_union_symbol: SQL_STRUCT symbol  */
@@ -65109,7 +65061,7 @@
 			(yyval.struct_union).symbol = (yyvsp[0].str);
 			ECPGstruct_sizeof = cat_str(3, mm_strdup("sizeof("), cat2_str(mm_strdup((yyval.struct_union).su), mm_strdup((yyval.struct_union).symbol)), mm_strdup(")"));
 		}
-#line 65113 "preproc.c"
+#line 65065 "preproc.c"
     break;
 
   case 3394: /* s_struct_union_symbol: UNION symbol  */
@@ -65118,7 +65070,7 @@
 			(yyval.struct_union).su = mm_strdup("union");
 			(yyval.struct_union).symbol = (yyvsp[0].str);
 		}
-#line 65122 "preproc.c"
+#line 65074 "preproc.c"
     break;
 
   case 3395: /* s_struct_union: SQL_STRUCT  */
@@ -65127,7 +65079,7 @@
 			ECPGstruct_sizeof = mm_strdup(""); /* This must not be NULL to distinguish from simple types. */
 			(yyval.str) = mm_strdup("struct");
 		}
-#line 65131 "preproc.c"
+#line 65083 "preproc.c"
     break;
 
   case 3396: /* s_struct_union: UNION  */
@@ -65135,139 +65087,139 @@
                 {
 			(yyval.str) = mm_strdup("union");
 		}
-#line 65139 "preproc.c"
+#line 65091 "preproc.c"
     break;
 
   case 3397: /* simple_type: unsigned_type  */
 #line 18454 "preproc.y"
                                                                 { (yyval.type_enum)=(yyvsp[0].type_enum); }
-#line 65145 "preproc.c"
+#line 65097 "preproc.c"
     break;
 
   case 3398: /* simple_type: opt_signed signed_type  */
 #line 18455 "preproc.y"
                                                                 { (yyval.type_enum)=(yyvsp[0].type_enum); }
-#line 65151 "preproc.c"
+#line 65103 "preproc.c"
     break;
 
   case 3399: /* unsigned_type: SQL_UNSIGNED SQL_SHORT  */
 #line 18458 "preproc.y"
                                                 { (yyval.type_enum) = ECPGt_unsigned_short; }
-#line 65157 "preproc.c"
+#line 65109 "preproc.c"
     break;
 
   case 3400: /* unsigned_type: SQL_UNSIGNED SQL_SHORT INT_P  */
 #line 18459 "preproc.y"
                                                 { (yyval.type_enum) = ECPGt_unsigned_short; }
-#line 65163 "preproc.c"
+#line 65115 "preproc.c"
     break;
 
   case 3401: /* unsigned_type: SQL_UNSIGNED  */
 #line 18460 "preproc.y"
                                                                         { (yyval.type_enum) = ECPGt_unsigned_int; }
-#line 65169 "preproc.c"
+#line 65121 "preproc.c"
     break;
 
   case 3402: /* unsigned_type: SQL_UNSIGNED INT_P  */
 #line 18461 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_unsigned_int; }
-#line 65175 "preproc.c"
+#line 65127 "preproc.c"
     break;
 
   case 3403: /* unsigned_type: SQL_UNSIGNED SQL_LONG  */
 #line 18462 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_unsigned_long; }
-#line 65181 "preproc.c"
+#line 65133 "preproc.c"
     break;
 
   case 3404: /* unsigned_type: SQL_UNSIGNED SQL_LONG INT_P  */
 #line 18463 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_unsigned_long; }
-#line 65187 "preproc.c"
+#line 65139 "preproc.c"
     break;
 
   case 3405: /* unsigned_type: SQL_UNSIGNED SQL_LONG SQL_LONG  */
 #line 18464 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_unsigned_long_long; }
-#line 65193 "preproc.c"
+#line 65145 "preproc.c"
     break;
 
   case 3406: /* unsigned_type: SQL_UNSIGNED SQL_LONG SQL_LONG INT_P  */
 #line 18465 "preproc.y"
                                                        { (yyval.type_enum) = ECPGt_unsigned_long_long; }
-#line 65199 "preproc.c"
+#line 65151 "preproc.c"
     break;
 
   case 3407: /* unsigned_type: SQL_UNSIGNED CHAR_P  */
 #line 18466 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_unsigned_char; }
-#line 65205 "preproc.c"
+#line 65157 "preproc.c"
     break;
 
   case 3408: /* signed_type: SQL_SHORT  */
 #line 18469 "preproc.y"
                                                 { (yyval.type_enum) = ECPGt_short; }
-#line 65211 "preproc.c"
+#line 65163 "preproc.c"
     break;
 
   case 3409: /* signed_type: SQL_SHORT INT_P  */
 #line 18470 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_short; }
-#line 65217 "preproc.c"
+#line 65169 "preproc.c"
     break;
 
   case 3410: /* signed_type: INT_P  */
 #line 18471 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_int; }
-#line 65223 "preproc.c"
+#line 65175 "preproc.c"
     break;
 
   case 3411: /* signed_type: SQL_LONG  */
 #line 18472 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_long; }
-#line 65229 "preproc.c"
+#line 65181 "preproc.c"
     break;
 
   case 3412: /* signed_type: SQL_LONG INT_P  */
 #line 18473 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_long; }
-#line 65235 "preproc.c"
+#line 65187 "preproc.c"
     break;
 
   case 3413: /* signed_type: SQL_LONG SQL_LONG  */
 #line 18474 "preproc.y"
                                                         { (yyval.type_enum) = ECPGt_long_long; }
-#line 65241 "preproc.c"
+#line 65193 "preproc.c"
     break;
 
   case 3414: /* signed_type: SQL_LONG SQL_LONG INT_P  */
 #line 18475 "preproc.y"
                                                 { (yyval.type_enum) = ECPGt_long_long; }
-#line 65247 "preproc.c"
+#line 65199 "preproc.c"
     break;
 
   case 3415: /* signed_type: SQL_BOOL  */
 #line 18476 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_bool; }
-#line 65253 "preproc.c"
+#line 65205 "preproc.c"
     break;
 
   case 3416: /* signed_type: CHAR_P  */
 #line 18477 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_char; }
-#line 65259 "preproc.c"
+#line 65211 "preproc.c"
     break;
 
   case 3417: /* signed_type: DOUBLE_P  */
 #line 18478 "preproc.y"
                                                                 { (yyval.type_enum) = ECPGt_double; }
-#line 65265 "preproc.c"
+#line 65217 "preproc.c"
     break;
 
   case 3420: /* variable_list: variable  */
 #line 18486 "preproc.y"
                         { (yyval.str) = (yyvsp[0].str); }
-#line 65271 "preproc.c"
+#line 65223 "preproc.c"
     break;
 
   case 3421: /* variable_list: variable_list ',' variable  */
@@ -65278,7 +65230,7 @@
 			else
 				(yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str));
 		}
-#line 65282 "preproc.c"
+#line 65234 "preproc.c"
     break;
 
   case 3422: /* variable: opt_pointer ECPGColLabel opt_array_bounds opt_bit_field opt_initializer  */
@@ -65379,13 +65331,13 @@
 
 			free((yyvsp[-3].str));
 		}
-#line 65383 "preproc.c"
+#line 65335 "preproc.c"
     break;
 
   case 3423: /* opt_initializer: %empty  */
 #line 18596 "preproc.y"
                         { (yyval.str) = EMPTY; }
-#line 65389 "preproc.c"
+#line 65341 "preproc.c"
     break;
 
   case 3424: /* opt_initializer: '=' c_term  */
@@ -65394,25 +65346,25 @@
 			initializer = 1;
 			(yyval.str) = cat2_str(mm_strdup("="), (yyvsp[0].str));
 		}
-#line 65398 "preproc.c"
+#line 65350 "preproc.c"
     break;
 
   case 3425: /* opt_pointer: %empty  */
 #line 18604 "preproc.y"
                                                 { (yyval.str) = EMPTY; }
-#line 65404 "preproc.c"
+#line 65356 "preproc.c"
     break;
 
   case 3426: /* opt_pointer: '*'  */
 #line 18605 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("*"); }
-#line 65410 "preproc.c"
+#line 65362 "preproc.c"
     break;
 
   case 3427: /* opt_pointer: '*' '*'  */
 #line 18606 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("**"); }
-#line 65416 "preproc.c"
+#line 65368 "preproc.c"
     break;
 
   case 3428: /* ECPGDeclare: DECLARE STATEMENT ecpg_ident  */
@@ -65421,79 +65373,79 @@
 			/* this is only supported for compatibility */
 			(yyval.str) = cat_str(3, mm_strdup("/* declare statement"), (yyvsp[0].str), mm_strdup("*/"));
 		}
-#line 65425 "preproc.c"
+#line 65377 "preproc.c"
     break;
 
   case 3429: /* ECPGDisconnect: SQL_DISCONNECT dis_name  */
 #line 18621 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65431 "preproc.c"
+#line 65383 "preproc.c"
     break;
 
   case 3430: /* dis_name: connection_object  */
 #line 18624 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 65437 "preproc.c"
+#line 65389 "preproc.c"
     break;
 
   case 3431: /* dis_name: CURRENT_P  */
 #line 18625 "preproc.y"
                                                 { (yyval.str) = mm_strdup("\"CURRENT\""); }
-#line 65443 "preproc.c"
+#line 65395 "preproc.c"
     break;
 
   case 3432: /* dis_name: ALL  */
 #line 18626 "preproc.y"
                                                 { (yyval.str) = mm_strdup("\"ALL\""); }
-#line 65449 "preproc.c"
+#line 65401 "preproc.c"
     break;
 
   case 3433: /* dis_name: %empty  */
 #line 18627 "preproc.y"
                                                 { (yyval.str) = mm_strdup("\"CURRENT\""); }
-#line 65455 "preproc.c"
+#line 65407 "preproc.c"
     break;
 
   case 3434: /* connection_object: name  */
 #line 18630 "preproc.y"
                                                 { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\"")); }
-#line 65461 "preproc.c"
+#line 65413 "preproc.c"
     break;
 
   case 3435: /* connection_object: DEFAULT  */
 #line 18631 "preproc.y"
                                                 { (yyval.str) = mm_strdup("\"DEFAULT\""); }
-#line 65467 "preproc.c"
+#line 65419 "preproc.c"
     break;
 
   case 3436: /* connection_object: char_variable  */
 #line 18632 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 65473 "preproc.c"
+#line 65425 "preproc.c"
     break;
 
   case 3437: /* execstring: char_variable  */
 #line 18636 "preproc.y"
                         { (yyval.str) = (yyvsp[0].str); }
-#line 65479 "preproc.c"
+#line 65431 "preproc.c"
     break;
 
   case 3438: /* execstring: CSTRING  */
 #line 18638 "preproc.y"
                         { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\"")); }
-#line 65485 "preproc.c"
+#line 65437 "preproc.c"
     break;
 
   case 3439: /* ECPGFree: SQL_FREE cursor_name  */
 #line 18645 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65491 "preproc.c"
+#line 65443 "preproc.c"
     break;
 
   case 3440: /* ECPGFree: SQL_FREE ALL  */
 #line 18646 "preproc.y"
                                 { (yyval.str) = mm_strdup("all"); }
-#line 65497 "preproc.c"
+#line 65449 "preproc.c"
     break;
 
   case 3441: /* ECPGOpen: SQL_OPEN cursor_name opt_ecpg_using  */
@@ -65503,31 +65455,31 @@
 				remove_variable_from_list(&argsinsert, find_variable((yyvsp[-1].str) + 1));
 			(yyval.str) = (yyvsp[-1].str);
 		}
-#line 65507 "preproc.c"
+#line 65459 "preproc.c"
     break;
 
   case 3442: /* opt_ecpg_using: %empty  */
 #line 18660 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 65513 "preproc.c"
+#line 65465 "preproc.c"
     break;
 
   case 3443: /* opt_ecpg_using: ecpg_using  */
 #line 18661 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65519 "preproc.c"
+#line 65471 "preproc.c"
     break;
 
   case 3444: /* ecpg_using: USING using_list  */
 #line 18664 "preproc.y"
                                         { (yyval.str) = EMPTY; }
-#line 65525 "preproc.c"
+#line 65477 "preproc.c"
     break;
 
   case 3445: /* ecpg_using: using_descriptor  */
 #line 18665 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 65531 "preproc.c"
+#line 65483 "preproc.c"
     break;
 
   case 3446: /* using_descriptor: USING SQL_P SQL_DESCRIPTOR quoted_ident_stringvar  */
@@ -65536,7 +65488,7 @@
 			add_variable_to_head(&argsinsert, descriptor_variable((yyvsp[0].str),0), &no_indicator);
 			(yyval.str) = EMPTY;
 		}
-#line 65540 "preproc.c"
+#line 65492 "preproc.c"
     break;
 
   case 3447: /* using_descriptor: USING SQL_DESCRIPTOR name  */
@@ -65545,7 +65497,7 @@
 			add_variable_to_head(&argsinsert, sqlda_variable((yyvsp[0].str)), &no_indicator);
 			(yyval.str) = EMPTY;
 		}
-#line 65549 "preproc.c"
+#line 65501 "preproc.c"
     break;
 
   case 3448: /* into_descriptor: INTO SQL_P SQL_DESCRIPTOR quoted_ident_stringvar  */
@@ -65554,7 +65506,7 @@
 			add_variable_to_head(&argsresult, descriptor_variable((yyvsp[0].str),1), &no_indicator);
 			(yyval.str) = EMPTY;
 		}
-#line 65558 "preproc.c"
+#line 65510 "preproc.c"
     break;
 
   case 3449: /* into_descriptor: INTO SQL_DESCRIPTOR name  */
@@ -65563,7 +65515,7 @@
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[0].str)), &no_indicator);
 			(yyval.str) = EMPTY;
 		}
-#line 65567 "preproc.c"
+#line 65519 "preproc.c"
     break;
 
   case 3450: /* into_sqlda: INTO name  */
@@ -65572,7 +65524,7 @@
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[0].str)), &no_indicator);
 			(yyval.str) = EMPTY;
 		}
-#line 65576 "preproc.c"
+#line 65528 "preproc.c"
     break;
 
   case 3453: /* UsingValue: UsingConst  */
@@ -65583,73 +65535,73 @@
 			sprintf(length, "%zu", strlen((yyvsp[0].str)));
 			add_variable_to_head(&argsinsert, new_variable((yyvsp[0].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0), &no_indicator);
 		}
-#line 65587 "preproc.c"
+#line 65539 "preproc.c"
     break;
 
   case 3454: /* UsingValue: civar  */
 #line 18708 "preproc.y"
                         { (yyval.str) = EMPTY; }
-#line 65593 "preproc.c"
+#line 65545 "preproc.c"
     break;
 
   case 3455: /* UsingValue: civarind  */
 #line 18709 "preproc.y"
                            { (yyval.str) = EMPTY; }
-#line 65599 "preproc.c"
+#line 65551 "preproc.c"
     break;
 
   case 3456: /* UsingConst: Iconst  */
 #line 18712 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65605 "preproc.c"
+#line 65557 "preproc.c"
     break;
 
   case 3457: /* UsingConst: '+' Iconst  */
 #line 18713 "preproc.y"
                                         { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[0].str)); }
-#line 65611 "preproc.c"
+#line 65563 "preproc.c"
     break;
 
   case 3458: /* UsingConst: '-' Iconst  */
 #line 18714 "preproc.y"
                                         { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[0].str)); }
-#line 65617 "preproc.c"
+#line 65569 "preproc.c"
     break;
 
   case 3459: /* UsingConst: ecpg_fconst  */
 #line 18715 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65623 "preproc.c"
+#line 65575 "preproc.c"
     break;
 
   case 3460: /* UsingConst: '+' ecpg_fconst  */
 #line 18716 "preproc.y"
                                         { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[0].str)); }
-#line 65629 "preproc.c"
+#line 65581 "preproc.c"
     break;
 
   case 3461: /* UsingConst: '-' ecpg_fconst  */
 #line 18717 "preproc.y"
                                         { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[0].str)); }
-#line 65635 "preproc.c"
+#line 65587 "preproc.c"
     break;
 
   case 3462: /* UsingConst: ecpg_sconst  */
 #line 18718 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65641 "preproc.c"
+#line 65593 "preproc.c"
     break;
 
   case 3463: /* UsingConst: ecpg_bconst  */
 #line 18719 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65647 "preproc.c"
+#line 65599 "preproc.c"
     break;
 
   case 3464: /* UsingConst: ecpg_xconst  */
 #line 18720 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65653 "preproc.c"
+#line 65605 "preproc.c"
     break;
 
   case 3465: /* ECPGDescribe: SQL_DESCRIBE INPUT_P prepared_name using_descriptor  */
@@ -65658,7 +65610,7 @@
 		(yyval.describe).input = 1;
 		(yyval.describe).stmt_name = (yyvsp[-1].str);
 	}
-#line 65662 "preproc.c"
+#line 65614 "preproc.c"
     break;
 
   case 3466: /* ECPGDescribe: SQL_DESCRIBE opt_output prepared_name using_descriptor  */
@@ -65672,7 +65624,7 @@
 		(yyval.describe).input = 0;
 		(yyval.describe).stmt_name = (yyvsp[-1].str);
 	}
-#line 65676 "preproc.c"
+#line 65628 "preproc.c"
     break;
 
   case 3467: /* ECPGDescribe: SQL_DESCRIBE opt_output prepared_name into_descriptor  */
@@ -65681,7 +65633,7 @@
 		(yyval.describe).input = 0;
 		(yyval.describe).stmt_name = (yyvsp[-1].str);
 	}
-#line 65685 "preproc.c"
+#line 65637 "preproc.c"
     break;
 
   case 3468: /* ECPGDescribe: SQL_DESCRIBE INPUT_P prepared_name into_sqlda  */
@@ -65690,7 +65642,7 @@
 		(yyval.describe).input = 1;
 		(yyval.describe).stmt_name = (yyvsp[-1].str);
 	}
-#line 65694 "preproc.c"
+#line 65646 "preproc.c"
     break;
 
   case 3469: /* ECPGDescribe: SQL_DESCRIBE opt_output prepared_name into_sqlda  */
@@ -65699,19 +65651,19 @@
 		(yyval.describe).input = 0;
 		(yyval.describe).stmt_name = (yyvsp[-1].str);
 	}
-#line 65703 "preproc.c"
+#line 65655 "preproc.c"
     break;
 
   case 3470: /* opt_output: SQL_OUTPUT  */
 #line 18758 "preproc.y"
                                 { (yyval.str) = mm_strdup("output"); }
-#line 65709 "preproc.c"
+#line 65661 "preproc.c"
     break;
 
   case 3471: /* opt_output: %empty  */
 #line 18759 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 65715 "preproc.c"
+#line 65667 "preproc.c"
     break;
 
   case 3472: /* ECPGAllocateDescr: SQL_ALLOCATE SQL_DESCRIPTOR quoted_ident_stringvar  */
@@ -65720,7 +65672,7 @@
 			add_descriptor((yyvsp[0].str),connection);
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65724 "preproc.c"
+#line 65676 "preproc.c"
     break;
 
   case 3473: /* ECPGDeallocateDescr: DEALLOCATE SQL_DESCRIPTOR quoted_ident_stringvar  */
@@ -65729,25 +65681,25 @@
 			drop_descriptor((yyvsp[0].str),connection);
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65733 "preproc.c"
+#line 65685 "preproc.c"
     break;
 
   case 3474: /* ECPGGetDescriptorHeader: SQL_GET SQL_DESCRIPTOR quoted_ident_stringvar ECPGGetDescHeaderItems  */
 #line 18794 "preproc.y"
                         {  (yyval.str) = (yyvsp[-1].str); }
-#line 65739 "preproc.c"
+#line 65691 "preproc.c"
     break;
 
   case 3477: /* ECPGGetDescHeaderItem: cvariable '=' desc_header_item  */
 #line 18802 "preproc.y"
                         { push_assignment((yyvsp[-2].str), (yyvsp[0].dtype_enum)); }
-#line 65745 "preproc.c"
+#line 65697 "preproc.c"
     break;
 
   case 3478: /* ECPGSetDescriptorHeader: SET SQL_DESCRIPTOR quoted_ident_stringvar ECPGSetDescHeaderItems  */
 #line 18807 "preproc.y"
                         { (yyval.str) = (yyvsp[-1].str); }
-#line 65751 "preproc.c"
+#line 65703 "preproc.c"
     break;
 
   case 3481: /* ECPGSetDescHeaderItem: desc_header_item '=' IntConstVar  */
@@ -65755,7 +65707,7 @@
                 {
 			push_assignment((yyvsp[0].str), (yyvsp[-2].dtype_enum));
 		}
-#line 65759 "preproc.c"
+#line 65711 "preproc.c"
     break;
 
   case 3482: /* IntConstVar: Iconst  */
@@ -65767,7 +65719,7 @@
 			new_variable((yyvsp[0].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65771 "preproc.c"
+#line 65723 "preproc.c"
     break;
 
   case 3483: /* IntConstVar: cvariable  */
@@ -65775,31 +65727,31 @@
                 {
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65779 "preproc.c"
+#line 65731 "preproc.c"
     break;
 
   case 3484: /* desc_header_item: SQL_COUNT  */
 #line 18834 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_count; }
-#line 65785 "preproc.c"
+#line 65737 "preproc.c"
     break;
 
   case 3485: /* ECPGGetDescriptor: SQL_GET SQL_DESCRIPTOR quoted_ident_stringvar VALUE_P IntConstVar ECPGGetDescItems  */
 #line 18842 "preproc.y"
                         {  (yyval.descriptor).str = (yyvsp[-1].str); (yyval.descriptor).name = (yyvsp[-3].str); }
-#line 65791 "preproc.c"
+#line 65743 "preproc.c"
     break;
 
   case 3488: /* ECPGGetDescItem: cvariable '=' descriptor_item  */
 #line 18849 "preproc.y"
                                                 { push_assignment((yyvsp[-2].str), (yyvsp[0].dtype_enum)); }
-#line 65797 "preproc.c"
+#line 65749 "preproc.c"
     break;
 
   case 3489: /* ECPGSetDescriptor: SET SQL_DESCRIPTOR quoted_ident_stringvar VALUE_P IntConstVar ECPGSetDescItems  */
 #line 18853 "preproc.y"
                         {  (yyval.descriptor).str = (yyvsp[-1].str); (yyval.descriptor).name = (yyvsp[-3].str); }
-#line 65803 "preproc.c"
+#line 65755 "preproc.c"
     break;
 
   case 3492: /* ECPGSetDescItem: descriptor_item '=' AllConstVar  */
@@ -65807,7 +65759,7 @@
                 {
 			push_assignment((yyvsp[0].str), (yyvsp[-2].dtype_enum));
 		}
-#line 65811 "preproc.c"
+#line 65763 "preproc.c"
     break;
 
   case 3493: /* AllConstVar: ecpg_fconst  */
@@ -65819,7 +65771,7 @@
 			new_variable((yyvsp[0].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65823 "preproc.c"
+#line 65775 "preproc.c"
     break;
 
   case 3494: /* AllConstVar: IntConstVar  */
@@ -65827,7 +65779,7 @@
                 {
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 65831 "preproc.c"
+#line 65783 "preproc.c"
     break;
 
   case 3495: /* AllConstVar: '-' ecpg_fconst  */
@@ -65840,7 +65792,7 @@
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
 		}
-#line 65844 "preproc.c"
+#line 65796 "preproc.c"
     break;
 
   case 3496: /* AllConstVar: '-' Iconst  */
@@ -65853,7 +65805,7 @@
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
 		}
-#line 65857 "preproc.c"
+#line 65809 "preproc.c"
     break;
 
   case 3497: /* AllConstVar: ecpg_sconst  */
@@ -65867,139 +65819,139 @@
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
 		}
-#line 65871 "preproc.c"
+#line 65823 "preproc.c"
     break;
 
   case 3498: /* descriptor_item: SQL_CARDINALITY  */
 #line 18912 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_cardinality; }
-#line 65877 "preproc.c"
+#line 65829 "preproc.c"
     break;
 
   case 3499: /* descriptor_item: DATA_P  */
 #line 18913 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_data; }
-#line 65883 "preproc.c"
+#line 65835 "preproc.c"
     break;
 
   case 3500: /* descriptor_item: SQL_DATETIME_INTERVAL_CODE  */
 #line 18914 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_di_code; }
-#line 65889 "preproc.c"
+#line 65841 "preproc.c"
     break;
 
   case 3501: /* descriptor_item: SQL_DATETIME_INTERVAL_PRECISION  */
 #line 18915 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_di_precision; }
-#line 65895 "preproc.c"
+#line 65847 "preproc.c"
     break;
 
   case 3502: /* descriptor_item: SQL_INDICATOR  */
 #line 18916 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_indicator; }
-#line 65901 "preproc.c"
+#line 65853 "preproc.c"
     break;
 
   case 3503: /* descriptor_item: SQL_KEY_MEMBER  */
 #line 18917 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_key_member; }
-#line 65907 "preproc.c"
+#line 65859 "preproc.c"
     break;
 
   case 3504: /* descriptor_item: SQL_LENGTH  */
 #line 18918 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_length; }
-#line 65913 "preproc.c"
+#line 65865 "preproc.c"
     break;
 
   case 3505: /* descriptor_item: NAME_P  */
 #line 18919 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_name; }
-#line 65919 "preproc.c"
+#line 65871 "preproc.c"
     break;
 
   case 3506: /* descriptor_item: SQL_NULLABLE  */
 #line 18920 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_nullable; }
-#line 65925 "preproc.c"
+#line 65877 "preproc.c"
     break;
 
   case 3507: /* descriptor_item: SQL_OCTET_LENGTH  */
 #line 18921 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_octet; }
-#line 65931 "preproc.c"
+#line 65883 "preproc.c"
     break;
 
   case 3508: /* descriptor_item: PRECISION  */
 #line 18922 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_precision; }
-#line 65937 "preproc.c"
+#line 65889 "preproc.c"
     break;
 
   case 3509: /* descriptor_item: SQL_RETURNED_LENGTH  */
 #line 18923 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_length; }
-#line 65943 "preproc.c"
+#line 65895 "preproc.c"
     break;
 
   case 3510: /* descriptor_item: SQL_RETURNED_OCTET_LENGTH  */
 #line 18924 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_ret_octet; }
-#line 65949 "preproc.c"
+#line 65901 "preproc.c"
     break;
 
   case 3511: /* descriptor_item: SQL_SCALE  */
 #line 18925 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_scale; }
-#line 65955 "preproc.c"
+#line 65907 "preproc.c"
     break;
 
   case 3512: /* descriptor_item: TYPE_P  */
 #line 18926 "preproc.y"
                                                         { (yyval.dtype_enum) = ECPGd_type; }
-#line 65961 "preproc.c"
+#line 65913 "preproc.c"
     break;
 
   case 3513: /* ECPGSetAutocommit: SET SQL_AUTOCOMMIT '=' on_off  */
 #line 18933 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 65967 "preproc.c"
+#line 65919 "preproc.c"
     break;
 
   case 3514: /* ECPGSetAutocommit: SET SQL_AUTOCOMMIT TO on_off  */
 #line 18934 "preproc.y"
                                                   { (yyval.str) = (yyvsp[0].str); }
-#line 65973 "preproc.c"
+#line 65925 "preproc.c"
     break;
 
   case 3515: /* on_off: ON  */
 #line 18937 "preproc.y"
                                         { (yyval.str) = mm_strdup("on"); }
-#line 65979 "preproc.c"
+#line 65931 "preproc.c"
     break;
 
   case 3516: /* on_off: OFF  */
 #line 18938 "preproc.y"
                                         { (yyval.str) = mm_strdup("off"); }
-#line 65985 "preproc.c"
+#line 65937 "preproc.c"
     break;
 
   case 3517: /* ECPGSetConnection: SET CONNECTION TO connection_object  */
 #line 18945 "preproc.y"
                                                             { (yyval.str) = (yyvsp[0].str); }
-#line 65991 "preproc.c"
+#line 65943 "preproc.c"
     break;
 
   case 3518: /* ECPGSetConnection: SET CONNECTION '=' connection_object  */
 #line 18946 "preproc.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
-#line 65997 "preproc.c"
+#line 65949 "preproc.c"
     break;
 
   case 3519: /* ECPGSetConnection: SET CONNECTION connection_object  */
 #line 18947 "preproc.y"
                                                     { (yyval.str) = (yyvsp[0].str); }
-#line 66003 "preproc.c"
+#line 65955 "preproc.c"
     break;
 
   case 3520: /* $@9: %empty  */
@@ -66009,7 +65961,7 @@
 			/* an initializer specified */
 			initializer = 0;
 		}
-#line 66013 "preproc.c"
+#line 65965 "preproc.c"
     break;
 
   case 3521: /* ECPGTypedef: TYPE_P $@9 ECPGColLabel IS var_type opt_array_bounds opt_reference  */
@@ -66022,19 +65974,19 @@
 			else
 				(yyval.str) = cat_str(6, mm_strdup("typedef "), mm_strdup((yyvsp[-2].type).type_str), *(yyvsp[0].str)?mm_strdup("*"):mm_strdup(""), mm_strdup((yyvsp[-4].str)), mm_strdup((yyvsp[-1].index).str), mm_strdup(";"));
 		}
-#line 66026 "preproc.c"
+#line 65978 "preproc.c"
     break;
 
   case 3522: /* opt_reference: SQL_REFERENCE  */
 #line 18970 "preproc.y"
                                         { (yyval.str) = mm_strdup("reference"); }
-#line 66032 "preproc.c"
+#line 65984 "preproc.c"
     break;
 
   case 3523: /* opt_reference: %empty  */
 #line 18971 "preproc.y"
                                                                 { (yyval.str) = EMPTY; }
-#line 66038 "preproc.c"
+#line 65990 "preproc.c"
     break;
 
   case 3524: /* $@10: %empty  */
@@ -66044,7 +65996,7 @@
 			/* an initializer specified */
 			initializer = 0;
 		}
-#line 66048 "preproc.c"
+#line 66000 "preproc.c"
     break;
 
   case 3525: /* ECPGVar: SQL_VAR $@10 ColLabel IS var_type opt_array_bounds opt_reference  */
@@ -66107,7 +66059,7 @@
 
 			(yyval.str) = cat_str(7, mm_strdup("/* exec sql var"), mm_strdup((yyvsp[-4].str)), mm_strdup("is"), mm_strdup((yyvsp[-2].type).type_str), mm_strdup((yyvsp[-1].index).str), (yyvsp[0].str), mm_strdup("*/"));
 		}
-#line 66111 "preproc.c"
+#line 66063 "preproc.c"
     break;
 
   case 3526: /* ECPGWhenever: SQL_WHENEVER SQL_SQLERROR action  */
@@ -66117,7 +66069,7 @@
 			when_error.command = (yyvsp[0].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sqlerror "), (yyvsp[0].action).str, mm_strdup("; */"));
 		}
-#line 66121 "preproc.c"
+#line 66073 "preproc.c"
     break;
 
   case 3527: /* ECPGWhenever: SQL_WHENEVER NOT SQL_FOUND action  */
@@ -66127,7 +66079,7 @@
 			when_nf.command = (yyvsp[0].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever not found "), (yyvsp[0].action).str, mm_strdup("; */"));
 		}
-#line 66131 "preproc.c"
+#line 66083 "preproc.c"
     break;
 
   case 3528: /* ECPGWhenever: SQL_WHENEVER SQL_SQLWARNING action  */
@@ -66137,7 +66089,7 @@
 			when_warn.command = (yyvsp[0].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sql_warning "), (yyvsp[0].action).str, mm_strdup("; */"));
 		}
-#line 66141 "preproc.c"
+#line 66093 "preproc.c"
     break;
 
   case 3529: /* action: CONTINUE_P  */
@@ -66147,7 +66099,7 @@
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("continue");
 		}
-#line 66151 "preproc.c"
+#line 66103 "preproc.c"
     break;
 
   case 3530: /* action: SQL_SQLPRINT  */
@@ -66157,7 +66109,7 @@
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("sqlprint");
 		}
-#line 66161 "preproc.c"
+#line 66113 "preproc.c"
     break;
 
   case 3531: /* action: SQL_STOP  */
@@ -66167,7 +66119,7 @@
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("stop");
 		}
-#line 66171 "preproc.c"
+#line 66123 "preproc.c"
     break;
 
   case 3532: /* action: SQL_GOTO name  */
@@ -66177,7 +66129,7 @@
 			(yyval.action).command = mm_strdup((yyvsp[0].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[0].str));
 		}
-#line 66181 "preproc.c"
+#line 66133 "preproc.c"
     break;
 
   case 3533: /* action: SQL_GO TO name  */
@@ -66187,7 +66139,7 @@
 			(yyval.action).command = mm_strdup((yyvsp[0].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[0].str));
 		}
-#line 66191 "preproc.c"
+#line 66143 "preproc.c"
     break;
 
   case 3534: /* action: DO name '(' c_args ')'  */
@@ -66197,7 +66149,7 @@
 			(yyval.action).command = cat_str(4, (yyvsp[-3].str), mm_strdup("("), (yyvsp[-1].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("do"), mm_strdup((yyval.action).command));
 		}
-#line 66201 "preproc.c"
+#line 66153 "preproc.c"
     break;
 
   case 3535: /* action: DO SQL_BREAK  */
@@ -66207,7 +66159,7 @@
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("break");
 		}
-#line 66211 "preproc.c"
+#line 66163 "preproc.c"
     break;
 
   case 3536: /* action: DO CONTINUE_P  */
@@ -66217,7 +66169,7 @@
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("continue");
 		}
-#line 66221 "preproc.c"
+#line 66173 "preproc.c"
     break;
 
   case 3537: /* action: CALL name '(' c_args ')'  */
@@ -66227,7 +66179,7 @@
 			(yyval.action).command = cat_str(4, (yyvsp[-3].str), mm_strdup("("), (yyvsp[-1].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
 		}
-#line 66231 "preproc.c"
+#line 66183 "preproc.c"
     break;
 
   case 3538: /* action: CALL name  */
@@ -66237,571 +66189,571 @@
 			(yyval.action).command = cat2_str((yyvsp[0].str), mm_strdup("()"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
 		}
-#line 66241 "preproc.c"
+#line 66193 "preproc.c"
     break;
 
   case 3539: /* ECPGKeywords: ECPGKeywords_vanames  */
 #line 19133 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66247 "preproc.c"
+#line 66199 "preproc.c"
     break;
 
   case 3540: /* ECPGKeywords: ECPGKeywords_rest  */
 #line 19134 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66253 "preproc.c"
+#line 66205 "preproc.c"
     break;
 
   case 3541: /* ECPGKeywords_vanames: SQL_BREAK  */
 #line 19137 "preproc.y"
                                                 { (yyval.str) = mm_strdup("break"); }
-#line 66259 "preproc.c"
+#line 66211 "preproc.c"
     break;
 
   case 3542: /* ECPGKeywords_vanames: SQL_CARDINALITY  */
 #line 19138 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("cardinality"); }
-#line 66265 "preproc.c"
+#line 66217 "preproc.c"
     break;
 
   case 3543: /* ECPGKeywords_vanames: SQL_COUNT  */
 #line 19139 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("count"); }
-#line 66271 "preproc.c"
+#line 66223 "preproc.c"
     break;
 
   case 3544: /* ECPGKeywords_vanames: SQL_DATETIME_INTERVAL_CODE  */
 #line 19140 "preproc.y"
                                                 { (yyval.str) = mm_strdup("datetime_interval_code"); }
-#line 66277 "preproc.c"
+#line 66229 "preproc.c"
     break;
 
   case 3545: /* ECPGKeywords_vanames: SQL_DATETIME_INTERVAL_PRECISION  */
 #line 19141 "preproc.y"
                                                         { (yyval.str) = mm_strdup("datetime_interval_precision"); }
-#line 66283 "preproc.c"
+#line 66235 "preproc.c"
     break;
 
   case 3546: /* ECPGKeywords_vanames: SQL_FOUND  */
 #line 19142 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("found"); }
-#line 66289 "preproc.c"
+#line 66241 "preproc.c"
     break;
 
   case 3547: /* ECPGKeywords_vanames: SQL_GO  */
 #line 19143 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("go"); }
-#line 66295 "preproc.c"
+#line 66247 "preproc.c"
     break;
 
   case 3548: /* ECPGKeywords_vanames: SQL_GOTO  */
 #line 19144 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("goto"); }
-#line 66301 "preproc.c"
+#line 66253 "preproc.c"
     break;
 
   case 3549: /* ECPGKeywords_vanames: SQL_IDENTIFIED  */
 #line 19145 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("identified"); }
-#line 66307 "preproc.c"
+#line 66259 "preproc.c"
     break;
 
   case 3550: /* ECPGKeywords_vanames: SQL_INDICATOR  */
 #line 19146 "preproc.y"
                                                         { (yyval.str) = mm_strdup("indicator"); }
-#line 66313 "preproc.c"
+#line 66265 "preproc.c"
     break;
 
   case 3551: /* ECPGKeywords_vanames: SQL_KEY_MEMBER  */
 #line 19147 "preproc.y"
                                                         { (yyval.str) = mm_strdup("key_member"); }
-#line 66319 "preproc.c"
+#line 66271 "preproc.c"
     break;
 
   case 3552: /* ECPGKeywords_vanames: SQL_LENGTH  */
 #line 19148 "preproc.y"
                                                         { (yyval.str) = mm_strdup("length"); }
-#line 66325 "preproc.c"
+#line 66277 "preproc.c"
     break;
 
   case 3553: /* ECPGKeywords_vanames: SQL_NULLABLE  */
 #line 19149 "preproc.y"
                                                         { (yyval.str) = mm_strdup("nullable"); }
-#line 66331 "preproc.c"
+#line 66283 "preproc.c"
     break;
 
   case 3554: /* ECPGKeywords_vanames: SQL_OCTET_LENGTH  */
 #line 19150 "preproc.y"
                                                         { (yyval.str) = mm_strdup("octet_length"); }
-#line 66337 "preproc.c"
+#line 66289 "preproc.c"
     break;
 
   case 3555: /* ECPGKeywords_vanames: SQL_RETURNED_LENGTH  */
 #line 19151 "preproc.y"
                                                 { (yyval.str) = mm_strdup("returned_length"); }
-#line 66343 "preproc.c"
+#line 66295 "preproc.c"
     break;
 
   case 3556: /* ECPGKeywords_vanames: SQL_RETURNED_OCTET_LENGTH  */
 #line 19152 "preproc.y"
                                                 { (yyval.str) = mm_strdup("returned_octet_length"); }
-#line 66349 "preproc.c"
+#line 66301 "preproc.c"
     break;
 
   case 3557: /* ECPGKeywords_vanames: SQL_SCALE  */
 #line 19153 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("scale"); }
-#line 66355 "preproc.c"
+#line 66307 "preproc.c"
     break;
 
   case 3558: /* ECPGKeywords_vanames: SQL_SECTION  */
 #line 19154 "preproc.y"
                                                         { (yyval.str) = mm_strdup("section"); }
-#line 66361 "preproc.c"
+#line 66313 "preproc.c"
     break;
 
   case 3559: /* ECPGKeywords_vanames: SQL_SQLERROR  */
 #line 19155 "preproc.y"
                                                         { (yyval.str) = mm_strdup("sqlerror"); }
-#line 66367 "preproc.c"
+#line 66319 "preproc.c"
     break;
 
   case 3560: /* ECPGKeywords_vanames: SQL_SQLPRINT  */
 #line 19156 "preproc.y"
                                                         { (yyval.str) = mm_strdup("sqlprint"); }
-#line 66373 "preproc.c"
+#line 66325 "preproc.c"
     break;
 
   case 3561: /* ECPGKeywords_vanames: SQL_SQLWARNING  */
 #line 19157 "preproc.y"
                                                         { (yyval.str) = mm_strdup("sqlwarning"); }
-#line 66379 "preproc.c"
+#line 66331 "preproc.c"
     break;
 
   case 3562: /* ECPGKeywords_vanames: SQL_STOP  */
 #line 19158 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("stop"); }
-#line 66385 "preproc.c"
+#line 66337 "preproc.c"
     break;
 
   case 3563: /* ECPGKeywords_rest: SQL_CONNECT  */
 #line 19161 "preproc.y"
                                         { (yyval.str) = mm_strdup("connect"); }
-#line 66391 "preproc.c"
+#line 66343 "preproc.c"
     break;
 
   case 3564: /* ECPGKeywords_rest: SQL_DESCRIBE  */
 #line 19162 "preproc.y"
                                                         { (yyval.str) = mm_strdup("describe"); }
-#line 66397 "preproc.c"
+#line 66349 "preproc.c"
     break;
 
   case 3565: /* ECPGKeywords_rest: SQL_DISCONNECT  */
 #line 19163 "preproc.y"
                                                         { (yyval.str) = mm_strdup("disconnect"); }
-#line 66403 "preproc.c"
+#line 66355 "preproc.c"
     break;
 
   case 3566: /* ECPGKeywords_rest: SQL_OPEN  */
 #line 19164 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("open"); }
-#line 66409 "preproc.c"
+#line 66361 "preproc.c"
     break;
 
   case 3567: /* ECPGKeywords_rest: SQL_VAR  */
 #line 19165 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("var"); }
-#line 66415 "preproc.c"
+#line 66367 "preproc.c"
     break;
 
   case 3568: /* ECPGKeywords_rest: SQL_WHENEVER  */
 #line 19166 "preproc.y"
                                                         { (yyval.str) = mm_strdup("whenever"); }
-#line 66421 "preproc.c"
+#line 66373 "preproc.c"
     break;
 
   case 3569: /* ECPGTypeName: SQL_BOOL  */
 #line 19170 "preproc.y"
                                                 { (yyval.str) = mm_strdup("bool"); }
-#line 66427 "preproc.c"
+#line 66379 "preproc.c"
     break;
 
   case 3570: /* ECPGTypeName: SQL_LONG  */
 #line 19171 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("long"); }
-#line 66433 "preproc.c"
+#line 66385 "preproc.c"
     break;
 
   case 3571: /* ECPGTypeName: SQL_OUTPUT  */
 #line 19172 "preproc.y"
                                                         { (yyval.str) = mm_strdup("output"); }
-#line 66439 "preproc.c"
+#line 66391 "preproc.c"
     break;
 
   case 3572: /* ECPGTypeName: SQL_SHORT  */
 #line 19173 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("short"); }
-#line 66445 "preproc.c"
+#line 66397 "preproc.c"
     break;
 
   case 3573: /* ECPGTypeName: SQL_STRUCT  */
 #line 19174 "preproc.y"
                                                         { (yyval.str) = mm_strdup("struct"); }
-#line 66451 "preproc.c"
+#line 66403 "preproc.c"
     break;
 
   case 3574: /* ECPGTypeName: SQL_SIGNED  */
 #line 19175 "preproc.y"
                                                         { (yyval.str) = mm_strdup("signed"); }
-#line 66457 "preproc.c"
+#line 66409 "preproc.c"
     break;
 
   case 3575: /* ECPGTypeName: SQL_UNSIGNED  */
 #line 19176 "preproc.y"
                                                         { (yyval.str) = mm_strdup("unsigned"); }
-#line 66463 "preproc.c"
+#line 66415 "preproc.c"
     break;
 
   case 3576: /* symbol: ColLabel  */
 #line 19179 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66469 "preproc.c"
+#line 66421 "preproc.c"
     break;
 
   case 3577: /* ECPGColId: ecpg_ident  */
 #line 19182 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66475 "preproc.c"
+#line 66427 "preproc.c"
     break;
 
   case 3578: /* ECPGColId: unreserved_keyword  */
 #line 19183 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66481 "preproc.c"
+#line 66433 "preproc.c"
     break;
 
   case 3579: /* ECPGColId: col_name_keyword  */
 #line 19184 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66487 "preproc.c"
+#line 66439 "preproc.c"
     break;
 
   case 3580: /* ECPGColId: ECPGunreserved_interval  */
 #line 19185 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66493 "preproc.c"
+#line 66445 "preproc.c"
     break;
 
   case 3581: /* ECPGColId: ECPGKeywords  */
 #line 19186 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66499 "preproc.c"
+#line 66451 "preproc.c"
     break;
 
   case 3582: /* ECPGColId: ECPGCKeywords  */
 #line 19187 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66505 "preproc.c"
+#line 66457 "preproc.c"
     break;
 
   case 3583: /* ECPGColId: CHAR_P  */
 #line 19188 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("char"); }
-#line 66511 "preproc.c"
+#line 66463 "preproc.c"
     break;
 
   case 3584: /* ECPGColId: VALUES  */
 #line 19189 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("values"); }
-#line 66517 "preproc.c"
+#line 66469 "preproc.c"
     break;
 
   case 3585: /* ColId: ecpg_ident  */
 #line 19202 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66523 "preproc.c"
+#line 66475 "preproc.c"
     break;
 
   case 3586: /* ColId: all_unreserved_keyword  */
 #line 19203 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66529 "preproc.c"
+#line 66481 "preproc.c"
     break;
 
   case 3587: /* ColId: col_name_keyword  */
 #line 19204 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66535 "preproc.c"
+#line 66487 "preproc.c"
     break;
 
   case 3588: /* ColId: ECPGKeywords  */
 #line 19205 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66541 "preproc.c"
+#line 66493 "preproc.c"
     break;
 
   case 3589: /* ColId: ECPGCKeywords  */
 #line 19206 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66547 "preproc.c"
+#line 66499 "preproc.c"
     break;
 
   case 3590: /* ColId: CHAR_P  */
 #line 19207 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("char"); }
-#line 66553 "preproc.c"
+#line 66505 "preproc.c"
     break;
 
   case 3591: /* ColId: VALUES  */
 #line 19208 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("values"); }
-#line 66559 "preproc.c"
+#line 66511 "preproc.c"
     break;
 
   case 3592: /* type_function_name: ecpg_ident  */
 #line 19213 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66565 "preproc.c"
+#line 66517 "preproc.c"
     break;
 
   case 3593: /* type_function_name: all_unreserved_keyword  */
 #line 19214 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66571 "preproc.c"
+#line 66523 "preproc.c"
     break;
 
   case 3594: /* type_function_name: type_func_name_keyword  */
 #line 19215 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66577 "preproc.c"
+#line 66529 "preproc.c"
     break;
 
   case 3595: /* type_function_name: ECPGKeywords  */
 #line 19216 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66583 "preproc.c"
+#line 66535 "preproc.c"
     break;
 
   case 3596: /* type_function_name: ECPGCKeywords  */
 #line 19217 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66589 "preproc.c"
+#line 66541 "preproc.c"
     break;
 
   case 3597: /* type_function_name: ECPGTypeName  */
 #line 19218 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66595 "preproc.c"
+#line 66547 "preproc.c"
     break;
 
   case 3598: /* ColLabel: ECPGColLabel  */
 #line 19224 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66601 "preproc.c"
+#line 66553 "preproc.c"
     break;
 
   case 3599: /* ColLabel: ECPGTypeName  */
 #line 19225 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66607 "preproc.c"
+#line 66559 "preproc.c"
     break;
 
   case 3600: /* ColLabel: CHAR_P  */
 #line 19226 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("char"); }
-#line 66613 "preproc.c"
+#line 66565 "preproc.c"
     break;
 
   case 3601: /* ColLabel: CURRENT_P  */
 #line 19227 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("current"); }
-#line 66619 "preproc.c"
+#line 66571 "preproc.c"
     break;
 
   case 3602: /* ColLabel: INPUT_P  */
 #line 19228 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("input"); }
-#line 66625 "preproc.c"
+#line 66577 "preproc.c"
     break;
 
   case 3603: /* ColLabel: INT_P  */
 #line 19229 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("int"); }
-#line 66631 "preproc.c"
+#line 66583 "preproc.c"
     break;
 
   case 3604: /* ColLabel: TO  */
 #line 19230 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("to"); }
-#line 66637 "preproc.c"
+#line 66589 "preproc.c"
     break;
 
   case 3605: /* ColLabel: UNION  */
 #line 19231 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("union"); }
-#line 66643 "preproc.c"
+#line 66595 "preproc.c"
     break;
 
   case 3606: /* ColLabel: VALUES  */
 #line 19232 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("values"); }
-#line 66649 "preproc.c"
+#line 66601 "preproc.c"
     break;
 
   case 3607: /* ColLabel: ECPGCKeywords  */
 #line 19233 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66655 "preproc.c"
+#line 66607 "preproc.c"
     break;
 
   case 3608: /* ColLabel: ECPGunreserved_interval  */
 #line 19234 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66661 "preproc.c"
+#line 66613 "preproc.c"
     break;
 
   case 3609: /* ECPGColLabel: ecpg_ident  */
 #line 19237 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66667 "preproc.c"
+#line 66619 "preproc.c"
     break;
 
   case 3610: /* ECPGColLabel: unreserved_keyword  */
 #line 19238 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66673 "preproc.c"
+#line 66625 "preproc.c"
     break;
 
   case 3611: /* ECPGColLabel: col_name_keyword  */
 #line 19239 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66679 "preproc.c"
+#line 66631 "preproc.c"
     break;
 
   case 3612: /* ECPGColLabel: type_func_name_keyword  */
 #line 19240 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66685 "preproc.c"
+#line 66637 "preproc.c"
     break;
 
   case 3613: /* ECPGColLabel: reserved_keyword  */
 #line 19241 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66691 "preproc.c"
+#line 66643 "preproc.c"
     break;
 
   case 3614: /* ECPGColLabel: ECPGKeywords_vanames  */
 #line 19242 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66697 "preproc.c"
+#line 66649 "preproc.c"
     break;
 
   case 3615: /* ECPGColLabel: ECPGKeywords_rest  */
 #line 19243 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66703 "preproc.c"
+#line 66655 "preproc.c"
     break;
 
   case 3616: /* ECPGColLabel: CONNECTION  */
 #line 19244 "preproc.y"
                                                         { (yyval.str) = mm_strdup("connection"); }
-#line 66709 "preproc.c"
+#line 66661 "preproc.c"
     break;
 
   case 3617: /* ECPGCKeywords: S_AUTO  */
 #line 19247 "preproc.y"
                                                 { (yyval.str) = mm_strdup("auto"); }
-#line 66715 "preproc.c"
+#line 66667 "preproc.c"
     break;
 
   case 3618: /* ECPGCKeywords: S_CONST  */
 #line 19248 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("const"); }
-#line 66721 "preproc.c"
+#line 66673 "preproc.c"
     break;
 
   case 3619: /* ECPGCKeywords: S_EXTERN  */
 #line 19249 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("extern"); }
-#line 66727 "preproc.c"
+#line 66679 "preproc.c"
     break;
 
   case 3620: /* ECPGCKeywords: S_REGISTER  */
 #line 19250 "preproc.y"
                                                         { (yyval.str) = mm_strdup("register"); }
-#line 66733 "preproc.c"
+#line 66685 "preproc.c"
     break;
 
   case 3621: /* ECPGCKeywords: S_STATIC  */
 #line 19251 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("static"); }
-#line 66739 "preproc.c"
+#line 66691 "preproc.c"
     break;
 
   case 3622: /* ECPGCKeywords: S_TYPEDEF  */
 #line 19252 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("typedef"); }
-#line 66745 "preproc.c"
+#line 66697 "preproc.c"
     break;
 
   case 3623: /* ECPGCKeywords: S_VOLATILE  */
 #line 19253 "preproc.y"
                                                         { (yyval.str) = mm_strdup("volatile"); }
-#line 66751 "preproc.c"
+#line 66703 "preproc.c"
     break;
 
   case 3624: /* all_unreserved_keyword: unreserved_keyword  */
 #line 19270 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66757 "preproc.c"
+#line 66709 "preproc.c"
     break;
 
   case 3625: /* all_unreserved_keyword: ECPGunreserved_interval  */
 #line 19271 "preproc.y"
                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66763 "preproc.c"
+#line 66715 "preproc.c"
     break;
 
   case 3626: /* all_unreserved_keyword: CONNECTION  */
 #line 19272 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("connection"); }
-#line 66769 "preproc.c"
+#line 66721 "preproc.c"
     break;
 
   case 3627: /* ECPGunreserved_interval: DAY_P  */
 #line 19275 "preproc.y"
                                                         { (yyval.str) = mm_strdup("day"); }
-#line 66775 "preproc.c"
+#line 66727 "preproc.c"
     break;
 
   case 3628: /* ECPGunreserved_interval: HOUR_P  */
 #line 19276 "preproc.y"
                                                                                 { (yyval.str) = mm_strdup("hour"); }
-#line 66781 "preproc.c"
+#line 66733 "preproc.c"
     break;
 
   case 3629: /* ECPGunreserved_interval: MINUTE_P  */
 #line 19277 "preproc.y"
                                                                                 { (yyval.str) = mm_strdup("minute"); }
-#line 66787 "preproc.c"
+#line 66739 "preproc.c"
     break;
 
   case 3630: /* ECPGunreserved_interval: MONTH_P  */
 #line 19278 "preproc.y"
                                                                                 { (yyval.str) = mm_strdup("month"); }
-#line 66793 "preproc.c"
+#line 66745 "preproc.c"
     break;
 
   case 3631: /* ECPGunreserved_interval: SECOND_P  */
 #line 19279 "preproc.y"
                                                                                 { (yyval.str) = mm_strdup("second"); }
-#line 66799 "preproc.c"
+#line 66751 "preproc.c"
     break;
 
   case 3632: /* ECPGunreserved_interval: YEAR_P  */
 #line 19280 "preproc.y"
                                                                                 { (yyval.str) = mm_strdup("year"); }
-#line 66805 "preproc.c"
+#line 66757 "preproc.c"
     break;
 
   case 3635: /* ecpgstart: SQL_START  */
@@ -66810,31 +66762,31 @@
 				reset_variables();
 				pacounter = 1;
 			}
-#line 66814 "preproc.c"
+#line 66766 "preproc.c"
     break;
 
   case 3636: /* c_args: %empty  */
 #line 19293 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 66820 "preproc.c"
+#line 66772 "preproc.c"
     break;
 
   case 3637: /* c_args: c_list  */
 #line 19294 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 66826 "preproc.c"
+#line 66778 "preproc.c"
     break;
 
   case 3638: /* coutputvariable: cvariable indicator  */
 #line 19298 "preproc.y"
                         { add_variable_to_head(&argsresult, find_variable((yyvsp[-1].str)), find_variable((yyvsp[0].str))); }
-#line 66832 "preproc.c"
+#line 66784 "preproc.c"
     break;
 
   case 3639: /* coutputvariable: cvariable  */
 #line 19300 "preproc.y"
                         { add_variable_to_head(&argsresult, find_variable((yyvsp[0].str)), &no_indicator); }
-#line 66838 "preproc.c"
+#line 66790 "preproc.c"
     break;
 
   case 3640: /* civarind: cvariable indicator  */
@@ -66846,7 +66798,7 @@
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[-1].str)), find_variable((yyvsp[0].str)));
 			(yyval.str) = create_questionmarks((yyvsp[-1].str), false);
 		}
-#line 66850 "preproc.c"
+#line 66802 "preproc.c"
     break;
 
   case 3641: /* char_civar: char_variable  */
@@ -66859,7 +66811,7 @@
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[0].str)), &no_indicator);
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 66863 "preproc.c"
+#line 66815 "preproc.c"
     break;
 
   case 3642: /* civar: cvariable  */
@@ -66868,25 +66820,25 @@
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[0].str)), &no_indicator);
 			(yyval.str) = create_questionmarks((yyvsp[0].str), false);
 		}
-#line 66872 "preproc.c"
+#line 66824 "preproc.c"
     break;
 
   case 3643: /* indicator: cvariable  */
 #line 19332 "preproc.y"
                                                 { check_indicator((find_variable((yyvsp[0].str)))->type); (yyval.str) = (yyvsp[0].str); }
-#line 66878 "preproc.c"
+#line 66830 "preproc.c"
     break;
 
   case 3644: /* indicator: SQL_INDICATOR cvariable  */
 #line 19333 "preproc.y"
                                                 { check_indicator((find_variable((yyvsp[0].str)))->type); (yyval.str) = (yyvsp[0].str); }
-#line 66884 "preproc.c"
+#line 66836 "preproc.c"
     break;
 
   case 3645: /* indicator: SQL_INDICATOR name  */
 #line 19334 "preproc.y"
                                                 { check_indicator((find_variable((yyvsp[0].str)))->type); (yyval.str) = (yyvsp[0].str); }
-#line 66890 "preproc.c"
+#line 66842 "preproc.c"
     break;
 
   case 3646: /* cvariable: CVARIABLE  */
@@ -66921,559 +66873,559 @@
 			}
 			(yyval.str) = (yyvsp[0].str);
 		}
-#line 66925 "preproc.c"
+#line 66877 "preproc.c"
     break;
 
   case 3647: /* ecpg_param: PARAM  */
 #line 19370 "preproc.y"
                                 { (yyval.str) = make_name(); }
-#line 66931 "preproc.c"
+#line 66883 "preproc.c"
     break;
 
   case 3648: /* ecpg_bconst: BCONST  */
 #line 19372 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66937 "preproc.c"
+#line 66889 "preproc.c"
     break;
 
   case 3649: /* ecpg_fconst: FCONST  */
 #line 19374 "preproc.y"
                                 { (yyval.str) = make_name(); }
-#line 66943 "preproc.c"
+#line 66895 "preproc.c"
     break;
 
   case 3650: /* ecpg_sconst: SCONST  */
 #line 19376 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66949 "preproc.c"
+#line 66901 "preproc.c"
     break;
 
   case 3651: /* ecpg_xconst: XCONST  */
 #line 19378 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66955 "preproc.c"
+#line 66907 "preproc.c"
     break;
 
   case 3652: /* ecpg_ident: IDENT  */
 #line 19380 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66961 "preproc.c"
+#line 66913 "preproc.c"
     break;
 
   case 3653: /* ecpg_ident: CSTRING  */
 #line 19381 "preproc.y"
                                 { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\"")); }
-#line 66967 "preproc.c"
+#line 66919 "preproc.c"
     break;
 
   case 3654: /* quoted_ident_stringvar: name  */
 #line 19385 "preproc.y"
                         { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[0].str), mm_strdup("\"")); }
-#line 66973 "preproc.c"
+#line 66925 "preproc.c"
     break;
 
   case 3655: /* quoted_ident_stringvar: char_variable  */
 #line 19387 "preproc.y"
                         { (yyval.str) = make3_str(mm_strdup("("), (yyvsp[0].str), mm_strdup(")")); }
-#line 66979 "preproc.c"
+#line 66931 "preproc.c"
     break;
 
   case 3656: /* c_stuff_item: c_anything  */
 #line 19394 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 66985 "preproc.c"
+#line 66937 "preproc.c"
     break;
 
   case 3657: /* c_stuff_item: '(' ')'  */
 #line 19395 "preproc.y"
                                                 { (yyval.str) = mm_strdup("()"); }
-#line 66991 "preproc.c"
+#line 66943 "preproc.c"
     break;
 
   case 3658: /* c_stuff_item: '(' c_stuff ')'  */
 #line 19397 "preproc.y"
                         { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[-1].str), mm_strdup(")")); }
-#line 66997 "preproc.c"
+#line 66949 "preproc.c"
     break;
 
   case 3659: /* c_stuff: c_stuff_item  */
 #line 19400 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67003 "preproc.c"
+#line 66955 "preproc.c"
     break;
 
   case 3660: /* c_stuff: c_stuff c_stuff_item  */
 #line 19402 "preproc.y"
                         { (yyval.str) = cat2_str((yyvsp[-1].str), (yyvsp[0].str)); }
-#line 67009 "preproc.c"
+#line 66961 "preproc.c"
     break;
 
   case 3661: /* c_list: c_term  */
 #line 19405 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67015 "preproc.c"
+#line 66967 "preproc.c"
     break;
 
   case 3662: /* c_list: c_list ',' c_term  */
 #line 19406 "preproc.y"
                                         { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup(","), (yyvsp[0].str)); }
-#line 67021 "preproc.c"
+#line 66973 "preproc.c"
     break;
 
   case 3663: /* c_term: c_stuff  */
 #line 19409 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67027 "preproc.c"
+#line 66979 "preproc.c"
     break;
 
   case 3664: /* c_term: '{' c_list '}'  */
 #line 19410 "preproc.y"
                                         { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[-1].str), mm_strdup("}")); }
-#line 67033 "preproc.c"
+#line 66985 "preproc.c"
     break;
 
   case 3665: /* c_thing: c_anything  */
 #line 19413 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67039 "preproc.c"
+#line 66991 "preproc.c"
     break;
 
   case 3666: /* c_thing: '('  */
 #line 19414 "preproc.y"
                                         { (yyval.str) = mm_strdup("("); }
-#line 67045 "preproc.c"
+#line 66997 "preproc.c"
     break;
 
   case 3667: /* c_thing: ')'  */
 #line 19415 "preproc.y"
                                         { (yyval.str) = mm_strdup(")"); }
-#line 67051 "preproc.c"
+#line 67003 "preproc.c"
     break;
 
   case 3668: /* c_thing: ','  */
 #line 19416 "preproc.y"
                                         { (yyval.str) = mm_strdup(","); }
-#line 67057 "preproc.c"
+#line 67009 "preproc.c"
     break;
 
   case 3669: /* c_thing: ';'  */
 #line 19417 "preproc.y"
                                         { (yyval.str) = mm_strdup(";"); }
-#line 67063 "preproc.c"
+#line 67015 "preproc.c"
     break;
 
   case 3670: /* c_anything: ecpg_ident  */
 #line 19420 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67069 "preproc.c"
+#line 67021 "preproc.c"
     break;
 
   case 3671: /* c_anything: Iconst  */
 #line 19421 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67075 "preproc.c"
+#line 67027 "preproc.c"
     break;
 
   case 3672: /* c_anything: ecpg_fconst  */
 #line 19422 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67081 "preproc.c"
+#line 67033 "preproc.c"
     break;
 
   case 3673: /* c_anything: ecpg_sconst  */
 #line 19423 "preproc.y"
                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67087 "preproc.c"
+#line 67039 "preproc.c"
     break;
 
   case 3674: /* c_anything: '*'  */
 #line 19424 "preproc.y"
                                                 { (yyval.str) = mm_strdup("*"); }
-#line 67093 "preproc.c"
+#line 67045 "preproc.c"
     break;
 
   case 3675: /* c_anything: '+'  */
 #line 19425 "preproc.y"
                                                 { (yyval.str) = mm_strdup("+"); }
-#line 67099 "preproc.c"
+#line 67051 "preproc.c"
     break;
 
   case 3676: /* c_anything: '-'  */
 #line 19426 "preproc.y"
                                                 { (yyval.str) = mm_strdup("-"); }
-#line 67105 "preproc.c"
+#line 67057 "preproc.c"
     break;
 
   case 3677: /* c_anything: '/'  */
 #line 19427 "preproc.y"
                                                 { (yyval.str) = mm_strdup("/"); }
-#line 67111 "preproc.c"
+#line 67063 "preproc.c"
     break;
 
   case 3678: /* c_anything: '%'  */
 #line 19428 "preproc.y"
                                                 { (yyval.str) = mm_strdup("%"); }
-#line 67117 "preproc.c"
+#line 67069 "preproc.c"
     break;
 
   case 3679: /* c_anything: NULL_P  */
 #line 19429 "preproc.y"
                                                 { (yyval.str) = mm_strdup("NULL"); }
-#line 67123 "preproc.c"
+#line 67075 "preproc.c"
     break;
 
   case 3680: /* c_anything: S_ADD  */
 #line 19430 "preproc.y"
                                                 { (yyval.str) = mm_strdup("+="); }
-#line 67129 "preproc.c"
+#line 67081 "preproc.c"
     break;
 
   case 3681: /* c_anything: S_AND  */
 #line 19431 "preproc.y"
                                                 { (yyval.str) = mm_strdup("&&"); }
-#line 67135 "preproc.c"
+#line 67087 "preproc.c"
     break;
 
   case 3682: /* c_anything: S_ANYTHING  */
 #line 19432 "preproc.y"
                                                 { (yyval.str) = make_name(); }
-#line 67141 "preproc.c"
+#line 67093 "preproc.c"
     break;
 
   case 3683: /* c_anything: S_AUTO  */
 #line 19433 "preproc.y"
                                                 { (yyval.str) = mm_strdup("auto"); }
-#line 67147 "preproc.c"
+#line 67099 "preproc.c"
     break;
 
   case 3684: /* c_anything: S_CONST  */
 #line 19434 "preproc.y"
                                                 { (yyval.str) = mm_strdup("const"); }
-#line 67153 "preproc.c"
+#line 67105 "preproc.c"
     break;
 
   case 3685: /* c_anything: S_DEC  */
 #line 19435 "preproc.y"
                                                 { (yyval.str) = mm_strdup("--"); }
-#line 67159 "preproc.c"
+#line 67111 "preproc.c"
     break;
 
   case 3686: /* c_anything: S_DIV  */
 #line 19436 "preproc.y"
                                                 { (yyval.str) = mm_strdup("/="); }
-#line 67165 "preproc.c"
+#line 67117 "preproc.c"
     break;
 
   case 3687: /* c_anything: S_DOTPOINT  */
 #line 19437 "preproc.y"
                                                 { (yyval.str) = mm_strdup(".*"); }
-#line 67171 "preproc.c"
+#line 67123 "preproc.c"
     break;
 
   case 3688: /* c_anything: S_EQUAL  */
 #line 19438 "preproc.y"
                                                 { (yyval.str) = mm_strdup("=="); }
-#line 67177 "preproc.c"
+#line 67129 "preproc.c"
     break;
 
   case 3689: /* c_anything: S_EXTERN  */
 #line 19439 "preproc.y"
                                                 { (yyval.str) = mm_strdup("extern"); }
-#line 67183 "preproc.c"
+#line 67135 "preproc.c"
     break;
 
   case 3690: /* c_anything: S_INC  */
 #line 19440 "preproc.y"
                                                 { (yyval.str) = mm_strdup("++"); }
-#line 67189 "preproc.c"
+#line 67141 "preproc.c"
     break;
 
   case 3691: /* c_anything: S_LSHIFT  */
 #line 19441 "preproc.y"
                                                 { (yyval.str) = mm_strdup("<<"); }
-#line 67195 "preproc.c"
+#line 67147 "preproc.c"
     break;
 
   case 3692: /* c_anything: S_MEMBER  */
 #line 19442 "preproc.y"
                                                 { (yyval.str) = mm_strdup("->"); }
-#line 67201 "preproc.c"
+#line 67153 "preproc.c"
     break;
 
   case 3693: /* c_anything: S_MEMPOINT  */
 #line 19443 "preproc.y"
                                                 { (yyval.str) = mm_strdup("->*"); }
-#line 67207 "preproc.c"
+#line 67159 "preproc.c"
     break;
 
   case 3694: /* c_anything: S_MOD  */
 #line 19444 "preproc.y"
                                                 { (yyval.str) = mm_strdup("%="); }
-#line 67213 "preproc.c"
+#line 67165 "preproc.c"
     break;
 
   case 3695: /* c_anything: S_MUL  */
 #line 19445 "preproc.y"
                                                 { (yyval.str) = mm_strdup("*="); }
-#line 67219 "preproc.c"
+#line 67171 "preproc.c"
     break;
 
   case 3696: /* c_anything: S_NEQUAL  */
 #line 19446 "preproc.y"
                                                 { (yyval.str) = mm_strdup("!="); }
-#line 67225 "preproc.c"
+#line 67177 "preproc.c"
     break;
 
   case 3697: /* c_anything: S_OR  */
 #line 19447 "preproc.y"
                                                 { (yyval.str) = mm_strdup("||"); }
-#line 67231 "preproc.c"
+#line 67183 "preproc.c"
     break;
 
   case 3698: /* c_anything: S_REGISTER  */
 #line 19448 "preproc.y"
                                                 { (yyval.str) = mm_strdup("register"); }
-#line 67237 "preproc.c"
+#line 67189 "preproc.c"
     break;
 
   case 3699: /* c_anything: S_RSHIFT  */
 #line 19449 "preproc.y"
                                                 { (yyval.str) = mm_strdup(">>"); }
-#line 67243 "preproc.c"
+#line 67195 "preproc.c"
     break;
 
   case 3700: /* c_anything: S_STATIC  */
 #line 19450 "preproc.y"
                                                 { (yyval.str) = mm_strdup("static"); }
-#line 67249 "preproc.c"
+#line 67201 "preproc.c"
     break;
 
   case 3701: /* c_anything: S_SUB  */
 #line 19451 "preproc.y"
                                                 { (yyval.str) = mm_strdup("-="); }
-#line 67255 "preproc.c"
+#line 67207 "preproc.c"
     break;
 
   case 3702: /* c_anything: S_TYPEDEF  */
 #line 19452 "preproc.y"
                                                 { (yyval.str) = mm_strdup("typedef"); }
-#line 67261 "preproc.c"
+#line 67213 "preproc.c"
     break;
 
   case 3703: /* c_anything: S_VOLATILE  */
 #line 19453 "preproc.y"
                                                 { (yyval.str) = mm_strdup("volatile"); }
-#line 67267 "preproc.c"
+#line 67219 "preproc.c"
     break;
 
   case 3704: /* c_anything: SQL_BOOL  */
 #line 19454 "preproc.y"
                                                 { (yyval.str) = mm_strdup("bool"); }
-#line 67273 "preproc.c"
+#line 67225 "preproc.c"
     break;
 
   case 3705: /* c_anything: ENUM_P  */
 #line 19455 "preproc.y"
                                                 { (yyval.str) = mm_strdup("enum"); }
-#line 67279 "preproc.c"
+#line 67231 "preproc.c"
     break;
 
   case 3706: /* c_anything: HOUR_P  */
 #line 19456 "preproc.y"
                                                 { (yyval.str) = mm_strdup("hour"); }
-#line 67285 "preproc.c"
+#line 67237 "preproc.c"
     break;
 
   case 3707: /* c_anything: INT_P  */
 #line 19457 "preproc.y"
                                                 { (yyval.str) = mm_strdup("int"); }
-#line 67291 "preproc.c"
+#line 67243 "preproc.c"
     break;
 
   case 3708: /* c_anything: SQL_LONG  */
 #line 19458 "preproc.y"
                                                 { (yyval.str) = mm_strdup("long"); }
-#line 67297 "preproc.c"
+#line 67249 "preproc.c"
     break;
 
   case 3709: /* c_anything: MINUTE_P  */
 #line 19459 "preproc.y"
                                                 { (yyval.str) = mm_strdup("minute"); }
-#line 67303 "preproc.c"
+#line 67255 "preproc.c"
     break;
 
   case 3710: /* c_anything: MONTH_P  */
 #line 19460 "preproc.y"
                                                 { (yyval.str) = mm_strdup("month"); }
-#line 67309 "preproc.c"
+#line 67261 "preproc.c"
     break;
 
   case 3711: /* c_anything: SECOND_P  */
 #line 19461 "preproc.y"
                                                 { (yyval.str) = mm_strdup("second"); }
-#line 67315 "preproc.c"
+#line 67267 "preproc.c"
     break;
 
   case 3712: /* c_anything: SQL_SHORT  */
 #line 19462 "preproc.y"
                                                 { (yyval.str) = mm_strdup("short"); }
-#line 67321 "preproc.c"
+#line 67273 "preproc.c"
     break;
 
   case 3713: /* c_anything: SQL_SIGNED  */
 #line 19463 "preproc.y"
                                                 { (yyval.str) = mm_strdup("signed"); }
-#line 67327 "preproc.c"
+#line 67279 "preproc.c"
     break;
 
   case 3714: /* c_anything: SQL_STRUCT  */
 #line 19464 "preproc.y"
                                                 { (yyval.str) = mm_strdup("struct"); }
-#line 67333 "preproc.c"
+#line 67285 "preproc.c"
     break;
 
   case 3715: /* c_anything: SQL_UNSIGNED  */
 #line 19465 "preproc.y"
                                                 { (yyval.str) = mm_strdup("unsigned"); }
-#line 67339 "preproc.c"
+#line 67291 "preproc.c"
     break;
 
   case 3716: /* c_anything: YEAR_P  */
 #line 19466 "preproc.y"
                                                 { (yyval.str) = mm_strdup("year"); }
-#line 67345 "preproc.c"
+#line 67297 "preproc.c"
     break;
 
   case 3717: /* c_anything: CHAR_P  */
 #line 19467 "preproc.y"
                                                 { (yyval.str) = mm_strdup("char"); }
-#line 67351 "preproc.c"
+#line 67303 "preproc.c"
     break;
 
   case 3718: /* c_anything: FLOAT_P  */
 #line 19468 "preproc.y"
                                                 { (yyval.str) = mm_strdup("float"); }
-#line 67357 "preproc.c"
+#line 67309 "preproc.c"
     break;
 
   case 3719: /* c_anything: TO  */
 #line 19469 "preproc.y"
                                                 { (yyval.str) = mm_strdup("to"); }
-#line 67363 "preproc.c"
+#line 67315 "preproc.c"
     break;
 
   case 3720: /* c_anything: UNION  */
 #line 19470 "preproc.y"
                                                 { (yyval.str) = mm_strdup("union"); }
-#line 67369 "preproc.c"
+#line 67321 "preproc.c"
     break;
 
   case 3721: /* c_anything: VARCHAR  */
 #line 19471 "preproc.y"
                                                 { (yyval.str) = mm_strdup("varchar"); }
-#line 67375 "preproc.c"
+#line 67327 "preproc.c"
     break;
 
   case 3722: /* c_anything: '['  */
 #line 19472 "preproc.y"
                                                 { (yyval.str) = mm_strdup("["); }
-#line 67381 "preproc.c"
+#line 67333 "preproc.c"
     break;
 
   case 3723: /* c_anything: ']'  */
 #line 19473 "preproc.y"
                                                 { (yyval.str) = mm_strdup("]"); }
-#line 67387 "preproc.c"
+#line 67339 "preproc.c"
     break;
 
   case 3724: /* c_anything: '='  */
 #line 19474 "preproc.y"
                                                 { (yyval.str) = mm_strdup("="); }
-#line 67393 "preproc.c"
+#line 67345 "preproc.c"
     break;
 
   case 3725: /* c_anything: ':'  */
 #line 19475 "preproc.y"
                                                 { (yyval.str) = mm_strdup(":"); }
-#line 67399 "preproc.c"
+#line 67351 "preproc.c"
     break;
 
   case 3726: /* DeallocateStmt: DEALLOCATE prepared_name  */
 #line 19478 "preproc.y"
                                                 { check_declared_list((yyvsp[0].str)); (yyval.str) = (yyvsp[0].str); }
-#line 67405 "preproc.c"
+#line 67357 "preproc.c"
     break;
 
   case 3727: /* DeallocateStmt: DEALLOCATE PREPARE prepared_name  */
 #line 19479 "preproc.y"
                                                         { check_declared_list((yyvsp[0].str)); (yyval.str) = (yyvsp[0].str); }
-#line 67411 "preproc.c"
+#line 67363 "preproc.c"
     break;
 
   case 3728: /* DeallocateStmt: DEALLOCATE ALL  */
 #line 19480 "preproc.y"
                                                                         { (yyval.str) = mm_strdup("all"); }
-#line 67417 "preproc.c"
+#line 67369 "preproc.c"
     break;
 
   case 3729: /* DeallocateStmt: DEALLOCATE PREPARE ALL  */
 #line 19481 "preproc.y"
                                                                 { (yyval.str) = mm_strdup("all"); }
-#line 67423 "preproc.c"
+#line 67375 "preproc.c"
     break;
 
   case 3730: /* Iresult: Iconst  */
 #line 19484 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67429 "preproc.c"
+#line 67381 "preproc.c"
     break;
 
   case 3731: /* Iresult: '(' Iresult ')'  */
 #line 19485 "preproc.y"
                                                         { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[-1].str), mm_strdup(")")); }
-#line 67435 "preproc.c"
+#line 67387 "preproc.c"
     break;
 
   case 3732: /* Iresult: Iresult '+' Iresult  */
 #line 19486 "preproc.y"
                                                 { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup("+"), (yyvsp[0].str)); }
-#line 67441 "preproc.c"
+#line 67393 "preproc.c"
     break;
 
   case 3733: /* Iresult: Iresult '-' Iresult  */
 #line 19487 "preproc.y"
                                                 { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup("-"), (yyvsp[0].str)); }
-#line 67447 "preproc.c"
+#line 67399 "preproc.c"
     break;
 
   case 3734: /* Iresult: Iresult '*' Iresult  */
 #line 19488 "preproc.y"
                                                 { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup("*"), (yyvsp[0].str)); }
-#line 67453 "preproc.c"
+#line 67405 "preproc.c"
     break;
 
   case 3735: /* Iresult: Iresult '/' Iresult  */
 #line 19489 "preproc.y"
                                                 { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup("/"), (yyvsp[0].str)); }
-#line 67459 "preproc.c"
+#line 67411 "preproc.c"
     break;
 
   case 3736: /* Iresult: Iresult '%' Iresult  */
 #line 19490 "preproc.y"
                                                 { (yyval.str) = cat_str(3, (yyvsp[-2].str), mm_strdup("%"), (yyvsp[0].str)); }
-#line 67465 "preproc.c"
+#line 67417 "preproc.c"
     break;
 
   case 3737: /* Iresult: ecpg_sconst  */
 #line 19491 "preproc.y"
                                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67471 "preproc.c"
+#line 67423 "preproc.c"
     break;
 
   case 3738: /* Iresult: ColId  */
 #line 19492 "preproc.y"
                                                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67477 "preproc.c"
+#line 67429 "preproc.c"
     break;
 
   case 3739: /* Iresult: ColId '(' var_type ')'  */
@@ -67483,61 +67435,61 @@
 						  else
 							(yyval.str) = cat_str(4, (yyvsp[-3].str), mm_strdup("("), (yyvsp[-1].type).type_str, mm_strdup(")"));
 						}
-#line 67487 "preproc.c"
+#line 67439 "preproc.c"
     break;
 
   case 3740: /* execute_rest: %empty  */
 #line 19500 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 67493 "preproc.c"
+#line 67445 "preproc.c"
     break;
 
   case 3741: /* execute_rest: ecpg_using opt_ecpg_into  */
 #line 19501 "preproc.y"
                                     { (yyval.str) = EMPTY; }
-#line 67499 "preproc.c"
+#line 67451 "preproc.c"
     break;
 
   case 3742: /* execute_rest: ecpg_into ecpg_using  */
 #line 19502 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 67505 "preproc.c"
+#line 67457 "preproc.c"
     break;
 
   case 3743: /* execute_rest: ecpg_into  */
 #line 19503 "preproc.y"
                                                 { (yyval.str) = EMPTY; }
-#line 67511 "preproc.c"
+#line 67463 "preproc.c"
     break;
 
   case 3744: /* ecpg_into: INTO into_list  */
 #line 19506 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 67517 "preproc.c"
+#line 67469 "preproc.c"
     break;
 
   case 3745: /* ecpg_into: into_descriptor  */
 #line 19507 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67523 "preproc.c"
+#line 67475 "preproc.c"
     break;
 
   case 3746: /* opt_ecpg_into: %empty  */
 #line 19510 "preproc.y"
                                 { (yyval.str) = EMPTY; }
-#line 67529 "preproc.c"
+#line 67481 "preproc.c"
     break;
 
   case 3747: /* opt_ecpg_into: ecpg_into  */
 #line 19511 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67535 "preproc.c"
+#line 67487 "preproc.c"
     break;
 
   case 3748: /* ecpg_fetch_into: ecpg_into  */
 #line 19514 "preproc.y"
                                 { (yyval.str) = (yyvsp[0].str); }
-#line 67541 "preproc.c"
+#line 67493 "preproc.c"
     break;
 
   case 3749: /* ecpg_fetch_into: using_descriptor  */
@@ -67550,23 +67502,23 @@
 		add_variable_to_head(&argsresult, var, &no_indicator);
 		(yyval.str) = (yyvsp[0].str);
 	}
-#line 67554 "preproc.c"
+#line 67506 "preproc.c"
     break;
 
   case 3750: /* opt_ecpg_fetch_into: %empty  */
 #line 19526 "preproc.y"
                                         { (yyval.str) = EMPTY; }
-#line 67560 "preproc.c"
+#line 67512 "preproc.c"
     break;
 
   case 3751: /* opt_ecpg_fetch_into: ecpg_fetch_into  */
 #line 19527 "preproc.y"
                                         { (yyval.str) = (yyvsp[0].str); }
-#line 67566 "preproc.c"
+#line 67518 "preproc.c"
     break;
 
 
-#line 67570 "preproc.c"
+#line 67522 "preproc.c"
 
       default: break;
     }
@@ -67650,6 +67602,7 @@
      label yyerrorlab therefore never appears in user code.  */
   if (0)
     YYERROR;
+  ++yynerrs;
 
   /* Do not reclaim the symbols of the rule whose action triggered
      this YYERROR.  */
@@ -67713,7 +67666,7 @@
 `-------------------------------------*/
 yyacceptlab:
   yyresult = 0;
-  goto yyreturn;
+  goto yyreturnlab;
 
 
 /*-----------------------------------.
@@ -67721,24 +67674,22 @@
 `-----------------------------------*/
 yyabortlab:
   yyresult = 1;
-  goto yyreturn;
+  goto yyreturnlab;
 
 
-#if !defined yyoverflow
-/*-------------------------------------------------.
-| yyexhaustedlab -- memory exhaustion comes here.  |
-`-------------------------------------------------*/
+/*-----------------------------------------------------------.
+| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
+`-----------------------------------------------------------*/
 yyexhaustedlab:
   yyerror (YY_("memory exhausted"));
   yyresult = 2;
-  goto yyreturn;
-#endif
+  goto yyreturnlab;
 
 
-/*-------------------------------------------------------.
-| yyreturn -- parsing is finished, clean up and return.  |
-`-------------------------------------------------------*/
-yyreturn:
+/*----------------------------------------------------------.
+| yyreturnlab -- parsing is finished, clean up and return.  |
+`----------------------------------------------------------*/
+yyreturnlab:
   if (yychar != YYEMPTY)
     {
       /* Make sure we have latest lookahead translation.  See comments at
